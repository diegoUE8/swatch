/*! AgoraRTC|BUILD v3.0.2-0-geb536be */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("AgoraRTC",[],t):"object"==typeof exports?exports.AgoraRTC=t():e.AgoraRTC=t()}(window,function(){return function(e){var t={};function n(i){if(t[i])return t[i].exports;var a=t[i]={i:i,l:!1,exports:{}};return e[i].call(a.exports,a,a.exports,n),a.l=!0,a.exports}return n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(i,a,function(t){return e[t]}.bind(null,a));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=36)}([function(e,t,n){"use strict";n.r(t);var i=n(9),a=n.n(i),r=n(10),o=n(3),s=n(2),c=0,d="free",u=[],l=[],f=0;setInterval(function(){Object(o.getParameter)("UPLOAD_LOG")&&p.info("console log upload")},9e5);var p=function(){var e,t,n,i,p,m,g="https://".concat(Object(o.getParameter)("LOG_UPLOAD_SERVER"),"/upload/v1"),v=["DEBUG","INFO","WARNING","ERROR","NONE"],S=0,h=function e(t){d="uploading",setTimeout(function(){!function(e,t,n){var i;Array.isArray(e)||(e=[e]),e=e.map(function(e){return{log_item_id:c++,log_level:e.log_level,payload_str:e.payload}}),i={sdk_version:o.VERSION,process_id:Object(s.a)(),payload:JSON.stringify(e)};try{Object(r.post)(g,i,function(e){"OK"===e?t&&t(e):n&&n(e)},function(e){n&&n(e)},{withCredentials:!0})}catch(e){n&&n(e)}}(t,function(){f=0,0!==u.length?(l=u.length<10?u.splice(0,u.length):u.splice(0,10),e(l)):d="free"},function(){setTimeout(function(){e(l)},f++<2?200:1e4)})},3e3)};t=function(){for(var t=[0],n=0;n<arguments.length;n++)t.push(arguments[n]);e.apply(this,t)},n=function(){for(var t=[1],n=0;n<arguments.length;n++)t.push(arguments[n]);e.apply(this,t)},i=function(){for(var t=[2],n=0;n<arguments.length;n++)t.push(arguments[n]);e.apply(this,t)},p=function(){for(var t=[3],n=0;n<arguments.length;n++)t.push(arguments[n]);e.apply(this,t)};var _={};return m=function(e){_[e]||(i.apply(void 0,arguments),_[e]=!0)},{DEBUG:0,INFO:1,WARNING:2,ERROR:3,NONE:4,enableLogUpload:function(){Object(o.setParameter)("UPLOAD_LOG",!0)},disableLogUpload:function(){Object(o.setParameter)("UPLOAD_LOG",!1)},setProxyServer:function(e){g=e?"https://".concat(e,"/ls/?h=").concat(Object(o.getParameter)("LOG_UPLOAD_SERVER"),"&p=443&d=upload/v1"):"https://".concat(Object(o.getParameter)("LOG_UPLOAD_SERVER"),"/upload/v1")},setLogLevel:function(e){e>4?e=4:e<0&&(e=0),S=e},log:e=function(){var e,t=arguments[0],n=arguments;if(n[0]=(e=new Date).toTimeString().split(" ")[0]+":"+e.getMilliseconds()+" Agora-SDK ["+(v[t]||"DEFAULT")+"]:",function(e,t){if(Object(o.getParameter)("UPLOAD_LOG"))try{t=Array.prototype.slice.call(t);var n="";t.forEach(function(e){"object"===a()(e)&&(e=JSON.stringify(e)),n=n+e+" "}),u.push({payload:n,log_level:e}),"free"===d&&(l=u.length<10?u.splice(0,u.length):u.splice(0,10),h(l))}catch(e){}}(t,n),!(t<S))switch(t){case 0:case 1:console.log.apply(console,n);break;case 2:console.warn.apply(console,n);break;case 3:console.error.apply(console,n);break;default:return void console.log.apply(console,n)}},debug:t,info:n,warning:i,deprecate:m,error:p}}();t.default=p},function(e,t,n){"use strict";n.r(t),n.d(t,"checkValidObject",function(){return o}),n.d(t,"checkValidString",function(){return s}),n.d(t,"checkValidNumber",function(){return c}),n.d(t,"checkValidFloatNumber",function(){return d}),n.d(t,"checkValidBoolean",function(){return u}),n.d(t,"checkValidEnum",function(){return r}),n.d(t,"isValidString",function(){return l}),n.d(t,"isValidNumber",function(){return f}),n.d(t,"isValidBoolean",function(){return m}),n.d(t,"isASCII",function(){return S}),n.d(t,"isInteger",function(){return h}),n.d(t,"isNumber",function(){return _}),n.d(t,"isString",function(){return E}),n.d(t,"isArray",function(){return I}),n.d(t,"isEmpty",function(){return T}),n.d(t,"isValidToken",function(){return g}),n.d(t,"isValidChannelName",function(){return v});var i=n(9),a=n.n(i),r=function(e,t,n){for(var i=0;i<n.length;i++)if(e===n[i])return!0;throw new Error("".concat(t," can only be set as ").concat(JSON.stringify(n)))},o=function(e,t){if(!e)throw new Error("Invalid param: ".concat(t||"param"," cannot be empty"));if("object"!==a()(e))throw new Error("".concat(t||"This paramter"," is of the object type"));return!0},s=function(e,t,n,i,a){if(T(n)&&(n=1),i=i||255,T(a)&&(a=!0),T(e))throw new Error("".concat(t||"param"," cannot be empty"));if(!l(e,n,i,a))throw new Error("Invalid ".concat(t||"string param",": Length of the string: [").concat(n,",").concat(i,"].").concat(a?" ASCII characters only.":""))},c=function(e,t,n,i){if(T(n)&&(n=1),i=i||1e4,T(e))throw new Error("".concat(t||"param"," cannot be empty"));if(!f(e,n,i))throw new Error("Invalid ".concat(t||"number param",": The value range is [").concat(n,",").concat(i,"]. integer only"))},d=function(e,t,n,i){if(null==e)throw new Error("".concat(t||"param"," cannot be null"));if(T(n)&&(n=0),i=i||1e4,T(e))throw new Error("".concat(t||"param"," cannot be empty"));if(!p(e,n,i))throw new Error("Invalid ".concat(t||"number param",": The value range is [").concat(n,",").concat(i,"]."))},u=function(e,t){if(T(e))throw new Error("".concat(t||"param"," cannot be empty"));if(!m(e))throw new Error("Invalid ".concat(t||"boolean param",": The value is of the boolean type."))},l=function(e,t,n,i){return t||(t=0),n||(n=Number.MAX_SAFE_INTEGER),T(i)&&(i=!0),E(e)&&(!i||S(e))&&e.length>=t&&e.length<=n},f=function(e,t,n){return h(e)&&e>=t&&e<=n},p=function(e,t,n){return _(e)&&e>=t&&e<=n},m=function(e){return"boolean"==typeof e},g=function(e){return l(e,1,2047)},v=function(e){return E(e)&&/^[a-zA-Z0-9 \!\#\$\%\&\(\)\+\-\:\;\<\=\.\>\?\@\[\]\^\_\{\}\|\~\,]{1,64}$/.test(e)},S=function(e){if("string"==typeof e){for(var t=0;t<e.length;t++){var n=e.charCodeAt(t);if(n<0||n>255)return!1}return!0}},h=function(e){return"number"==typeof e&&e%1==0},_=function(e){return"number"==typeof e},E=function(e){return"string"==typeof e},I=function(e){return e instanceof Array},T=function(e){return null==e}},function(e,t,n){"use strict";var i=n(14),a=n.n(i),r=n(6),o=n.n(r),s=n(3),c=n(0),d=n(10),u=n(16),l=n.n(u);n.d(t,"b",function(){return g}),n.d(t,"a",function(){return m});var f={eventType:null,sid:null,lts:null,success:null,cname:null,uid:null,peer:null,cid:null,elapse:null,extend:null,vid:0},p=null,m=function(){return p||(p="process-"+l()(),c.default.info("processId: "+p)),p},g=function(){var e={list:{}};e.url=Object(d.shouldUseHttps)()?"https://".concat(Object(s.getParameter)("EVENT_REPORT_DOMAIN"),":6443/events/message"):"http://".concat(Object(s.getParameter)("EVENT_REPORT_DOMAIN"),":6080/events/message"),e.urlBackup=Object(d.shouldUseHttps)()?"https://".concat(Object(s.getParameter)("EVENT_REPORT_BACKUP_DOMAIN"),":6443/events/message"):"http://".concat(Object(s.getParameter)("EVENT_REPORT_BACKUP_DOMAIN"),":6080/events/message"),e.setProxyServer=function(t){t?(e.url=Object(d.shouldUseHttps)()?"https://".concat(t,"/rs/?h=").concat(Object(s.getParameter)("EVENT_REPORT_DOMAIN"),"&p=6443&d=events/message"):"http://".concat(t,"/rs/?h=").concat(Object(s.getParameter)("EVENT_REPORT_DOMAIN"),"&p=6080&d=events/message"),e.urlBackup=Object(d.shouldUseHttps)()?"https://".concat(t,"/rs/?h=").concat(Object(s.getParameter)("EVENT_REPORT_BACKUP_DOMAIN"),"&p=6443&d=events/message"):"http://".concat(t,"/rs/?h=").concat(Object(s.getParameter)("EVENT_REPORT_BACKUP_DOMAIN"),"&p=6080&d=events/message"),c.default.debug("reportProxyServerURL: ".concat(e.url)),c.default.debug("reportProxyServerBackupURL: ".concat(e.urlBackup))):(e.url=Object(d.shouldUseHttps)()?"https://".concat(Object(s.getParameter)("EVENT_REPORT_DOMAIN"),":6443/events/message"):"http://".concat(Object(s.getParameter)("EVENT_REPORT_DOMAIN"),":6080/events/message"),e.urlBackup=Object(d.shouldUseHttps)()?"https://".concat(Object(s.getParameter)("EVENT_REPORT_BACKUP_DOMAIN"),":6443/events/message"):"http://".concat(Object(s.getParameter)("EVENT_REPORT_BACKUP_DOMAIN"),":6080/events/message"))},e.sessionInit=function(t,n){var i=o()({},f);i.startTime=+new Date,i.sid=t,i.cname=n.cname,e.list[t]=i;var a=o()({},{willUploadConsoleLog:Object(s.getParameter)("UPLOAD_LOG")},n.extend),r=o()({},i);r.eventType="session_init",r.appid=n.appid,r.browser=navigator.userAgent,r.build=s.BUILD,r.lts=+new Date,r.elapse=r.lts-r.startTime,r.extend=JSON.stringify(a),r.mode=n.mode,r.process=m(),r.success=n.succ,r.version=s.VERSION,delete r.startTime,e.send({type:"io.agora.pb.Wrtc.Session",data:r}),e._flushInvokeReport(t)},e.joinChooseServer=function(t,n,i){if(e.list[t]){n.uid&&(e.list[t].uid=parseInt(n.uid)),n.cid&&(e.list[t].cid=parseInt(n.cid));var a=o()({},e.list[t]);a.eventType="join_choose_server";var r=n.lts;a.lts=Date.now(),a.eventElapse=a.lts-r,a.chooseServerAddr=n.csAddr,a.errorCode=n.ec,a.elapse=a.lts-a.startTime,a.success=n.succ,a.chooseServerAddrList=JSON.stringify(n.serverList),delete a.startTime,e.send({type:"io.agora.pb.Wrtc.JoinChooseServer",data:a})}},e.reqUserAccount=function(t,n){n.vid&&(e.list[t].vid=n.vid);var i=o()({},e.list[t]),a=n.lts;i.eventType="req_user_account",i.lts=Date.now(),i.success=n.success,i.serverAddress=n.serverAddress,i.stringUid=n.stringUid,i.uid=n.uid,i.errorCode=n.errorCode,i.elapse=i.lts-i.startTime,i.eventElapse=i.lts-a,i.extend="string"==typeof n.extend?n.extend:JSON.stringify(n.extend),delete i.startTime,e.send({type:"io.agora.pb.Wrtc.ReqUserAccount",data:i})},e.joinGateway=function(t,n){n.vid&&(e.list[t].vid=n.vid);var i=o()({},e.list[t]),a=n.lts;i.eventType="join_gateway",i.lts=Date.now(),i.gatewayAddr=n.addr,i.success=n.succ,i.errorCode=n.ec,i.elapse=i.lts-i.startTime,i.eventElapse=i.lts-a,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.JoinGateway",data:i})},e.publish=function(t,n){var i=o()({},e.list[t]);i.eventType="publish";var a=n.lts;i.lts=Date.now(),i.eventElapse=i.lts-a,i.elapse=i.lts-i.startTime,i.success=n.succ,i.errorCode=n.ec,n.videoName&&(i.videoName=n.videoName),n.audioName&&(i.audioName=n.audioName),n.screenName&&(i.screenName=n.screenName),delete i.startTime,e.send({type:"io.agora.pb.Wrtc.Publish",data:i}),e._flushInvokeReport(t)},e.subscribe=function(t,n){var i=o()({},e.list[t]);i.eventType="subscribe";var a=n.lts;i.lts=Date.now(),i.eventElapse=i.lts-a,i.elapse=i.lts-i.startTime,i.errorCode=n.ec,i.success=n.succ,isFinite(n.peerid)?i.peer=n.peerid:i.peerSuid=""+n.peerid,"boolean"==typeof n.video&&(i.video=n.video),"boolean"==typeof n.audio&&(i.audio=n.audio),delete i.startTime,e.send({type:"io.agora.pb.Wrtc.Subscribe",data:i}),e._flushInvokeReport(t)},e.firstRemoteFrame=function(t,n){var i=o()({},e.list[t]);i.eventType="first_remote_frame";var a=n.lts;i.lts=Date.now(),i.eventElapse=i.lts-a,i.elapse=i.lts-i.startTime,i.width=n.width,i.height=n.height,i.success=n.succ,i.errorCode=n.ec,isFinite(n.peerid)?i.peer=n.peerid:i.peerSuid=""+n.peerid,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.FirstFrame",data:i})},e.streamSwitch=function(t,n){var i=o()({},e.list[t]);i.eventType="stream_switch",i.lts=Date.now(),i.isDual=n.isdual,i.elapse=i.lts-i.startTime,i.success=i.succ,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.StreamSwitch",data:i})},e.audioSendingStopped=function(t,n){var i=o()({},e.list[t]);i.eventType="audio_sending_stopped",i.lts=Date.now(),i.elapse=i.lts-i.startTime,i.reason=n.reason,i.success=n.succ,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.AudioSendingStopped",data:i})},e.videoSendingStopped=function(t,n){var i=o()({},e.list[t]);i.eventType="video_sending_stopped",i.lts=Date.now(),i.elapse=i.lts-i.startTime,i.reson=n.reason,i.success=n.succ,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.VideoSendingStopped",data:i})},e.requestProxyAppCenter=function(t,n){var i=o()({},e.list[t]),a=n.lts;i.eventType="request_proxy_appcenter",i.lts=Date.now(),i.eventElapse=i.lts-a,i.elapse=i.lts-i.startTime,i.extend=n.extend+"",i.APAddr=n.APAddr,i.workerManagerList=n.workerManagerList,i.response=n.response,i.errorCode=n.ec,i.success=n.succ,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.RequestProxyAppCenter",data:i})},e.requestProxyWorkerManager=function(t,n){var i=o()({},e.list[t]),a=n.lts;i.eventType="request_proxy_worker_manager",i.lts=Date.now(),i.eventElapse=i.lts-a,i.elapse=i.lts-i.startTime,i.extend=n.extend,i.workerManagerAddr=n.workerManagerAddr,i.response=n.response,i.errorCode=n.ec,i.success=n.succ,delete i.startTime,e.send({type:"io.agora.pb.Wrtc.RequestProxyWorkerManager",data:i})};var t=0;return e.reportApiInvoke=function(e,n){var i=n.tag,r=n.name,o=n.getStates,d=n.options,u=n.timeout,l=void 0===u?6e4:u,f=n.callback,p=n.reportResult,m=void 0===p||p,v=Date.now(),S=0,h=t++,_=function(){return a()({tag:i,invokeId:h,sid:e,name:r,apiInvokeTime:v,options:d},o&&{states:(t=o(),Object.keys(t).reduce(function(e,n){var i=e;return null!=t[n]&&(i[n]=t[n]),i},{}))});var t},E=!!Object(s.getParameter)("SHOW_REPORT_INVOKER_LOG");E&&c.default.info("".concat(r," start"));var I=setTimeout(function(){g._sendApiInvoke(a()({},_(),{error:"API_INVOKE_TIMEOUT",success:!1}))},l);return function(e,t){if(clearTimeout(I),++S>1&&(e="EXECUTOR_INVOKE_".concat(S)),e)return g._sendApiInvoke(a()({},_(),{success:!1,error:e},o&&{states:o()})),E&&c.default.info("".concat(r," onFailure"),e),f&&f(e);g._sendApiInvoke(a()({},_(),{success:!0},m&&{result:t},o&&{states:o()})),E&&c.default.info("".concat(r," onSuccess")),f&&f(null,t)}},e._cachedItems=[],e._cacheInvokeReport=function(t){t.lts||(t.lts=Date.now()),e._cachedItems.push(t),e._cachedItems.length>50&&e._cachedItems.shift()},e._flushInvokeReport=function(t){if(e._cachedItems.length){var n=e._cachedItems;e._cachedItems=[],c.default.debug("Flush cached event reporting:",n.length),n.forEach(function(n,i){n.sid=t,setTimeout(function(){e._sendApiInvoke(n)},5e3+500*i)})}},e._sendApiInvoke=function(t){var n=t.tag,i=t.invokeId,r=t.sid,o=t.name,c=t.result,d=t.states,u=t.options,l=t.error,f=t.success,p=t.apiInvokeTime,m=t.lts,g=Object(s.getParameter)("NOT_REPORT_EVENT");if(!(n&&g instanceof Array&&-1!==g.indexOf(n)))if(e.list[r]){var v=e.list[r],S=v.startTime,h=v.cname,_=v.uid,E=v.cid,I=(m=m||Date.now())-S,T=m-p,y="";if(u)try{y=JSON.stringify(u)}catch(e){y=u.toString()}var b=a()({invokeId:i,sid:r,cname:h,cid:E,lts:m,uid:_,success:f,elapse:I,apiName:o,execElapse:T},void 0!==u&&{options:y},void 0!==d&&{execStates:JSON.stringify(d)},void 0!==l&&{errorCode:JSON.stringify(l)},void 0!==c&&{execResult:JSON.stringify(c)});e.send({type:"io.agora.pb.Wrtc.ApiInvoke",data:b})}else e._cacheInvokeReport(arguments[0])},e._send=function(t){try{var n=[];t&&t.data&&t.data.apiName?n.push(["apiName",""+t.data.apiName]):t&&t.data&&t.data.eventType&&n.push(["eventType",t.data.eventType]);var i=n.map(function(e){return"".concat(e[0],"=").concat(encodeURIComponent(e[1]))}).join("&"),a=-1===e.url.indexOf("?")?"".concat(e.url,"?").concat(i):e.url;Object(d.post)(a,t,null,function(n){var a=-1===e.urlBackup.indexOf("?")?"".concat(e.urlBackup,"?").concat(i):e.urlBackup;Object(d.post)(a,t,null,function(e){},{timeout:1e4})},{timeout:1e4})}catch(e){}},e.sendCache=[],e.sendTimer=null,e.send=function(t){if(t.data){var n=t.data;e._lastLts&&e._lastLts>=n.lts&&(n.lts=e._lastLts+1),e._lastLts=n.lts}if(e.sendCache.push(t),null===e.sendTimer){return function t(){e.sendTimer=setTimeout(function(){if(0!==e.sendCache.length)return e._send(e.sendCache.shift()),t();e.sendTimer=null},Object(s.getParameter)("EVENT_REPORT_SEND_INTERVAL"))}()}},e}()},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.BUILD="v3.0.2-0-geb536be";t.VERSION="3.0.2";t.SUPPORT_RESOLUTION_LIST={"90p_1":[160,90,null,null,null,null],"120p_1":[160,120,15,15,30,65],"120p_3":[120,120,15,15,30,50],"120p_4":[212,120,null,null,null,null],"180p_1":[320,180,15,15,30,140],"180p_3":[180,180,15,15,30,100],"180p_4":[240,180,15,15,30,120],"240p_1":[320,240,15,15,40,200],"240p_3":[240,240,15,15,40,140],"240p_4":[424,240,15,15,40,220],"360p_1":[640,360,15,15,80,400],"360p_3":[360,360,15,15,80,260],"360p_4":[640,360,30,30,80,600],"360p_6":[360,360,30,30,80,400],"360p_7":[480,360,15,15,80,320],"360p_8":[480,360,30,30,80,490],"360p_9":[640,360,15,15,80,800],"360p_10":[640,360,24,24,80,800],"360p_11":[640,360,24,24,80,1e3],"480p_1":[640,480,15,15,100,500,1,5],"480p_2":[640,480,30,30,100,1e3,25,30],"480p_3":[480,480,15,15,100,400],"480p_4":[640,480,30,30,100,750],"480p_6":[480,480,30,30,100,600],"480p_8":[848,480,15,15,100,610],"480p_9":[848,480,30,30,100,930],"480p_10":[640,480,10,10,100,400],"720p_1":[1280,720,15,15,120,1130,1,5],"720p_2":[1280,720,30,30,120,2e3,25,30],"720p_3":[1280,720,30,30,120,1710],"720p_5":[960,720,15,15,120,910],"720p_6":[960,720,30,30,120,1380],"1080p_1":[1920,1080,15,15,120,2080,1,5],"1080p_2":[1920,1080,30,30,120,3e3,25,30],"1080p_3":[1920,1080,30,30,120,3150],"1080p_5":[1920,1080,60,60,120,4780],"1440p_1":[2560,1440,30,30,120,4850],"1440p_2":[2560,1440,60,60,120,7350],"4k_1":[3840,2160,30,30,120,8910],"4k_3":[3840,2160,60,60,120,13500]};t.AUDIO_PROFILE_SETTINGS={speech_low_quality:[!1,!1,!0,!0],speech_standard:[!1,!1,!0,!1],music_standard:[!1,!1,!1,!1],standard_stereo:[!1,!0,!1,!1],high_quality:[!0,!1,!1,!1],high_quality_stereo:[!0,!0,!1,!1],default:[!1,!1,!1,!1]};var i={WEBCS_DOMAIN:["webrtc2-ap-web-1.agora.io","webrtc2-ap-web-2.agoraio.cn"],WEBCS_DOMAIN_BACKUP_LIST:["webrtc2-ap-web-3.agora.io","webrtc2-ap-web-4.agoraio.cn"],PROXY_CS:["ap-proxy-1.agora.io","ap-proxy-2.agora.io"],CDS_AP:["cds-ap-web-1.agora.io","cds-ap-web-2.agoraio.cn","cds-ap-web-3.agora.io","cds-ap-web-4.agoraio.cn"],ACCOUNT_REGISTER:["sua-ap-web-1.agora.io","sua-ap-web-2.agoraio.cn","sua-ap-web-3.agora.io","sua-ap-web-4.agoraio.cn"],UAP_AP:["uap-ap-web-1.agora.io","uap-ap-web-2.agoraio.cn","uap-ap-web-3.agora.io","uap-ap-web-4.agoraio.cn"],ACCOUNT_REGISTER_RETRY_TIMEOUT:1,ACCOUNT_REGISTER_RETRY_RATIO:2,ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX:6e4,ACCOUNT_REGISTER_RETRY_COUNT_MAX:1e5,AUDIO_CONTEXT:null,LOG_UPLOAD_SERVER:"logservice.agora.io",EVENT_REPORT_DOMAIN:"webcollector-1.agora.io",EVENT_REPORT_BACKUP_DOMAIN:"webcollector-2.agoraio.cn",WEBCS_BACKUP_CONNECT_TIMEOUT:6e3,LIVESTREAMING_ALIGN:!0,HTTP_CONNECT_TIMEOUT:5e3,PLAYER_STATE_DEFER:2e3,SIGNAL_REQUEST_TIMEOUT:1e4,SIGNAL_REQUEST_WATCH_INTERVAL:1e3,REPORT_STATS:!0,REPORT_STATS_TIMEOUT:3e3,UPLOAD_LOG:!1,NOT_REPORT_EVENT:[],FILEPATH_LENMAX:255,SUBSCRIBE_TCC:!1,PING_PONG_TIME_OUT:10,DUALSTREAM_OPERATION_CHECK:!0,WEBSOCKET_TIMEOUT_MIN:1e4,EVENT_REPORT_SEND_INTERVAL:1e3,MEDIA_ELEMENT_EXISTS_DEPTH:3,CANDIDATE_TIMEOUT:2e3,SHIM_CANDIDATE:!1,LEAVE_MSG_TIMEOUT:2e3,TICKET_RENEW_TIMEOUT:828e5,SHOW_REPORT_INVOKER_LOG:!1,STATS_FILTER:{transportId:!0,googTrackId:!0},FORCE_TURN:!1,TURN_ENABLE_TCP:!0,TURN_ENABLE_UDP:!0,FORCE_CHANGED_GATEWAY_FLAG:!1,JOIN_EXTEND:"",PUB_EXTEND:"",SUB_EXTEND:"",CHROME_NEW_STATS:!1,AP_BACKOFF_MAX_TIME:8};t.setParameter=function(e,t){return void 0!==i[e]&&(i[e]=t,!0)};t.getParameter=function(e){return void 0!==i[e]?i[e]:null}},function(e,t,n){"use strict";n.r(t),n.d(t,"APErrorCode",function(){return i}),n.d(t,"GatewayErrorCode",function(){return a}),n.d(t,"StringUidErrorCode",function(){return r}),n.d(t,"JOIN_GS_TRYNEXT_LIST",function(){return o}),n.d(t,"JOIN_CS_RETRY_LIST",function(){return s}),n.d(t,"INJECT_STREAM_STATUS",function(){return c});var i={101100:"NO_FLAG_SET",101101:"FLAG_SET_BUT_EMPTY",101102:"INVALID_FALG_SET",101203:"NO_SERVICE_AVIABLE",0:"OK_CODE",5:"INVALID_VENDOR_KEY",7:"INVALID_CHANNEL_NAME",8:"INTERNAL_ERROR",9:"NO_AUTHORIZED",10:"DYNAMIC_KEY_TIMEOUT",11:"NO_ACTIVE_STATUS",13:"DYNAMIC_KEY_EXPIRED",14:"STATIC_USE_DYANMIC_KEY",15:"DYNAMIC_USE_STATIC_KEY",1010100:"NO_FLAG_SET",1010101:"FLAG_SET_BUT_EMPTY",1010102:"INVALID_FALG_SET",1010200:"NO_SERVICE_AVAILABLE",1010203:"NO_SERVICE_AVAILABLE_WEBRTC",1010205:"NO_SERVICE_AVAILABLE_DISPATCHER",1010208:"NO_SERVICE_AVAILABLE_APPCENTER",1010211:"NO_SERVICE_AVAILABLE_SUA",2010005:"INVALID_VENDOR_KEY",2010007:"INVALID_CHANNEL_NAME",2010008:"INTERNAL_ERROR",2010009:"NO_AUTHORIZED",2010010:"DYNAMIC_KEY_TIMEOUT",2010011:"NO_ACTIVE_STATUS",2010013:"DYNAMIC_KEY_EXPIRED",2010014:"STATIC_USE_DYANMIC_KEY",2010015:"DYNAMIC_USE_STATIC_KEY"},a={2000:"ERR_NO_VOCS_AVAILABLE",2001:"ERR_NO_VOS_AVAILABLE",2002:"ERR_JOIN_CHANNEL_TIMEOUT",2003:"WARN_REPEAT_JOIN",2004:"ERR_JOIN_BY_MULTI_IP",2011:"ERR_NOT_JOINED",2012:"WARN_REPEAT_JOIN",2013:"ERR_INVALID_VENDOR_KEY",2014:"ERR_INVALID_CHANNEL_NAME",2015:"ERR_INVALID_STRINGUID",2016:"ERR_TOO_MANY_USERS",2017:"ERR_SET_CLIENT_ROLE_TIMEOUT",2018:"ERR_SET_CLIENT_ROLE_NO_PERMISSION",2019:"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE",2020:"ERR_PUBLISH_REQUEST_INVALID",2021:"ERR_SUBSCRIBE_REQUEST_INVALID",2022:"ERR_NOT_SUPPORTED_MESSAGE",2023:"ERR_ILLEAGAL_PLUGIN",101:"ERR_INVALID_VENDOR_KEY",102:"ERR_INVALID_CHANNEL_NAME",103:"WARN_NO_AVAILABLE_CHANNEL",104:"WARN_LOOKUP_CHANNEL_TIMEOUT",105:"WARN_LOOKUP_CHANNEL_REJECTED",106:"WARN_OPEN_CHANNEL_TIMEOUT",107:"WARN_OPEN_CHANNEL_REJECTED",108:"WARN_REQUEST_DEFERRED",109:"ERR_DYNAMIC_KEY_TIMEOUT",110:"ERR_NO_AUTHORIZED",111:"ERR_VOM_SERVICE_UNAVAILABLE",112:"ERR_NO_CHANNEL_AVAILABLE_CODE",113:"ERR_TOO_MANY_USERS",114:"ERR_MASTER_VOCS_UNAVAILABLE",115:"ERR_INTERNAL_ERROR",116:"ERR_NO_ACTIVE_STATUS",117:"ERR_INVALID_UID",118:"ERR_DYNAMIC_KEY_EXPIRED",119:"ERR_STATIC_USE_DYANMIC_KE",120:"ERR_DYNAMIC_USE_STATIC_KE",2:"K_TIMESTAMP_EXPIRED",3:"K_CHANNEL_PERMISSION_INVALID",4:"K_CERTIFICATE_INVALID",5:"K_CHANNEL_NAME_EMPTY",6:"K_CHANNEL_NOT_FOUND",7:"K_TICKET_INVALID",8:"K_CHANNEL_CONFLICTED",9:"K_SERVICE_NOT_READY",10:"K_SERVICE_TOO_HEAVY",14:"K_UID_BANNED",15:"K_IP_BANNED",16:"K_CHANNEL_BANNED"},r={1:"ERROR_ILLEAGAL_APPID",2:"ERROR_ILLEAGAL_UID",3:"INTERNAL_SERVER_ERROR"},o=["ERR_NO_VOCS_AVAILABLE","ERR_NO_VOS_AVAILABLE","ERR_JOIN_CHANNEL_TIMEOUT","WARN_LOOKUP_CHANNEL_TIMEOUT","WARN_OPEN_CHANNEL_TIMEOUT","ERR_VOM_SERVICE_UNAVAILABLE","ERR_TOO_MANY_USERS","ERR_MASTER_VOCS_UNAVAILABLE","ERR_INTERNAL_ERROR"],s=["NO_FLAG_SET","NO_SERVICE_AVIABLE","FLAG_SET_BUT_EMPTY","EMPTY_ADDRESS_RESPONSE"],c={INJECT_STREAM_STATUS_START_SUCCESS:0,INJECT_STREAM_STATUS_START_ALREADY_EXISTS:1,INJECT_STREAM_STATUS_START_UNAUTHORIZED:2,INJECT_STREAM_STATUS_START_TIMEDOUT:3,INJECT_STREAM_STATUS_START_FAILED:4,INJECT_STREAM_STATUS_STOP_SUCCESS:5,INJECT_STREAM_STATUS_STOP_NOT_FOUND:6,INJECT_STREAM_STATUS_STOP_UNAUTHORIZED:7,INJECT_STREAM_STATUS_STOP_TIMEDOUT:8,INJECT_STREAM_STATUS_STOP_FAILED:9,INJECT_STREAM_STATUS_BROKEN:10};t.default={FAILED:"FAILED",INVALID_KEY:"INVALID_KEY",INVALID_CLIENT_MODE:"INVALID_CLIENT_MODE",INVALID_CLIENT_CODEC:"INVALID_CLIENT_CODEC",CLIENT_MODE_CODEC_MISMATCH:"CLIENT_MODE_CODEC_MISMATCH",WEB_API_NOT_SUPPORTED:"WEB_API_NOT_SUPPORTED",INVALID_PARAMETER:"INVALID_PARAMETER",NO_TRACK_IN_STREAM:"NO_TRACK_IN_STREAM",INVALID_OPERATION:"INVALID_OPERATION",INVALID_LOCAL_STREAM:"INVALID_LOCAL_STREAM",INVALID_REMOTE_STREAM:"INVALID_REMOTE_STREAM",INVALID_DYNAMIC_KEY:"INVALID_DYNAMIC_KEY",DYNAMIC_KEY_TIMEOUT:"DYNAMIC_KEY_TIMEOUT",NO_VOCS_AVAILABLE:"NO_VOCS_AVAILABLE",NO_VOS_AVAILABLE:"ERR_NO_VOS_AVAILABLE",JOIN_CHANNEL_TIMEOUT:"ERR_JOIN_CHANNEL_TIMEOUT",NO_AVAILABLE_CHANNEL:"NO_AVAILABLE_CHANNEL",LOOKUP_CHANNEL_TIMEOUT:"LOOKUP_CHANNEL_TIMEOUT",LOOKUP_CHANNEL_REJECTED:"LOOKUP_CHANNEL_REJECTED",OPEN_CHANNEL_TIMEOUT:"OPEN_CHANNEL_TIMEOUT",OPEN_CHANNEL_REJECTED:"OPEN_CHANNEL_REJECTED",REQUEST_DEFERRED:"REQUEST_DEFERRED",STREAM_ALREADY_PUBLISHED:"STREAM_ALREADY_PUBLISHED",STREAM_NOT_YET_PUBLISHED:"STREAM_NOT_YET_PUBLISHED",JOIN_TOO_FREQUENT:"JOIN_TOO_FREQUENT",SOCKET_ERROR:"SOCKET_ERROR",SOCKET_DISCONNECTED:"SOCKET_DISCONNECTED",PEERCONNECTION_FAILED:"PEERCONNECTION_FAILED",CONNECT_GATEWAY_ERROR:"CONNECT_GATEWAY_ERROR",SERVICE_NOT_AVAILABLE:"SERVICE_NOT_AVAILABLE",JOIN_CHANNEL_FAILED:"JOIN_CHANNEL_FAILED",PUBLISH_STREAM_FAILED:"PUBLISH_STREAM_FAILED",UNPUBLISH_STREAM_FAILED:"UNPUBLISH_STREAM_FAILED",SUBSCRIBE_STREAM_FAILED:"SUBSCRIBE_STREAM_FAILED",UNSUBSCRIBE_STREAM_FAILED:"UNSUBSCRIBE_STREAM_FAILED",NO_SUCH_REMOTE_STREAM:"NO_SUCH_REMOTE_STREAM",ERR_FAILED:"1",ERR_INVALID_VENDOR_KEY:"101",ERR_INVALID_CHANNEL_NAME:"102",WARN_NO_AVAILABLE_CHANNEL:"103",WARN_LOOKUP_CHANNEL_TIMEOUT:"104",WARN_LOOKUP_CHANNEL_REJECTED:"105",WARN_OPEN_CHANNEL_TIMEOUT:"106",WARN_OPEN_CHANNEL_REJECTED:"107",WARN_REQUEST_DEFERRED:"108",ERR_DYNAMIC_KEY_TIMEOUT:"109",ERR_INVALID_DYNAMIC_KEY:"110",ERR_NO_VOCS_AVAILABLE:"2000",ERR_NO_VOS_AVAILABLE:"2001",ERR_JOIN_CHANNEL_TIMEOUT:"2002",IOS_NOT_SUPPORT:"IOS_NOT_SUPPORT",WECHAT_NOT_SUPPORT:"WECHAT_NOT_SUPPORT",SHARING_SCREEN_NOT_SUPPORT:"SHARING_SCREEN_NOT_SUPPORT",STILL_ON_PUBLISHING:"STILL_ON_PUBLISHING",LOW_STREAM_ALREADY_PUBLISHED:"LOW_STREAM_ALREADY_PUBLISHED",LOW_STREAM_NOT_YET_PUBLISHED:"LOW_STREAM_ALREADY_PUBLISHED",HIGH_STREAM_NOT_VIDEO_TRACE:"HIGH_STREAM_NOT_VIDEO_TRACE",NOT_FIND_DEVICE_BY_LABEL:"NOT_FIND_DEVICE_BY_LABEL",ENABLE_DUALSTREAM_FAILED:"ENABLE_DUALSTREAM_FAILED",DISABLE_DUALSTREAM_FAILED:"DISABLE_DUALSTREAM_FAILED",PLAYER_NOT_FOUND:"PLAYER_NOT_FOUND",ELECTRON_NOT_SUPPORT_SHARING_SCREEN:"ELECTRON_NOT_SUPPORT_SHARING_SCREEN",BAD_ENVIRONMENT:"BAD_ENVIRONMENT",LOAD_AUDIO_FAILED:"LOAD_AUDIO_FAILED"}},function(e,t,n){"use strict";n.r(t),n.d(t,"getBrowserInfo",function(){return h}),n.d(t,"getBrowserVersion",function(){return f}),n.d(t,"getBrowserOS",function(){return p}),n.d(t,"isChrome",function(){return i}),n.d(t,"isSafari",function(){return a}),n.d(t,"isFireFox",function(){return o}),n.d(t,"isOpera",function(){return s}),n.d(t,"isEdge",function(){return r}),n.d(t,"isQQBrowser",function(){return c}),n.d(t,"isWeChatBrowser",function(){return d}),n.d(t,"isLegacyChrome",function(){return g}),n.d(t,"isSupportedPC",function(){return u}),n.d(t,"isSupportedMobile",function(){return l}),n.d(t,"getChromeKernelVersion",function(){return S}),n.d(t,"isChromeKernel",function(){return m});var i=function(){var e=h();return e.name&&"Chrome"===e.name},a=function(){var e=h();return e.name&&"Safari"===e.name},r=function(){var e=h();return e.name&&"Edge"===e.name},o=function(){var e=h();return e.name&&"Firefox"===e.name},s=function(){var e=h();return e.name&&"OPR"===e.name},c=function(){var e=h();return e.name&&"QQBrowser"===e.name},d=function(){var e=h();return e.name&&"MicroMessenger"===e.name},u=function(){var e=p();return"Linux"===e||"Mac OS X"===e||"Mac OS"===e||-1!==e.indexOf("Windows")},l=function(){var e=p();return"Android"===e||"iOS"===e},f=function(){return h().version},p=function(){return h().os},m=function(){return!!navigator.userAgent.match(/chrome\/[\d]./i)};function g(){return window.navigator.appVersion&&null!==window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)&&window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)[1]<=35}var v,S=function(){var e=navigator.userAgent.match(/chrome\/[\d]./i);return e&&e[0]&&e[0].split("/")[1]},h=(v=function(){var e,t=navigator.userAgent,n=t.match(/(opera|chrome|safari|firefox|msie|trident(?=\/))\/?\s*(\d+)/i)||[];"Chrome"===n[1]&&null!=(e=t.match(/(OPR(?=\/))\/?(\d+)/i))&&(n=e),"Safari"===n[1]&&null!=(e=t.match(/version\/(\d+)/i))&&(n[2]=e[1]),~t.toLowerCase().indexOf("qqbrowser")&&null!=(e=t.match(/(qqbrowser(?=\/))\/?(\d+)/i))&&(n=e),~t.toLowerCase().indexOf("micromessenger")&&null!=(e=t.match(/(micromessenger(?=\/))\/?(\d+)/i))&&(n=e),~t.toLowerCase().indexOf("edge")&&null!=(e=t.match(/(edge(?=\/))\/?(\d+)/i))&&(n=e),~t.toLowerCase().indexOf("trident")&&null!=(e=/\brv[ :]+(\d+)/g.exec(t)||[])&&(n=[null,"IE",e[1]]);var i=void 0,a=[{s:"Windows 10",r:/(Windows 10.0|Windows NT 10.0)/},{s:"Windows 8.1",r:/(Windows 8.1|Windows NT 6.3)/},{s:"Windows 8",r:/(Windows 8|Windows NT 6.2)/},{s:"Windows 7",r:/(Windows 7|Windows NT 6.1)/},{s:"Windows Vista",r:/Windows NT 6.0/},{s:"Windows Server 2003",r:/Windows NT 5.2/},{s:"Windows XP",r:/(Windows NT 5.1|Windows XP)/},{s:"Windows 2000",r:/(Windows NT 5.0|Windows 2000)/},{s:"Windows ME",r:/(Win 9x 4.90|Windows ME)/},{s:"Windows 98",r:/(Windows 98|Win98)/},{s:"Windows 95",r:/(Windows 95|Win95|Windows_95)/},{s:"Windows NT 4.0",r:/(Windows NT 4.0|WinNT4.0|WinNT|Windows NT)/},{s:"Windows CE",r:/Windows CE/},{s:"Windows 3.11",r:/Win16/},{s:"Android",r:/Android/},{s:"Open BSD",r:/OpenBSD/},{s:"Sun OS",r:/SunOS/},{s:"Linux",r:/(Linux|X11)/},{s:"iOS",r:/(iPhone|iPad|iPod)/},{s:"Mac OS X",r:/Mac OS X/},{s:"Mac OS",r:/(MacPPC|MacIntel|Mac_PowerPC|Macintosh)/},{s:"QNX",r:/QNX/},{s:"UNIX",r:/UNIX/},{s:"BeOS",r:/BeOS/},{s:"OS/2",r:/OS\/2/},{s:"Search Bot",r:/(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask Jeeves\/Teoma|ia_archiver)/}];for(var r in a){var o=a[r];if(o.r.test(navigator.userAgent)){i=o.s;break}}return{name:n[1],version:n[2],os:i}}(),function(){return v})},function(e,t){function n(){return e.exports=n=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(e[i]=n[i])}return e},n.apply(this,arguments)}e.exports=n},function(e,t,n){e.exports=n(26)},function(e,t,n){"use strict";var i,a=this&&this.__extends||(i=function(e,t){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}i(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),r=this&&this.__awaiter||function(e,t,n,i){return new(n||(n=Promise))(function(a,r){function o(e){try{c(i.next(e))}catch(e){r(e)}}function s(e){try{c(i.throw(e))}catch(e){r(e)}}function c(e){e.done?a(e.value):new n(function(t){t(e.value)}).then(o,s)}c((i=i.apply(e,t||[])).next())})},o=this&&this.__generator||function(e,t){var n,i,a,r,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(a=2&r[0]?i.return:r[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,r[1])).done)return a;switch(i=0,a&&(r=[2&r[0],a.value]),r[0]){case 0:case 1:a=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){o.label=r[1];break}if(6===r[0]&&o.label<a[1]){o.label=a[1],a=r;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(r);break}a[2]&&o.ops.pop(),o.trys.pop();continue}r=t.call(e,o)}catch(e){r=[6,e],i=0}finally{n=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}},s=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var c=s(n(32)),d=n(3),u=s(n(0)),l=n(1),f=n(10),p=n(11),m=function(e){function t(t,n){var i=e.call(this)||this;return i._state=_.RELAY_STATE_IDLE,i._onStatus=function(e){u.default.debug("["+i.clientId+"] ChannelMediaStatus: "+JSON.stringify(e)),e&&e.command&&("onAudioPacketReceived"===e.command&&i.emit("event",h.PACKET_RECEIVED_AUDIO_FROM_SRC),"onVideoPacketReceived"===e.command&&i.emit("event",h.PACKET_RECEIVED_VIDEO_FROM_SRC),"onSrcTokenPrivilegeDidExpire"===e.command&&(i._state=_.RELAY_STATE_FAILURE,i.emit("state",_.RELAY_STATE_FAILURE,E.SRC_TOKEN_EXPIRED)),"onDestTokenPrivilegeDidExpire"===e.command&&(i._state=_.RELAY_STATE_FAILURE,i.emit("state",_.RELAY_STATE_FAILURE,E.DEST_TOKEN_EXPIRED,e.channelName?{came:e.channelName}:null)))},i._onClose=function(){return r(i,void 0,void 0,function(){var e;return o(this,function(t){switch(t.label){case 0:if(u.default.debug("["+this.clientId+"] ChannelMediaSocket onClose"),this.emit("event",h.NETWORK_DISCONNECTED),this.state=_.RELAY_STATE_IDLE,!this._prevChannelMediaConfig)return[3,4];t.label=1;case 1:return t.trys.push([1,3,,4]),[4,this.startChannelMediaRelay(this._prevChannelMediaConfig)];case 2:return t.sent(),[3,4];case 3:return(e=t.sent())instanceof T&&(e.message===v.WS_ABORT||e.message===v.AP_REQUEST_ABORT)?[2]:(this.emit("state",_.RELAY_STATE_FAILURE,E.SERVER_CONNECTION_LOST),[3,4]);case 4:return[2]}})})},i.token=t.appId,i.appId=t.appId,i.cname=t.cname,i.uid=t.uid,i.sid=t.sid,i.clientId=n,i}return a(t,e),Object.defineProperty(t.prototype,"state",{get:function(){return this._state},set:function(e){var t=this._state;this._state=e,t!==e&&this.emit("state",e)},enumerable:!0,configurable:!0}),t.prototype.startChannelMediaRelay=function(e){return r(this,void 0,void 0,function(){return o(this,function(t){switch(t.label){case 0:if(this.state!==_.RELAY_STATE_IDLE)throw new T(v.BAD_STATE);return this.state=_.RELAY_STATE_CONNECTING,[4,this._connect()];case 1:return t.sent(),u.default.debug("["+this.clientId+"] startChannelMediaRelay: connect success"),[4,this._sendStartRelayMessage(e)];case 2:return t.sent(),this._prevChannelMediaConfig=e,[2]}})})},t.prototype.updateChannelMediaRelay=function(e){return r(this,void 0,void 0,function(){return o(this,function(t){switch(t.label){case 0:if(this.state!==_.RELAY_STATE_RUNNING)throw new T(v.BAD_STATE);return[4,this._sendUpdateMessage(e)];case 1:return t.sent(),this._prevChannelMediaConfig=e,[2]}})})},t.prototype.stopChannelMediaRelay=function(){return r(this,void 0,void 0,function(){return o(this,function(e){switch(e.label){case 0:return[4,this._sendStopRelayMessage()];case 1:return e.sent(),u.default.debug("["+this.clientId+"] stopChannelMediaRelay: send stop message success"),this.state=_.RELAY_STATE_IDLE,this.dispose(),[2]}})})},t.prototype.dispose=function(){u.default.debug("["+this.clientId+"] disposeChannelMediaRelay"),this.state=_.RELAY_STATE_IDLE,this.emit("dispose"),this._signal&&this._signal.dispose(),this._prevChannelMediaConfig=null,this.removeEvent()},t.prototype._requestOneAP=function(e){var t=this;return new Promise(function(n,i){var a={command:"convergeAllocateEdge",sid:t.sid,appId:t.appId,token:"",ts:+new Date,version:d.VERSION,cname:t.cname,uid:t.uid+"",seq:1,requestId:1},r={service_name:"tele_channel",json_body:JSON.stringify(a)},o="https://"+e;f.post(o,r,function(e){var t=null,a=null;try{t=JSON.parse(e)}catch(e){i(new T(v.AP_JSON_PARSE_ERROR,e))}0!==t.code&&i(new T(v.AP_REQUEST_ERROR,t));try{a=JSON.parse(t.json_body)}catch(e){i(new T(v.AP_JSON_PARSE_ERROR,e))}200!==a.code&&i(new T(v.AP_REQUEST_ERROR,a)),a.servers?n(a.servers):i(new T(v.AP_JSON_PARSE_ERROR,a))},function(e){return i(e)},{"X-Packet-Service-Type":0,"X-Packet-URI":61})})},t.prototype._requestAP=function(){var e=this,t=d.getParameter("UAP_AP");return new Promise(function(n,i){setTimeout(function(){i(new T(v.AP_REQUEST_TIMEOUT))},3e3),e.on("dispose",function(){i(new T(v.AP_REQUEST_ABORT))}),t.forEach(function(t){t+="/api/v1",e._requestOneAP(t).then(function(i){u.default.debug("["+e.clientId+"] startChannelMediaRelay request AP "+t+" success: "+JSON.stringify(i));var a=i[0],r="wss://"+a.address.replace(/\./g,"-")+".edge.agora.io:"+a.wss;n(r)}).catch(function(n){u.default.debug("["+e.clientId+"] startChannelMediaRelay request AP "+t+" failed: "+JSON.stringify(n))})})})},t.prototype._connectWebsocket=function(e){return this._signal=new I(this.appId,this.cname,this.uid,this.sid),this._signal.connect(e)},t.prototype._connect=function(){return r(this,void 0,void 0,function(){var e;return o(this,function(t){switch(t.label){case 0:return[4,this._requestAP()];case 1:return e=t.sent(),[4,this._connectWebsocket(e)];case 2:return t.sent(),this._signal.on("close",this._onClose.bind(this)),this._signal.on("status",this._onStatus.bind(this)),this.emit("event",h.NETWORK_CONNECTED),[2]}})})},t.prototype._sendStartRelayMessage=function(e){return r(this,void 0,void 0,function(){var t,n,i,a,r,s;return o(this,function(o){switch(o.label){case 0:return this._checkSignal(),t=this._genMessage(S.StopPacketTransfer),[4,this._signal.request(t)];case 1:return o.sent(),[4,this._signal.waitStatus("Normal Quit")];case 2:return o.sent(),u.default.debug("["+this.clientId+"] startChannelMediaRelay: StopPacketTransfer success"),n=this._genMessage(S.SetSdkProfile,e),[4,this._signal.request(n)];case 3:return o.sent(),u.default.debug("["+this.clientId+"] startChannelMediaRelay: SetSdkProfile success"),i=this._genMessage(S.SetSourceChannel,e),[4,this._signal.request(i)];case 4:return o.sent(),[4,this._signal.waitStatus("SetSourceChannelStatus")];case 5:return o.sent(),this.emit("event",h.PACKET_JOINED_SRC_CHANNEL),u.default.debug("["+this.clientId+"] startChannelMediaRelay: SetSourceChannel success"),a=this._genMessage(S.SetSourceUserId,e),[4,this._signal.request(a)];case 6:return o.sent(),u.default.debug("["+this.clientId+"] startChannelMediaRelay: SetSourceUserId success"),r=this._genMessage(S.SetDestChannel,e),[4,this._signal.request(r)];case 7:return o.sent(),[4,this._signal.waitStatus("SetDestChannelStatus")];case 8:return o.sent(),this.emit("event",h.PACKET_JOINED_DEST_CHANNEL),u.default.debug("["+this.clientId+"] startChannelMediaRelay: SetDestChannel success"),s=this._genMessage(S.StartPacketTransfer,e),[4,this._signal.request(s)];case 9:return o.sent(),this.emit("event",h.PACKET_SENT_TO_DEST_CHANNEL),this.state=_.RELAY_STATE_RUNNING,u.default.debug("["+this.clientId+"] startChannelMediaRelay: StartPacketTransfer success"),[2]}})})},t.prototype._sendReconnectMessage=function(e){return r(this,void 0,void 0,function(){var t;return o(this,function(n){switch(n.label){case 0:return this._checkSignal(),t=this._genMessage(S.Reconnect,e),[4,this._signal.request(t)];case 1:return n.sent(),[2]}})})},t.prototype._sendUpdateMessage=function(e){return r(this,void 0,void 0,function(){var t;return o(this,function(n){switch(n.label){case 0:return this._checkSignal(),t=this._genMessage(S.UpdateDestChannel,e),[4,this._signal.request(t)];case 1:return n.sent(),this.emit("event",h.PACKET_UPDATE_DEST_CHANNEL),u.default.debug("["+this.clientId+"] sendUpdateMessage: UpdateDestChannel success"),[2]}})})},t.prototype._sendStopRelayMessage=function(){return r(this,void 0,void 0,function(){var e;return o(this,function(t){switch(t.label){case 0:return this._checkSignal(),e=this._genMessage(S.StopPacketTransfer),[4,this._signal.request(e)];case 1:return t.sent(),u.default.debug("["+this.clientId+"] sendStopRelayMessage: StopPacketTransfer success"),[2]}})})},t.prototype._genMessage=function(e,t){var n=this,i=[],a=[],r=[],o={appId:this.appId,cname:this.cname,uid:this.uid+"",sdkVersion:d.VERSION,sid:this.sid,ts:+new Date,requestId:0,seq:0,allocate:!0,clientRequest:{}},s=null;switch(e){case S.SetSdkProfile:return o.clientRequest={command:"SetSdkProfile",type:"multi_channel"},o;case S.SetSourceChannel:return s=t.getSrcChannelMediaInfo(),o.clientRequest={command:"SetSourceChannel",uid:s.uid+"",channelName:s.channelName,token:s.token||this.appId},o;case S.SetSourceUserId:return s=t.getSrcChannelMediaInfo(),o.clientRequest={command:"SetSourceUserId",uid:this.uid+""},o;case S.SetDestChannel:return t.getDestChannelMediaInfos().forEach(function(e){i.push(e.channelName),a.push(e.uid+""),r.push(e.token||n.appId)}),o.clientRequest={command:"SetDestChannel",channelName:i,uid:a,token:r},o;case S.StartPacketTransfer:return o.clientRequest={command:"StartPacketTransfer"},o;case S.Reconnect:return o.clientRequest={command:"Reconnect"},o;case S.StopPacketTransfer:return o.clientRequest={command:"StopPacketTransfer"},o;case S.UpdateDestChannel:return t.getDestChannelMediaInfos().forEach(function(e){i.push(e.channelName),a.push(e.uid+""),r.push(e.token||n.appId)}),o.clientRequest={command:"UpdateDestChannel",channelName:i,uid:a,token:r},o}},t.prototype._checkSignal=function(){if(!this._signal||!this._signal.isConnect())throw new T(v.WS_DISCONNECTED)},t}(c.default);t.default=m;var g=function(){function e(){this.destChannelMediaInfos=new Map}return e.prototype.setSrcChannelInfo=function(e){l.checkValidObject(e,"srcInfo");var t=e.uid,n=e.channelName,i=e.token;if(i&&!l.isValidToken(i))throw new Error("Invalid token in SrcChannelInfo");if(!l.isValidChannelName(n))throw new Error("Invalid channelName in SrcChannelInfo");if(!p.is32Uint(t))throw new Error("Invalid uid in SrcChannelInfo");this.srcChannelMediaInfo=e},e.prototype.setDestChannelInfo=function(e,t){if(!l.isValidChannelName(e))throw new Error("Invalid channelName in DestChannelInfo");l.checkValidObject(t,"destInfo");var n=t.uid,i=t.token,a=t.channelName;if(i&&!l.isValidToken(i))throw new Error("Invalid token in DestChannelInfo");if(!l.isValidChannelName(a))throw new Error("Invalid channelName in DestChannelInfo");if(!p.is32Uint(n))throw new Error("Invalid uid in DestChannelInfo");this.destChannelMediaInfos.set(e,t)},e.prototype.removeDestChannelInfo=function(e){if(!l.isValidChannelName(e))throw new Error("Invalid channelName when invoke removeDestChannelInfo");this.destChannelMediaInfos.delete(e)},e.prototype.getSrcChannelMediaInfo=function(){return this.srcChannelMediaInfo},e.prototype.getDestChannelMediaInfos=function(){return this.destChannelMediaInfos},e}();t.ChannelMediaRelayConfiguration=g;var v,S,h,_,E,I=function(e){function t(t,n,i,a){var r=e.call(this)||this;return r._onOpen=function(){r.emit("open")},r._onClose=function(e){r.emit("close"),r.dispose()},r._onMessage=function(e){var t=JSON.parse(e.data);if(!t||"serverResponse"!==t.command||!t.requestId)return t&&"serverStatus"===t.command&&t.serverStatus&&t.serverStatus.command?(r.emit("status",t.serverStatus),void r.emit(t.serverStatus.command,t.serverStatus)):void 0;r.emit("req_"+t.requestId,t)},r._requestId=1,r.appId=t,r.cname=n,r.uid=i,r.sid=a,r}return a(t,e),t.prototype.isConnect=function(){return this._ws&&this._ws.readyState===WebSocket.OPEN},t.prototype.sendMessage=function(e){if(!this._ws||this._ws.readyState!==WebSocket.OPEN)throw new T(v.WS_DISCONNECTED);var t=this._requestId++;return e.requestId=t,e.seq=t,this._ws.send(JSON.stringify(e)),t},t.prototype.waitStatus=function(e){var t=this;return new Promise(function(n,i){var a=window.setTimeout(function(){i(new T(v.WAIT_STATUS_TIMEOUT,e))},5e3);t.once(e,function(t){clearTimeout(a),t.state&&0!==t.state?i(new T(v.WAIT_STATUS_ERROR,e)):n()}),t.once("dispose",function(){clearTimeout(a),i(new T(v.WS_ABORT))})})},t.prototype.request=function(e){var t=this;return new Promise(function(n,i){var a=t.sendMessage(e),r=window.setTimeout(function(){t.removeAllListeners("req_"+a),i(new T(v.REQUEST_TIMEOUT))},3e3);t.once("req_"+a,function(e){clearTimeout(r),e&&200===e.code?n(e):i(new T(v.REQUEST_FAILED,e))}),t.once("dispose",function(){clearTimeout(r),i(new T(v.WS_ABORT))})})},t.prototype.connect=function(e){var t=this;return new Promise(function(n,i){t._ws=new WebSocket(e),t._ws.onopen=function(){t._onOpen(),t._prvUrl=e,t._ws.onmessage=t._onMessage,t._ws.onclose=t._onClose,t._startHeartBeatCheck(),n()},t._ws.onclose=function(e){t._ws=null,i(new T(v.CONNECT_FAILED,"websocket error code: "+e.code))},setTimeout(function(){t._ws&&t._ws.readyState!==WebSocket.OPEN&&(t._ws.onopen=null,t._ws.onclose=null,t._ws.close(),t._ws=null,i(new T(v.CONNECT_TIMEOUT)))},5e3),t.once("dispose",function(){i(new T(v.WS_ABORT))})})},t.prototype.dispose=function(){this._clearHeartBeatCheck(),this.emit("dispose"),this.removeEvent(),this._ws&&(this._ws.onopen=null,this._ws.onclose=null,this._ws.onmessage=null,this._ws.close()),this._ws=null},t.prototype._sendPing=function(e){if(!this._ws||this._ws.readyState!==WebSocket.OPEN)throw new T(v.WS_DISCONNECTED);var t=this._requestId++;return e.requestId=t,this._ws.send(JSON.stringify(e)),t},t.prototype._startHeartBeatCheck=function(){var e=this;this._heartBeatTimer=window.setInterval(function(){e._sendPing({command:"ping",appId:e.appId,cname:e.cname,uid:e.uid+"",sid:e.sid,ts:+new Date,requestId:0})},3e3)},t.prototype._clearHeartBeatCheck=function(){window.clearInterval(this._heartBeatTimer)},t}(c.default),T=function(){return function(e,t,n){void 0===e&&(e=""),this.code=n,this.data=t,this.message=e}}();t.ChannelMediaError=T,function(e){e.CONNECT_FAILED="connect failed",e.CONNECT_TIMEOUT="connect timeout",e.WS_DISCONNECTED="websocket disconnected",e.REQUEST_TIMEOUT="request timeout",e.REQUEST_FAILED="request failed",e.WAIT_STATUS_TIMEOUT="wait status timeout",e.WAIT_STATUS_ERROR="wait status error",e.BAD_STATE="bad state",e.WS_ABORT="ws abort",e.AP_REQUEST_TIMEOUT="AP request timeout",e.AP_JSON_PARSE_ERROR="AP json parse error",e.AP_REQUEST_ERROR="AP request error",e.AP_REQUEST_ABORT="AP request abort"}(v=t.CHANNEL_MEDIA_ERROR||(t.CHANNEL_MEDIA_ERROR={})),function(e){e[e.SetSdkProfile=0]="SetSdkProfile",e[e.SetSourceChannel=1]="SetSourceChannel",e[e.SetSourceUserId=2]="SetSourceUserId",e[e.SetDestChannel=3]="SetDestChannel",e[e.StartPacketTransfer=4]="StartPacketTransfer",e[e.StopPacketTransfer=5]="StopPacketTransfer",e[e.UpdateDestChannel=6]="UpdateDestChannel",e[e.Reconnect=7]="Reconnect",e[e.SetVideoProfile=8]="SetVideoProfile"}(S||(S={})),function(e){e[e.NETWORK_DISCONNECTED=0]="NETWORK_DISCONNECTED",e[e.NETWORK_CONNECTED=1]="NETWORK_CONNECTED",e[e.PACKET_JOINED_SRC_CHANNEL=2]="PACKET_JOINED_SRC_CHANNEL",e[e.PACKET_JOINED_DEST_CHANNEL=3]="PACKET_JOINED_DEST_CHANNEL",e[e.PACKET_SENT_TO_DEST_CHANNEL=4]="PACKET_SENT_TO_DEST_CHANNEL",e[e.PACKET_RECEIVED_VIDEO_FROM_SRC=5]="PACKET_RECEIVED_VIDEO_FROM_SRC",e[e.PACKET_RECEIVED_AUDIO_FROM_SRC=6]="PACKET_RECEIVED_AUDIO_FROM_SRC",e[e.PACKET_UPDATE_DEST_CHANNEL=7]="PACKET_UPDATE_DEST_CHANNEL",e[e.PACKET_UPDATE_DEST_CHANNEL_REFUSED=8]="PACKET_UPDATE_DEST_CHANNEL_REFUSED",e[e.PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE=9]="PACKET_UPDATE_DEST_CHANNEL_NOT_CHANGE"}(h=t.CHANNEL_MEDIA_RELAY_EVENT||(t.CHANNEL_MEDIA_RELAY_EVENT={})),function(e){e[e.RELAY_STATE_IDLE=0]="RELAY_STATE_IDLE",e[e.RELAY_STATE_CONNECTING=1]="RELAY_STATE_CONNECTING",e[e.RELAY_STATE_RUNNING=2]="RELAY_STATE_RUNNING",e[e.RELAY_STATE_FAILURE=3]="RELAY_STATE_FAILURE"}(_=t.CHANNEL_MEDIA_RELAY_STATE||(t.CHANNEL_MEDIA_RELAY_STATE={})),function(e){e[e.RELAY_OK=0]="RELAY_OK",e[e.SERVER_ERROR_RESPONSE=1]="SERVER_ERROR_RESPONSE",e[e.SERVER_NO_RESPONSE=2]="SERVER_NO_RESPONSE",e[e.NO_RESOURCE_AVAILABLE=3]="NO_RESOURCE_AVAILABLE",e[e.FAILED_JOIN_SRC=4]="FAILED_JOIN_SRC",e[e.FAILED_JOIN_DEST=5]="FAILED_JOIN_DEST",e[e.FAILED_PACKET_RECEIVED_FROM_SRC=6]="FAILED_PACKET_RECEIVED_FROM_SRC",e[e.FAILED_PACKET_SENT_TO_DEST=7]="FAILED_PACKET_SENT_TO_DEST",e[e.SERVER_CONNECTION_LOST=8]="SERVER_CONNECTION_LOST",e[e.INTERNAL_ERROR=9]="INTERNAL_ERROR",e[e.SRC_TOKEN_EXPIRED=10]="SRC_TOKEN_EXPIRED",e[e.DEST_TOKEN_EXPIRED=11]="DEST_TOKEN_EXPIRED",e[e.RELAY_ALREADY_START=12]="RELAY_ALREADY_START",e[e.RELAY_NOT_START=13]="RELAY_NOT_START",e[e.OPERATION_ABORT=14]="OPERATION_ABORT"}(E=t.CHANNEL_MEDIA_RELAY_ERROR||(t.CHANNEL_MEDIA_RELAY_ERROR={}))},function(e,t){function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(t){return"function"==typeof Symbol&&"symbol"===n(Symbol.iterator)?e.exports=i=function(e){return n(e)}:e.exports=i=function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":n(e)},i(t)}e.exports=i},function(e,t,n){"use strict";n.r(t),n.d(t,"post",function(){return u}),n.d(t,"shouldUseHttps",function(){return l}),n.d(t,"getHTTPSendBytes",function(){return s}),n.d(t,"getHTTPRecvBytes",function(){return c}),n.d(t,"resetHTTPByetsCount",function(){return d});var i=n(3),a=n(11),r=0,o=0,s=function(){return r},c=function(){return o},d=function(){r=0,o=0},u=function(e,t,n,s,c){var d=new XMLHttpRequest;if(d.timeout=t.timeout||Object(i.getParameter)("HTTP_CONNECT_TIMEOUT"),d.open("POST",e,!0),d.setRequestHeader("Content-type","application/json; charset=utf-8"),c)for(var u in c)"withCredentials"==u?d.withCredentials=!0:d.setRequestHeader(u,c[u]);d.onload=function(e){o+=Object(a.lengthInUtf8Bytes)(d.responseText),n&&n(d.responseText)},d.onerror=function(t){s&&s(t,e)},d.ontimeout=function(t){s&&s(t,e)};var l=JSON.stringify(t);r+=Object(a.lengthInUtf8Bytes)(l),d.send(l)},l=function(){return"https:"==document.location.protocol}},function(e,t,n){"use strict";n.r(t),n.d(t,"isLiveTranscodingValid",function(){return v}),n.d(t,"generateSessionId",function(){return p}),n.d(t,"audioLevelHelper",function(){return f}),n.d(t,"vsResHack",function(){return m}),n.d(t,"is32Uint",function(){return g}),n.d(t,"safeCall",function(){return l}),n.d(t,"random",function(){return h}),n.d(t,"popBanTip",function(){return E}),n.d(t,"lengthInUtf8Bytes",function(){return _});var i=n(9),a=n.n(i),r=n(5),o=n(0),s=n(16),c=n.n(s),d=n(15),u=n(13),l=function(){var e=arguments[0];if("function"==typeof e){var t=Array.prototype.slice.call(arguments,1);e.apply(null,t)}},f=function(e){return this.audioContext=Object(d.a)(),this.sourceNode=e.otWebkitAudioSource||this.audioContext.createMediaStreamSource(e),this.analyser=this.audioContext.createAnalyser(),this.timeDomainData=new Uint8Array(this.analyser.frequencyBinCount),this.sourceNode.connect(this.analyser),this.getAudioLevel=function(){if(this.analyser){this.analyser.getByteTimeDomainData(this.timeDomainData);for(var e=0,t=0;t<this.timeDomainData.length;t++)e=Math.max(e,Math.abs(this.timeDomainData[t]-128));return e/128}return o.default.warning("can't find analyser in audioLevelHelper"),0},this};function p(){return c()().replace(/-/g,"").toUpperCase()}var m=function(e,t,n){try{o.default.debug("start vsResHack",e);var i=document.createElement("video");i.setAttribute("autoplay",""),i.setAttribute("muted",""),i.muted=!0,i.setAttribute("playsinline",""),i.setAttribute("style","position: absolute; top: 0; left: 0; width:1px; high:1px;"),document.body.appendChild(i),i.addEventListener("playing",function(n){r.isFireFox()?i.videoWidth&&(o.default.debug("[vsResHack] get stream resolution: ","".concat(i.videoWidth," x ").concat(i.videoHeight),e),t(i.videoWidth,i.videoHeight),document.body.removeChild(i)):(o.default.debug("[vsResHack] get stream resolution: ","".concat(i.videoWidth," x ").concat(i.videoHeight),e),t(i.videoWidth,i.videoHeight),document.body.removeChild(i))}),Object(u.setSrcObject)(i,e)}catch(e){n(e)}},g=function(e){return"number"==typeof e&&0<=e&&e<=4294967295},v=function(e){var t=["lowLatency","userConfigExtraInfo","transcodingUsers"];for(var n in e)if("lowLatency"===n&&"boolean"!=typeof e[n]||"userConfigExtraInfo"===n&&"object"!==a()(e[n])||"transcodingUsers"===n&&!S(e[n])||!~t.indexOf(n)&&"number"!=typeof e[n])throw new Error("Param ["+n+"] is inValid");return!0},S=function(e){for(var t=0;t<e.length;t++)for(var n in e[t])if("number"!=typeof e[t][n])throw new Error("Param user["+t+"] - ["+n+"] is inValid");return!0},h=function(e){isNaN(e)&&(e=1e3);var t=+new Date,n=(t=(9301*t+49297)%233280)/233280;return Math.ceil(n*e)},_=function(e){var t=encodeURIComponent(e).match(/%[89ABab]/g);return e.length+(t?t.length:0)},E=function(){if(!document.getElementById("agora-ban-tip")){var e=document.createElement("div");e.id="agora-ban-tip",e.style="position: absolute; width: 100%; height: 100%; display: flex; justify-content: center; align-items: center; color: #fff;",document.querySelector("body").prepend(e);var t=document.createElement("div");t.style="background: #000; width: 346px; height: 116px; z-index: 100000; opacity: 0.6; border-radius: 10px; box-shadow: 0 2px 4px #000;",e.append(t);var n=document.createElement("div");n.style="height: 76px; display: flex; justify-content: center; align-items: center;";var i=document.createElement("span");i.style="height: 28px; width: 28px; color: #000; text-align: center; line-height: 30px; background: #fff; border-radius: 50%; font-weight: 600; font-size: 20px;margin-right: 5px;",i.innerText="!";var a=document.createElement("span");a.innerText="This browser does not support webRTC",n.append(i),n.append(a);var r=document.createElement("div");r.style="height: 38px; display: flex; border-top: #fff 1px solid; justify-content: center; align-items: center;",r.innerText="OK",t.append(n),t.append(r),r.onclick=function(){var e=document.getElementById("agora-ban-tip");e.parentNode.removeChild(e)}}}},function(e,t){function n(e,t,n,i,a,r,o){try{var s=e[r](o),c=s.value}catch(e){return void n(e)}s.done?t(c):Promise.resolve(c).then(i,a)}e.exports=function(e){return function(){var t=this,i=arguments;return new Promise(function(a,r){var o=e.apply(t,i);function s(e){n(o,a,r,s,c,"next",e)}function c(e){n(o,a,r,s,c,"throw",e)}s(void 0)})}}},function(e,t,n){"use strict";n.r(t),n.d(t,"RTCPeerConnection",function(){return y}),n.d(t,"getUserMedia",function(){return o}),n.d(t,"attachMediaStream",function(){return s}),n.d(t,"reattachMediaStream",function(){return c}),n.d(t,"setSrcObject",function(){return p}),n.d(t,"getSrcObject",function(){return m}),n.d(t,"webrtcDetectedBrowser",function(){return d}),n.d(t,"webrtcDetectedVersion",function(){return u}),n.d(t,"webrtcMinimumVersion",function(){return l}),n.d(t,"webrtcTesting",function(){return b}),n.d(t,"webrtcUtils",function(){return S});var i=n(9),a=n.n(i),r=n(5),o=null,s=null,c=null,d=null,u=null,l=null,f=null,p=null,m=null,g=null,v={addStream:null},S={log:function(){},extractVersion:function(e,t,n){var i=e.match(t);return i&&i.length>=n&&parseInt(i[n])}};if("object"==("undefined"==typeof window?"undefined":a()(window))?(!window.HTMLMediaElement||"srcObject"in window.HTMLMediaElement.prototype?(p=function(e,t){e.srcObject=t},m=function(e){return e.srcObject}):(p=function(e,t){"mozSrcObject"in e?e.mozSrcObject=t:(e._srcObject=t,e.src=t?URL.createObjectURL(t):null)},m=function(e){return"mozSrcObject"in e?e.mozSrcObject:e._srcObject}),o=window.navigator&&window.navigator.getUserMedia):(p=function(e,t){e.srcObject=t},m=function(e){return e.srcObject}),s=function(e,t){p(e,t)},c=function(e,t){p(e,m(t))},"undefined"!=typeof window&&window.navigator)if(navigator.mozGetUserMedia&&window.mozRTCPeerConnection){for(var h in S.log("This appears to be Firefox"),d="firefox",u=S.extractVersion(navigator.userAgent,/Firefox\/([0-9]+)\./,1),l=31,g=mozRTCPeerConnection,v)v[h]=g.prototype[h];if(f=function(e,t){if(u<38&&e&&e.iceServers){for(var n=[],i=0;i<e.iceServers.length;i++){var a=e.iceServers[i];if(a.hasOwnProperty("urls"))for(var r=0;r<a.urls.length;r++){var o={url:a.urls[r]};0===a.urls[r].indexOf("turn")&&(o.username=a.username,o.credential=a.credential),n.push(o)}else n.push(e.iceServers[i])}e.iceServers=n}var s=new g(e,t);for(var c in v)s[c]=v[c];return s},window.RTCSessionDescription||(window.RTCSessionDescription=mozRTCSessionDescription),window.RTCIceCandidate||(window.RTCIceCandidate=mozRTCIceCandidate),o=function(e,t,n){var i=function(e){if("object"!==a()(e)||e.require)return e;var t=[];return Object.keys(e).forEach(function(n){if("require"!==n&&"advanced"!==n&&"mediaSource"!==n){var i=e[n]="object"===a()(e[n])?e[n]:{ideal:e[n]};if(void 0===i.min&&void 0===i.max&&void 0===i.exact||t.push(n),void 0!==i.exact&&("number"==typeof i.exact?i.min=i.max=i.exact:e[n]=i.exact,delete i.exact),void 0!==i.ideal){e.advanced=e.advanced||[];var r={};"number"==typeof i.ideal?r[n]={min:i.ideal,max:i.ideal}:r[n]=i.ideal,e.advanced.push(r),delete i.ideal,Object.keys(i).length||delete e[n]}}}),t.length&&(e.require=t),e};return u<38&&(S.log("spec: "+JSON.stringify(e)),e.audio&&(e.audio=i(e.audio)),e.video&&(e.video=i(e.video)),S.log("ff37: "+JSON.stringify(e))),navigator.mozGetUserMedia(e,t,n)},navigator.getUserMedia=o,navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:T,addEventListener:function(){},removeEventListener:function(){}}),navigator.mediaDevices.enumerateDevices=navigator.mediaDevices.enumerateDevices||function(){return new Promise(function(e){e([{kind:"audioinput",deviceId:"default",label:"",groupId:""},{kind:"videoinput",deviceId:"default",label:"",groupId:""}])})},u<41){var _=navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);navigator.mediaDevices.enumerateDevices=function(){return _().then(void 0,function(e){if("NotFoundError"===e.name)return[];throw e})}}}else if(navigator.webkitGetUserMedia&&window.webkitRTCPeerConnection){for(var h in S.log("This appears to be Chrome"),d="chrome",u=S.extractVersion(navigator.userAgent,/Chrom(e|ium)\/([0-9]+)\./,2),l=38,g=webkitRTCPeerConnection,v)v[h]=g.prototype[h];f=function(e,t){e&&e.iceTransportPolicy&&(e.iceTransports=e.iceTransportPolicy);var n=new g(e,t);for(var i in v)n[i]=v[i];var a=n.getStats.bind(n);return n.getStats=function(e,t,n){var i=arguments;i.length>0&&"function"==typeof e&&(t?(n=t,t=e,i=[e=null,t,n]):(t=e,i=[e=null,t]));if(i.length>=2){return a.apply(this,[function(e){i[1](function(e){var t={};return e.result().forEach(function(e){var n={id:e.id,timestamp:e.timestamp,type:e.type};e.names().forEach(function(t){n[t]=e.stat(t)}),t[n.id]=n}),t}(e))},i[0]])}return a()},n},["createOffer","createAnswer"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){var e=this;if(arguments.length<1||1===arguments.length&&"object"===a()(arguments[0])){var n=1===arguments.length?arguments[0]:void 0;return new Promise(function(i,a){t.apply(e,[i,a,n])})}return t.apply(this,arguments)}}),["setLocalDescription","setRemoteDescription","addIceCandidate"].forEach(function(e){var t=webkitRTCPeerConnection.prototype[e];webkitRTCPeerConnection.prototype[e]=function(){var e=arguments,n=this;return new Promise(function(i,a){t.apply(n,[e[0],function(){i(),e.length>=2&&e[1].apply(null,[])},function(t){a(t),e.length>=3&&e[2].apply(null,[t])}])})}});var E=function(e){if("object"!==a()(e)||e.mandatory||e.optional)return e;var t={};return Object.keys(e).forEach(function(n){if("require"!==n&&"advanced"!==n&&"mediaSource"!==n){var i="object"===a()(e[n])?e[n]:{ideal:e[n]};void 0!==i.exact&&"number"==typeof i.exact&&(i.min=i.max=i.exact);var r=function(e,t){return e?e+t.charAt(0).toUpperCase()+t.slice(1):"deviceId"===t?"sourceId":t};if(void 0!==i.ideal){t.optional=t.optional||[];var o={};"number"==typeof i.ideal?(o[r("min",n)]=i.ideal,t.optional.push(o),(o={})[r("max",n)]=i.ideal,t.optional.push(o)):(o[r("",n)]=i.ideal,t.optional.push(o))}void 0!==i.exact&&"number"!=typeof i.exact?(t.mandatory=t.mandatory||{},t.mandatory[r("",n)]=i.exact):["min","max"].forEach(function(e){void 0!==i[e]&&(t.mandatory=t.mandatory||{},t.mandatory[r(e,n)]=i[e])})}}),e.advanced&&(t.optional=(t.optional||[]).concat(e.advanced)),t};if(o=function(e,t,n){return e.audio&&(e.audio=E(e.audio)),e.video&&(e.video=E(e.video)),S.log("chrome: "+JSON.stringify(e)),navigator.webkitGetUserMedia(e,t,n)},navigator.getUserMedia=o,navigator.mediaDevices||(navigator.mediaDevices={getUserMedia:T,enumerateDevices:function(){return new Promise(function(e){var t={audio:"audioinput",video:"videoinput"};return MediaStreamTrack.getSources(function(n){e(n.map(function(e){return{label:e.label,kind:t[e.kind],deviceId:e.id,groupId:""}}))})})}}),navigator.mediaDevices.getUserMedia){if((Object(r.getBrowserVersion)()?Number(Object(r.getBrowserVersion)().split(".")[0]):void 0)<46){var I=navigator.mediaDevices.getUserMedia.bind(navigator.mediaDevices);navigator.mediaDevices.getUserMedia=function(e){return S.log("spec:   "+JSON.stringify(e)),e.audio=E(e.audio),e.video=E(e.video),S.log("chrome: "+JSON.stringify(e)),I(e)}}}else navigator.mediaDevices.getUserMedia=function(e){return T(e)};void 0===navigator.mediaDevices.addEventListener&&(navigator.mediaDevices.addEventListener=function(){S.log("Dummy mediaDevices.addEventListener called.")}),void 0===navigator.mediaDevices.removeEventListener&&(navigator.mediaDevices.removeEventListener=function(){S.log("Dummy mediaDevices.removeEventListener called.")}),s=function(e,t){u>=43?p(e,t):void 0!==e.src?e.src=t?URL.createObjectURL(t):null:S.log("Error attaching stream to element.")},c=function(e,t){u>=43?p(e,m(t)):e.src=t.src}}else navigator.mediaDevices&&navigator.userAgent.match(/Edge\/(\d+).(\d+)$/)?(S.log("This appears to be Edge"),d="edge",u=S.extractVersion(navigator.userAgent,/Edge\/(\d+).(\d+)$/,2),l=12):S.log("Browser does not appear to be WebRTC-capable");else S.log("This does not appear to be a browser"),d="not a browser";function T(e){return new Promise(function(t,n){o(e,t,n)})}var y,b={};try{Object.defineProperty(b,"version",{set:function(e){u=e}})}catch(e){}f?y=f:"undefined"!=typeof window&&(y=window.RTCPeerConnection)},function(e,t,n){var i=n(25);e.exports=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},a=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(a=a.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),a.forEach(function(t){i(e,t,n[t])})}return e}},function(e,t,n){"use strict";n.d(t,"a",function(){return s});var i=window.AudioContext||window.webkitAudioContext,a=n(3),r=a.getParameter,o=a.setParameter,s=function(){return r("AUDIO_CONTEXT")||(console.log("Creating Audio Context"),o("AUDIO_CONTEXT",function(){if(i)return new i;throw new Error("AUDIO_CONTEXT_NOT_SUPPORTED")}())),r("AUDIO_CONTEXT")}},function(e,t,n){var i=n(23),a=n(24);e.exports=function(e,t,n){var r=t&&n||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var o=(e=e||{}).random||(e.rng||i)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t)for(var s=0;s<16;++s)t[r+s]=o[s];return t||a(o)}},function(e,t,n){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a,r=i(n(0)),o=n(13);!function(e){e.NEW="new",e.PREPARING_OFFER="preparing-offer",e.OFFER_SENT="offer-sent",e.ESTABLISHED="established",e.CLOSED="closed"}(a||(a={}));var s=function(){function e(e){this.candidate=null,this.state=a.NEW,this.config=e,this.isSubscriber=this.config.isSubscriber,this.peerConnection=this.initPeecConnection(e),this.peerConnection.onicecandidate=this._onicecandidate.bind(this),this.peerConnection.oniceconnectionstatechange=this._oniceconnectionstatechange.bind(this),this.peerConnection.onaddstream=this._onaddstream.bind(this),this.peerConnection.ontrack=this._ontrack.bind(this),this.processSignalingMessage=this.setAnswer.bind(this),this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0}).then(this.setLocalSDP.bind(this)),this.sendVideoStats={id:"",type:"",mediaType:"",googCodecName:"h264"===this.config.codec?"H264":"VP8",bytesSent:"0",packetsLost:"0",packetsSent:"0",googAdaptationChanges:"0",googAvgEncodeMs:"0",googEncodeUsagePercent:"0",googFirsReceived:"0",googFrameHeightSent:"0",googFrameHeightInput:"0",googFrameRateInput:"0",googFrameRateSent:"0",googFrameWidthSent:"0",googFrameWidthInput:"0",googNacksReceived:"0",googPlisReceived:"0",googRtt:"0",googFramesEncoded:"0"},this.sendAudioStats={id:"",type:"",mediaType:"",googCodecName:"opus",aecDivergentFilterFraction:"0",audioInputLevel:"0",bytesSent:"0",packetsSent:"0",googEchoCancellationReturnLoss:"0",googEchoCancellationReturnLossEnhancement:"0"},this.receiveAudioStats={id:"",type:"",mediaType:"",audioOutputLevel:"0",bytesReceived:"0",packetsLost:"0",packetsReceived:"0",googAccelerateRate:"0",googCurrentDelayMs:"0",googDecodingCNG:"0",googDecodingCTN:"0",googDecodingCTSG:"0",googDecodingNormal:"0",googDecodingPLC:"0",googDecodingPLCCNG:"0",googExpandRate:"0",googJitterBufferMs:"0",googJitterReceived:"0",googPreemptiveExpandRate:"0",googPreferredJitterBufferMs:"0",googSecondaryDecodedRate:"0",googSpeechExpandRate:"0"},this.receiveVideoStats={id:"",type:"",mediaType:"",googTargetDelayMs:"0",packetsLost:"0",googDecodeMs:"0",googMaxDecodeMs:"0",googRenderDelayMs:"0",googFrameWidthReceived:"0",googFrameHeightReceived:"0",googFrameRateReceived:"0",googFrameRateDecoded:"0",googFrameRateOutput:"0",googFramesDecoded:"0",googFrameReceived:"0",googJitterBufferMs:"0",googCurrentDelayMs:"0",googMinPlayoutDelayMs:"0",googNacksSent:"0",googPlisSent:"0",googFirsSent:"0",bytesReceived:"0",packetsReceived:"0"}}return e.prototype.addStream=function(e){this.peerConnection.addStream(e)},e.prototype.setAnswer=function(e){var t=JSON.parse(e);this.peerConnection.setRemoteDescription(new RTCSessionDescription({sdp:t.sdp,type:"answer"})),this.onsignalingmessage&&this.onsignalingmessage("")},e.prototype.close=function(){this.peerConnection.close()},e.prototype.getStats=function(e,t){if(void 0===t&&(t=500),t=t>500?500:t,Date.now()-this.lastTimeGetStats<t){var n=[];this.config.isSubscriber?(n.push(this.receiveVideoStats),n.push(this.receiveAudioStats)):(n.push(this.sendAudioStats),n.push(this.sendVideoStats)),n.push({id:"time",startTime:this.connectedTime,timestamp:Date.now()}),e&&e(n)}else this._getStats(e)},e.prototype._getStats=function(e){var t=this,n=[];this.peerConnection.getStats(null).then(function(i){t.lastTimeGetStats=Date.now(),Object.keys(i).map(function(e){var n=i[e];t.config.isSubscriber?n.type&&"inboundrtp"===n.type&&n.mediaType&&"audio"===n.mediaType?(t.receiveAudioStats.id=n.id+"recv",t.receiveAudioStats.type=n.type+"",t.receiveAudioStats.mediaType=n.mediaType+"",t.receiveAudioStats.packetsReceived=n.packetsReceived+"",t.receiveAudioStats.bytesReceived=n.bytesReceived+"",t.receiveAudioStats.packetsLost=n.packetsLost+"",t.receiveAudioStats.googJitterReceived=n.jitter+""):n.type&&"inboundrtp"===n.type&&n.mediaType&&"video"===n.mediaType?(t.receiveVideoStats.id=n.id+"recv",t.receiveVideoStats.type=n.type+"",t.receiveVideoStats.mediaType=n.mediaType+"",t.receiveVideoStats.packetsReceived=n.packetsReceived+"",t.receiveVideoStats.bytesReceived=n.bytesReceived+"",t.receiveVideoStats.packetsLost=n.packetsLost+"",t.receiveVideoStats.googJitterBufferMs=n.jitter+"",t.receiveVideoStats.googPlisSent=n.pliCount+"",t.receiveVideoStats.googFirsSent=n.firCount+"",t.receiveVideoStats.googNacksSent=n.nackCount+""):n.remoteSource&&n.type&&"track"===n.type&&n.trackIdentifier&&-1!==n.trackIdentifier.indexOf("v")?(t.receiveVideoStats.googFrameHeightReceived=n.frameHeight+"",t.receiveVideoStats.googFrameWidthReceived=n.frameWidth+"",t.receiveVideoStats.googFrameRateDecoded=n.framesPerSecond+"",t.receiveVideoStats.googFrameRateOutput=n.framesPerSecond+"",t.receiveVideoStats.googFrameRateReceived=n.framesPerSecond+"",t.receiveVideoStats.googFramesDecoded=n.framesDecoded+"",t.receiveVideoStats.googFrameReceived=n.framesReceived+""):n.remoteSource&&n.type&&"track"===n.type&&n.trackIdentifier&&-1!==n.trackIdentifier.indexOf("a")&&(t.receiveAudioStats.audioOutputLevel=n.audioLevel+""):!n.isRemote&&n.type&&"outboundrtp"===n.type&&n.mediaType&&"audio"===n.mediaType?(t.sendAudioStats.id=n.id+"send",t.sendAudioStats.type=n.type+"",t.sendAudioStats.mediaType=n.mediaType+"",t.sendAudioStats.packetsSent=n.packetsSent+"",t.sendAudioStats.bytesSent=n.bytesSent+""):!n.isRemote&&n.type&&"outboundrtp"===n.type&&n.mediaType&&"video"===n.mediaType?(t.sendVideoStats.id=n.id+"send",t.sendVideoStats.type=n.type+"",t.sendVideoStats.mediaType=n.mediaType+"",t.sendVideoStats.packetsSent=n.packetsSent+"",t.sendVideoStats.bytesSent=n.bytesSent+"",t.sendVideoStats.googRtt=n.roundTripTime+"",t.sendVideoStats.googPlisReceived=n.pliCount+"",t.sendVideoStats.googFirsReceived=n.firCount+"",t.sendVideoStats.googNacksReceived=n.nackCount+""):!n.remoteSource&&n.type&&"track"===n.type&&n.framesSent&&0!==n.framesSent&&(t.sendVideoStats.googFrameHeightSent=n.frameHeight+"",t.sendVideoStats.googFrameHeightInput=n.frameHeight+"",t.sendVideoStats.googFrameWidthSent=n.frameWidth+"",t.sendVideoStats.googFrameWidthInput=n.frameWidth+"",t.sendVideoStats.googFramesEncoded=n.framesSent+"",t.sendVideoStats.googFrameRateSent=n.framesPerSecond+"")}),t.config.isSubscriber?(n.push(t.receiveVideoStats),n.push(t.receiveAudioStats)):(n.push(t.sendAudioStats),n.push(t.sendVideoStats)),n.push({id:"time",startTime:t.connectedTime,timestamp:Date.now()}),e&&e(n)})},e.prototype.getStatsRate=function(e){this.getStats(e)},e.prototype.initPeecConnection=function(e){var t=e.stunServerUrl,n=e.turnServer,i=e.iceServers;return this.pcConfig={iceServers:[{urls:"stun:webcs.agora.io:3478"}]},i instanceof Array?this.pcConfig.iceServers=e.iceServers:t&&(t instanceof Array?t.map(function(e){"string"==typeof e&&""!==e&&this.pcConfig.iceServers.push({urls:e})}):"string"==typeof t&&""!==t&&this.pcConfig.iceServers.push({urls:t})),n&&(n instanceof Array?n.map(function(e){"string"==typeof e.url&&""!==e.url&&this.pcConfig.iceServers.push({username:e.username,credential:e.credential,url:e.url})}):"auto"!==n.mode&&"manual"!==n.mode||(n.udpport&&this.pcConfig.iceServers.push({username:n.username,credential:n.credential,credentialType:"password",urls:"turn:"+n.url+":"+n.udpport+"?transport=udp"}),"string"==typeof n.tcpport&&""!==n.tcpport&&this.pcConfig.iceServers.push({username:n.username,credential:n.credential,credentialType:"password",urls:"turn:"+n.url+":"+n.tcpport+"?transport=tcp"}),!0===n.forceturn&&(this.pcConfig.iceTransportPolicy="relay"))),new o.RTCPeerConnection(this.pcConfig)},e.prototype._ontrack=function(e){this.onaddstream&&this.onaddstream(e,"ontrack")},e.prototype._onaddstream=function(e){this.onaddstream&&this.onaddstream(e,"onaddstream")},e.prototype._oniceconnectionstatechange=function(e){"connected"===e.currentTarget.iceConnectionState&&(this.state=a.ESTABLISHED,this.connectedTime=Date.now()),this.oniceconnectionstatechange&&this.oniceconnectionstatechange(e.currentTarget.iceConnectionState)},e.prototype._onicecandidate=function(e){!this.candidate&&e&&(this.candidate=e.candidate,this.peerConnection.createOffer({offerToReceiveAudio:!0,offerToReceiveVideo:!0}).then(this.editLocalSDP.bind(this)).then(this.setLocalSDP.bind(this)).then(this.sendOffer.bind(this)).catch())},e.prototype.setLocalSDP=function(e){return this.peerConnection.setLocalDescription(new RTCSessionDescription({sdp:e.sdp,type:"offer"})),this.state=a.PREPARING_OFFER,e},e.prototype.editLocalSDP=function(e){return e.sdp=this.setBandWidth(e.sdp),e.sdp=this.reviseOpus(e.sdp),e.sdp=this.addCandidate(e.sdp),e},e.prototype.setSendRecv=function(e){return e=(e=(e=e.replace(/a=recvonly\r\n/g,"a=sendrecv\r\n")).replace(/a=sendonly\r\n/g,"a=sendrecv\r\n")).replace(/a=inactive\r\n/g,"a=sendrecv\r\n")},e.prototype.setBandWidth=function(e){var t,n,i=this.config,a=i.codec,o=i.minVideoBW,s=i.maxVideoBW,c=i.maxAudioBW,d=i.clientId;if((t=e.match(/m=video.*\r\n/))&&o&&s){n=t[0]+"b=AS:"+s+"\r\n";var u=0,l=0;"h264"===a?(u=e.search(/a=rtpmap:(\d+) H264\/90000\r\n/),l=e.search(/H264\/90000\r\n/)):"vp8"===a&&(u=e.search(/a=rtpmap:(\d+) VP8\/90000\r\n/),l=e.search(/VP8\/90000\r\n/)),-1!==u&&-1!==l&&l-u>10&&(n=n+"a=fmtp:"+e.slice(u+9,l-1)+" x-google-min-bitrate="+o+"\r\n"),e=e.replace(t[0],n),r.default.debug("["+d+"]Set Video Bitrate - min:"+o+" max:"+s)}return(t=e.match(/m=audio.*\r\n/))&&c&&(n=t[0]+"b=AS:"+c+"\r\n",e=e.replace(t[0],n)),e},e.prototype.reviseOpus=function(e){return e=(e=e.replace(/a=rtpmap:102 opus\/48000\/2/g,"a=rtpmap:111 opus/48000/2")).replace(/m=audio 9 UDP\/TLS\/RTP\/SAVPF 102 0 8 97 13 118 101/g,"m=audio 9 UDP/TLS/RTP/SAVPF 111 0 8 97 13 118 101")},e.prototype.addCandidate=function(e){return e+="a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"},e.prototype.sendOffer=function(e){this.config.callback(JSON.stringify({sdp:e.sdp,messageType:"OFFER",tiebreaker:Math.floor(429496723*Math.random()+1)})),this.state=a.OFFER_SENT},e}();t.default=s},function(e,t,n){var i=n(28),a=n(29),r=n(30);e.exports=function(e,t){return i(e)||a(e,t)||r()}},function(e,t,n){var i,a;a=this,void 0===(i=function(){return function(){"use strict";var e,t=this;function n(e){t.console&&(t.console.error?t.console.error(e):t.console.log&&t.console.log(e))}function i(e,t,i,a){var r=a||n,o=e.createShader(i);e.shaderSource(o,t),e.compileShader(o);var s=e.getShaderParameter(o,e.COMPILE_STATUS);if(!s){var c=e.getShaderInfoLog(o);return r("*** Error compiling shader '"+o+"':"+c),e.deleteShader(o),null}return o}function a(e,t,i,a,r){var o=r||n,s=e.createProgram();t.forEach(function(t){e.attachShader(s,t)}),i&&i.forEach(function(t,n){e.bindAttribLocation(s,a?a[n]:n,t)}),e.linkProgram(s);var c=e.getProgramParameter(s,e.LINK_STATUS);if(!c){var d=e.getProgramInfoLog(s);return o("Error in program linking:"+d),e.deleteProgram(s),null}return s}(e=e||t)===e.top&&(console.log("%c%s","color:blue;font-weight:bold;","for more about webgl-utils.js see:"),console.log("%c%s","color:blue;font-weight:bold;","http://webglfundamentals.org/webgl/lessons/webgl-boilerplate.html"));var r,o=["VERTEX_SHADER","FRAGMENT_SHADER"];return!document.documentMode&&window.StyleMedia&&(HTMLCanvasElement.prototype.getContext=(r=HTMLCanvasElement.prototype.getContext,function(){var e=arguments,t=e[0];return"webgl"===t&&((e=[].slice.call(arguments))[0]="experimental-webgl"),r.apply(this,e)})),{createProgram:a,createProgramFromSources:function(e,t,n,r,s){for(var c=[],d=0;d<t.length;++d)c.push(i(e,t[d],e[o[d]],s));return a(e,c,n,r,s)}}}.call(a)}.apply(t,[]))||(e.exports=i)},function(e,t,n){"use strict";var i=this&&this.__awaiter||function(e,t,n,i){return new(n||(n=Promise))(function(a,r){function o(e){try{c(i.next(e))}catch(e){r(e)}}function s(e){try{c(i.throw(e))}catch(e){r(e)}}function c(e){e.done?a(e.value):new n(function(t){t(e.value)}).then(o,s)}c((i=i.apply(e,t||[])).next())})},a=this&&this.__generator||function(e,t){var n,i,a,r,o={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return r={next:s(0),throw:s(1),return:s(2)},"function"==typeof Symbol&&(r[Symbol.iterator]=function(){return this}),r;function s(r){return function(s){return function(r){if(n)throw new TypeError("Generator is already executing.");for(;o;)try{if(n=1,i&&(a=2&r[0]?i.return:r[0]?i.throw||((a=i.return)&&a.call(i),0):i.next)&&!(a=a.call(i,r[1])).done)return a;switch(i=0,a&&(r=[2&r[0],a.value]),r[0]){case 0:case 1:a=r;break;case 4:return o.label++,{value:r[1],done:!1};case 5:o.label++,i=r[1],r=[0];continue;case 7:r=o.ops.pop(),o.trys.pop();continue;default:if(!(a=(a=o.trys).length>0&&a[a.length-1])&&(6===r[0]||2===r[0])){o=0;continue}if(3===r[0]&&(!a||r[1]>a[0]&&r[1]<a[3])){o.label=r[1];break}if(6===r[0]&&o.label<a[1]){o.label=a[1],a=r;break}if(a&&o.label<a[2]){o.label=a[2],o.ops.push(r);break}a[2]&&o.ops.pop(),o.trys.pop();continue}r=t.call(e,o)}catch(e){r=[6,e],i=0}finally{n=a=0}if(5&r[0])throw r[1];return{value:r[0]?r[1]:void 0,done:!0}}([r,s])}}},r=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}},o=this;Object.defineProperty(t,"__esModule",{value:!0});var s=n(31),c=n(5),d=r(n(0));t.getSupportedCodec=function(e){return i(o,void 0,void 0,function(){var t,n,i,r,o;return a(this,function(a){switch(a.label){case 0:return t={video:[],audio:[]},"undefined"!=typeof window?[3,1]:(d.default.error("getSupportedCodec: NOT_BROWSER_ENV"),[2,Promise.reject("NOT_BROWSER_ENV")]);case 1:try{n=s.createRTCPeerConnection({iceServers:[]})}catch(e){return d.default.error("Failed to init RTCPeerConnection",e),[2,Promise.reject(e)]}return n?[3,2]:(d.default.warning("getSupportedCodec: no RTCPeerConnection constructor is detected"),[2,Promise.resolve(t)]);case 2:return e&&e.stream?[3,7]:(i={mandatory:{OfferToReceiveAudio:!0,OfferToReceiveVideo:!0}},r=void 0,(c.isSafari()||c.isFireFox()||c.isWeChatBrowser())&&n.addTransceiver?(n.addTransceiver("audio"),n.addTransceiver("video"),[4,n.createOffer()]):[3,4]);case 3:return r=a.sent(),[3,6];case 4:return[4,new Promise(function(e,t){var a=setTimeout(function(){t("CREATEOFFER_TIMEOUT")},3e3);n.createOffer(function(t){clearTimeout(a),e(t)},function(e){clearTimeout(a),t(e)},i)})];case 5:r=a.sent(),a.label=6;case 6:return n.close(),o=r.sdp,[2,u(o)];case 7:return e.stream.getTracks&&n.addTrack?e.stream.getTracks().forEach(function(t){n.addTrack(t,e.stream)}):n.addStream(e.stream),r=void 0,c.isSafari()||c.isFireFox()?[4,n.createOffer()]:[3,9];case 8:return r=a.sent(),[3,11];case 9:return[4,new Promise(function(e,t){n.createOffer(e,t)})];case 10:r=a.sent(),a.label=11;case 11:return n.close(),o=r.sdp,[2,u(o)]}})})};var u=function(e){var t={video:[],audio:[]};return e.match(/ VP8/i)&&t.video.push("VP8"),e.match(/ H264/i)&&t.video.push("H264"),e.match(/ opus/i)&&t.audio.push("OPUS"),Promise.resolve(t)}},function(e,t,n){var i=n(33),a=n(34),r=n(35);e.exports=function(e){return i(e)||a(e)||r()}},function(e,t,n){"use strict";var i=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});var a=i(n(4)),r=i(n(0));t.default=function(e,t){void 0===t&&(t={width:160,height:120,framerate:15});var n=t.width,i=t.height,o=t.framerate;if(!e)throw a.default.INVALID_LOCAL_STREAM;if(!e.getVideoTracks()[0])throw a.default.HIGH_STREAM_NOT_VIDEO_TRACE;r.default.debug("Start getLowStream");var s=document.createElement("video"),c=document.createElement("canvas");s.setAttribute("style","display:none"),c.setAttribute("style","display:none"),c.setAttribute("width",n.toString()),c.setAttribute("height",i.toString()),document.body.append(s),document.body.append(c);var d=c.getContext("2d");s.srcObject=e,s.autoplay=!0,r.default.debug("Start render lowStream");var u=setInterval(function(){d.drawImage(s,0,0,n,i)},Math.floor(1e3/o)),l=c.captureStream(o);return l.clean=function(){r.default.debug("Start clean lowStream"),clearInterval(u),(s||s.parentNode||s.parentNode.removeChild)&&s.parentNode.removeChild(s),(c||c.parentNode||c.parentNode.removeChild)&&c.parentNode.removeChild(c),r.default.debug("Clean lowStream")},l}},function(e,t){var n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(n){var i=new Uint8Array(16);e.exports=function(){return n(i),i}}else{var a=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),a[t]=e>>>((3&t)<<3)&255;return a}}},function(e,t){for(var n=[],i=0;i<256;++i)n[i]=(i+256).toString(16).substr(1);e.exports=function(e,t){var i=t||0,a=n;return[a[e[i++]],a[e[i++]],a[e[i++]],a[e[i++]],"-",a[e[i++]],a[e[i++]],"-",a[e[i++]],a[e[i++]],"-",a[e[i++]],a[e[i++]],"-",a[e[i++]],a[e[i++]],a[e[i++]],a[e[i++]],a[e[i++]],a[e[i++]]].join("")}},function(e,t){e.exports=function(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}},function(e,t,n){var i=function(){return this||"object"==typeof self&&self}()||Function("return this")(),a=i.regeneratorRuntime&&Object.getOwnPropertyNames(i).indexOf("regeneratorRuntime")>=0,r=a&&i.regeneratorRuntime;if(i.regeneratorRuntime=void 0,e.exports=n(27),a)i.regeneratorRuntime=r;else try{delete i.regeneratorRuntime}catch(e){i.regeneratorRuntime=void 0}},function(e,t){!function(t){"use strict";var n,i=Object.prototype,a=i.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},o=r.iterator||"@@iterator",s=r.asyncIterator||"@@asyncIterator",c=r.toStringTag||"@@toStringTag",d="object"==typeof e,u=t.regeneratorRuntime;if(u)d&&(e.exports=u);else{(u=t.regeneratorRuntime=d?e.exports:{}).wrap=E;var l="suspendedStart",f="suspendedYield",p="executing",m="completed",g={},v={};v[o]=function(){return this};var S=Object.getPrototypeOf,h=S&&S(S(k([])));h&&h!==i&&a.call(h,o)&&(v=h);var _=b.prototype=T.prototype=Object.create(v);y.prototype=_.constructor=b,b.constructor=y,b[c]=y.displayName="GeneratorFunction",u.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===y||"GeneratorFunction"===(t.displayName||t.name))},u.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,b):(e.__proto__=b,c in e||(e[c]="GeneratorFunction")),e.prototype=Object.create(_),e},u.awrap=function(e){return{__await:e}},R(A.prototype),A.prototype[s]=function(){return this},u.AsyncIterator=A,u.async=function(e,t,n,i){var a=new A(E(e,t,n,i));return u.isGeneratorFunction(t)?a:a.next().then(function(e){return e.done?e.value:a.next()})},R(_),_[c]="Generator",_[o]=function(){return this},_.toString=function(){return"[object Generator]"},u.keys=function(e){var t=[];for(var n in e)t.push(n);return t.reverse(),function n(){for(;t.length;){var i=t.pop();if(i in e)return n.value=i,n.done=!1,n}return n.done=!0,n}},u.values=k,w.prototype={constructor:w,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=n,this.done=!1,this.delegate=null,this.method="next",this.arg=n,this.tryEntries.forEach(N),!e)for(var t in this)"t"===t.charAt(0)&&a.call(this,t)&&!isNaN(+t.slice(1))&&(this[t]=n)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var t=this;function i(i,a){return s.type="throw",s.arg=e,t.next=i,a&&(t.method="next",t.arg=n),!!a}for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r],s=o.completion;if("root"===o.tryLoc)return i("end");if(o.tryLoc<=this.prev){var c=a.call(o,"catchLoc"),d=a.call(o,"finallyLoc");if(c&&d){if(this.prev<o.catchLoc)return i(o.catchLoc,!0);if(this.prev<o.finallyLoc)return i(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return i(o.catchLoc,!0)}else{if(!d)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return i(o.finallyLoc)}}}},abrupt:function(e,t){for(var n=this.tryEntries.length-1;n>=0;--n){var i=this.tryEntries[n];if(i.tryLoc<=this.prev&&a.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var r=i;break}}r&&("break"===e||"continue"===e)&&r.tryLoc<=t&&t<=r.finallyLoc&&(r=null);var o=r?r.completion:{};return o.type=e,o.arg=t,r?(this.method="next",this.next=r.finallyLoc,g):this.complete(o)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.finallyLoc===e)return this.complete(n.completion,n.afterLoc),N(n),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var n=this.tryEntries[t];if(n.tryLoc===e){var i=n.completion;if("throw"===i.type){var a=i.arg;N(n)}return a}}throw new Error("illegal catch attempt")},delegateYield:function(e,t,i){return this.delegate={iterator:k(e),resultName:t,nextLoc:i},"next"===this.method&&(this.arg=n),g}}}function E(e,t,n,i){var a=t&&t.prototype instanceof T?t:T,r=Object.create(a.prototype),o=new w(i||[]);return r._invoke=function(e,t,n){var i=l;return function(a,r){if(i===p)throw new Error("Generator is already running");if(i===m){if("throw"===a)throw r;return D()}for(n.method=a,n.arg=r;;){var o=n.delegate;if(o){var s=O(o,n);if(s){if(s===g)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if(i===l)throw i=m,n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);i=p;var c=I(e,t,n);if("normal"===c.type){if(i=n.done?m:f,c.arg===g)continue;return{value:c.arg,done:n.done}}"throw"===c.type&&(i=m,n.method="throw",n.arg=c.arg)}}}(e,n,o),r}function I(e,t,n){try{return{type:"normal",arg:e.call(t,n)}}catch(e){return{type:"throw",arg:e}}}function T(){}function y(){}function b(){}function R(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function A(e){var t;this._invoke=function(n,i){function r(){return new Promise(function(t,r){!function t(n,i,r,o){var s=I(e[n],e,i);if("throw"!==s.type){var c=s.arg,d=c.value;return d&&"object"==typeof d&&a.call(d,"__await")?Promise.resolve(d.__await).then(function(e){t("next",e,r,o)},function(e){t("throw",e,r,o)}):Promise.resolve(d).then(function(e){c.value=e,r(c)},function(e){return t("throw",e,r,o)})}o(s.arg)}(n,i,t,r)})}return t=t?t.then(r,r):r()}}function O(e,t){var i=e.iterator[t.method];if(i===n){if(t.delegate=null,"throw"===t.method){if(e.iterator.return&&(t.method="return",t.arg=n,O(e,t),"throw"===t.method))return g;t.method="throw",t.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var a=I(i,e.iterator,t.arg);if("throw"===a.type)return t.method="throw",t.arg=a.arg,t.delegate=null,g;var r=a.arg;return r?r.done?(t[e.resultName]=r.value,t.next=e.nextLoc,"return"!==t.method&&(t.method="next",t.arg=n),t.delegate=null,g):r:(t.method="throw",t.arg=new TypeError("iterator result is not an object"),t.delegate=null,g)}function C(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function N(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function w(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(C,this),this.reset(!0)}function k(e){if(e){var t=e[o];if(t)return t.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var i=-1,r=function t(){for(;++i<e.length;)if(a.call(e,i))return t.value=e[i],t.done=!1,t;return t.value=n,t.done=!0,t};return r.next=r}}return{next:D}}function D(){return{value:n,done:!0}}}(function(){return this||"object"==typeof self&&self}()||Function("return this")())},function(e,t){e.exports=function(e){if(Array.isArray(e))return e}},function(e,t){e.exports=function(e,t){var n=[],i=!0,a=!1,r=void 0;try{for(var o,s=e[Symbol.iterator]();!(i=(o=s.next()).done)&&(n.push(o.value),!t||n.length!==t);i=!0);}catch(e){a=!0,r=e}finally{try{i||null==s.return||s.return()}finally{if(a)throw r}}return n}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var i="object"==typeof window&&window.RTCPeerConnection,a="object"==typeof window&&window.webkitRTCPeerConnection,r="object"==typeof window&&window.mozRTCPeerConnection;t.createRTCPeerConnection=function(e){var t=i||a||r;return t?new t(e):null}},function(e,t,n){var i;
/*!
 * EventEmitter v5.2.8 - git.io/ee
 * Unlicense - http://unlicense.org/
 * Oliver Caldwell - https://oli.me.uk/
 * @preserve
 */!function(t){"use strict";function a(){}var r=a.prototype,o=t.EventEmitter;function s(e,t){for(var n=e.length;n--;)if(e[n].listener===t)return n;return-1}function c(e){return function(){return this[e].apply(this,arguments)}}r.getListeners=function(e){var t,n,i=this._getEvents();if(e instanceof RegExp)for(n in t={},i)i.hasOwnProperty(n)&&e.test(n)&&(t[n]=i[n]);else t=i[e]||(i[e]=[]);return t},r.flattenListeners=function(e){var t,n=[];for(t=0;t<e.length;t+=1)n.push(e[t].listener);return n},r.getListenersAsObject=function(e){var t,n=this.getListeners(e);return n instanceof Array&&((t={})[e]=n),t||n},r.addListener=function(e,t){if(!function e(t){return"function"==typeof t||t instanceof RegExp||!(!t||"object"!=typeof t)&&e(t.listener)}(t))throw new TypeError("listener must be a function");var n,i=this.getListenersAsObject(e),a="object"==typeof t;for(n in i)i.hasOwnProperty(n)&&-1===s(i[n],t)&&i[n].push(a?t:{listener:t,once:!1});return this},r.on=c("addListener"),r.addOnceListener=function(e,t){return this.addListener(e,{listener:t,once:!0})},r.once=c("addOnceListener"),r.defineEvent=function(e){return this.getListeners(e),this},r.defineEvents=function(e){for(var t=0;t<e.length;t+=1)this.defineEvent(e[t]);return this},r.removeListener=function(e,t){var n,i,a=this.getListenersAsObject(e);for(i in a)a.hasOwnProperty(i)&&-1!==(n=s(a[i],t))&&a[i].splice(n,1);return this},r.off=c("removeListener"),r.addListeners=function(e,t){return this.manipulateListeners(!1,e,t)},r.removeListeners=function(e,t){return this.manipulateListeners(!0,e,t)},r.manipulateListeners=function(e,t,n){var i,a,r=e?this.removeListener:this.addListener,o=e?this.removeListeners:this.addListeners;if("object"!=typeof t||t instanceof RegExp)for(i=n.length;i--;)r.call(this,t,n[i]);else for(i in t)t.hasOwnProperty(i)&&(a=t[i])&&("function"==typeof a?r.call(this,i,a):o.call(this,i,a));return this},r.removeEvent=function(e){var t,n=typeof e,i=this._getEvents();if("string"===n)delete i[e];else if(e instanceof RegExp)for(t in i)i.hasOwnProperty(t)&&e.test(t)&&delete i[t];else delete this._events;return this},r.removeAllListeners=c("removeEvent"),r.emitEvent=function(e,t){var n,i,a,r,o=this.getListenersAsObject(e);for(r in o)if(o.hasOwnProperty(r))for(n=o[r].slice(0),a=0;a<n.length;a++)!0===(i=n[a]).once&&this.removeListener(e,i.listener),i.listener.apply(this,t||[])===this._getOnceReturnValue()&&this.removeListener(e,i.listener);return this},r.trigger=c("emitEvent"),r.emit=function(e){var t=Array.prototype.slice.call(arguments,1);return this.emitEvent(e,t)},r.setOnceReturnValue=function(e){return this._onceReturnValue=e,this},r._getOnceReturnValue=function(){return!this.hasOwnProperty("_onceReturnValue")||this._onceReturnValue},r._getEvents=function(){return this._events||(this._events={})},a.noConflict=function(){return t.EventEmitter=o,a},void 0===(i=function(){return a}.call(t,n,t,e))||(e.exports=i)}("undefined"!=typeof window?window:this||{})},function(e,t){e.exports=function(e){if(Array.isArray(e)){for(var t=0,n=new Array(e.length);t<e.length;t++)n[t]=e[t];return n}}},function(e,t){e.exports=function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}},function(e,t){e.exports=function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}},function(t,n,a){"use strict";a.r(n);var r=a(3),o=a(0),s=a(2),c=function(){var e={dispatcher:{}};return e.dispatcher.eventListeners={},e.addEventListener=function(t,n){void 0===e.dispatcher.eventListeners[t]&&(e.dispatcher.eventListeners[t]=[]),e.dispatcher.eventListeners[t].push(n)},e.hasListeners=function(t){return!(!e.dispatcher.eventListeners[t]||!e.dispatcher.eventListeners[t].length)},e.on=e.addEventListener,e.removeEventListener=function(t,n){var i;e.dispatcher.eventListeners[t]&&-1!==(i=e.dispatcher.eventListeners[t].indexOf(n))&&e.dispatcher.eventListeners[t].splice(i,1)},e.dispatchEvent=function(t,n){var i;for(i in e.dispatcher.eventListeners[t.type])e.dispatcher.eventListeners[t.type]&&e.dispatcher.eventListeners[t.type].hasOwnProperty(i)&&"function"==typeof e.dispatcher.eventListeners[t.type][i]&&(n?e.dispatcher.eventListeners[t.type][i](t):Promise.resolve(t).then(e.dispatcher.eventListeners[t.type][i]))},e.dispatchSocketEvent=function(t){var n;for(n in e.dispatcher.eventListeners[t.type])e.dispatcher.eventListeners[t.type]&&e.dispatcher.eventListeners[t.type].hasOwnProperty(n)&&"function"==typeof e.dispatcher.eventListeners[t.type][n]&&e.dispatcher.eventListeners[t.type][n](t.msg)},e},d=function(e){var t={};return t.type=e.type,t},u=function(e){var t=d(e);return t.stream=e.stream,t.reason=e.reason,t.msg=e.msg,t},l=function(e){var t=d(e);return t.uid=e.uid,t.attr=e.attr,t.stream=e.stream,t},f=function(e){var t=d(e);return t.msg=e.msg,t},p=function(e){var t=d(e);return t.url=e.url,t.uid=e.uid,t.status=e.status,t.reason=e.reason,t},m=a(5),g=function(){};g.prototype.set=function(e,t){["BatteryLevel"].indexOf(e)>-1&&(this[e]=t)};var v=new function(){var e=c();return e.states={UNINIT:"UNINIT",INITING:"INITING",INITED:"INITED"},e.state=e.states.UNINIT,e.batteryManager=null,e._init=function(t,n){e.state=e.states.INITING,navigator.getBattery?navigator.getBattery().then(function(n){e.batteryManager=n,t&&setTimeout(function(){t()},0)}).catch(function(e){o.default.debug("navigator.getBattery is disabled",e),t&&t()}):(e.state=e.states.INITED,t&&t())},e._getBatteryStats=function(){var t={};return e.batteryManager&&e.batteryManager.level?t.BatteryLevel=Math.floor(100*e.batteryManager.level):t.BatteryLevel="UNSUPPORTED",t},e.getStats=function(t,n){var i=new g,a=e._getBatteryStats();a&&a.BatteryLevel&&i.set("BatteryLevel",a.BatteryLevel),t&&t(i)},e._init(),e},S=a(6),h=a.n(S),_=function(e){var t=c(e);return t.url=".",t},E=a(13),I=a(4),T=0,y=function(e){var t=_({});t.id=e.id,t.playerId=T++,t.fit=e.options&&e.options.fit,"contain"!==t.fit&&"cover"!==t.fit&&(t.fit=null),t.url=e.url,t.stream=e.stream.stream,t.elementID=e.elementID,t.setAudioOutput=function(e,n,i){var a=t.video||t.audio;return a?a.setSinkId?void a.setSinkId(e).then(function(){return o.default.debug("["+t.id+"] "+"video ".concat(t.id," setAudioOutput ").concat(e," SUCCESS")),a==t.video&&t.audio?t.audio.setSinkId(e):Promise.resolve()}).then(function(){return o.default.debug("["+t.id+"] "+"audio ".concat(t.id," setAudioOutput ").concat(e," SUCCESS")),n&&n()}).catch(function(e){return o.default.error("["+t.id+"] VideoPlayer.setAudioOutput",e),i&&i(e)}):(o.default.error("["+t.id+"] ",I.default.WEB_API_NOT_SUPPORTED),i&&i(I.default.WEB_API_NOT_SUPPORTED)):(o.default.error("["+t.id+"] ",I.default.PLAYER_NOT_FOUND),i&&i(I.default.PLAYER_NOT_FOUND))},t.destroy=function(){o.default.debug("[".concat(t.id,"] destroy ").concat(e.stream.local?"local":"remote"," Player ").concat(t.id)),Object(E.setSrcObject)(t.video,null),Object(E.setSrcObject)(t.audio,null),t.video.pause(),delete t.resizer,clearInterval(t.mediaPlayerTimer),t.mediaPlayerTimer=null,document.getElementById(t.div.id)&&t.parentNode.contains(t.div)&&t.parentNode.removeChild(t.div),["video","audio"].forEach(function(n){t[n];var i=a[n];clearTimeout(i.playDeferTimeout),i.formerMediaState=null;var r={playerId:t.playerId,stateId:i.stateId+1,playDeferTimeout:null,error:!1,status:"aborted",reason:"stop",updatedAt:Date.now()};a[n]=r;var c={type:"player-status-change",playerId:t.playerId,mediaType:n,status:r.status,reason:r.reason,isErrorState:!1,streamId:t.id};o.default.debug("[".concat(t.id,"] Media Player Status Change Triggered by destroy()"),c),e.stream.dispatchEvent(c),s.b.reportApiInvoke(e.stream.sid,{name:"Stream.playerStatusChange",options:c,tag:"tracer"})()})},t.div=document.createElement("div"),t.div.setAttribute("id","player_"+t.id),e.stream.video?t.div.setAttribute("style","width: 100%; height: 100%; position: relative; background-color: black; overflow: hidden;"):t.div.setAttribute("style","width: 100%; height: 100%; position: relative; overflow: hidden;"),t.video=document.createElement("video"),t.video.setAttribute("id","video"+t.id),e.stream.local&&!e.stream.screen?e.stream.mirror?t.video.setAttribute("style","width: 100%; height: 100%; position: absolute; transform: rotateY(180deg); object-fit: ".concat(t.fit||"cover",";")):t.video.setAttribute("style","width: 100%; height: 100%; position: absolute; object-fit: ".concat(t.fit||"cover",";")):e.stream.video?t.video.setAttribute("style","width: 100%; height: 100%; position: absolute; object-fit: ".concat(t.fit||"cover",";")):e.stream.screen?t.video.setAttribute("style","width: 100%; height: 100%; position: absolute; object-fit: ".concat(t.fit||"contain")):t.video.setAttribute("style","width: 100%; height: 100%; position: absolute; display: none; object-fit: ".concat(t.fit||"cover"));var n={autoplay:!0,muted:!!e.stream.local||!(!m.isSafari()&&"iOS"!==m.getBrowserOS())&&"video_element_muted",playsinline:!0,controls:!(!m.isSafari()&&"iOS"!==m.getBrowserOS()||e.stream.local),volume:null},i=h()({},n,e.options);!0!==i.muted||i.volume||(i.volume=0),i.autoplay&&t.video.setAttribute("autoplay",""),!0!==i.muted&&"video_element_muted"!==i.muted||(t.video.setAttribute("muted",""),t.video.muted=!0),i.playsinline&&t.video.setAttribute("playsinline",""),i.controls&&t.video.setAttribute("controls",""),Number.isFinite(i.volume)&&(t.video.volume=i.volume),t.audio=document.createElement("audio"),t.audio.setAttribute("id","audio"+t.id),i.autoplay&&t.audio.setAttribute("autoplay",""),!0===i.muted&&t.audio.setAttribute("muted",""),!0===i.muted&&(t.audio.muted=!0),i.playsinline&&t.audio.setAttribute("playsinline",""),Number.isFinite(i.volume)&&(t.audio.volume=i.volume),void 0!==t.elementID?(document.getElementById(t.elementID).appendChild(t.div),t.container=document.getElementById(t.elementID)):(document.body.appendChild(t.div),t.container=document.body),t.parentNode=t.div.parentNode;var a={video:{playerId:t.playerId,stateId:0,playDeferTimeout:null,error:!1,status:"init",reason:null,updatedAt:Date.now()},audio:{playerId:t.playerId,stateId:0,playDeferTimeout:null,error:!1,status:"init",reason:null,updatedAt:Date.now()}};t.mediaElemExists=function(e){for(var t=e,n=0;n<Object(r.getParameter)("MEDIA_ELEMENT_EXISTS_DEPTH")&&t;n++)t=t.parentNode;return!!t};var c=function(e){return t.mediaElemExists(e)?e.paused?"paused":"play":"aborted"},d=function(e,t,n){var i=c(e),a=!0;return"paused"===i?("audio"===t&&!0===n.muted&&(a=!1),n.autoplay||(a=!1)):"play"===i?"video"===t?a=!1:!0===n.muted?e.muted&&(a=!1):e.muted||(a=!1):"aborted"===i&&(a=!1),a},u=function(n){var u,l=this;if(l===t.video?u="video":l===t.audio&&(u="audio"),u){n.type||o.default.error("[".concat(t.id,"] Unexpected evt"),n);var f=c(l);clearTimeout(a[u].playDeferTimeout),a[u].playDeferTimeout=setTimeout(function(){a[u].playDeferTimeout=null;var r=a[u],p=c(l);if(f===p){var m={playerId:t.playerId,stateId:r.stateId+1,playDeferTimeout:null,error:d(l,u,i),status:c(l),reason:n.type,updatedAt:Date.now()};if(r.status!==m.status){a[u]=m;var g={type:"player-status-change",playerId:t.playerId,mediaType:u,status:m.status,reason:m.reason,isErrorState:m.error,streamId:t.id};o.default.debug("[".concat(t.id,"] Media Player Status Change"),g),e.stream.dispatchEvent(g),s.b.reportApiInvoke(e.stream.sid,{name:"Stream.playerStatusChange",options:g,tag:"tracer"})()}}else o.default.debug("[".concat(t.id,"] Status Change after event Triggered.")+"Stream ".concat(t.id," PlayerId ").concat(t.playerId," mediaType ").concat(u," Status ").concat(f,"=>").concat(p))},Object(r.getParameter)("PLAYER_STATE_DEFER"))}else o.default.error("[".concat(t.id,"] Unknown media element"),l)};if(t.mediaPlayerTimer=setInterval(function(){["video","audio"].forEach(function(n){var r=t[n],u=a[n];if(!u.playDeferTimeout){var l={playerId:t.playerId,stateId:u.stateId+1,playDeferTimeout:null,error:d(r,n,i),status:c(r),reason:"timer",updatedAt:Date.now()};if(u.status!==l.status){o.default.debug("[".concat(t.id,"] Player ").concat(t.playerId," ").concat(n," Status Changed Detected by Timer: ").concat(u.status,"=>").concat(l.status)),a[n]=l;var f={type:"player-status-change",playerId:t.playerId,mediaType:n,status:l.status,reason:l.reason,isErrorState:l.error,streamId:t.id};o.default.debug("[".concat(t.id,"] Media Player Status Change"),f),e.stream.dispatchEvent(f),s.b.reportApiInvoke(e.stream.sid,{name:"Stream.playerStatusChange",options:f,tag:"tracer"})()}}})},Object(r.getParameter)("PLAYER_STATE_DEFER")),t.video.addEventListener("playing",function(e){!function e(){t.video.videoWidth*t.video.videoHeight>4?o.default.debug("["+t.id+"] video dimensions:",t.video.videoWidth,t.video.videoHeight):setTimeout(e,50)}()}),t.video.addEventListener("playing",u),t.video.addEventListener("canplay",u),t.video.addEventListener("abort",u),t.video.addEventListener("onerror",u),t.video.addEventListener("suspend",u),t.video.addEventListener("stalled",u),t.video.addEventListener("pause",u),t.audio.addEventListener("playing",u),t.audio.addEventListener("canplay",u),t.audio.addEventListener("abort",u),t.audio.addEventListener("onerror",u),t.audio.addEventListener("suspend",u),t.audio.addEventListener("stalled",u),t.audio.addEventListener("pause",u),e.stream.hasVideo()||e.stream.hasScreen())t.div.appendChild(t.video),t.div.appendChild(t.audio),m.isEdge()?t.video.srcObject=e.stream.stream:(Object(E.attachMediaStream)(t.video,e.stream.stream),Object(E.attachMediaStream)(t.audio,e.stream.stream));else if(!1!==i.muted&&"video_element_muted"!==i.muted||(t.video.removeAttribute("muted"),t.video.muted=!1),t.div.appendChild(t.video),window.MediaStream&&(m.isSafari()||"iOS"===m.getBrowserOS())){var l=new MediaStream(e.stream.stream.getAudioTracks());Object(E.setSrcObject)(t.video,l)}else Object(E.setSrcObject)(t.video,e.stream.stream);return t.setAudioVolume=function(e){var n=parseInt(e)/100;isFinite(n)&&(n<0?n=0:n>1&&(n=1),t.video&&(t.video.volume=n),t.audio&&(t.audio.volume=n))},t},b=function(e){var t={},n=E.RTCPeerConnection;t.uid=e.uid,t.isVideoMute=e.isVideoMute,t.isAudioMute=e.isAudioMute,t.isSubscriber=e.isSubscriber,t.clientId=e.clientId,t.filterStatsCache=[],t.originStatsCache=[],t.lastTimeGetStats=null,t.pc_config={iceServers:[{url:"stun:webcs.agora.io:3478"}]};var i={id:"outbound_audio_ssrc_send",type:"ssrc",mediaType:"",googCodecName:"opus",aecDivergentFilterFraction:"0",audioInputLevel:"0",bytesSent:"0",packetsSent:"0",googEchoCancellationReturnLoss:"0",googEchoCancellationReturnLossEnhancement:"0"},a={id:"outbound_video_ssrc_send",type:"ssrc",mediaType:"",googCodecName:"h264"===e.codec?"H264":"VP8",bytesSent:"0",packetsLost:"0",packetsSent:"0",googAdaptationChanges:"0",googAvgEncodeMs:"0",googEncodeUsagePercent:"0",googFirsReceived:"0",googFrameHeightSent:"0",googFrameHeightInput:"0",googFrameRateInput:"0",googFrameRateSent:"0",googFrameWidthSent:"0",googFrameWidthInput:"0",googNacksReceived:"0",googPlisReceived:"0",googRtt:"0"},s={id:"inbound_audio_ssrc_recv",type:"ssrc",mediaType:"",googCodecName:"opus",audioOutputLevel:"0",bytesReceived:"0",packetsLost:"0",packetsReceived:"0",googAccelerateRate:"0",googCurrentDelayMs:"0",googDecodingCNG:"0",googDecodingCTN:"0",googDecodingCTSG:"0",googDecodingNormal:"0",googDecodingPLC:"0",googDecodingPLCCNG:"0",googExpandRate:"0",googJitterBufferMs:"0",googJitterReceived:"0",googPreemptiveExpandRate:"0",googPreferredJitterBufferMs:"0",googSecondaryDecodedRate:"0",googSpeechExpandRate:"0"},c={id:"inbound_video_ssrc_recv",type:"ssrc",mediaType:"",googTargetDelayMs:"0",packetsLost:"0",googDecodeMs:"0",googMaxDecodeMs:"0",googRenderDelayMs:"0",googFrameWidthReceived:"0",googFrameHeightReceived:"0",googFrameRateReceived:"0",googFrameRateDecoded:"0",googFrameRateOutput:"0",googJitterBufferMs:"0",googCurrentDelayMs:"0",googMinPlayoutDelayMs:"0",googNacksSent:"0",googPlisSent:"0",googFirsSent:"0",bytesReceived:"0",packetsReceived:"0",googFramesReceived:"0",googFramesDecoded:"0"},d={id:"bweforvideo",type:"VideoBwe",googAvailableSendBandwidth:"0",googAvailableReceiveBandwidth:"0",googActualEncBitrate:"0",googRetransmitBitrate:"0",googTargetEncBitrate:"0",googBucketDelay:"0",googTransmitBitrate:"0"};t.con={optional:[{DtlsSrtpKeyAgreement:!0}]},e.iceServers instanceof Array?t.pc_config.iceServers=e.iceServers:(e.stunServerUrl&&(e.stunServerUrl instanceof Array?e.stunServerUrl.map(function(e){"string"==typeof e&&""!==e&&t.pc_config.iceServers.push({url:e})}):"string"==typeof e.stunServerUrl&&""!==e.stunServerUrl&&t.pc_config.iceServers.push({url:e.stunServerUrl})),e.turnServer&&(e.turnServer instanceof Array?e.turnServer.map(function(e){"string"==typeof e.url&&""!==e.url&&t.pc_config.iceServers.push({username:e.username,credential:e.credential,url:e.url})}):"auto"!==e.turnServer.mode&&"manual"!==e.turnServer.mode||(e.turnServer.udpport&&t.pc_config.iceServers.push({username:e.turnServer.username,credential:e.turnServer.credential,credentialType:"password",urls:"turn:"+e.turnServer.url+":"+e.turnServer.udpport+"?transport=udp"}),"string"==typeof e.turnServer.tcpport&&""!==e.turnServer.tcpport&&t.pc_config.iceServers.push({username:e.turnServer.username,credential:e.turnServer.credential,credentialType:"password",urls:"turn:"+e.turnServer.url+":"+e.turnServer.tcpport+"?transport=tcp"}),!0===e.turnServer.forceturn&&(t.pc_config.iceTransportPolicy="relay")))),void 0===e.audio&&(e.audio=!0),void 0===e.video&&(e.video=!0),t.mediaConstraints={mandatory:{OfferToReceiveVideo:e.video,OfferToReceiveAudio:e.audio}},t.roapSessionId=103;try{t.pc_config.sdpSemantics="plan-b",t.peerConnection=new n(t.pc_config,t.con)}catch(e){delete t.pc_config.sdpSemantics,t.peerConnection=new n(t.pc_config,t.con)}t.iceCandidateTimer=setTimeout(function(){t.iceCandidateTimer=null,o.default.debug("[".concat(t.clientId,"]Candidates collected: ").concat(t.iceCandidateCount)),t.moreIceComing&&(t.moreIceComing=!1,t.markActionNeeded())},Object(r.getParameter)("CANDIDATE_TIMEOUT")),t.peerConnection.onicecandidate=function(e){var n,i,a,r;i=(n=t.peerConnection.localDescription.sdp).match(/a=candidate:.+typ\ssrflx.+\r\n/),a=n.match(/a=candidate:.+typ\shost.+\r\n/),r=n.match(/a=candidate:.+typ\srelay.+\r\n/),null===i&&null===a&&null===r||void 0!==t.ice||!t.iceCandidateTimer||(o.default.debug("["+t.clientId+"]srflx candidate : "+i+" relay candidate: "+r+" host candidate : "+a),clearTimeout(t.iceCandidateTimer),t.iceCandidateTimer=null,t.ice=0,t.moreIceComing=!1,t.markActionNeeded()),t.iceCandidateCount=t.iceCandidateCount+1},o.default.debug("["+t.clientId+']Created webkitRTCPeerConnnection with config "'+JSON.stringify(t.pc_config)+'".');var u=function(t){return e.screen&&(t=t.replace("a=x-google-flag:conference\r\n","")),t},l=function(n){var i,a;if((i=n.match(/m=video.*\r\n/))&&e.minVideoBW&&e.maxVideoBW){a=i[0]+"b=AS:"+e.maxVideoBW+"\r\n";var r=0,s=0;"h264"===e.codec?(r=n.search(/a=rtpmap:(\d+) H264\/90000\r\n/),s=n.search(/H264\/90000\r\n/)):"vp8"===e.codec&&(r=n.search(/a=rtpmap:(\d+) VP8\/90000\r\n/),s=n.search(/VP8\/90000\r\n/)),-1!==r&&-1!==s&&s-r>10&&(a=a+"a=fmtp:"+n.slice(r+9,s-1)+" x-google-min-bitrate="+e.minVideoBW+"\r\n"),n=n.replace(i[0],a),o.default.debug("["+t.clientId+"]Set Video Bitrate - min:"+e.minVideoBW+" max:"+e.maxVideoBW)}return(i=n.match(/m=audio.*\r\n/))&&e.maxAudioBW&&(a=i[0]+"b=AS:"+e.maxAudioBW+"\r\n",n=n.replace(i[0],a)),n};t.processSignalingMessage=function(e){var n,i=JSON.parse(e);t.incomingMessage=i,"new"===t.state?"OFFER"===i.messageType?(n={sdp:i.sdp,type:"offer"},t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)).catch(function(e){}),t.state="offer-received",t.markActionNeeded()):t.error("Illegal message for this state: "+i.messageType+" in state "+t.state):"offer-sent"===t.state?"ANSWER"===i.messageType?((n={sdp:i.sdp,type:"answer"}).sdp=u(n.sdp),n.sdp=l(n.sdp),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)).catch(function(e){}),t.state="established"):"pr-answer"===i.messageType?(n={sdp:i.sdp,type:"pr-answer"},t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)).catch(function(e){})):"offer"===i.messageType?t.error("Not written yet"):t.error("Illegal message for this state: "+i.messageType+" in state "+t.state):"established"===t.state&&("OFFER"===i.messageType?(n={sdp:i.sdp,type:"offer"},t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)).catch(function(e){}),t.state="offer-received",t.markActionNeeded()):"ANSWER"===i.messageType?((n={sdp:i.sdp,type:"answer"}).sdp=u(n.sdp),n.sdp=l(n.sdp),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)).catch(function(e){})):t.error("Illegal message for this state: "+i.messageType+" in state "+t.state))};var f=0,p=0;return t.getVideoRelatedStats=function(e){t.getStats(function(n){n.forEach(function(n){if(t.isSubscriber){if("video"===n.mediaType&&n.id&&~n.id.indexOf("recv")){if(m.isChromeKernel()&&+m.getBrowserVersion()>=76){var i=+n.googFramesReceived-f,a=+n.googFramesDecoded-p;t._setStat(c,"googFrameRateReceived",i),t._setStat(c,"googFrameRateDecoded",a),t._setStat(c,"googFrameRateOutput",a),f=+n.googFramesReceived,p=+n.googFramesDecoded}e&&e({mediaType:"video",peerId:t.uid,isVideoMute:t.isVideoMute,frameRateReceived:n.googFrameRateReceived,frameRateDecoded:n.googFrameRateDecoded,bytesReceived:n.bytesReceived,packetsReceived:n.packetsReceived,packetsLost:n.packetsLost})}}else"video"===n.mediaType&&n.id&&~n.id.indexOf("send")&&e&&e({mediaType:"video",isVideoMute:t.isVideoMute,frameRateInput:n.googFrameRateInput,frameRateSent:n.googFrameRateSent,googRtt:n.googRtt})})})},t.getAudioRelatedStats=function(e){t.getStats(function(n){n.forEach(function(n){t.isSubscriber&&"audio"===n.mediaType&&n.id&&~n.id.indexOf("recv")&&e&&e({mediaType:"audio",peerId:t.uid,isAudioMute:t.isAudioMute,frameDropped:parseInt(n.googDecodingPLC)+parseInt(n.googDecodingPLCCNG)+"",frameReceived:n.googDecodingCTN,googJitterReceived:n.googJitterReceived,bytesReceived:n.bytesReceived,packetsReceived:n.packetsReceived,packetsLost:n.packetsLost})})})},t.getStatsRate=function(e){t.getStats(function(t){e(t)})},t.getStats=function(e,n){n=(n=n||500)>500?500:n,t.lastTimeGetStats&&Date.now()-t.lastTimeGetStats<n?e&&e(t.filterStatsCache,t.originStatsCache):(t.lastTimeGetStats=Date.now(),this._getStats(function(n,i){t.filterStatsCache=n,t.originStatsCache=i,e&&e(n,i)}))},t._setStat=function(e,t,n){e.hasOwnProperty(t)&&(null!=n&&n!==1/0&&n==n||(n=0),e[t]=n+"")},t._processGetStatsAfterChrome76=function(e){var n=this;t.lastStats||(t.lastStats=new Map),t.peerConnection.getStats().then(function(r){var o=[],u=[],l=new Map,f=new Date,p=!0,m=!1,g=void 0;try{for(var v,S=r.values()[Symbol.iterator]();!(p=(v=S.next()).done);p=!0){var _=v.value;"codec"!=_.type?"candidate-pair"!=_.type?("inbound-rtp"===_.type&&"video"===_.mediaType&&l.set("inbound-video",_),"inbound-rtp"===_.type&&"audio"===_.mediaType&&l.set("inbound-audio",_),"outbound-rtp"===_.type&&"audio"===_.mediaType&&l.set("outbound-audio",_),"outbound-rtp"===_.type&&"video"===_.mediaType&&l.set("outbound-video",_),"track"===_.type&&"video"===_.kind&&_.remoteSource&&l.set("remote-video-track",_),"track"===_.type&&"audio"===_.kind&&_.remoteSource&&l.set("remote-audio-track",_),"remote-inbound-rtp"===_.type&&"video"===_.mediaType&&l.set("remote-inbound-video",_),"remote-inbound-rtp"===_.type&&"audio"===_.mediaType&&l.set("remote-inbound-audio",_),"track"!==_.type||"video"!==_.kind||_.remoteSource||l.set("local-video-track",_),"track"!==_.type||"audio"!==_.kind||_.remoteSource||l.set("local-audio-track",_),"media-source"===_.type&&"video"===_.kind&&l.set("media-source-video",_),"media-source"===_.type&&"audio"===_.kind&&l.set("media-source-audio",_)):u.push(_):o.push(_)}}catch(e){m=!0,g=e}finally{try{p||null==S.return||S.return()}finally{if(m)throw g}}l.set("codec",o),l.set("candidatePairs",u),l.set("timestamp",+f);var E=null,I=null;if(c.timestamp=f,s.timestamp=f,i.timestamp=f,i.timestamp=f,d.timestamp=f,n.isSubscriber)(E=l.get("inbound-video"))&&(t._setStat(c,"id","inbound_video_ssrc_recv"),t._setStat(c,"mediaType",E.mediaType),t._setStat(c,"packetsLost",E.packetsLost),t._setStat(c,"googDecodeMs",null),t._setStat(c,"googMaxDecodeMs",null),t._setStat(c,"googRenderDelayMs",null),t._setStat(c,"googMinPlayoutDelayMs",null),t._setStat(c,"googNacksSent",E.nackCount),t._setStat(c,"googPlisSent",E.pliCount),t._setStat(c,"googFirsSent",E.firCount),t._setStat(c,"bytesReceived",E.bytesReceived),t._setStat(c,"packetsReceived",E.packetsReceived)),(E=l.get("inbound-audio"))&&(t._setStat(s,"id","inbound_audio_ssrc_recv"),t._setStat(s,"mediaType",E.mediaType),t._setStat(s,"bytesReceived",E.bytesReceived),t._setStat(s,"packetsLost",E.packetsLost),t._setStat(s,"packetsReceived",E.packetsReceived),t._setStat(s,"googAccelerateRate",E.removedSamplesForAcceleration),t._setStat(s,"googCurrentDelayMs",E.jitterBufferDelay),t._setStat(s,"googDecodingCNG",null),t._setStat(s,"googDecodingCTN",null),t._setStat(s,"googDecodingCTSG",null),t._setStat(s,"googDecodingNormal",null),t._setStat(s,"googDecodingPLC",null),t._setStat(s,"googDecodingPLCCNG",null),t._setStat(s,"googJitterReceived",E.jitter),t._setStat(s,"googPreferredJitterBufferMs",null),t._setStat(s,"googSecondaryDecodedRate",null)),(E=l.get("remote-video-track"))&&(t._setStat(c,"googTargetDelayMs",E.jitterBufferDelay),t._setStat(c,"googFrameWidthReceived",E.frameWidth),t._setStat(c,"googFrameHeightReceived",E.frameHeight),t._setStat(c,"googJitterBufferMs",E.jitterBufferDelay/E.jitterBufferEmittedCount*1e3),t._setStat(c,"googCurrentDelayMs",E.jitterBufferDelay),t._setStat(c,"googFramesDecoded",E.framesDecoded),t._setStat(c,"googFramesReceived",E.framesReceived)),(E=l.get("remote-audio-track"))&&(t._setStat(s,"audioOutputLevel",32767*E.audioLevel),t._setStat(s,"googJitterBufferMs",E.jitterBufferDelay/E.jitterBufferEmittedCount*1e3),t._setStat(s,"googExpandRate",E.concealedSamples),t._setStat(s,"googPreemptiveExpandRate",E.insertedSamplesForDeceleration),t._setStat(s,"googSpeechExpandRate",E.silentConcealedSamples));else{var T=t.lastStats.get("timestamp"),y=t.lastStats.get("outbound-video");if((E=l.get("outbound-audio"))&&(t._setStat(i,"id","outbound_audio_ssrc_send"),t._setStat(i,"mediaType",E.mediaType),t._setStat(i,"aecDivergentFilterFraction",null),t._setStat(i,"bytesSent",E.bytesSent),t._setStat(i,"packetsSent",E.packetsSent),I=E.transportId),E=l.get("outbound-video")){if(t._setStat(a,"id","outbound_video_ssrc_send"),t._setStat(a,"mediaType",E.mediaType),t._setStat(a,"bytesSent",E.bytesSent),t._setStat(a,"packetsSent",E.packetsSent),t._setStat(a,"googAdaptationChanges",E.qualityLimitationDurations),t._setStat(a,"googAvgEncodeMs",null),t._setStat(a,"googEncodeUsagePercent",null),I=E.transportId,E.totalEncodedBytesTarget&&y&&y.totalEncodedBytesTarget){var b=(E.totalEncodedBytesTarget-y.totalEncodedBytesTarget)/(+new Date-T);t._setStat(d,"googTargetEncBitrate",Math.floor(8*b*1e3))}if(E.retransmittedBytesSent&&y&&y.retransmittedBytesSent){var R=(E.retransmittedBytesSent-y.retransmittedBytesSent)/(+new Date-T);t._setStat(d,"googRetransmitBitrate",Math.floor(8*R*1e3))}if(E.bytesSent&&y&&y.bytesSent){var A=(E.bytesSent-y.bytesSent)/(+new Date-T);t._setStat(d,"googTransmitBitrate",Math.floor(8*A*1e3)),t._setStat(d,"googActualEncBitrate",Math.floor(8*A*1e3))}if(E.totalPacketSendDelay&&y&&y.totalPacketSendDelay){var O=(E.totalPacketSendDelay-y.totalPacketSendDelay)/(+new Date-T);t._setStat(d,"googBucketDelay",Math.floor(1e3*O))}}if((E=l.get("remote-inbound-video"))&&(t._setStat(a,"packetsLost",E.packetsLost),t._setStat(a,"googRtt",E.roundTripTime)),(E=l.get("local-video-track"))&&(t._setStat(a,"googFrameHeightSent",E.frameHeight),t._setStat(a,"googFrameWidthSent",E.frameWidth),void 0!==E.framesPerSecond&&t._setStat(a,"googFrameRateSent",E.framesPerSecond)),(E=l.get("local-audio-track"))&&(t._setStat(i,"googEchoCancellationReturnLoss",E.echoReturnLoss),t._setStat(i,"googEchoCancellationReturnLossEnhancement",E.echoReturnLossEnhancement)),(E=l.get("media-source-video"))&&(t._setStat(a,"googFrameHeightInput",E.height),t._setStat(a,"googFrameWidthInput",E.width),t._setStat(a,"googFrameRateInput",E.framesPerSecond)),(E=l.get("media-source-audio"))&&t._setStat(i,"audioInputLevel",32767*E.totalAudioEnergy),(E=l.get("inbound-video"))&&(t._setStat(a,"googFirsReceived",E.firCount),t._setStat(a,"googNacksReceived",E.nackCount),t._setStat(a,"googPlisReceived",E.pliCount)),I)l.get("candidatePairs").map(function(e){I==e.transportId&&t._setStat(d,"googAvailableSendBandwidth",e.availableOutgoingBitrate)});else{var C=l.get("candidatePairs")[0];C&&t._setStat(d,"googAvailableSendBandwidth",C.availableOutgoingBitrate)}}t.lastStats=l;var N=[h()({},a),h()({},i),h()({},c),h()({},s),h()({},d)];N.push({id:"time",startTime:t.connectedTime,timestamp:new Date}),e(N)})},t._processGetStatsBeforeChrome76=function(e){t.peerConnection.getStats(function(n){var r=[],o=[],u=null;Object.keys(n).forEach(function(e){var t=n[e];t&&(o.push(t),u=t.timestamp,"VideoBwe"===t.type?d=t:t.id.indexOf("_send")>-1&&"video"===t.mediaType?a=t:t.id.indexOf("_send")>-1&&"audio"===t.mediaType?i=t:t.id.indexOf("_recv")>-1&&"video"===t.mediaType?c=t:t.id.indexOf("_recv")>-1&&"audio"===t.mediaType&&(s=t))}),(r=[h()({},a),h()({},i),h()({},c),h()({},s),h()({},d)]).push({id:"time",startTime:t.connectedTime,timestamp:u||new Date}),e(r,o)})},t._getStats=function(e){Object(r.getParameter)("CHROME_NEW_STATS")&&m.isChromeKernel()&&+m.getBrowserVersion()>=76?t._processGetStatsAfterChrome76(e):t._processGetStatsBeforeChrome76(e)},t.addTrack=function(e,n){t.peerConnection.addTrack(e,n)},t.removeTrack=function(e,n){t.peerConnection.removeTrack(t.peerConnection.getSenders().find(function(t){return t.track==e}))},t.addStream=function(e){t.peerConnection.addStream(e),t.markActionNeeded()},t.removeStream=function(){t.markActionNeeded()},t.close=function(){t.state="closed",t.peerConnection.close()},t.markActionNeeded=function(){t.actionNeeded=!0,t.doLater(function(){t.onstablestate()})},t.doLater=function(e){window.setTimeout(e,1)},t.onstablestate=function(){var e;if(t.actionNeeded){if("new"===t.state||"established"===t.state)t.peerConnection.createOffer(function(e){if(e.sdp!==t.prevOffer)return t.peerConnection.setLocalDescription(e),t.state="preparing-offer",void t.markActionNeeded();o.default.debug("["+t.clientId+"]Not sending a new offer")},function(e){o.default.debug("["+t.clientId+"]peer connection create offer failed ",e)},t.mediaConstraints);else if("preparing-offer"===t.state){if(t.moreIceComing)return;t.prevOffer=t.peerConnection.localDescription.sdp,t.offerCandidates=t.prevOffer.match(/a=candidate.+\r\n/g)||[],t.offerCandidates.length||(o.default.warning("[".concat(t.clientId,"]No Ice Candidate generated")),Object(r.getParameter)("SHIM_CANDIDATE")?(o.default.debug("Shimming fake candidate"),t.prevOffer+="a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"):o.default.error("[".concat(t.clientId,"]None Ice Candidate not allowed"))),t.prevOffer=t.prevOffer.replace(/a=candidate:.+typ\shost.+\r\n/g,"a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"),t.sendMessage("OFFER",t.prevOffer),t.state="offer-sent"}else if("offer-received"===t.state)t.peerConnection.createAnswer(function(e){if(t.peerConnection.setLocalDescription(e),t.state="offer-received-preparing-answer",t.iceStarted)t.markActionNeeded();else{var n=new Date;o.default.debug("["+t.clientId+"]"+n.getTime()+": Starting ICE in responder"),t.iceStarted=!0}},function(e){o.default.debug("["+t.clientId+"]peer connection create answer failed ",e)},t.mediaConstraints);else if("offer-received-preparing-answer"===t.state){if(t.moreIceComing)return;e=t.peerConnection.localDescription.sdp,t.sendMessage("ANSWER",e),t.state="established"}else t.debug("Dazed and confused in state "+t.state+", stopping here");t.actionNeeded=!1}},t.sendMessage=function(e,n){var i={};i.messageType=e,i.sdp=n,"OFFER"===e?(i.offererSessionId=t.sessionId,i.answererSessionId=t.otherSessionId,i.seq=t.sequenceNumber+=1,i.tiebreaker=Math.floor(429496723*Math.random()+1)):(i.offererSessionId=t.incomingMessage.offererSessionId,i.answererSessionId=t.sessionId,i.seq=t.incomingMessage.seq),t.onsignalingmessage(JSON.stringify(i))},t._getSender=function(e){if(t.peerConnection&&t.peerConnection.getSenders){var n=t.peerConnection.getSenders().find(function(t){return t.track.kind==e});if(n)return n}return null},t.hasSender=function(e){return!!t._getSender(e)},t.replaceTrack=function(e,n,i){var a=t._getSender(e.kind);if(!a)return i("NO_SENDER_FOUND");try{a.replaceTrack(e)}catch(e){return i&&i(e)}setTimeout(function(){return n&&n()},50)},t.error=function(e){throw"Error in RoapOnJsep: "+e},t.sessionId=t.roapSessionId+=1,t.sequenceNumber=0,t.actionNeeded=!1,t.iceStarted=!1,t.moreIceComing=!0,t.iceCandidateCount=0,t.onsignalingmessage=e.callback,t.peerConnection.ontrack=function(e){t.onaddstream&&(t.onaddstream(e,"ontrack"),t.peerConnection.onaddstream=null)},t.peerConnection.onaddstream=function(e){t.onaddstream&&(t.onaddstream(e,"onaddstream"),t.peerConnection.ontrack=null)},t.peerConnection.onremovestream=function(e){t.onremovestream&&t.onremovestream(e)},t.peerConnection.oniceconnectionstatechange=function(e){"connected"===e.currentTarget.iceConnectionState&&(t.connectedTime=new Date),t.oniceconnectionstatechange&&t.oniceconnectionstatechange(e.currentTarget.iceConnectionState)},t.renegotiate=function(){void 0!==t.prevOffer&&t.peerConnection.createOffer().then(function(e){return e.sdp=e.sdp.replace(/a=recvonly\r\n/g,"a=inactive\r\n"),e.sdp=u(e.sdp),e.sdp=l(e.sdp),t.peerConnection.setLocalDescription(e)}).then(function(){t.onnegotiationneeded&&t.onnegotiationneeded(t.peerConnection.localDescription.sdp)}).catch(function(e){console.log("createOffer error: ",e)})},t.peerConnection.onnegotiationneeded=t.renegotiate,t.onaddstream=null,t.onremovestream=null,t.onnegotiationneeded=null,t.state="new",t.markActionNeeded(),t},R=function(e){var t={},n=E.RTCPeerConnection;t.uid=e.uid,t.isVideoMute=e.isVideoMute,t.isAudioMute=e.isAudioMute,t.isSubscriber=e.isSubscriber,t.clientId=e.clientId,t.filterStatsCache=[],t.originStatsCache=[],t.lastTimeGetStats=null,t.pc_config={iceServers:[{urls:["stun:webcs.agora.io:3478","stun:stun.l.google.com:19302"]}],bundlePolicy:"max-bundle"},t.con={optional:[{DtlsSrtpKeyAgreement:!0}]},e.iceServers instanceof Array?t.pc_config.iceServers=e.iceServers:(e.stunServerUrl&&(e.stunServerUrl instanceof Array?e.stunServerUrl.map(function(e){"string"==typeof e&&""!==e&&t.pc_config.iceServers.push({url:e})}):"string"==typeof e.stunServerUrl&&""!==e.stunServerUrl&&t.pc_config.iceServers.push({url:e.stunServerUrl})),e.turnServer&&(e.turnServer instanceof Array?e.turnServer.map(function(e){"string"==typeof e.url&&""!==e.url&&t.pc_config.iceServers.push({username:e.username,credential:e.credential,url:e.url})}):"auto"!==e.turnServer.mode&&"manual"!==e.turnServer.mode||(e.turnServer.udpport&&t.pc_config.iceServers.push({username:e.turnServer.username,credential:e.turnServer.credential,credentialType:"password",urls:["turn:"+e.turnServer.url+":"+e.turnServer.udpport+"?transport=udp"]}),"string"==typeof e.turnServer.tcpport&&""!==e.turnServer.tcpport&&t.pc_config.iceServers.push({username:e.turnServer.username,credential:e.turnServer.credential,credentialType:"password",urls:["turn:"+e.turnServer.url+":"+e.turnServer.tcpport+"?transport=tcp"]}),!0===e.turnServer.forceturn&&(t.pc_config.iceTransportPolicy="relay")))),void 0===e.audio&&(e.audio=!0),void 0===e.video&&(e.video=!0),t.mediaConstraints={mandatory:{OfferToReceiveVideo:e.video,OfferToReceiveAudio:e.audio}},t.roapSessionId=103;try{t.pc_config.sdpSemantics="plan-b",t.peerConnection=new n(t.pc_config,t.con)}catch(e){delete t.pc_config.sdpSemantics,t.peerConnection=new n(t.pc_config,t.con)}o.default.debug("["+t.clientId+']safari Created RTCPeerConnnection with config "'+JSON.stringify(t.pc_config)+'".'),t.iceCandidateTimer=setTimeout(function(){t.iceCandidateTimer=null,o.default.debug("[".concat(t.clientId,"]Candidates collected: ").concat(t.iceCandidateCount)),t.moreIceComing&&(t.moreIceComing=!1,t.markActionNeeded())},Object(r.getParameter)("CANDIDATE_TIMEOUT")),t.peerConnection.onicecandidate=function(e){var n,i,a,r;i=(n=t.peerConnection.localDescription.sdp).match(/a=candidate:.+typ\ssrflx.+\r\n/),a=n.match(/a=candidate:.+typ\shost.+\r\n/),r=n.match(/a=candidate:.+typ\srelay.+\r\n/),0===t.iceCandidateCount&&(t.timeout=setTimeout(function(){t.moreIceComing&&(t.moreIceComing=!1,t.markActionNeeded())},1e3)),null===i&&null===a&&null===r||void 0!==t.ice||!t.iceCandidateTimer||(o.default.debug("["+t.clientId+"]srflx candidate : "+i+" relay candidate: "+r+" host candidate : "+a),clearTimeout(t.iceCandidateTimer),t.iceCandidateTimer=null,t.ice=0,t.moreIceComing=!1,t.markActionNeeded()),t.iceCandidateCount=t.iceCandidateCount+1};var i=function(t){return e.screen&&(t=t.replace("a=x-google-flag:conference\r\n","")),t},a=function(n){var i,a;return(i=n.match(/m=video.*\r\n/))&&e.minVideoBW&&e.maxVideoBW&&(a=i[0]+"b=AS:"+e.maxVideoBW+"\r\n",n=n.replace(i[0],a),o.default.debug("["+t.clientId+"]Set Video Bitrate - min:"+e.minVideoBW+" max:"+e.maxVideoBW)),(i=n.match(/m=audio.*\r\n/))&&e.maxAudioBW&&(a=i[0]+"b=AS:"+e.maxAudioBW+"\r\n",n=n.replace(i[0],a)),n};t.processSignalingMessage=function(e){var n,r=JSON.parse(e);t.incomingMessage=r,"new"===t.state?"OFFER"===r.messageType?(n={sdp:r.sdp,type:"offer"},t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state="offer-received",t.markActionNeeded()):t.error("Illegal message for this state: "+r.messageType+" in state "+t.state):"offer-sent"===t.state?"ANSWER"===r.messageType?((n={sdp:r.sdp,type:"answer"}).sdp=i(n.sdp),n.sdp=a(n.sdp),n.sdp=n.sdp.replace(/a=x-google-flag:conference\r\n/g,""),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state="established"):"pr-answer"===r.messageType?(n={sdp:r.sdp,type:"pr-answer"},t.peerConnection.setRemoteDescription(new RTCSessionDescription(n))):"offer"===r.messageType?t.error("Not written yet"):t.error("Illegal message for this state: "+r.messageType+" in state "+t.state):"established"===t.state&&("OFFER"===r.messageType?(n={sdp:r.sdp,type:"offer"},t.peerConnection.setRemoteDescription(new RTCSessionDescription(n)),t.state="offer-received",t.markActionNeeded()):"ANSWER"===r.messageType?((n={sdp:r.sdp,type:"answer"}).sdp=i(n.sdp),n.sdp=a(n.sdp),t.peerConnection.setRemoteDescription(new RTCSessionDescription(n))):t.error("Illegal message for this state: "+r.messageType+" in state "+t.state))};var s={id:"",type:"",mediaType:"",googCodecName:"opus",aecDivergentFilterFraction:"0",audioInputLevel:"0",bytesSent:"0",packetsSent:"0",googEchoCancellationReturnLoss:"0",googEchoCancellationReturnLossEnhancement:"0"},c={id:"",type:"",mediaType:"",googCodecName:"h264"===e.codec?"H264":"VP8",bytesSent:"0",packetsLost:"0",packetsSent:"0",googAdaptationChanges:"0",googAvgEncodeMs:"0",googEncodeUsagePercent:"0",googFirsReceived:"0",googFrameHeightSent:"0",googFrameHeightInput:"0",googFrameRateInput:"0",googFrameRateSent:"0",googFrameWidthSent:"0",googFrameWidthInput:"0",googNacksReceived:"0",googPlisReceived:"0",googRtt:"0",googFramesEncoded:"0"},d={id:"",type:"",mediaType:"",audioOutputLevel:"0",bytesReceived:"0",packetsLost:"0",packetsReceived:"0",googAccelerateRate:"0",googCurrentDelayMs:"0",googDecodingCNG:"0",googDecodingCTN:"0",googDecodingCTSG:"0",googDecodingNormal:"0",googDecodingPLC:"0",googDecodingPLCCNG:"0",googExpandRate:"0",googJitterBufferMs:"0",googJitterReceived:"0",googPreemptiveExpandRate:"0",googPreferredJitterBufferMs:"0",googSecondaryDecodedRate:"0",googSpeechExpandRate:"0"},u={id:"",type:"",mediaType:"",googTargetDelayMs:"0",packetsLost:"0",googDecodeMs:"0",googMaxDecodeMs:"0",googRenderDelayMs:"0",googFrameWidthReceived:"0",googFrameHeightReceived:"0",googFrameRateReceived:"0",googFrameRateDecoded:"0",googFrameRateOutput:"0",googFramesDecoded:"0",googFrameReceived:"0",googJitterBufferMs:"0",googCurrentDelayMs:"0",googMinPlayoutDelayMs:"0",googNacksSent:"0",googPlisSent:"0",googFirsSent:"0",bytesReceived:"0",packetsReceived:"0"},l={id:"bweforvideo",type:"VideoBwe",googAvailableSendBandwidth:"0",googAvailableReceiveBandwidth:"0",googActualEncBitrate:"0",googRetransmitBitrate:"0",googTargetEncBitrate:"0",googBucketDelay:"0",googTransmitBitrate:"0"},f=0,p=0,m=0;return t.getVideoRelatedStats=function(n){t.peerConnection.getStats().then(function(i){var a={peerId:t.uid,mediaType:"video",isVideoMute:t.isVideoMute};i.forEach(function(i){if(t.isSubscriber){if("track"===i.type&&(~i.id.indexOf("video")||~i.trackIdentifier.indexOf("v"))){if(!t.lastReport)return void(t.lastReport=i);a.frameRateReceived=i.framesReceived-t.lastReport.framesReceived+"",a.frameRateDecoded=i.framesDecoded-t.lastReport.framesDecoded+"",t.lastReport=i}"inbound-rtp"===i.type&&~i.id.indexOf("Video")&&(a.bytesReceived=i.bytesReceived+"",a.packetsReceived=i.packetsReceived+"",a.packetsLost=i.packetsLost+"")}else if("outbound-rtp"===i.type&&~i.id.indexOf("Video")){if(!t.lastReport)return void(t.lastReport=i);n&&n({mediaType:"video",isVideoMute:t.isVideoMute,frameRateInput:e.maxFrameRate+"",frameRateSent:i.framesEncoded-t.lastReport.framesEncoded+""}),t.lastReport=i}}),n&&n(a)})},t.getAudioRelatedStats=function(e){t.peerConnection.getStats().then(function(n){n.forEach(function(n){t.isSubscriber&&"inbound-rtp"===n.type&&~n.id.indexOf("Audio")&&e&&e({peerId:t.uid,mediaType:"audio",isAudioMute:t.isAudioMute,frameDropped:n.packetsLost+"",frameReceived:n.packetsReceived+"",googJitterReceived:n.jitter+"",bytesReceived:n.bytesReceived+"",packetsReceived:n.packetsReceived+"",packetsLost:n.packetsLost+""})})})},t.getStatsRate=function(e){t.getStats(function(t){t.forEach(function(e){"outbound-rtp"===e.type&&"video"===e.mediaType&&e.googFramesEncoded&&(e.googFrameRateSent=((e.googFramesEncoded-f)/3).toString(),f=e.googFramesEncoded),"inbound-rtp"===e.type&&-1!=e.id.indexOf("55543")&&(e.googFrameRateReceived&&(e.googFrameRateReceived=((e.googFrameReceived-m)/3).toString(),m=e.googFrameReceived),e.googFrameRateDecoded&&(e.googFrameRateDecoded=((e.googFramesDecoded-p)/3).toString(),p=e.googFramesDecoded))}),e(t)})},t.getStats=function(e,n){n=(n=n||500)>500?500:n,t.lastTimeGetStats&&Date.now()-t.lastTimeGetStats<n?e&&e(t.filterStatsCache,t.originStatsCache):this._getStats(function(n,i){t.filterStatsCache=n,t.originStatsCache=i,t.lastTimeGetStats=Date.now(),e&&e(n,i)})},t._getStats=function(e){var n=[];t.peerConnection.getStats().then(function(i){i.forEach(function(e){n.push(e),"outbound-rtp"===e.type&&"audio"===e.mediaType&&(s.id=e.id,s.type=e.type,s.mediaType=e.mediaType,s.bytesSent=e.bytesSent?e.bytesSent+"":"0",s.packetsSent=e.packetsSent?e.packetsSent+"":"0"),"outbound-rtp"===e.type&&"video"===e.mediaType&&(c.id=e.id,c.type=e.type,c.mediaType=e.mediaType,c.bytesSent=e.bytesSent?e.bytesSent+"":"0",c.packetsSent=e.packetsSent?e.packetsSent+"":"0",c.googPlisReceived=e.pliCount?e.pliCount+"":"0",c.googNacksReceived=e.nackCount?e.nackCount+"":"0",c.googFirsReceived=e.firCount?e.firCount+"":"0",c.googFramesEncoded=e.framesEncoded?e.framesEncoded+"":"0"),"inbound-rtp"===e.type&&-1!=e.id.indexOf("44444")&&(d.id=e.id,d.type=e.type,d.mediaType="audio",d.packetsReceived=e.packetsReceived?e.packetsReceived+"":"0",d.bytesReceived=e.bytesReceived?e.bytesReceived+"":"0",d.packetsLost=e.packetsLost?e.packetsLost+"":"0",d.packetsReceived=e.packetsReceived?e.packetsReceived+"":"0",d.googJitterReceived=e.jitter?e.jitter+"":"0"),"inbound-rtp"===e.type&&-1!=e.id.indexOf("55543")&&(u.id=e.id,u.type=e.type,u.mediaType="video",u.packetsReceived=e.packetsReceived?e.packetsReceived+"":"0",u.bytesReceived=e.bytesReceived?e.bytesReceived+"":"0",u.packetsLost=e.packetsLost?e.packetsLost+"":"0",u.googJitterBufferMs=e.jitter?e.jitter+"":"0",u.googNacksSent=e.nackCount?e.nackCount+"":"0",u.googPlisSent=e.pliCount?e.pliCount+"":"0",u.googFirsSent=e.firCount?e.firCount+"":"0"),"track"!==e.type||-1==e.id.indexOf("55543")&&!~e.trackIdentifier.indexOf("v")&&null!=e.audioLevel||(u.googFrameWidthReceived=e.frameWidth?e.frameWidth+"":"0",u.googFrameHeightReceived=e.frameHeight?e.frameHeight+"":"0",u.googFrameReceived=e.framesReceived?e.framesReceived+"":"0",u.googFramesDecoded=e.framesDecoded?e.framesDecoded+"":"0"),"track"!==e.type||-1==e.id.indexOf("44444")&&!~e.trackIdentifier.indexOf("a")&&void 0===e.audioLevel||(d.audioOutputLevel=e.audioLevel+"",s.audioInputLevel=e.audioLevel+""),"candidate-pair"===e.type&&(0==e.availableIncomingBitrate?l.googAvailableSendBandwidth=e.availableOutgoingBitrate+"":l.googAvailableReceiveBandwidth=e.availableIncomingBitrate+"")});var a=[l,s,c,d,u];a.push({id:"time",startTime:t.connectedTime,timestamp:new Date}),e(a,n)}).catch(function(e){console.error(e)})},t.addTrack=function(e,n){t.peerConnection.addTrack(e,n)},t.removeTrack=function(e,n){var i=t.peerConnection.getSenders().find(function(t){return t.track==e});i.replaceTrack(null),t.peerConnection.removeTrack(i)},t.addStream=function(e){window.navigator.userAgent.indexOf("Safari")>-1&&-1===navigator.userAgent.indexOf("Chrome")?e.getTracks().forEach(function(n){return t.peerConnection.addTrack(n,e)}):t.peerConnection.addStream(e),t.markActionNeeded()},t.removeStream=function(){t.markActionNeeded()},t.close=function(){t.state="closed",t.peerConnection.close()},t.markActionNeeded=function(){t.actionNeeded=!0,t.doLater(function(){t.onstablestate()})},t.doLater=function(e){window.setTimeout(e,1)},t.onstablestate=function(){var n;if(t.actionNeeded){if("new"===t.state||"established"===t.state)e.isSubscriber&&(t.peerConnection.addTransceiver("audio",{direction:"recvonly"}),t.peerConnection.addTransceiver("video",{direction:"recvonly"})),t.peerConnection.createOffer(t.mediaConstraints).then(function(n){if(n.sdp=a(n.sdp),e.isSubscriber||(n.sdp=n.sdp.replace(/a=extmap:4 urn:3gpp:video-orientation\r\n/g,"")),n.sdp!==t.prevOffer)return t.peerConnection.setLocalDescription(n),t.state="preparing-offer",void t.markActionNeeded();o.default.debug("["+t.clientId+"]Not sending a new offer")}).catch(function(e){o.default.debug("["+t.clientId+"]peer connection create offer failed ",e)});else if("preparing-offer"===t.state){if(t.moreIceComing)return;t.prevOffer=t.peerConnection.localDescription.sdp,t.offerCandidates=t.prevOffer.match(/a=candidate.+\r\n/g)||[],t.offerCandidates.length||(o.default.warning("[".concat(t.clientId,"]No Ice Candidate generated")),Object(r.getParameter)("SHIM_CANDIDATE")?(o.default.debug("Shimming fake candidate"),t.prevOffer+="a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"):o.default.error("[".concat(t.clientId,"]None Ice Candidate not allowed"))),t.prevOffer=t.prevOffer.replace(/a=candidate:.+typ\shost.+\r\n/g,"a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"),t.sendMessage("OFFER",t.prevOffer),t.state="offer-sent"}else if("offer-received"===t.state)t.peerConnection.createAnswer(function(e){if(t.peerConnection.setLocalDescription(e),t.state="offer-received-preparing-answer",t.iceStarted)t.markActionNeeded();else{var n=new Date;o.default.debug("["+t.clientId+"]"+n.getTime()+": Starting ICE in responder"),t.iceStarted=!0}},function(e){o.default.debug("["+t.clientId+"]peer connection create answer failed ",e)},t.mediaConstraints);else if("offer-received-preparing-answer"===t.state){if(t.moreIceComing)return;n=t.peerConnection.localDescription.sdp,t.sendMessage("ANSWER",n),t.state="established"}else t.debug("Dazed and confused in state "+t.state+", stopping here");t.actionNeeded=!1}},t.sendMessage=function(e,n){var i={};i.messageType=e,i.sdp=n,"OFFER"===e?(i.offererSessionId=t.sessionId,i.answererSessionId=t.otherSessionId,i.seq=t.sequenceNumber+=1,i.tiebreaker=Math.floor(429496723*Math.random()+1)):(i.offererSessionId=t.incomingMessage.offererSessionId,i.answererSessionId=t.sessionId,i.seq=t.incomingMessage.seq),t.onsignalingmessage(JSON.stringify(i))},t._getSender=function(e){if(t.peerConnection&&t.peerConnection.getSenders){var n=t.peerConnection.getSenders().find(function(t){return t.track.kind==e});if(n)return n}return null},t.hasSender=function(e){return!!t._getSender(e)},t.replaceTrack=function(e,n,i){var a=t._getSender(e.kind);if(!a)return i("NO_SENDER_FOUND");try{a.replaceTrack(e)}catch(e){return i&&i(e)}setTimeout(function(){return n&&n()},50)},t.error=function(e){throw"Error in RoapOnJsep: "+e},t.sessionId=t.roapSessionId+=1,t.sequenceNumber=0,t.actionNeeded=!1,t.iceStarted=!1,t.moreIceComing=!0,t.iceCandidateCount=0,t.onsignalingmessage=e.callback,t.peerConnection.ontrack=function(e){console.log("!!! ontrack, ",e.track.kind,e.track),t.onaddstream&&t.onaddstream(e,"ontrack")},t.peerConnection.onremovestream=function(e){t.onremovestream&&t.onremovestream(e)},t.peerConnection.oniceconnectionstatechange=function(e){"connected"===e.currentTarget.iceConnectionState&&(t.connectedTime=new Date),t.oniceconnectionstatechange&&t.oniceconnectionstatechange(e.currentTarget.iceConnectionState)},t.renegotiate=function(){void 0!==t.prevOffer&&t.peerConnection.createOffer().then(function(e){return e.sdp=e.sdp.replace(/a=recvonly\r\n/g,"a=inactive\r\n"),e.sdp=i(e.sdp),e.sdp=a(e.sdp),t.peerConnection.setLocalDescription(e)}).then(function(){t.onnegotiationneeded&&t.onnegotiationneeded(t.peerConnection.localDescription.sdp)}).catch(function(e){console.log("createOffer error: ",e)})},t.peerConnection.onnegotiationneeded=t.renegotiate,t.onaddstream=null,t.onremovestream=null,t.state="new",t.markActionNeeded(),t},A=function(e){var t={},n=(mozRTCPeerConnection,mozRTCSessionDescription),i=!1;t.uid=e.uid,t.isVideoMute=e.isVideoMute,t.isAudioMute=e.isAudioMute,t.isSubscriber=e.isSubscriber,t.clientId=e.clientId,t.filterStatsCache=[],t.originStatsCache=[],t.lastTimeGetStats=null,t.pc_config={iceServers:[]},e.iceServers instanceof Array?e.iceServers.map(function(e){0===e.url.indexOf("stun:")&&t.pc_config.iceServers.push({url:e.url})}):(e.stunServerUrl&&(e.stunServerUrl instanceof Array?e.stunServerUrl.map(function(e){"string"==typeof e&&""!==e&&t.pc_config.iceServers.push({url:e})}):"string"==typeof e.stunServerUrl&&""!==e.stunServerUrl&&t.pc_config.iceServers.push({url:e.stunServerUrl})),e.turnServer&&"string"==typeof e.turnServer.url&&""!==e.turnServer.url&&(e.turnServer.udpport&&t.pc_config.iceServers.push({username:e.turnServer.username,credential:e.turnServer.credential,credentialType:"password",urls:"turn:"+e.turnServer.url+":"+e.turnServer.udpport+"?transport=udp"}),"string"==typeof e.turnServer.tcpport&&""!==e.turnServer.tcpport&&t.pc_config.iceServers.push({username:e.turnServer.username,credential:e.turnServer.credential,credentialType:"password",urls:"turn:"+e.turnServer.url+":"+e.turnServer.tcpport+"?transport=tcp"}),!0===e.turnServer.forceturn&&(t.pc_config.iceTransportPolicy="relay"))),void 0===e.audio&&(e.audio=!0),void 0===e.video&&(e.video=!0),t.mediaConstraints={offerToReceiveAudio:e.audio,offerToReceiveVideo:e.video,mozDontOfferDataChannel:!0},t.roapSessionId=103,t.peerConnection=new E.RTCPeerConnection(t.pc_config),o.default.debug("["+t.clientId+']safari Created RTCPeerConnnection with config "'+JSON.stringify(t.pc_config)+'".'),t.iceCandidateTimer=setTimeout(function(){t.iceCandidateTimer=null,o.default.debug("[".concat(t.clientId,"]Candidates collected: ").concat(t.iceCandidateCount)),t.moreIceComing&&(t.moreIceComing=!1,t.markActionNeeded())},Object(r.getParameter)("CANDIDATE_TIMEOUT")),t.peerConnection.onicecandidate=function(e){var n,i,a,r;i=(n=t.peerConnection.localDescription.sdp).match(/a=candidate:.+typ\ssrflx.+\r\n/),a=n.match(/a=candidate:.+typ\shost.+\r\n/),r=n.match(/a=candidate:.+typ\srelay.+\r\n/),null===i&&null===a&&null===r||void 0!==t.ice||!t.iceCandidateTimer||(o.default.debug("["+t.clientId+"]srflx candidate : "+i+" relay candidate: "+r+" host candidate : "+a),clearTimeout(t.iceCandidateTimer),t.iceCandidateTimer=null,t.ice=0,t.moreIceComing=!1,t.markActionNeeded()),t.iceCandidateCount=t.iceCandidateCount+1},t.checkMLineReverseInSDP=function(e){return!(!~e.indexOf("m=audio")||!~e.indexOf("m=video"))&&e.indexOf("m=audio")>e.indexOf("m=video")},t.reverseMLineInSDP=function(e){var t=e.split("m=audio"),n=t[1].split("m=video"),i="m=video"+n[1],a="m=audio"+n[0];return e=t[0]+i+a},t.processSignalingMessage=function(e){var i,a=JSON.parse(e);t.incomingMessage=a,"new"===t.state?"OFFER"===a.messageType?(a.sdp=l(a.sdp),i={sdp:a.sdp,type:"offer"},t.peerConnection.setRemoteDescription(new n(i),function(){o.default.debug("["+t.clientId+"]setRemoteDescription succeeded")},function(e){o.default.info("["+t.clientId+"]setRemoteDescription failed: "+e.name)}),t.state="offer-received",t.markActionNeeded()):t.error("Illegal message for this state: "+a.messageType+" in state "+t.state):"offer-sent"===t.state?"ANSWER"===a.messageType?(a.sdp=l(a.sdp),a.sdp=a.sdp.replace(/ generation 0/g,""),a.sdp=a.sdp.replace(/ udp /g," UDP "),-1!==a.sdp.indexOf("a=group:BUNDLE")?(a.sdp=a.sdp.replace(/a=group:BUNDLE audio video/,"a=group:BUNDLE sdparta_0 sdparta_1"),a.sdp=a.sdp.replace(/a=mid:audio/,"a=mid:sdparta_0"),a.sdp=a.sdp.replace(/a=mid:video/,"a=mid:sdparta_1")):(a.sdp=a.sdp.replace(/a=mid:audio/,"a=mid:sdparta_0"),a.sdp=a.sdp.replace(/a=mid:video/,"a=mid:sdparta_0")),i={sdp:a.sdp,type:"answer"},t.peerConnection.setRemoteDescription(new n(i),function(){o.default.debug("["+t.clientId+"]setRemoteDescription succeeded")},function(e){o.default.info("["+t.clientId+"]setRemoteDescription failed: "+e)}),t.state="established"):"pr-answer"===a.messageType?(i={sdp:a.sdp,type:"pr-answer"},t.peerConnection.setRemoteDescription(new n(i),function(){o.default.debug("["+t.clientId+"]setRemoteDescription succeeded")},function(e){o.default.info("["+t.clientId+"]setRemoteDescription failed: "+e.name)})):"offer"===a.messageType?t.error("Not written yet"):t.error("Illegal message for this state: "+a.messageType+" in state "+t.state):"established"===t.state&&("OFFER"===a.messageType?(i={sdp:a.sdp,type:"offer"},t.peerConnection.setRemoteDescription(new n(i),function(){o.default.debug("["+t.clientId+"]setRemoteDescription succeeded")},function(e){o.default.info("["+t.clientId+"]setRemoteDescription failed: "+e.name)}),t.state="offer-received",t.markActionNeeded()):t.error("Illegal message for this state: "+a.messageType+" in state "+t.state))};var a={id:"",type:"",mediaType:"opus",googCodecName:"opus",aecDivergentFilterFraction:"0",audioInputLevel:"0",bytesSent:"0",packetsSent:"0",googEchoCancellationReturnLoss:"0",googEchoCancellationReturnLossEnhancement:"0"},s={id:"",type:"",mediaType:"",googCodecName:"h264"===e.codec?"H264":"VP8",bytesSent:"0",packetsLost:"0",packetsSent:"0",googAdaptationChanges:"0",googAvgEncodeMs:"0",googEncodeUsagePercent:"0",googFirsReceived:"0",googFrameHeightSent:"0",googFrameHeightInput:"0",googFrameRateInput:"0",googFrameRateSent:"0",googFrameWidthSent:"0",googFrameWidthInput:"0",googNacksReceived:"0",googPlisReceived:"0",googRtt:"0"},c={id:"",type:"",mediaType:"",audioOutputLevel:"0",bytesReceived:"0",packetsLost:"0",packetsReceived:"0",googAccelerateRate:"0",googCurrentDelayMs:"0",googDecodingCNG:"0",googDecodingCTN:"0",googDecodingCTSG:"0",googDecodingNormal:"0",googDecodingPLC:"0",googDecodingPLCCNG:"0",googExpandRate:"0",googJitterBufferMs:"0",googJitterReceived:"0",googPreemptiveExpandRate:"0",googPreferredJitterBufferMs:"0",googSecondaryDecodedRate:"0",googSpeechExpandRate:"0"},d={id:"",type:"",mediaType:"",googTargetDelayMs:"0",packetsLost:"0",googDecodeMs:"0",googMaxDecodeMs:"0",googRenderDelayMs:"0",googFrameWidthReceived:"0",googFrameHeightReceived:"0",googFrameRateReceived:"0",googFrameRateDecoded:"0",googFrameRateOutput:"0",googJitterBufferMs:"0",googCurrentDelayMs:"0",googMinPlayoutDelayMs:"0",googNacksSent:"0",googPlisSent:"0",googFirsSent:"0",bytesReceived:"0",packetsReceived:"0",googFramesDecoded:"0"},u=0;t.getVideoRelatedStats=function(e){t.peerConnection.getStats().then(function(n){var i=!0,a=!1,r=void 0;try{for(var o,s=n.values()[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var c=o.value;if(t.isSubscriber){if(("inbound-rtp"===c.type||"inboundrtp"===c.type)&&"video"===c.mediaType){if(!t.lastReport)return void(t.lastReport=c);e&&e({browser:"firefox",mediaType:"video",peerId:t.uid,isVideoMute:t.isVideoMute,frameRateReceived:c.framerateMean+"",frameRateDecoded:c.framesDecoded-t.lastReport.framesDecoded+"",bytesReceived:c.bytesReceived+"",packetsReceived:c.packetsReceived+"",packetsLost:c.packetsLost+""}),t.lastReport=c}}else if(("outbound-rtp"===c.type||"outboundrtp"===c.type)&&"video"===c.mediaType){if(!t.lastReport)return void(t.lastReport=c);e&&e({mediaType:"video",isVideoMute:t.isVideoMute,frameRateInput:c.framerateMean+"",frameRateSent:c.framesEncoded-t.lastReport.framesEncoded+""}),t.lastReport=c}}}catch(e){a=!0,r=e}finally{try{i||null==s.return||s.return()}finally{if(a)throw r}}})},t.getAudioRelatedStats=function(e){t.peerConnection.getStats().then(function(n){var i=!0,a=!1,r=void 0;try{for(var o,s=n.values()[Symbol.iterator]();!(i=(o=s.next()).done);i=!0){var c=o.value;t.isSubscriber&&("inbound-rtp"!==c.type&&"inboundrtp"!==c.type||"audio"!==c.mediaType||e&&e({browser:"firefox",mediaType:"audio",peerId:t.uid,isAudioMute:t.isAudioMute,frameDropped:c.packetsLost+"",frameReceived:c.packetsReceived+"",googJitterReceived:c.jitter+"",bytesReceived:c.bytesReceived+"",packetsReceived:c.packetsReceived+"",packetsLost:c.packetsLost+""}))}}catch(e){a=!0,r=e}finally{try{i||null==s.return||s.return()}finally{if(a)throw r}}})},t.getStatsRate=function(e){t.getStats(function(t){t.forEach(function(e){"inbound-rtp"!==e.type&&"inboundrtp"!==e.type||"video"!==e.mediaType||e.googFrameRateDecoded&&(e.googFrameRateDecoded=((e.googFramesDecoded-u)/3).toString(),u=e.googFramesDecoded)}),e(t)})},t.getStats=function(e,n){n=(n=n||500)>500?500:n,t.lastTimeGetStats&&Date.now()-t.lastTimeGetStats<n?e&&e(t.filterStatsCache,t.originStatsCache):this._getStats(function(n,i){t.filterStatsCache=n,t.originStatsCache=i,t.lastTimeGetStats=Date.now(),e&&e(n,i)})},t._getStats=function(e){t.peerConnection.getStats().then(function(n){var i=[],r=!0,o=!1,u=void 0;try{for(var l,f=n.values()[Symbol.iterator]();!(r=(l=f.next()).done);r=!0){var p=l.value;i.push(p),"outbound-rtp"!==p.type&&"outboundrtp"!==p.type||"video"!==p.mediaType||-1!==p.id.indexOf("rtcp")||(s.id=p.id,s.type=p.type,s.mediaType=p.mediaType,s.bytesSent=p.bytesSent?p.bytesSent+"":"0",s.packetsSent=p.packetsSent?p.packetsSent+"":"0",s.googPlisReceived=p.pliCount?p.pliCount+"":"0",s.googNacksReceived=p.nackCount?p.nackCount+"":"0",s.googFirsReceived=p.firCount?p.firCount+"":"0",s.googFrameRateSent=p.framerateMean?p.framerateMean+"":"0"),"outbound-rtp"!==p.type&&"outboundrtp"!==p.type||"audio"!==p.mediaType||-1!==p.id.indexOf("rtcp")||(a.id=p.id,a.type=p.type,a.mediaType=p.mediaType,a.bytesSent=p.bytesSent?p.bytesSent+"":"0",a.packetsSent=p.packetsSent?p.packetsSent+"":"0"),"inbound-rtp"!==p.type&&"inboundrtp"!==p.type||"audio"!==p.mediaType||p.isRemote||-1!==p.id.indexOf("rtcp")||(c.id=p.id,c.type=p.type,c.mediaType=p.mediaType,c.bytesReceived=p.bytesReceived?p.bytesReceived+"":"0",c.packetsLost=p.packetsLost?p.packetsLost+"":"0",c.packetsReceived=p.packetsReceived?p.packetsReceived+"":"0",c.googJitterReceived=p.jitter?p.jitter+"":"0"),"inbound-rtp"!==p.type&&"inboundrtp"!==p.type||"video"!==p.mediaType||p.isRemote||-1!==p.id.indexOf("rtcp")||(d.id=p.id,d.type=p.type,d.mediaType=p.mediaType,d.bytesReceived=p.bytesReceived?p.bytesReceived+"":"0",d.googFrameRateReceived=p.framerateMean?p.framerateMean+"":"0",d.googFramesDecoded=p.framesDecoded?p.framesDecoded+"":"0",d.packetsLost=p.packetsLost?p.packetsLost+"":"0",d.packetsReceived=p.packetsReceived?p.packetsReceived+"":"0",d.googJitterBufferMs=p.jitter?p.jitter+"":"0",d.googNacksSent=p.nackCount?p.nackCount+"":"0",d.googPlisSent=p.pliCount?p.pliCount+"":"0",d.googFirsSent=p.firCount?p.firCount+"":"0"),-1!==p.id.indexOf("outbound_rtcp_video")&&(s.packetsLost=p.packetsLost?p.packetsLost+"":"0")}}catch(e){o=!0,u=e}finally{try{r||null==f.return||f.return()}finally{if(o)throw u}}var m=[s,a,c,d];m.push({id:"time",startTime:t.connectedTime,timestamp:new Date}),e(m,i)},function(e){o.default.error("["+t.clientId+"]"+e)})},t.addStream=function(e){i=!0,t.peerConnection.addStream(e),t.markActionNeeded()},t.removeStream=function(){t.markActionNeeded()},t.close=function(){t.state="closed",t.peerConnection.close()},t.markActionNeeded=function(){t.actionNeeded=!0,t.doLater(function(){t.onstablestate()})},t.doLater=function(e){window.setTimeout(e,1)},t.onstablestate=function(){if(t.actionNeeded){if("new"===t.state||"established"===t.state)i&&(t.mediaConstraints=void 0),t.peerConnection.createOffer(function(e){if(e.sdp=l(e.sdp),e.sdp=e.sdp.replace(/a=extmap:1 http:\/\/www.webrtc.org\/experiments\/rtp-hdrext\/abs-send-time/,"a=extmap:3 http://www.webrtc.org/experiments/rtp-hdrext/abs-send-time"),e.sdp!==t.prevOffer)return t.peerConnection.setLocalDescription(e),t.state="preparing-offer",void t.markActionNeeded();o.default.debug("["+t.clientId+"]Not sending a new offer")},function(e){o.default.debug("["+t.clientId+"]Ups! create offer failed ",e)},t.mediaConstraints);else if("preparing-offer"===t.state){if(t.moreIceComing)return;t.prevOffer=t.peerConnection.localDescription.sdp,t.offerCandidates=t.prevOffer.match(/a=candidate.+\r\n/g)||[],t.offerCandidates.length||(o.default.warning("[".concat(t.clientId,"]No Ice Candidate generated")),Object(r.getParameter)("SHIM_CANDIDATE")?(o.default.debug("Shimming fake candidate"),t.prevOffer+="a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"):o.default.error("[".concat(t.clientId,"]None Ice Candidate not allowed"))),t.prevOffer=t.prevOffer.replace(/a=candidate:.+typ\shost.+\r\n/g,"a=candidate:2243255435 1 udp 2122194687 192.168.0.1 30000 typ host generation 0 network-id 1\r\n"),t.sendMessage("OFFER",t.prevOffer),t.state="offer-sent"}else if("offer-received"===t.state)t.peerConnection.createAnswer(function(e){if(t.peerConnection.setLocalDescription(e),t.state="offer-received-preparing-answer",t.iceStarted)t.markActionNeeded();else{var n=new Date;o.default.debug("["+t.clientId+"]"+n.getTime()+": Starting ICE in responder"),t.iceStarted=!0}},function(){o.default.debug("["+t.clientId+"]Ups! Something went wrong")});else if("offer-received-preparing-answer"===t.state){if(t.moreIceComing)return;var e=t.peerConnection.localDescription.sdp;t.sendMessage("ANSWER",e),t.state="established"}else t.debug("Dazed and confused in state "+t.state+", stopping here");t.actionNeeded=!1}},t.sendMessage=function(e,n){var i={};i.messageType=e,i.sdp=n,"OFFER"===e?(i.offererSessionId=t.sessionId,i.answererSessionId=t.otherSessionId,i.seq=t.sequenceNumber+=1,i.tiebreaker=Math.floor(429496723*Math.random()+1)):(i.offererSessionId=t.incomingMessage.offererSessionId,i.answererSessionId=t.sessionId,i.seq=t.incomingMessage.seq),t.onsignalingmessage(JSON.stringify(i))},t._getSender=function(e){if(t.peerConnection&&t.peerConnection.getSenders){var n=t.peerConnection.getSenders().find(function(t){return t.track.kind==e});if(n)return n}return null},t.hasSender=function(e){return!!t._getSender(e)},t.replaceTrack=function(e,n,i){var a=t._getSender(e.kind);if(!a)return i("NO_SENDER_FOUND");try{a.replaceTrack(e)}catch(e){return i&&i(e)}setTimeout(function(){return n&&n()},50)},t.error=function(e){throw"Error in RoapOnJsep: "+e},t.sessionId=t.roapSessionId+=1,t.sequenceNumber=0,t.actionNeeded=!1,t.iceStarted=!1,t.moreIceComing=!0,t.iceCandidateCount=0,t.onsignalingmessage=e.callback,t.peerConnection.ontrack=function(e){t.onaddstream&&t.onaddstream(e,"ontrack")},t.peerConnection.onremovestream=function(e){t.onremovestream&&t.onremovestream(e)},t.peerConnection.oniceconnectionstatechange=function(e){"connected"===e.currentTarget.iceConnectionState&&(t.connectedTime=new Date),t.oniceconnectionstatechange&&t.oniceconnectionstatechange(e.currentTarget.iceConnectionState)};var l=function(t){var n;if(e.video&&e.maxVideoBW&&(null==(n=t.match(/m=video.*\r\n/))&&(n=t.match(/m=video.*\n/)),n&&n.length>0)){var i=n[0]+"b=TIAS:"+1e3*e.maxVideoBW+"\r\n";t=t.replace(n[0],i)}return e.audio&&e.maxAudioBW&&(null==(n=t.match(/m=audio.*\r\n/))&&(n=t.match(/m=audio.*\n/)),n&&n.length>0)&&(i=n[0]+"b=TIAS:"+1e3*e.maxAudioBW+"\r\n",t=t.replace(n[0],i)),t};return t.onaddstream=null,t.onremovestream=null,t.state="new",t.markActionNeeded(),t},O=a(17),C=a.n(O),N=null,w=function(){try{N=window.require("electron")}catch(e){}return N},k=function(e){var t=s.b.reportApiInvoke(null,{callback:e,name:"getScreenSources",options:arguments,tag:"tracer"}),n=w();if(!n)return t&&t("electron is null");n.desktopCapturer.getSources({types:["window","screen"]},function(e,n){if(e)return t&&t(e);t&&t(null,n)})},D=function(e,t,n){var i=t.width;t={audio:!1,video:{mandatory:{chromeMediaSource:"desktop",chromeMediaSourceId:e,maxHeight:t.height,maxWidth:i,maxFrameRate:t.frameRate&&t.frameRate.max,minFrameRate:t.frameRate&&t.frameRate.min}}};navigator.webkitGetUserMedia(t,function(e){n&&n(null,e)},function(e){n&&n(e)})},L=function(){return!!w()},M=k,P=D,x=function(e,t){k(function(n,i){if(n)return t&&t(n);!function(e,t){var n=document.createElement("div");n.innerText="share screen",n.setAttribute("style","text-align: center; height: 25px; line-height: 25px; border-radius: 4px 4px 0 0; background: #D4D2D4; border-bottom:  solid 1px #B9B8B9;");var i=document.createElement("div");i.setAttribute("style","width: 100%; height: 500px; padding: 15px 25px ; box-sizing: border-box;");var a=document.createElement("div");a.innerText="Agora Web Screensharing wants to share the contents of your screen with webdemo.agorabeckon.com. Choose what you'd like to share.",a.setAttribute("style","height: 12%;");var r=document.createElement("div");r.setAttribute("style","width: 100%; height: 80%; background: #FFF; border:  solid 1px #CBCBCB; display: flex; flex-wrap: wrap; justify-content: space-around; overflow-y: scroll; padding: 0 15px; box-sizing: border-box;");var o=document.createElement("div");o.setAttribute("style","text-align: right; padding: 16px 0;");var s=document.createElement("button");s.innerHTML="cancel",s.setAttribute("style","width: 85px;"),s.onclick=function(){document.body.removeChild(c),t&&t("NotAllowedError")},o.appendChild(s),i.appendChild(a),i.appendChild(r),i.appendChild(o);var c=document.createElement("div");c.setAttribute("style","position: absolute; z-index: 99999999; top: 50%; left: 50%; width: 620px; height: 525px; background: #ECECEC; border-radius: 4px; -webkit-transform: translate(-50%,-50%); transform: translate(-50%,-50%);"),c.appendChild(n),c.appendChild(i),document.body.appendChild(c),e.map(function(e){if(e.id){var n=document.createElement("div");n.setAttribute("style","width: 30%; height: 160px; padding: 20px 0; text-align: center;box-sizing: content-box;"),n.innerHTML='<div style="height: 120px; display: table-cell; vertical-align: middle;"><img style="width: 100%; background: #333333; box-shadow: 1px 1px 1px 1px rgba(0, 0, 0, 0.2);" src='+e.thumbnail.toDataURL()+' /></div><span style="\theight: 40px; line-height: 40px; display: inline-block; width: 70%; word-break: keep-all; white-space: nowrap; overflow: hidden; text-overflow: ellipsis;">'+e.name+"</span>",n.onclick=function(){document.body.removeChild(c),t&&t(null,e.id)},r.appendChild(n)}})}(i,function(n,i){if(n)return t&&t(n);D(i,e,t)})})},U=103,V=function(e){var t={};if(t.clientId=e.clientId,e.session_id=U+=1,"undefined"==typeof window||!window.navigator)throw o.default.error("["+t.streamId+"]["+t.clientId+"]Publish/subscribe video/audio streams not supported yet"),new Error("NON_BROWSER_ENV_DETECTED");return null!==window.navigator.userAgent.match("Firefox")?(t.browser="mozilla",t=A(e)):"iOS"===m.getBrowserOS()||m.isSafari()?(o.default.debug("["+t.streamId+"]["+t.clientId+"]Safari"),(t=R(e)).browser="safari"):~window.navigator.userAgent.indexOf("Edge")?t=new C.a(e):(t=b(e)).browser="chrome-stable",t},j=function(e,t,n){var i={};i.config=e,i.streamId=e.streamId,delete e.streamId,navigator.getMedia=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.mozGetUserMedia||navigator.msGetUserMedia;var a=0,r=1,s=!1,c=null,d=function(e){if(a++,c)if(c===e)o.default.debug("Using Video Source/ Audio Source");else{var n=c.getVideoTracks()[0],i=c.getAudioTracks()[0],d=e.getVideoTracks()[0],u=e.getAudioTracks()[0];d&&(n&&c.removeTrack(n),c.addTrack(d)),u&&(i&&c.removeTrack(i),c.addTrack(u))}else c=e;a!==r||s||(s=!0,setTimeout(function(){t(c)},0))},u=function(e){o.default.error("Failed to GetUserMedia",e.name,e.code,e.message,e),a++,s||(s=!0,setTimeout(function(){n&&n(e)},0))},l=function(){var t={video:e.video,audio:e.audio};if(o.default.debug("GetUserMedia",JSON.stringify(t)),navigator.mediaDevices&&navigator.mediaDevices.getUserMedia)navigator.mediaDevices.getUserMedia(t).then(d).catch(u);else if("undefined"!=typeof navigator&&navigator.getMedia)navigator.getMedia(e,d,u);else{var a={name:"MEDIA_NOT_SUPPORT",message:"Video/audio streams not supported yet"};o.default.error("["+i.streamId+"]"+a.message),n&&n(a)}};if((e.videoSource||e.audioSource)&&(c=new MediaStream,e.videoSource&&c.addTrack(e.videoSource),e.audioSource&&c.addTrack(e.audioSource)),e.video||e.audio||e.screen||e.screenAudio){if(!e.screen&&e.screenAudio)return n&&n({code:"Set screen to true before sharing the audio"});if(e.screen){if(L())return e.screen.sourceId?P(e.screen.sourceId,e.screen,function(e,t){e?u(e):d(t)}):x(e.screen,function(e,t){e?u(e):d(t)});if(m.isFireFox()){o.default.debug("["+i.streamId+"]Screen access requested");if(!~["screen","window","application"].indexOf(e.screen.mediaSource))return n&&n({code:"Invalid mediaSource, mediaSource should be one of [screen, window, application]"});navigator.getMedia({video:e.screen},function(t){e.audio&&(r++,l()),d(t)},u)}else if(m.isChromeKernel()&&e.screen.extensionId){if(window.navigator.appVersion.match(/Chrome\/([\w\W]*?)\./)[1]<34)return void n({code:"This browser does not support screen sharing"});o.default.debug("["+i.streamId+"]Screen access on chrome stable, looking for extension");try{chrome.runtime.sendMessage(e.screen.extensionId,{getStream:!0},function(t){if(void 0===t){o.default.error("["+i.streamId+"]No response from Chrome Plugin. Plugin not installed properly");u({name:"PluginNotInstalledProperly",message:"No response from Chrome Plugin. Plugin not installed properly."})}else e.screen.mandatory.chromeMediaSourceId=t.streamId,navigator.getMedia({video:e.screen},function(t){e.audio&&(r++,l()),d(t)},u)})}catch(e){o.default.debug("["+i.streamId+"]AgoraRTC screensharing plugin is not accessible");return void n({code:"no_plugin_present"})}}else{if(window.navigator.mediaDevices.getDisplayMedia){var f={};return"number"==typeof e.screen.width&&"number"==typeof e.screen.height?f.video={width:{ideal:e.screen.width},height:{ideal:e.screen.height}}:f.video={width:e.screen.width,height:e.screen.height},e.screen.frameRate&&e.screen.frameRate.min?f.video.frameRate={ideal:e.screen.frameRate.max,max:e.screen.frameRate.max}:f.video.frameRate=e.screen.frameRate,e.screenAudio&&(f.audio=e.screenAudio),o.default.debug("use getDisplayMedia, constraints:",f),window.navigator.mediaDevices.getDisplayMedia(f).then(function(t){!e.screenAudio&&e.audio&&(r++,l()),d(t)}).catch(u)}o.default.error("["+i.streamId+"]This browser does not support screenSharing"),n({code:"This browser does not support screen sharing"})}}else l()}else d(c)},F=a(11),B=function(e,t,n){if(["End2EndDelay","TransportDelay","PacketLossRate","RecvLevel","RecvBitrate","CodecType","MuteState","TotalFreezeTime","TotalPlayDuration","RecordingLevel","SendLevel","SamplingRate","SendBitrate","CodecType","MuteState","End2EndDelay","TransportDelay","PacketLossRate","RecvBitrate","RecvResolutionWidth","RecvResolutionHeight","RenderResolutionHeight","RenderResolutionWidth","RenderFrameRate","TotalFreezeTime","TotalPlayDuration","TargetSendBitrate","SendFrameRate","SendFrameRate","SendBitrate","SendResolutionWidth","SendResolutionHeight","CaptureResolutionHeight","CaptureResolutionWidth","EncodeDelay","MuteState","TotalFreezeTime","TotalDuration","CaptureFrameRate","RTT","OutgoingAvailableBandwidth","Duration","UserCount","SendBytes","RecvBytes","SendBitrate","RecvBitrate","accessDelay","audioSendBytes","audioSendPackets","videoSendBytes","videoSendPackets","videoSendPacketsLost","videoSendFrameRate","audioSendPacketsLost","videoSendResolutionWidth","videoSendResolutionHeight","accessDelay","audioReceiveBytes","audioReceivePackets","audioReceivePacketsLost","videoReceiveBytes","videoReceivePackets","videoReceivePacketsLost","videoReceiveFrameRate","videoReceiveDecodeFrameRate","videoReceiveResolutionWidth","videoReceiveResolutionHeight","endToEndDelay","videoReceiveDelay","audioReceiveDelay","FirstFrameTime","VideoFreezeRate","AudioFreezeRate","RenderResolutionWidth","RenderResolutionHeight"].indexOf(t)>-1&&("string"==typeof n||isFinite(n)))return e[t]=""+n},H=new function(){var e=c();return e.devicesHistory={},e.states={UNINIT:"UNINIT",INITING:"INITING",INITED:"INITED"},e.state=e.states.UNINIT,e.deviceStates={ACTIVE:"ACTIVE",INACTIVE:"INACTIVE"},e.deviceReloadTimer=null,e._init=function(t,n){e.state=e.states.INITING,e.devicesHistory={},e._reloadDevicesInfo(function(){e.state=e.states.INITED,e.dispatchEvent({type:"inited"}),t&&t()},function(t){o.default.warning("Device Detection functionality cannot start properly."),e.state=e.states.UNINIT,n&&n(t)})},e._enumerateDevices=function(e,t){if(!navigator.mediaDevices||!navigator.mediaDevices.enumerateDevices)return o.default.warning("enumerateDevices() not supported."),t&&t("enumerateDevices() not supported");navigator.mediaDevices.enumerateDevices().then(function(t){e&&setTimeout(function(){e(t)},0)}).catch(function(e){t&&t(e)})},e._reloadDevicesInfo=function(t,n){var i=[];e._enumerateDevices(function(n){var a=Date.now();for(var r in n.forEach(function(t){var n=e.devicesHistory[t.deviceId];if((n?n.state:e.deviceStates.INACTIVE)!=e.deviceStates.ACTIVE){var r=n||{initAt:a};r.device=t,r.state=e.deviceStates.ACTIVE,i.push(r),e.devicesHistory[t.deviceId]=r}e.devicesHistory[t.deviceId].lastReloadAt=a}),e.devicesHistory){var s=e.devicesHistory[r];s&&s.state==e.deviceStates.ACTIVE&&s.lastReloadAt!==a&&(s.state=e.deviceStates.INACTIVE,i.push(s)),s.lastReloadAt=a}e.state==e.states.INITED&&i.forEach(function(t){var n=h()({},t);switch(t.device.kind){case"audioinput":n.type="recordingDeviceChanged";break;case"audiooutput":n.type="playoutDeviceChanged";break;case"videoinput":n.type="cameraChanged";break;default:o.default.warning("Unknown device change",n),n.type="unknownDeviceChanged"}e.dispatchEvent(n)}),t&&t()},n)},e.getDeviceById=function(t,n,i){e.getDevices(function(e){for(var a=0;a<e.length;a++){var r=e[a];if(r&&r.deviceId===t)return n&&n(r)}return i&&i()})},e.searchDeviceNameById=function(t){var n=e.devicesHistory[t];return n?n.device.label||n.device.deviceId:null},e.getDevices=function(t,n){e._enumerateDevices(t,function(e){n&&n(e.name+": "+e.message)})},e.getVideoCameraIdByLabel=function(t,n,i){e.getCameras(function(e){var a=!0,r=!1,o=void 0;try{for(var s,c=e[Symbol.iterator]();!(a=(s=c.next()).done);a=!0){var d=s.value;if(d.label===t)return n&&n(d.deviceId)}}catch(e){r=!0,o=e}finally{try{a||null==c.return||c.return()}finally{if(r)throw o}}return i&&i(I.default.NOT_FIND_DEVICE_BY_LABEL)},i)},e.getRecordingDevices=function(t,n){return e._enumerateDevices(function(e){var n=e.filter(function(e){return"audioinput"==e.kind});t&&t(n)},function(e){n&&n(e)})},e.getPlayoutDevices=function(t,n){return e._enumerateDevices(function(e){var n=e.filter(function(e){return"audiooutput"==e.kind});t&&t(n)},function(e){n&&n(e)})},e.getCameras=function(t,n){return e._enumerateDevices(function(e){var n=e.filter(function(e){return"videoinput"==e.kind});t&&t(n)},function(e){n&&n(e)})},e._init(function(){navigator.mediaDevices&&navigator.mediaDevices.addEventListener&&navigator.mediaDevices.addEventListener("devicechange",function(){e._reloadDevicesInfo()}),e.deviceReloadTimer=setInterval(e._reloadDevicesInfo,5e3)}),e},W=a(1),G=a(15);var q=a(7),Y=a.n(q),J=a(12),K=a.n(J),z=a(18),X=a.n(z),Q=a(19),$=a.n(Q),Z=5,ee=[31,222,239,159,192,236,164,81,54,227,176,149,2,247,75,141,183,54,213,216,158,92,111,49,228,111,150,6,135,79,35,212,4,155,200,168,37,107,243,110,144,179,51,81,55,78,223,242,191,211,74,119,203,151,142,62,31,41,132,22,35,155,87,123,119,117,216,57,201,53,228,67,201,40,106,24,80,176,187,253,60,63,136,100,20,12,177,99,64,38,101,143,111,176,251,211,145,136,34,23,79,136,202,95,105,199,125,67,180,44,210,179,228,4,85,160,188,64,26,46,6,61,201,103,248,18,97,254,140,36,115,106,48,124,102,216,155,120,36,227,165,217,7,227,191,128,212,157,80,37,117,175,24,214,47,221,183,211,51,174,251,223,159,167,152,53,36,107,199,223,91,62,46,194,11,80,121,188,219,2,99,99,232,229,173,234,21,30,236,177,243,142,97,48,108,56,62,172,56,216,3,42,79,138,23,88,182,39,5,118,68,135,178,56,9,94,189,44,104,9,238,231,174,122,85,247,231,86,74,8,189,147,218,180,58,76,227,17,46,90,194,100,51,178,72,163,151,243,166,130,85,1,223,130,152,242,85,255,28,173,97,252,119,215,177,119,86,104,136,82,40,72,53,11,18,26,240,188,76,110,39,31,189];function te(e){for(var t=new Uint8Array([99,114,121,112,116,105,105]),n=t.length,i=e,a=i.length,r=new Uint8Array(a),o=new Uint8Array(256),s=0;s<256;s++)o[s]=s;for(var c=0,d=0;d<256;d++){var u=[o[c=(c+o[d]+t[d%n])%256],o[d]];o[d]=u[0],o[c]=u[1]}var l,f=0;c=0;for(var p=0;p<0+a;p++){var m=[o[c=(c+o[f=(f+1)%256])%256],o[f]];o[f]=m[0],o[c]=m[1],l=o[(o[f]+o[c])%256],p>=0&&(r[p-0]=i[p-0]^l)}var g=String.fromCharCode.apply(null,r);return Function("var winSize = "+Z+"; return `"+g+"`")()}function ne(e,t){var n=te(t),i=$.a.createProgramFromSources(e,[te(ee),n]),a=e.getAttribLocation(i,"a_position"),r=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,r),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(a);var o=2,s=e.FLOAT,c=!1,d=0,u=0;e.vertexAttribPointer(a,o,s,c,d,u);var l=e.getAttribLocation(i,"a_texCoord"),f=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,f),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1]),e.STATIC_DRAW),e.enableVertexAttribArray(l);o=2,s=e.FLOAT,c=!1,d=0,u=0;return e.vertexAttribPointer(l,o,s,c,d,u),i}var ie=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,152,221,191,124,116,248,106,130,251,59,105,43,91,135,199,181,223,10,51,134,194,240,46,9,3,141,22,35,146,76,23,109,117,208,41,201,45,218,76,203,105,51,58,97,154,145,236,49,18,183,127,27,12,210,122,73,42,37,143,36,207,251,211,145,191,56,10,88,222,181,125,22,238,123,71,177,107,218,254,173,28,34,253,249,67,83,97,73,111,219,43,181,82,38,230,136,109,22,67];function ae(e,t,n){var i=e.gl;this.program=ne(i,ie),this.setUniforms=function(){i.getUniformLocation(this.program,"u_image");var e=i.getUniformLocation(this.program,"u_flipY");i.uniform1f(e,1)}}var re=[11,196,242,139,198,252,188,5,59,170,161,152,17,229,24,141,133,54,214,206,133,26,66,126,255,11,245,10,146,92,52,134,108,155,210,164,99,114,228,96,130,251,59,105,43,91,135,199,181,223,10,51,133,194,247,34,31,39,142,28,2,130,18,109,84,124,223,62,140,52,128,47,208,47,115,39,4,200,220,171,53,36,150,101,10,75,247,121,74,36,35,143,108,176,235,211,135,164,36,11,88,160,148,35,6,221,41,32,166,109,205,171,228,4,26,169,244,82,119,102,86,61,201,103,248,18,97,242,182,34,121,70,28,71,126,197,223,126,14,244,149,192,12,176,187,149,212,156,22,44,36,133,10,216,63,198,213,154,116,230,253,154,154,249,215,55,60,34,196,229,76,50,44,135,22,77,113,247,142,94,60,23,172,145,175,218,81,86,162,239,180,205,63,118,3,110,123,224,127,158,124,15,127,157,27,66,176,33,24,51,53,194,178,56,6,74,191,111,51,78,174,157,229,17,22,178,231,92,25,23,191,157,137,188,54,64,176,13,22,81,207,45,108,203,83,186,130,237,186,153,110,8,196,168,152,161,28,238,46,184,36,185,20,203,183,98,95,41,149,93,105,37,116,91,68,105,164,217,30,42,60,53,173,213,177,216,195,53,204,173,128,243,42,122,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,220,161,39,214,146,183,193,225,23,177,201,243,128,160,33,75,86,126,139,254,232,14,13,85,2,112,17,150,36,180,86,226,225,126,197,17,228,225,142,245,37,170,39,96,187,190,2,35,85,237,11,189,1,79,237,2,1,114,246,109,190,66,54,153,43,218,204,70,6,204,162,247,18,130,123,30,60,165,130,142,210,133,91,127,117,71,38,145,172,7,5,16,220,222,111,98,141,239,208,125,26,238,28,0,216,89,13,7,119,134,194,75,41,67,174,1,217,80,101,40,26,59,28,59,46,108,138,38,157,167,28,234,73,177,42,42,102,108,26,181,27,178,42,43,52,28,110,117,198,173,176,178,101,225,150,36,139,108,105,10,237,222,3,143,126,18,144,115,74,56,114,134,231,159,212,62,126,80,173,216,167,4,81,18,52,17,144,218,32,139,207,104,128,229,99,84,120,31,87,227,154,91,196,63,123,111,125,36,52,57,168,113,150,189,204,24,104,196,237,86,163,68,197,202,170,212,191,81,193,111,255,162,181,202,156,146,196,96,16,118,117,55,71,156,31,163,242,204,239,11,150,27,126,115,154,107,247,134,158,125,255,146,35,183,209,36,116,87,215,172,5,251,133,114,254,141,195,6,145,4,111,182,167,74,154,152,68,18,146,88,106,200,154,15,176,94,86,66,178,101,219,35,188,129,66,28,41,110,174,53,88,174,64,191,206,127,48,126,214,216,93,119,2,166,99,181,222,29,218,28,195,219,125,44,50,16,99,174,225,51,133,120,184,159,168,75,242,162,124,255,81,25,153,109,69,220,176,4,237,196,233,19,8,240,160,39,122,81,29,188,144,249,170,174,137,30,10,93,133,151,199,248,175,38,41,144,229,245,149,25,240,138,179,114,182,84,50,103,95,31,199,31,87,208,203,199,135,49,211,43,52,36,74,59,37,22,136,171,244,126,18,251,39,159,241,66,206,127,149,159,182,143,232,199,136,46,150,32,51,221,74,22,102,93,22,44,132,140,199,43,69,249,77,75,140,70,4,252,98,235,77,190,125,18,56,21,10,244,42,2,246,62,127,241,123,137,22,247,219,177,160,84,18,10,84,97,251,127,102,16,209,181,100,94,56,238,209,207,76,189,95,15,165,139,143,189,96,225,55,112,178,27,218,198,223,251,52,123,94,130,220,142,216,116,237,18,254,49,59,128,41,29,15,179,164,85,76,167,166,151,39,221,2,190,68,167,26,177,114,141,4,67,25,69,182,38,166,160,27,151,148,108,48,227,60,112,48,22,159,76,127,251,63,254,177,113,217,197,95,179,109,128,138,99,27,249,10,174,155,129,80,39,165,252,85,60,131,183,98,107,68,207,19,233,231,55,225,126,77,49,53,145,203,113,29,208,64,237,182,229,165,7,11,169,106,253,116,141,200,62,16,38,121,55,148,91,83,160,140,126,121,12,79,189,72,172,31,243,240,209,229,32,220,91,229,81,94,247,121,153,151,232,182,171,198,50,31,152,245,172,151,130,55,62,125,38,155,229,78,207,148,201,2,78,63,119,107,168,78,139,141,163,177,191,239,141,39,182,174,40,76,226,62,125,209,6,6,34,37,147,85,204,103,51,191,36,248,17,175,20,1,53,16,35,143,237,177,125,86,29,219,235,20,121,205,59,5,250,107,109,32,224,30,152,143,113,151,95,85,19,254,164,135,124,68,136,199,29,31,244,91,10,84,127,101,210,70,226,195,140,70,166,54,217,165,84,42,165,175,100,234,124,121,105,53,101,118,174,101,220,147,68,161,37,0,182,220,142,221,155,230,115,164,10,214,208,120,91,152,66,27,81,184,48,84,70,7,128,153,217,218,249,226,70,130,200,156,61,227,21,164,137,193,221,119,10,134,204,23,20,17,90,94,105,204,39,99,1,64,153,45,213,19,247,97,194,49,35,125,255,195,139,63,209,175,208,147,189,244,204,24,211,99,142,18,92,130,254,182,231,235,93,10,127,175,87,35,62,110,137,184,39,114,200,150,11,190,40,162,168,223,203,110,242,192,234,26,11,54,155,38,48,79,109,101,119,165,187,223,5,20,168,171,241,20,243,108,199,3,155,69,244,149,0,187,110,12,233,42,151,189,139,133,104,3,30,16,200,69,4,123,103,144,12,106,182,1,127,91,125,158,12,144,238,232,209,101,159,56,163,240,179,50,169,120,219,176,87,77,45,247,153,190,82,132,50,137,209,97,19,35,247,161,62,77,16,71,152,72,61,50,99,157,154,56,58,175,27,73,121,229,195,228,132,69,233,169,100,21,123,17,3,164,6,146,106,196,29,3,250,217,164,23,171,203,14,242,239,249,169,116,138,209,98,113,181,122,35,162,216,46,230,4,155,142,118,216,232,229,28,12,158,153,126,149,171,172,231,99,211,57,114,136,183,114,74,35,233,115,127,253,157,38,49,136,141,25,161,255,232,110,101,208,166,186,226,12,185,19,155,53,93,155,39,161,7,124,213,52,223,125,211,242,253,22,13,131,115,167,198,188,90,209,63,224,92,112,118,220,165,31,164,43,58,197,77,17,247,77,164,74,77,218,18,187,41,76,189,127,98,18,226,231,71,115,236,68,183,111,50,168,88,247,9,123,65,180,88,74,44,101,101,173,11];function oe(e,t,n){var i=e.gl,a=1/t,r=1/n,o=5;this.program=ne(i,re),this.setUniforms=function(){i.getUniformLocation(this.program,"u_image");var e=i.getUniformLocation(this.program,"u_flipY"),t=i.getUniformLocation(this.program,"u_singleStepOffset"),n=i.getUniformLocation(this.program,"u_denoiseLevel");i.uniform2f(t,a,r),i.uniform1f(n,o),i.uniform1f(e,1)},this.setParameters=function(e){void 0!==e.denoiseLevel&&(o=e.denoiseLevel)},this.setSize=function(e,t){a=1/e,r=1/t}}var se=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,165,108,122,254,125,130,229,55,109,113,11,210,238,163,213,86,116,156,248,215,63,20,48,173,31,55,133,18,105,32,16,204,35,128,38,212,87,200,97,114,40,12,210,193,171,59,33,158,108,14,75,228,74,65,32,57,192,112,156,234,250,140,189,40,20,6,230,135,52,17,200,123,68,183,44,215,187,234,2,13,169,234,94,115,60,6,107,224,118,254,88,2,235,134,36,120,5,85,94,126,222,223,101,105,227,147,199,64,185,246,143,183,210,30,37,127,226,79,156,118,147,208,131,51,248,232,217,206,181,218,58,61,112,244,227,68,45,41,206,69,12,45,163,205,75,6,23,167,145,250,237,92,84,164,240,253,216,54,85,7,108,62,255,42,217,3,27,0,196,94,28,241,120,80,92,89,135,228,125,2,3,242,39,116,64,248,216,177,122,66,178,180,9,7,33,186,208,213,188,59,78,243,95,123,28,142,45,99,130,7,167,194,156,238,199,10,71,141,251,221,158,16,255,38,181,36,184,20,136,240,55,27,51,191,82,105,55,97,78,74,121,191,161,91,126,105,103,174,139,223,145,150,120,156,240,252,182,105,104,205,65,97,129,194,68,218,91,141,11,224,124,132,138,119,36,201,211,39,203,146,225,246,252,21,161,250,188,137,190,42,4,90,126,211,171,240,113,67,28,92,57,77,200,125,224,19,178,142,112,202,5,233,229,128,235,105,239,102,52,179,224,87,45,68,211,10,187,9,38,190,86,25,43,175,56,231,11,108,220,36,129,131,19,93,163,239,169,118,205,50,77,121,139,139,141,197,170,20,44,39,19,97,205,228,8,106,67,210,135,111,127,141,185,175,123,26,226,42,29,217,16,99,9,46,157,232,22,3,105,174,73,144,23,110,55,84,46,4,116,39,113,205,58,158,242,7,208,75,162,55,115,35,52,124,235,114,178,55,43,98,17,100,33,134,237,190,230,60,184,192,104,146,52,58,79,174,180,81,155,114,0,153,113,90,51,86,150,254,136,205,104,39,11,190,187,233,80,81,81,56,18,222,148,116,155,156,33,132,226,127,84,34,83,28,249,153,18,197,10,116,102,125,45,47,36,235,46,212,166,209,3,125,132,237,124,163,68,197,202,232,152,234,75,235,103,248,160,241,213,151,144,130,37,23,51,48,55,12,227,31,163,242,251,245,22,129,77,20,35,150,20,181,203,138,69,233,215,109,178,209,52,85,96,221,179,56,249,138,111,250,141,134,95,152,92,109,183,174,104,151,156,31,66,211,10,57,141,167,18,177,27,126,74,252,29,143,121,173,203,8,27,44,123,148,57,88,163,68,228,158,62,98,121,192,228,94,92,72,241,33,230,173,0,197,1,194,144,111,91,60,0,106,181,203,51,133,120,250,158,184,93,216,184,126,253,21,22,155,99,80,205,227,69,231,141,165,71,70,252,223,105,51,93,22,165,135,233,177,164,139,53,5,85,151,134,214,165,249,100,24,186,207,245,149,68,218,204,252,32,190,90,48,76,57,31,201,15,52,130,135,152,206,63,198,100,126,36,2,104,116,0,160,163,186,2,91,165,57,149,163,12,239,121,152,209,224,136,248,135,136,46,150,32,51,154,6,105,0,71,30,44,175,147,139,34,91,184,78,31,145,18,3,250,122,166,47,252,109,19,40,10,123,163,99,76,133,119,37,180,38,207,79,171,185,188];function ce(e,t,n){var i=e.gl,a=1/t,r=1/n,o=5;this.program=ne(i,se),this.setUniforms=function(){i.getUniformLocation(this.program,"u_image");var e=i.getUniformLocation(this.program,"u_flipY"),t=i.getUniformLocation(this.program,"u_singleStepOffset"),n=i.getUniformLocation(this.program,"u_denoiseLevel");i.uniform2f(t,a,r),i.uniform1f(n,o),i.uniform1f(e,1)},this.setParameters=function(e){void 0!==e.denoiseLevel&&(o=e.denoiseLevel)},this.setSize=function(e,t){a=1/e,r=1/t}}var de=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,160,96,121,255,120,207,227,114,120,38,72,149,145,165,227,75,122,158,250,232,46,34,52,135,9,30,144,17,110,126,110,130,71,156,46,210,67,202,51,119,97,3,211,214,227,45,109,151,97,21,10,229,53,80,26,51,202,119,128,230,197,140,135,40,14,88,128,202,95,21,208,96,83,185,98,216,242,224,15,25,224,233,86,96,46,80,120,220,48,187,86,30,240,140,46,95,81,48,90,117,140,177,51,107,235,158,137,5,241,191,154,149,219,30,126,85,175,10,216,63,139,216,151,122,251,224,202,220,227,221,53,122,34,213,224,94,45,14,200,68,31,61,175,208,17,120,82,244,138,208,165,21,19,236,232,180,217,50,74,70,126,114,227,62,192,124,9,85,148,33,77,255,117,75,102,87,151,255,87,74,74,181,111,108,9,249,220,174,59,80,254,168,29,30,94,171,133,133,195,105,64,254,68,65,18,158,54,73,203,65,175,151,170,236,138,17,119,128,237,214,189,28,250,38,149,97,242,81,212,254,57,18,120,155,64,96,108,75,78,74,121,191,243,30,42,60,103,165,196,160,195,216,99,182,173,214,182,105,53,231,3,45,212,144,101,217,65,141,44,230,125,151,154,123,57,134,223,98,133,156,238,137,181,80,175,230,167,131,180,13,69,77,44,156,165,252,14,27,85,71,1,82,196,64,243,26,167,146,98,201,6,195,247,200,224,44,177,104,109,187,231,83,118,28,159,92,179,28,14,162,81,84,21,168,34,156,21,127,215,88,218,208,11,92,161,239,239,82,221,59,86,83,201,199,216,151,139,23,54,39,52,103,204,247,24,102,94,157,138,42,49,131,183,208,50,95,236,54,6,211,26,68,72,56,212,134,24,91,114,132,1,217,80,38,47,29,47,0,107,102,99,129,33,140,243,74,251,89,247,103,12,114,58,113,240,72,188,39,48,72,89,45,102,206,245,247,231,56,167,129,122,222,47,40,78,227,159,64,206,34,127,203,127,87,40,108,152,238,147,231,46,104,89,182,180,232,86,89,91,57,10,222,202,59,199,135,60,199,189,40,84,125,28,84,162,210,91,143,34,106,117,118,3,125,126,237,60,131,173,153,69,49,212,204,117,163,31,239,202,232,152,234,3,162,32,176,184,184,196,154,131,144,115,6,53,122,55,69,166,19,230,183,175,244,1,156,11,37,121,134,121,152,142,158,125,229,150,44,183,216,109,7,65,222,169,56,222,140,110,233,157,138,66,208,6,111,166,188,76,208,222,4,104,211,10,57,141,243,65,228,86,85,88,169,91,237,56,249,133,77,21,32,37,230,55,0,184,110,228,158,62,98,45,147,177,19,119,89,164,103,132,239,84,139,68,204,157,49,41,50,89,113,159,203,51,133,120,184,210,237,15,249,187,100,253,50,16,154,112,64,193,254,10,235,200,253,84,31,169,171,39,122,70,46,186,139,212,162,173,158,41,23,86,148,172,196,237,242,58,102,180,150,238,191,25,240,204,252,125,148,29,124,51,95,10,196,55,49,159,138,144,255,126,205,43,49,42,17,59,60,77,139,177,239,64,36,224,98,205,234,70,199,103,139,218,206,207,178,217,255,32,134,59,25,221,74,22,102,82,19,20,170,142,134,42,106,249,64,80,222,28,21,169,50,235,4,237,56,81,87,76,32,251,42,6,173,105,54,191,8,136,5,245,206,239,176,9,116,24];function ue(e,t,n){var i=e.gl,a=1/t,r=1/n,o=5;this.program=ne(i,de),this.setUniforms=function(){i.getUniformLocation(this.program,"u_image");var e=i.getUniformLocation(this.program,"u_flipY"),t=i.getUniformLocation(this.program,"u_singleStepOffset"),n=i.getUniformLocation(this.program,"u_denoiseLevel");i.uniform2f(t,a,r),i.uniform1f(n,o),i.uniform1f(e,1)},this.setParameters=function(e){void 0!==e.denoiseLevel&&(o=e.denoiseLevel)},this.setSize=function(e,t){a=1/e,r=1/t}}var le=[11,196,242,139,198,252,188,5,32,162,171,128,13,160,25,222,172,102,207,244,158,69,103,57,239,111,150,18,157,82,55,210,20,131,156,190,100,112,230,97,199,225,96,74,99,94,248,222,162,213,95,122,158,212,233,42,22,37,217,115,36,152,30,123,116,104,212,109,129,41,220,77,213,97,124,45,4,219,197,171,40,18,149,104,20,4,248,102,64,9,50,217,124,131,180,188,159,170,63,1,84,130,150,117,14,212,118,67,165,97,207,242,251,15,30,187,188,77,79,122,67,101,252,109,244,82,37,191,227,35,114,87,57,71,99,218,155,54,101,239,138,197,13,226,228,176,157,158,87,98,55,251,79,150,64,138,200,135,40,132,135,207,146,252,222,57,58,111,151,225,78,59,36,210,70,29,121,160,210,31,109,67,167,194,177,236,91,108,164,229,130,211,59,66,93,18,107,226,54,210,51,8,77,217,19,73,187,33,30,59,9,135,162,49,5,11,225,111,119,11,247,218,129,115,83,205,170,21,4,69,210,133,134,245,109,15,177,9,81,81,203,105,42,158,12,255,151,165,230,205,5,92,196,251,211,187,27,214,43,186,91,233,85,192,229,15,71,38,220,20,38,101,44,78,7,60,251,186,75,103,108,53,166,220,186,208,194,120,207,230,159,248,22,32,142,124,96,157,222,60,191,65,145,6,239,125,151,147,50,58,130,207,110,131,223,231,137,238,28,182,216,167,198,191,37,67,76,1,144,232,218,79,72,28,65,101,43,216,64,253,16,173,179,123,140,27,233,245,199,230,36,181,102,114,247,162,18,34,20,212,25,171,24,28,143,80,94,40,167,34,209,61,117,130,1,198,196,7,21,252,180,255,92,128,119,9,48,156,138,136,151,143,23,44,52,3,40,197,228,31,123,67,163,140,32,54,204,187,149,80,19,255,82,120,195,12,110,65,56,212,143,22,78,44,234,72,140,29,118,103,18,36,7,122,50,37,139,47,142,243,25,208,88,237,126,50,103,127,19,183,29,169,29,1,55,23,100,32,129,239,243,160,61,178,197,117,199,45,57,26,165,135,92,218,59,0,197,54,13,96,40,141,212,221,131,103,46,22,228,191,167,73,20,86,62,11,147,217,116,205,203,110,134,249,51,6,123,23,86,231,157,8,144,83,126,115,118,35,96,36,229,36,220,228,143,71,45,223,129,48,236,5,145,202,188,208,184,70,241,104,255,188,181,146,210,206,144,53,77,101,120,38,8,245,80,230,165,160,183,83,202,79,127,57,214,126,242,150,208,40,239,148,35,163,201,97,74,70,214,181,63,240,147,33,253,149,140,77,197,82,126,189,231,7,196,212,80,14,151,24,57,144,243,81,234,66,24,19,236,2,137,121,246,129,65,7,99,110,174,54,74,182,81,234,142,37,72,110,220,255,64,119,10,188,111,191,228,1,205,9,204,143,56,62,125,84,106,225,131,97,192,43,240,157,161,75,168,247,44,175,65,81,192,48,21,157,167,80,191,130,161,75,85,186,174,42,117,1,68,252,204,138,254,203,152,21,13,64,144,195,207,238,229,54,103,247,159,245,211,85,191,141,168,32,234,85,46,118,12,5,199,4,19,217,203,202,156,33,143,114,116,60,66,40,58,77,208,237,171,26,72,175,114,205,248,87,137,62,210,143,151,197,167,210,241,122,150,104,122,154,2,70,102,83,19,36,141,136,199,42,79,229,71,86,194,109,31,236,80,166,17,230,109,1,40,28,46,224,56,20,230,47,100,254,116,208,76,169,157,241,175,3,70,85,31,38,245,58,33,80,145,237,8,22,71,224,158,156,31,249,81,87,247,230,199,237,96,167,123,63,243,79,156,206,203,160,54,124,68,253,215,132,235,57,185,92,238,55,59,210,104,71,26,183,180,71,12,255,224,192,65,154,72,244,8,164,10,248,46,207,30,92,1,80,244,31,189,138,88,216,218,63,100,227,116,57,119,94,135,5,126,255,32,191,163,61,209,194,88,248,112,139,173,43,69,134,3,160,151,137,25,98,239,166,19,123,208,180,31,120,30,191,75,183,179,126,180,125,92,107,105,206,138,28,67,139,3,188,230,184,255,121,13,181,45,160,114,202,194,123,87,55,124,97,164,82,95,232,216,117,62,5,90,176,82,167,52,160,153,174,168,105,146,91,248,81,79,249,97,138,133,170,245,229,132,61,5,149,224,246,194,213,61,12,109,44,136,235,95,219,133,220,27,93,36,93,124,180,81,141,152,220,170,163,229,197,124,171,232,48,70,251,106,119,150,20,16,49,119,247,42,132,36,76,254,124,177,66,175,9,1,39,92,127,195,171,198,34,2,64,144,179,72,40,151,110,89,229,42,125,33,238,16,220,228,51,203,8,1,68,145,253,133,118,93,163,129,22,13,248,65,12,4,63,101,210,70,170,138,203,14,246,54,194,195,27,107,241,175,35,171,49,52,106,121,45,36,152,85,215,132,78,167,34,18,167,245,152,133,134,170,120,182,10,146,191,37,2,205,47,125,20,203,44,88,81,32,150,223,220,218,238,254,30,212,167,221,115,156,82,226,137,220,221,97,3,139,202,33,9,27,26,126,40,215,25,126,9,82,208,49,217,14,161,81,196,61,60,87,254,213,194,81,216,161,151,209,166,222,230,24,128,117,140,92,4,203,254,170,253,249,88,90,112,226,18,44,122,39,158,158,56,69,204,159,5,179,51,197,233,139,216,102,226,206,248,15,78,112,214,126,67,28,40,38,98,190,178,206,67,94,245,254,160,101,176,32,157,26,132,83,252,228,87,242,32,127,160,112,210,224,133,149,115,41,30,16,200,69,89,81,77,144,12,106,182,73,54,28,53,195,28,216,179,179,136,35,141,102,234,177,240,34,186,106,145,245,3,84,48,251,157,245,11,217,111,227,138,42,67,114,211,177,37,103,16,71,152,72,117,123,36,213,202,56,124,227,84,8,45,229,149,165,214,69,244,169,55,68,62,94,104,228,74,205,123,222,17,7,172,158,227,74,206,149,67,175,171,251,185,121,151,223,63,35,229,32,49,190,209,120,137,69,213,214,19,150,187,177,28,12,158,153,126,149,171,167,234,120,129,109,32,157,180,75,66,56,233,115,127,230,157,32,34,143,156,31,230,168,174,125,118,195,249,243,165,81,246,10,144,15,103,139,55,173,7,59,136,69,172,54,132,165,140,78,77,230,33,169,129,188,71,209,109,161,8,57,57,199,143,31,164,43,58,130,1,110,145,31,229,13,46,149,94,244,106,76,238,105,107,1,183,177,10,61,225,94,185,116,58,183,95,225,22,119,19,248,28,13,123,125,108,158,64,184,77,245,153,162,217,227,208,41,185,211,235,41,153,181,54,166,165,11,154,55,21,184,209,192,249,44,164,160,29,229,159,82,156,198,241,183,114,83,137,186,151,148,31,21,197,216,145,32,13,50,22,241,137,39,71,28,142,160,215,107,221,45,202,104,227,110,186,12,150,145,240,51,49,44,196,115,224,238,149,189,134,99,67,241,62,157,240,114,247,195,26,200,141,97,147,249,23,150,174,10,13,219,81,73,58,242,96,250,243,15,49,218,58,230,104,252,175,150,123,86,185,84,90,198,6,36,0,99,72,28,166,238,115,231,171,249,179,71,174,68,156,227,17,198,79,73,142,99,144,20,80,62,80,191,142,46,71,9,243,6,8,214,116,72,190,106,161,19,185,100,9,187,64,94,86,203,174,156,245,222,95,54,30,148,19,11,50,112,96,61,237,159,173,7,154,127,175,79,48,97,89,78,126,66,171,204,158,195,27,226,205,222,157,89,251,90,125,37,212,27,97,3,141,247,175,50,121,7,187,68,196,181,202,167,189,57,84,81,222,23,27,84,130,176,98,66,240,207,18,23,28,163,163,194,45,37,129,202,170,97,189,0,81,238,0,39,199,163,35,211,206,247,65,29,116,242,67,102,235,13,136,232,230,114,146,187,7,254,142,26,121,16,237,5,160,201,114,94,178,199,95,212,241,45,112,180,188,72,86,114,189,155,149,149,163,210,112,101,12,69,225,75,202,223,28,242,90,215,156,169,224,245,135,128,92,148,217,131,208,255,25,135,117,136,5,104,185,249,161,228,214,16,105,204,9,182,135,153,220,101,244,160,207,58,182,118,185,240,57,245,123,13,112,182,106,229,220,90,29,86,215,96,147,232,2,55,131,225,137,68,245,89,141,252,97,3,129,155,216,223,98,116,45,78,85,141,161,74,215,7,150,171,225,59,78,221,152,236,14,117,100,208,158,86,13,185,124,87,157,111,40,187,182,124,173,71,173,23,199,52,155,190,134,11,23,64,25,215,39,115,231,173,77,72,114,54,252,116,178,59,221,106,241,119,254,30,226,241,204,233,113,197,96,146,0,41,67,3,231,126,12,218,202,22,171,114,249,176,134,160,19,216,31,229,118,226,62,242,126,126,42,127,130,68,218,218,81,202,106,217,191,25,177,82,97,81,36,232,137,58,90,216,190,117,235,20,194,144,76,178,27,213,13,208,18,29,118,126,49,98,203,179,128,237,100,32,242,189,212,6,210,210,188,161,205,13,124,119,13,215,112,41,183,176,215,168,210,182,111,1,115,2,239,141,8,177,124,112,48,197,2,239,11,99,4,36,77,69,47,244,19,153,61,19,2,96,176,7,112,122,131,169,25,189,116,171,49,12,121,162,79,154,74,251,50,233,182,63,180,224,118,49,253,21,20,16,31,144,184,93,174,231,244,183,13,49,225,189,211,73,185,49,110,142,25,226,45,176,233,204,74,33,16,205,88,131,92,157,170,175,68,170,61,53,116,165,16,27,182,160,181,87,241,15,151,85,107,76,167,129,25,172,127,184,138,153,222,228,125,64,44,45,32,12,227,148,106,152,83,240,166,54,235,32,190,12,242,164,123,189,53,194,141,104,43,202,110,4,168,119,245,232,179,178,198,1,224,87,86,160,31,19,140,233,102,191,204,4,98,138,163,191,106,24,213,47,208,82,137,132,131,16,253,84,25,144,90,159,148,16,196,84,166,61,160,101,229,227,93,118,59,87,66,16,128,59,96,131,250,20,184,150,205,91,227,201,62,35,79,180,172,173,85,197,106,153,238,229,60,204,65,193,230,94,101,177,134,6,165,53,171,142,208,155,2,11,4,202,127,54,17,142,117,227,121,128,204,192,147,147,92,189,5,224,148,72,18,83,101,126,124,228,153,242,123,229,247,92,221,6,73,227,250,87,167,194,129,187,73,38,185,109,217,240,193,88,50,178,180,151,54,197,187,137,190,166,233,1,103,204,88,31,127,185,29,65,1,29,254,223,14,83,167,215,114,248,30,173,89,173,187,69,5,105,117,15,106,94,173,63,227,25,230,190,136,168,177,175,107,91,126,254,34,188,25,118,48,12,226,130,153,162,57,47,181,212,79,160,97,64,157,246,90,53,43,149,76,102,15,195,107,58,242,84,172,29,81,198,113,81,251,138,182,154,111,30,171,129,56,17,45,214,153,112,117,203,174,40,38,234,236,32,4,112,225,26,187,195,246,252,9,218,69,160,223,178,54,148,81,8,134,151,75,248,63,224,240,48,75,250,221,85,46,100,50,3,70,64,102,111,160,155,233,59,147,184,57,61,6,126,79,176,16,185,94,166,33,135,78,42,75,140,208,140,44,153,187,64,103,119,160,236,16,239,74,218,219,212,207,110,53,30,76,248,40,111,98,44,20,113,204,233,109,135,96,107,39,163,203,125,45,157,152,71,239,175,174,159,147,80,111,93,38,253,228,154,225,181,101,12,241,127,65,49,189,5,85,151,237,213,143,14,104,138,54,52,27,4,132,67,35,156,86,157,73,16,229,222,245,110,79,165,179,56,179,53,218,229,100,58,87,149,48,231,64,63,115,67,3,172,6,186,115,154,60,53,214,152,149,89,234,37,143,82,255,64,28,183,93,112,39,70,185,57,0,199,9,61,175,219,41,76,37,176,82,125,65,53,160,214,105,62,153,244,222,96,205,6,178,85,41,240,113,0,96,149,38,3,195,18,152,41,246,3,103,29,110,134,30,101,75,46,103,199,184,20,230,8,55,120,4,229,168,35,43,7,28,161,143,87,27,87,79,255,186,44,195,158,155,181,119,81,172,217,107,95,98,55,243,186,66,105,48,224,123,232,84,156,20,10,156,208,204,52,34,228,136,97,242,200,246,211,67,202,40,241,91,92,253,9,54,72,131,221,106,178,32,44,182,4,225,193,37,20,249,249,231,10,206,18,71,254,221,187,172,88,204,6,127,138,102,7,208,75,147,219,199,177,79,36,170,101,207,177,109,95,143,217,41,199,80,183,201,2,254,12,55,23,198,14,255,69,245,138,155,129,227,167,168,130,156,135,14,96,93,48,99,143,107,126,92,117,143,112,108,193,228,84,13,41,186,27,172,92,201,149,116,19,112,197,116,209,128,102,1,55,152,177,28,37,34,50,83,41,199,74,178,59,111,67,118,35,252,36,33,87,28,170,17,215,47,90,154,124,137,15,14,211,59,75,59,30,77,0,49,37,225,191,87,101,127,214,227,160,99,174,234,82,148,235,16,241,219,147,170,127,221,250,116,39,218,156,72,227,172,55,0,79,188,76,51,222,232,24,36,62,94,154,3,61,230,146,114,253,0,128,58,253,90,72,211,242,38,39,133,153,161,119,105,195,152,225,208,105,140,80,217,186,196,157,21,116,230,116,139,25,159,143,118,128,77,201,238,247,228,15,168,4,133,148,21,148,12,44,241,7,115,17,129,176,202,46,130,122,129,235,141,223,85,21,199,65,181,169,52,174,161,153,62,25,164,115,213,89,138,199,103,79,200,165,135,249,244,27,209,178,240,129,211,61,9,111,157,147,119,36,119,255,110,130,84,49,210,225,247,100,26,121,127,163,160,26,79,99,24,77,65,32,178,109,36,27,253,173,110,183,11,14,211,57,130,254,124,104,165,219,31,70,97,14,194,39,61,26,141,125,228,126,194,184,101,160,204,106,128,144,106,103,171,18,246,129,220,85,172,151,123,5,73,155,192,175,91,157,239,61,237,116,170,65,233,56,19,49,114,168,190,3,214,53,250,90,213,244,88,101,30,229,248,124,15,71,141,27,172,235,21,129,211,72,61,172,112,170,128,135,96,196,221,255,27,176,105,188,183,121,33,37,149,53,131,226,233,29,167,234,218,109,53,185,152,36,248,53,61,235,78,21,201,214,210,163,12,251,187,45,188,137,126,127,237,92,234,91,240,225,38,194,57,213,251,237,171,30,99,52,14,49,84,101,252,237,7,166,122,114,32,107,32,207,239,136,168,178,12,11,241,233,230,146,132,18,83,233,41,172,17,6,161,42,113,87,40,255,185,1,146,128,5,240,126,131,71,42,54,124,205,2,122,71,30,222,229,40,134,142,102,97,239,151,177,1,230,231,49,123,219,28,129,91,152,112,13,154,81,197,226,255,112,158,178,177,55,181,108,138,185,245,29,186,21,73,188,209,154,200,89,116,235,198,144,36,87,248,22,7,200,122,7,148,44,42,87,140,238,204,95,231,252,0,136,0,22,39,70,123,125,165,113,227,172,146,163,128,158,36,52,91,19,36,245,27,150,138,141,11,67,239,224,65,24,116,101,7,39,46,142,172,164,243,148,0,33,226,59,47,203,137,156,241,66,250,157,30,204,101,143,134,98,238,155,226,25,184,136,219,89,100,193,11,143,71,139,243,230,151,0,249,1,78,26,32,93,104,157,67,97,164,248,86,124,146,93,74,222,228,167,55,53,100,135,216,109,13,64,37,106,177,200,200,182,92,251,69,31,243,89,80,198,14,132,203,72,103,28,104,217,24,97,223,113,11,29,178,191,210,46,162,255,68,99,8,237,213,162,152,193,183,121,203,19,108,182,29,86,26,192,103,220,103,205,154,179,197,9,22,73,127,175,146,38,119,210,0,24,180,21,245,215,204,91,186,119,138,183,239,15,155,231,248,133,39,24,101,144,236,10,230,54,174,227,73,21,110,10,160,241,232,131,14,212,127,232,59,122,65,146,54,163,9,189,190,121,88,170,62,194,14,204,152,245,38,131,37,91,81,72,114,29,115,239,182,56,44,156,159,177,180,82,160,93,97,86,183,236,50,95,85,39,71,181,225,152,143,63,123,117,34,44,109,160,166,229,240,91,138,102,54,180,173,44,50,80,42,124,7,50,124,211,239,21,94,197,185,239,213,107,142,64,95,124,125,17,180,97,189,101,52,48,19,112,12,70,9,212,177,54,118,66,84,147,236,248,26,124,95,103,135,254,124,49,112,186,99,120,90,8,194,191,88,57,242,65,61,10,104,246,197,252,19,159,58,194,75,173,242,103,8,115,84,69,238,149,26,15,159,182,141,132,119,70,29,53,20,143,46,163,204,6,236,59,45,185,172,89,119,83,38,144,36,222,96,151,26,99,195,163,170,133,92,159,214,53,150,116,90,176,69,145,130,15,172,140,217,215,101,163,115,161,65,101,8,7,183,113,213,134,58,175,130,251,143,173,248,168,135,60,159,30,194,68,208,119,120,2,40,178,227,247,161,77,47,136,46,244,163,72,65,158,25,225,195,61,132,182,204,177,186,200,81,2,65,105,212,72,94,203,232,217,182,123,251,228,160,1,161,204,123,20,37,1,77,208,179,45,149,181,122,102,190,123,213,164,231,41,216,130,234,248,208,251,252,220,84,209,67,47,61,220,5,142,162,26,236,121,142,248,132,255,65,122,203,196,102,191,187,2,195,127,255,193,92,49,91,186,154,39,156,29,211,172,49,104,245,114,153,223,211,199,249,35,130,160,128,0,152,176,183,20,236,113,193,108,26,255,11,237,102,133,245,94,115,114,10,89,229,214,221,99,149,30,99,37,246,10,26,26,39,92,123,170,73,211,127,227,54,30,86,133,159,112,225,91,148,100,174,149,75,143,14,140,20,44,64,212,5,243,8,116,63,30,97,42,123,20,73,212,85,207,83,122,27,251,233,84,10,17,236,232,83,200,127,119,143,163,204,220,167,59,231,20,106,186,222,191,8,40,234,21,25,180,13,116,250,152,224,174,75,3,205,38,173,215,236,151,185,121,254,244,154,239,17,53,106,164,61,49,116,216,118,94,150,35,181,26,238,66,49,211,221,132,146,166,115,39,136,36,205,230,179,31,197,51,148,165,109,38,70,37,148,52,44,209,250,98,58,246,225,103,198,101,26,25,196,207,8,166,21,88,252,175,253,10,88,107,157,19,225,61,12,246,221,37,239,186,167,137,142,135,222,128,174,62,95,216,38,141,157,45,232,97,217,173,203,234,116,129,69,206,189,94,221,12,54,139,186,247,184,16,200,121,244,104,8,7,35,111,47,188,10,140,92,73,143,206,203,72,122,184,20,102,197,130,64,150,63,96,239,8,132,111,217,84,91,198,32,43,100,138,241,15,160,42,190,253,193,184,164,124,29,210,96,67,224,221,182,29,218,129,149,29,128,174,98,88,88,125,56,40,255,120,5,0,87,174,42,150,90,112,201,183,169,19,57,195,191,12,58,244,235,132,25,145,72,146,214,8,125,100,135,12,5,102,97,248,174,24,159,90,33,43,187,6,61,212,241,225,190,219,252,197,123,129,164,108,123,55,230,4,153,166,105,234,15,85,216,23,56,32,3,41,110,68,146,172,133,202,98,41,7,47,152,35,255,168,106,241,226,222,77,244,52,185,65,252,227,32,66,38,11,172,60,28,28,103,84,1,1,205,182,190,28,189,102,253,43,1,191,148,116,10,227,18,81,93,80,239,157,232,215,180,163,165,161,109,177,71,150,244,144,208,160,110,22,174,60,206,43,103,121,55,103,114,115,173,238,13,10,227,251,41,176,216,158,229,216,55,234,128,128,20,167,106,181,86,163,130,215,110,149,191,10,227,215,8,214,154,178,181,15,19,0,247,250,97,74,43,157,55,94,174,41,41,9,199,97,20,91,32,18,10,43,98,240,247,203,20,250,117,160,44,229,202,187,64,54,124,15,184,169,129,27,160,240,26,61,255,60,166,60,144,209,84,55,187,186,168,13,124,125,29,17,100,249,227,62,205,78,179,163,168,139,168,21,38,83,239,151,74,43,66,2,92,72,71,94,216,134,238,20,45,158,213,164,73,57,80,47,198,184,130,223,227,71,132,133,235,177,85,174,142,124,172,200,54,229,40,126,60,76,92,216,153,56,241,174,66,141,90,226,3,30,68,234,71,187,163,112,146,255,22,143,170,204,3,127,179,81,139,160,37,77,246,128,220,196,158,153,73,177,65,199,119,29,197,144,130,248,206,155,253,108,213,124,7,223,221,162,146,134,242,65,99,162,107,120,247,214,207,96,150,169,131,208,218,221,28,24,112,208,23,1,130,142,232,56,104,45,33,158,95,255,123,31,74,76,120,178,155,213,6,195,164,8,8,69,241,197,127,83,169,21,167,19,94,143,252,33,159,248,241,170,153,147,1,149,199,201,131,170,79,236,212,209,143,107,98,24,123,56,33,193,85,247,64,225,135,210,78,145,57,16,145,71,170,20,133,87,235,4,166,239,100,82,235,81,50,223,9,193,52,49,86,129,190,196,82,165,107,63,115,161,98,33,20,193,29,42,151,205,252,124,72,245,48,181,67,7,13,21,127,59,226,188,144,129,112,244,192,121,213,80,42,196,1,13,107,108,78,0,40,121,225,148,237,234,209,216,238,9,147,226,254,96,89,212,72,193,106,75,135,74,227,67,255,92,191,81,188,124,226,149,152,142,15,159,195,238,114,55,255,166,157,230,59,148,170,166,151,65,213,104,253,253,112,150,82,147,137,27,214,100,247,65,81,92,47,86,217,7,45,120,81,130,31,236,243,76,78,3,45,105,172,220,71,48,220,94,196,249,163,193,133,50,236,205,20,55,2,63,14,127,69,113,212,204,12,58,79,89,86,29,61,199,201,64,149,6,144,182,150,129,31,18,167,120,248,82,107,25,143,128,27,161,28,25,153,183,217,238,78,186,106,92,27,202,219,165,96,0,216,234,169,73,101,39,182,113,217,240,170,116,172,221,250,233,48,49,242,83,227,92,181,184,72,230,180,21,15,108,135,25,38,153,25,124,227,26,149,73,236,39,211,244,149,58,183,132,26,223,219,174,144,117,233,219,165,205,157,159,222,184,52,47,241,201,123,65,24,44,55,215,177,168,250,179,115,190,227,123,158,163,179,224,69,196,66,207,254,243,101,221,193,140,250,4,28,222,52,96,138,160,33,218,64,118,214,234,201,152,148,91,178,111,107,144,142,6,182,102,72,188,34,213,181,26,223,58,255,103,81,17,47,169,11,245,224,123,148,215,237,186,107,75,152,90,202,166,22,149,197,5,246,238,78,76,229,106,199,94,127,195,0,45,82,6,159,103,96,138,231,71,46,107,59,216,39,43,12,221,27,214,56,155,145,66,187,169,250,235,78,211,179,239,183,198,163,93,5,196,24,174,143,225,106,139,89,98,13,127,207,184,194,30,1,165,198,169,8,197,118,86,163,221,138,23,209,61,116,79,99,233,43,130,60,244,85,229,243,172,123,148,200,120,192,127,211,52,11,159,41,95,212,230,188,169,156,137,29,212,12,148,168,148,133,243,44,241,139,127,24,246,220,227,125,209,97,60,52,162,192,146,49,161,92,138,112,189,128,59,126,125,46,207,60,79,231,174,152,209,68,223,205,2,38,14,91,116,159,255,28,27,178,248,164,104,158,79,69,214,234,157,12,75,163,83,253,245,202,61,213,176,6,197,230,29,208,166,253,194,254,235,29,141,241,70,249,15,62,0,148,163,135,52,122,40,96,87,31,179,152,51,216,133,184,122,198,203,60,115,218,191,193,16,178,25,148,252,112,104,103,252,36,92,221,28,179,43,199,198,151,128,100,252,217,161,249,34,201,172,118,52,180,252,104,7,223,44,116,102,212,21,40,224,184,55,163,210,21,207,161,239,51,54,155,41,133,18,67,48,3,165,130,251,4,79,214,57,72,130,157,212,144];function fe(e,t,n){var i=e.gl,a=5,r=.1,o=.5,s=175/180*3.141593,c=115/180*3.141593,d=173/180*3.141593,u=116/180*3.141593,l=2.04203545,f=0,p=0,m=0,g=[],v=[0,1,3,4,6,7,9,10,12,13,15,16,18,19,21,22,24,26,29,31,34,36,39,41,44,46,49,51,54,56,59,61,64,65,66,67,68,69,70,72,73,74,75,76,77,79,80,81,82,83,84,85,87,88,89,90,91,92,94,95,96,97,98,99,101,102,103,104,105,106,107,109,110,111,112,113,114,116,117,118,119,120,121,123,124,125,126,127,128,129,131,132,133,134,135,136,138,139,140,141,142,143,145,146,147,148,149,150,151,153,154,155,156,157,158,160,161,162,163,164,165,166,168,169,170,171,172,173,175,176,177,178,179,180,182,183,184,185,186,187,188,190,191,192,193,194,195,197,198,199,200,201,202,204,205,206,207,208,209,210,212,213,214,215,216,217,219,220,221,222,223,224,226,226,226,227,227,227,228,228,228,229,229,229,230,230,231,231,231,232,232,232,233,233,233,234,234,235,235,235,236,236,236,237,237,237,238,238,239,239,239,240,240,240,241,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],S=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,32,33,35,36,37,39,40,42,43,44,46,47,49,50,51,53,54,56,57,58,59,61,62,63,64,66,67,68,69,71,72,73,74,76,77,78,79,81,82,83,84,86,87,88,90,91,92,93,95,96,97,98,100,101,102,103,105,106,107,108,110,111,112,113,115,116,117,118,120,121,122,124,125,126,127,129,130,131,132,134,135,136,137,139,140,141,142,144,145,146,147,149,150,151,152,154,155,156,158,159,160,161,163,164,165,166,168,169,170,171,173,174,175,176,178,179,180,181,183,184,185,186,188,189,190,192,193,194,195,197,198,199,200,202,203,204,205,207,208,209,210,212,213,214,215,217,218,219,220,222,223,224,226,226,226,227,227,228,228,229,229,230,230,231,231,232,232,233,233,234,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,243,243,243,244,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,250,250,250,251,251,251,252,252,252,253,253,253,254,254,254,255],h=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,35,36,37,38,39,40,41,43,44,45,46,47,48,50,51,52,53,54,55,56,58,59,60,61,62,63,65,66,67,68,69,70,72,73,74,76,77,78,80,81,83,84,85,87,88,89,91,92,94,95,96,98,99,100,102,103,105,106,107,109,110,111,113,114,116,117,118,120,121,122,124,125,127,128,129,131,132,133,135,136,138,139,140,142,143,144,146,147,149,150,151,153,154,155,157,158,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,192,193,193,194,195,195,196,197,197,198,199,199,200,201,201,202,203,203,204,205,205,206,207,207,208,209,209,210,211,211,212,213,213,214,215,215,216,217,217,218,219,219,220,221,221,222,223,223,224,225,225,226,227,227,228,229,229,230,231,231,232,233,233,234,235,235,236,237,237,238,239,239,240,241,241,242,243,243,244,245,245,246,247,247,248,249,249,250,251,251,252,253,253,254,255];this.program=ne(i,le),this.setUniforms=function(){var t=i.getUniformLocation(this.program,"u_flipY"),n=i.getUniformLocation(this.program,"u_denoiseLevel");i.uniform1f(n,a),i.uniform1f(t,1);var v=i.getUniformLocation(this.program,"light");i.uniform1f(v,r);var S=i.getUniformLocation(this.program,"redness");i.uniform1f(S,o);var h=i.getUniformLocation(this.program,"skin_he_max"),_=i.getUniformLocation(this.program,"skin_he_min"),E=i.getUniformLocation(this.program,"skin_hc_max"),I=i.getUniformLocation(this.program,"skin_hc_min"),T=i.getUniformLocation(this.program,"skin_hc_axis"),y=i.getUniformLocation(this.program,"facts_rotate_c"),b=i.getUniformLocation(this.program,"facts_rotate_le"),R=i.getUniformLocation(this.program,"facts_rotate_ge");i.uniform1f(h,s),i.uniform1f(_,c),i.uniform1f(E,d),i.uniform1f(I,u),i.uniform1f(T,l),i.uniform1f(y,f),i.uniform1f(b,p),i.uniform1f(R,m);var A=i.getUniformLocation(this.program,"u_originImage");i.activeTexture(i.TEXTURE2),i.bindTexture(i.TEXTURE_2D,e.inputTexture),i.uniform1i(A,2);for(var O=["lighten_lut"],C=[i.TEXTURE3],N=0;N<O.length;N++){var w=i.getUniformLocation(this.program,O[N]);i.activeTexture(C[N]),i.bindTexture(i.TEXTURE_2D,g[N]),i.uniform1i(w,N+3)}},this.setParameters=function(e){void 0!==e.denoiseLevel&&(a=e.denoiseLevel),void 0!==e.lightLevel&&(r=e.lightLevel),void 0!==e.rednessLevel&&(o=e.rednessLevel,this._updateRedness(o)),void 0!==e.lighteningContrastLevel&&this._updateLut(e.lighteningContrastLevel)},this._updateRedness=function(e){var t,n,i=3.141593,a=e,r=a;a>1&&(a=1),a<0&&(a=0),r>1&&(r=1),r<0&&(r=0),f=.8*a,r<.8&&(r=0),(l=(117-4*r)/180*i)<(u=(116-4*r)/180*i)&&(l=u),u<i/2&&(u=i/2),l<i/2&&(l=i/2),(c=(115-4*r)/180*i)<i/2&&(c=i/2),(d=173/180*i)>i&&(d=i),l>i&&(l=i),(s=175/180*i)>i&&(s=i),n=d-l,m=(t=s-d)>.01?f*n/t:f,n=l-u,p=(t=u-c)>.01?f*n/t:f},this._updateLut=function(e){var t=null;0==e&&(t=S),1==e&&(t=h),2==e&&(t=v);for(var n=[new Uint8Array(t)],a=[256],r=[1],o=0;o<n.length;o++)i.bindTexture(i.TEXTURE_2D,g[o]),i.texImage2D(i.TEXTURE_2D,0,i.LUMINANCE,a[o],r[o],0,i.LUMINANCE,i.UNSIGNED_BYTE,n[o])},this._init=function(){var e=null;e=S;for(var t=[new Uint8Array(e)],n=[256],a=[1],r=0;r<t.length;r++){var o=i.createTexture();i.bindTexture(i.TEXTURE_2D,o),i.texImage2D(i.TEXTURE_2D,0,i.LUMINANCE,n[r],a[r],0,i.LUMINANCE,i.UNSIGNED_BYTE,t[r]),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_S,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_WRAP_T,i.CLAMP_TO_EDGE),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MIN_FILTER,i.LINEAR),i.texParameteri(i.TEXTURE_2D,i.TEXTURE_MAG_FILTER,i.LINEAR),g.push(o)}},this._init()}var pe=!1;function me(){this.programs=[];var e=this,t=null,n=null;e.gl=null,e.inputTexture=null;var i=[],a=[],r=0,o=0;e._initGl=function(n,s){e.inputTexture=t.createTexture(),t.bindTexture(t.TEXTURE_2D,e.inputTexture),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,t.LINEAR);for(var c=0;c<4;c++){var d=t.createTexture();t.bindTexture(t.TEXTURE_2D,d),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,t.LINEAR),c<2?t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n,s,0,t.RGBA,t.UNSIGNED_BYTE,null):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,s,n,0,t.RGBA,t.UNSIGNED_BYTE,null);var u=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,u),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,d,0),i.push(d),a.push(u)}t.viewport(0,0,n,s),r=n,o=s},e.render=function(s){if(t){var c=0;o==s.videoWidth&&r===s.videoHeight&&(c=2),t.viewport(0,0,s.videoWidth,s.videoHeight),t.bindTexture(t.TEXTURE_2D,e.inputTexture),t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,s);for(var d=pe?e.programs.length-1:0,u=0;u<=d;u++){var l=e.programs[u].program;t.useProgram(l);var f=t.getUniformLocation(l,"u_image");e.programs[u].setUniforms(),t.bindFramebuffer(t.FRAMEBUFFER,a[c+u%2]),t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLES,0,6),t.activeTexture(t.TEXTURE0),t.bindTexture(t.TEXTURE_2D,i[c+u%2]),t.uniform1i(f,0)}t.useProgram(n);var p=t.getUniformLocation(n,"u_flipY");t.uniform1f(p,-1),t.bindFramebuffer(t.FRAMEBUFFER,null),t.clearColor(0,0,0,1),t.clear(t.COLOR_BUFFER_BIT),t.drawArrays(t.TRIANGLES,0,6)}},e.setEnableBeauty=function(e){pe=e},e.init=function(i,a,r){if("undefined"==typeof WebGLRenderingContext)throw new Error("NOT_SUPPORT");t=r.getContext("webgl"),e.gl=t,e._initGl(i,a),e.programs.push(new ae(this,i,a)),e.programs.push(new oe(this,i,a)),e.programs.push(new ce(this,i,a)),e.programs.push(new ue(this,i,a)),e.programs.push(new fe(this,i,a)),n=e.programs[0].program},e.release=function(){e.gl=null,t=null,n=null,e.inputTexture=null,e.programs=[],i=[],a=[]},e.setDenoiseLevel=function(t){e.programs.forEach(function(e){e.setParameters&&e.setParameters({denoiseLevel:t})})},e.setLightLevel=function(t){e.programs.forEach(function(e){e.setParameters&&e.setParameters({lightLevel:t})})},e.setRednessLevel=function(t){e.programs.forEach(function(e){e.setParameters&&e.setParameters({rednessLevel:t})})},e.setContrastLevel=function(t){e.programs.forEach(function(e){e.setParameters&&e.setParameters({lighteningContrastLevel:t})})},e.setSize=function(t,n){e.programs.forEach(function(e){e.setSize&&e.setSize(t,n)})}}me._instance=null,me.getInstance=function(){return me._instance||(me._instance=new me),me._instance};var ge={addVideoEffectCapability:function(e){e.videoEffect={canvas:null,video:null,fps:30,stopChromeBackgroundLoop:null,enableBeauty:!1,denoiseLevel:5,lightLevel:.35,rednessLevel:.5,lighteningContrastLevel:1,videoContextInited:!1,originVideoTrack:null,canvasVideoTrack:null,ctx:null},e._initVideoContext=function(){if(e.videoEffect.videoContextInited)throw new Error("Failed to init video context. Already inited");if(!e.stream)throw new Error("Failed to init video context. Local Stream not initialized");e.videoEffect.originVideoTrack=e.stream.getVideoTracks()[0],e.attributes&&e.attributes.maxFrameRate&&(e.videoEffect.fps=e.attributes.maxFrameRate),e.videoEffect.videoContextInited=!0},e._renderWithWebGL=function(t){return new Promise(function(n){e.videoEffect.canvas||(e.videoEffect.canvas=document.createElement("canvas")),e.videoEffect.video||(e.videoEffect.video=document.createElement("video")),e.videoEffect.video.setAttribute("autoplay",""),e.videoEffect.video.setAttribute("muted",""),e.videoEffect.video.muted=!0,e.videoEffect.video.setAttribute("playsinline",""),e.videoEffect.video.setAttribute("style","display:none"),e.videoEffect.video.srcObject=t;var i=t.getVideoTracks()[0].getSettings(),a=i.width,r=i.height;console.log("Width: ".concat(a,", Height: ").concat(r)),e.videoEffect.canvas.setAttribute("width",a),e.videoEffect.canvas.setAttribute("height",r),e.videoEffect.video.setAttribute("width",a),e.videoEffect.video.setAttribute("height",r);var o=me.getInstance();o.init(e.videoEffect.video.width,e.videoEffect.video.height,e.videoEffect.canvas),o.setDenoiseLevel(e.videoEffect.denoiseLevel),o.setLightLevel(e.videoEffect.lightLevel),o.setRednessLevel(e.videoEffect.rednessLevel),o.setContrastLevel(e.videoEffect.lighteningContrastLevel),e.videoEffect.video.addEventListener("playing",function t(){var i=e.videoEffect.canvas.captureStream(e.videoEffect.fps);e.videoEffect.video.removeEventListener("playing",t,!0),n([i.getVideoTracks()[0],e.videoEffect.video])},!0),e.videoEffect.video.play()})},e._disableEffect=function(){e.videoEffect.videoContextInited||e._initVideoContext();var t=e.videoEffect.originVideoTrack;if(!t)return o.default.warning("Video track is null, fail to disable video effect!"),Promise.resolve();if(e.pc&&e.pc.peerConnection&&e.pc.peerConnection){var n=(e.pc.peerConnection&&e.pc.peerConnection.getSenders()).find(function(e){return e&&e.track&&"video"==e.track.kind});if(n&&n.replaceTrack&&t)return n.replaceTrack(t)}return Promise.resolve()},e._releaseEffect=function(){var t;return t=e.videoEffect.enableBeauty?e._disableEffect():Promise.resolve(),me.getInstance().release(),e.videoEffect.videoContextInited=!1,e.videoEffect.canvasVideoTrack=null,t},e._enableEffect=function(){return e.videoEffect.videoContextInited||e._initVideoContext(),e.videoEffect.originVideoTrack?(e.videoEffect.canvasVideoTrack?(e._showEffectInLocalPlayer(),e._replaceWithCanvasTrack()):e._renderWithWebGL(e.stream).then(function(t){var n=X()(t,2),i=n[0],a=n[1];e.videoEffect.canvasVideoTrack=i;var r=me.getInstance();requestAnimationFrame(function t(){e.videoEffect.enableBeauty&&r.render(a),e.videoEffect.videoContextInited&&requestAnimationFrame(t)}),m.isChrome()&&document.addEventListener("visibilitychange",function(){document.hidden,document.hidden?e.videoEffect.stopChromeBackgroundLoop=function(e,t){var n=1/t,i=new AudioContext,a=i.createGain();a.gain.value=0,a.connect(i.destination),function t(){var o=i.createOscillator();o.onended=t,o.connect(a),o.start(0),o.stop(i.currentTime+n),e(i.currentTime),r&&(o.onended=function(){i.close()})}();var r=!1;return function(){r=!0}}(function(){e.videoEffect.enableBeauty&&r.render(a)},e.videoEffect.fps):e.videoEffect.stopChromeBackgroundLoop&&(e.videoEffect.stopChromeBackgroundLoop(),e.videoEffect.stopChromeBackgroundLoop=null)},!1),e._showEffectInLocalPlayer(),e._replaceWithCanvasTrack()}),Promise.resolve()):(o.default.warning("Video track is null, fail to enable video effect!"),Promise.resolve())},e._showEffectInLocalPlayer=function(){if(e.player){var t=e.player.div.children[0];if("none"!==t.style.display&&(e.player.div.appendChild(e.videoEffect.canvas),"video"===t.tagName.toLowerCase())){var n=t.getAttribute("style");e.videoEffect.canvas.setAttribute("style",n),"none"!==t.style.display&&(t.style.display="none")}}},e._removeEffectFromLocalPlayer=function(){if(e.player&&e.player.div&&e.videoEffect.enableBeauty&&e.videoEffect.canvas){e.player.div.removeChild(e.videoEffect.canvas);var t=e.player.div.children[0];"video"===t.tagName.toLowerCase()&&(e.videoEffect.canvas.style.display="none",t.style.display="block")}},e._replaceWithCanvasTrack=function(){var t=null;e.pc&&e.pc.peerConnection&&e.pc.peerConnection&&(t=(e.pc.peerConnection&&e.pc.peerConnection.getSenders()).find(function(e){return e&&e.track&&"video"==e.track.kind})),t&&t.replaceTrack&&e.videoEffect.canvasVideoTrack&&t.replaceTrack(e.videoEffect.canvasVideoTrack)},e.setBeautyEffectOptions=(t=K()(Y.a.mark(function t(n,i){var a,r=arguments;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(Object(W.checkValidBoolean)(n,"enabled"),a=me.getInstance(),e.videoEffect.enableBeauty==n){t.next=14;break}if(a.setEnableBeauty(n),!n){t.next=9;break}return t.next=7,e._enableEffect();case 7:t.next=12;break;case 9:return e._removeEffectFromLocalPlayer(),t.next=12,e._releaseEffect();case 12:e.videoEffect.enableBeauty=n,s.b.reportApiInvoke(e.sid,{callback:null,options:r,name:"Stream.setBeautyEffectOptions",tag:"tracer"});case 14:if(n){t.next=16;break}return t.abrupt("return");case 16:if(!i){t.next=20;break}Object(W.checkValidObject)(i,"options"),t.next=21;break;case 20:return t.abrupt("return");case 21:if(void 0!==i.smoothnessLevel&&(Object(W.checkValidFloatNumber)(i.smoothnessLevel,"smoothnessLevel",0,1),e.videoEffect.denoiseLevel=10*i.smoothnessLevel,e.videoEffect.denoiseLevel<.1&&(e.videoEffect.denoiseLevel=.1),a.setDenoiseLevel(e.videoEffect.denoiseLevel)),void 0!==i.lighteningLevel&&(Object(W.checkValidFloatNumber)(i.lighteningLevel,"lighteningLevel",0,1),e.videoEffect.lightLevel=i.lighteningLevel/2,e.videoEffect.lightLevel<.01&&(e.videoEffect.lightLevel=.01),a.setLightLevel(e.videoEffect.lightLevel)),void 0!==i.rednessLevel&&(Object(W.checkValidFloatNumber)(i.rednessLevel,"rednessLevel",0,1),e.videoEffect.rednessLevel=i.rednessLevel,e.videoEffect.rednessLevel<.01&&(e.videoEffect.rednessLevel=.01),a.setRednessLevel(e.videoEffect.rednessLevel)),void 0===i.lighteningContrastLevel){t.next=29;break}if(0===i.lighteningContrastLevel||1===i.lighteningContrastLevel||2===i.lighteningContrastLevel){t.next=27;break}throw new Error("Invalid lighteningContrastLevel: The value should be 0, 1 or 2.");case 27:e.videoEffect.lighteningContrastLevel=parseFloat(i.lighteningContrastLevel),a.setContrastLevel(e.videoEffect.lighteningContrastLevel);case 29:case"end":return t.stop()}},t,this)})),function(e,n){return t.apply(this,arguments)});var t},restoreVideoEffect:function(e){return e.videoEffect.enableBeauty?e._enableEffect():Promise.resolve()},disableVideoEffect:function(e){return e._releaseEffect?e._releaseEffect():Promise.resolve()},applyEffectInPlayer:function(e){e.videoEffect.enableBeauty&&e.videoEffect.canvas&&e._showEffectInLocalPlayer()},removeEffectFromLocalPlayer:function(e){e._removeEffectFromLocalPlayer()},replaceWithCanvasTrack:function(e){e.videoEffect.enableBeauty&&e._replaceWithCanvasTrack()},checkVideoEffectEnabled:function(e){if(e.videoEffect.enableBeauty&&e.videoEffect&&e.videoEffect.videoContextInited)return o.default.error("Operation not permitted: ".concat("VIDEO_EFFECT_ENABLED")),"VIDEO_EFFECT_ENABLED";return!1}},ve=a(9),Se=a.n(ve),he=function(e){Object(W.checkValidString)(e,"profileName"),-1===(e=e.toLowerCase()).indexOf("_")&&(e+="_1"),Object(W.checkValidEnum)(e,"profileName",Object.keys(r.SUPPORT_RESOLUTION_LIST));var t=r.SUPPORT_RESOLUTION_LIST[e];t||(e=Object(r.getParameter)("DEFAULT_PROFILE"),t=r.SUPPORT_RESOLUTION_LIST[e]);var n={profileName:e,video:{width:t[0],height:t[1]},attributes:{resolution:"".concat(t[0],"x").concat(t[1]),minFrameRate:t[2],maxFrameRate:t[3],minVideoBW:t[4],maxVideoBW:t[5]}};return t[2]&&t[3]&&(n.video.frameRate={ideal:t[2],max:t[3]}),t[6]&&t[7]&&(n.screen={width:t[0],height:t[1],frameRate:{min:t[6],max:t[7]}}),n},_e=function(e){return Object.keys(r.SUPPORT_RESOLUTION_LIST).filter(function(t){var n=r.SUPPORT_RESOLUTION_LIST[t],i=["width","height","frameRate"];for(var a in i){var o=i[a];if(e[o]&&n[a]){if("number"==typeof e[o].max&&e[o].max<n[a])return!1;if("number"==typeof e[o].min&&e[o].min>n[a])return!1}}return!0}).reverse()},Ee=function(e){var t=r.AUDIO_PROFILE_SETTINGS[e]||r.AUDIO_PROFILE_SETTINGS.default;return{highQuality:t[0],stereo:t[1],speech:t[2],lowQuality:t[3]}};var Ie=function(e){var t=c();if(t.params=h()({},e),t.stream=e.stream,t.url=e.url,t.onClose=void 0,t.local=!1,t.videoSource=e.videoSource,t.audioSource=e.audioSource,e.video=!(!e.videoSource&&!e.video),t.video=e.video,e.audio=!(!e.audioSource&&!e.audio),t.audio=e.audio,t.screen=!!e.screen,t.screenAudio=!!e.screenAudio,t.screenAttributes={width:1920,height:1080,maxFr:5,minFr:1},t.videoSize=e.videoSize,t.player=void 0,t.audioLevelHelper=null,e.attributes=e.attributes||{},t.attributes=e.attributes,t.microphoneId=e.microphoneId,t.cameraId=e.cameraId,t.facingMode=e.facingMode,t.inSwitchDevice=!1,t.userMuteVideo=!1,t.userMuteAudio=!1,t.peerMuteVideo=!1,t.peerMuteAudio=!1,t.lowStream=null,t.videoWidth=0,t.videoHeight=0,t.streamId=e.streamID,t.userId=null,t.mirror=!1!==e.mirror,t.DTX=e.audioProcessing&&e.audioProcessing.DTX,t.audioProcessing=e.audioProcessing,t.highQuality=!1,t.stereo=!1,t.speech=!1,t.screen||delete t.screen,!(void 0===t.videoSize||t.videoSize instanceof Array&&4===t.videoSize.length))throw Error("Invalid Video Size");function n(){var e={};t.getVideoTrack()===this?(o.default.debug("Video Track Ended"),e.type="videoTrackEnded",e.track=this):t.getAudioTrack()===this?(o.default.debug("Audio Track Ended"),e.type="audioTrackEnded",e.track=this):o.default.debug("Detached Track ended",this.kind,this.label,this),e.type&&t.dispatchEvent(e)}return t.videoSize=[640,480,640,480],void 0!==e.local&&!0!==e.local||(t.local=!0),t.initialized=!t.local,t._streamInitID=null,function(e){e.audioMixing={audioContextInited:!1,defaultVolume:100,inEarMonitoring:"FILE",sounds:{},states:{IDLE:"IDLE",STARTING:"STARTING",BUSY:"BUSY",PAUSED:"PAUSED"},inEarMonitoringModes:{NONE:"NONE",FILE:"FILE",MICROPHONE:"MOCROPHONE",ALL:"ALL"},ctx:null,mediaStreamSource:null,mediaStreamDest:null,buffer:{}},e._initSoundIfNotExists=function(t,n){e.audioMixing.sounds[t]||(e.audioMixing.sounds[t]={soundId:t,state:"IDLE",muted:e.userMuteAudio,filePath:n,volume:e.audioMixing.defaultVolume,startAt:null,startOffset:null,pauseAt:null,pauseOffset:null,resumeAt:null,resumeOffset:null,stopAt:null,options:null,source:null})},e._initSoundIfNotExists(-1),e.loadAudioBuffer=function(t,n,i){var a=s.b.reportApiInvoke(e.sid,{callback:i,name:"Stream.loadAudioBuffer",options:arguments,tag:"tracer"});Object(W.checkValidString)(n,"url",1,1024,!1),Object(W.checkValidString)(t,"id",1,1024,!1);var r=function(t){o.default.error("[".concat(e.streamId,"] loadAudioBuffer Failed: ")+t),a(I.default.LOAD_AUDIO_FAILED)},c=new XMLHttpRequest;c.open("GET",n,!0),c.responseType="arraybuffer",c.onload=function(){if(c.status>400)r("".concat(c.status," ").concat(c.statusText));else{var n=c.response;e.audioMixing.audioContextInited||e._initAudioContext(),e.audioMixing.ctx.decodeAudioData(n,function(n){e.audioMixing.buffer[t]=n,a(null)},function(t){o.default.error("[".concat(e.streamId,"] decodeAudioData Failed: "),t),a(t)})}},c.onerror=function(){return r("load error")},c.ontimeout=function(){return r("timeout")},c.send()},e.createAudioBufferSource=function(t){var n=s.b.reportApiInvoke(e.sid,{name:"Stream.createAudioBufferSource",options:arguments,tag:"tracer"});if(e.audioMixing.buffer[t.id]){var i=e.audioMixing.buffer[t.id],a=e.audioMixing.ctx.createBufferSource();a.buffer=i;var r=e.audioMixing.ctx.createGain();if(a.connect(r),r.connect(e.audioMixing.mediaStreamDest),a.gainNode=r,t.loop)a.loop=!0,a.start(0,t.playTime/1e3);else if(t.cycle>1)if(Object(m.isChrome)()){a.loop=!0;var c=t.cycle*i.duration*1e3-(t.playTime||0);a.start(0,t.playTime/1e3,c/1e3)}else o.default.warning("[".concat(e.streamId,"] Cycle Param is ignored by current browser")),a.start(0,t.playTime/1e3);else a.start(0,t.playTime/1e3);var d=e.audioMixing.sounds[t.soundId];return d.source=a,e._flushAudioMixingMuteStatus(),a.addEventListener("ended",function(){a===d.source&&e.dispatchEvent({type:"audioSourceEnded",soundId:t.soundId,source:a,sound:d})}),n(),a}return o.default.error("[".concat(e.streamId,"] "),"AUDIOBUFFER_NOT_FOUND",t.id),n(!1),!1},e.on("audioSourceEnded",function(t){var n=t.source,i=t.sound;i&&i.state===e.audioMixing.states.BUSY&&!i.pauseAt&&(i.state=e.audioMixing.states.IDLE,i.startAt=null,i.startOffset=null,i.resumeAt=null,i.resumeOffset=null,n.gainNode&&n.gainNode.disconnect&&n.gainNode.disconnect(),n.buffer=null,e.audioMixing.mediaStreamSource.connect(e.audioMixing.mediaStreamDest))}),e.clearAudioBufferSource=function(){e.audioBufferSource.forEach(function(e){e.stop()})},e._isSoundExists=function(t){return!!e.audioMixing.sounds[t.soundId]||(o.default.error("SoundId not exists. #".concat(t.soundId)),!1)},e._initAudioContext=function(){if(e.audioMixing.audioContextInited)throw new Error("Failed to init audio context. Already inited");if(!e.stream)throw new Error("Failed to init audio context. Local Stream not initialized");e.audioMixing.ctx=Object(G.a)(),e.audioMixing.mediaStreamSource=e.audioMixing.ctx.createMediaStreamSource(e.stream),e.audioMixing.mediaStreamDest=e.audioMixing.ctx.createMediaStreamDestination(),e.audioMixing.mediaStreamSource.connect(e.audioMixing.mediaStreamDest);var t=e.stream.getVideoTracks()[0];if(t&&e.audioMixing.mediaStreamDest.stream.addTrack(t),e._isAudioMuted()?(e._unmuteAudio(),e.stream=e.audioMixing.mediaStreamDest.stream,e._muteAudio()):e.stream=e.audioMixing.mediaStreamDest.stream,e.audioLevelHelper=null,e.pc&&e.pc.peerConnection&&e.pc.peerConnection){var n=(e.pc.peerConnection&&e.pc.peerConnection.getSenders()).find(function(e){return e&&e.track&&"audio"==e.track.kind}),i=e.audioMixing.mediaStreamDest.stream.getAudioTracks()[0];n&&n.replaceTrack&&i&&n.replaceTrack(i)}e.audioMixing.audioContextInited=!0},e._cleanupAudioMixing=function(){if(e.audioMixing.audioContextInited){for(var t in e.audioMixing.sounds){var n=e.audioMixing.sounds[t];n.state!==e.audioMixing.states.BUSY&&n.state!==e.audioMixing.states.PAUSED||e._stopOneEffect({soundId:t})}e.audioLevelHelper=null,e.audioMixing.audioContextInited=!1}},e._reloadInEarMonitoringMode=function(t){if(t){if(!e.audioMixing.inEarMonitoringModes[t])return o.default.error("[".concat(e.streamId,"] Invalid InEarMonitoringMode ").concat(t));e.audioMixing.inEarMonitoring=t}switch(e.audioMixing.audioContextInited||e._initAudioContext(),e.audioMixing.inEarMonitoring){case e.audioMixing.inEarMonitoringModes.FILE:e.audioMixing.mediaStreamSource.connectedToDestination&&(e.audioMixing.mediaStreamSource.disconnect(e.audioMixing.ctx.destination),e.audioMixing.mediaStreamSource.connectedToDestination=!1);case e.audioMixing.inEarMonitoringModes.ALL:for(var n in e.audioMixing.sounds){var i=e.audioMixing.sounds[n];i&&i.source&&!i.source.connectedToDestination&&(i.source.gainNode.connect(e.audioMixing.ctx.destination),i.source.connectedToDestination=!0)}}switch(e.audioMixing.inEarMonitoring){case e.audioMixing.inEarMonitoringModes.MICROPHONE:e.audioMixing.source.forEach(function(t){t.connectedToDestination&&(t.gainNode.disconnect(e.audioMixing.ctx.destination),t.connectedToDestination=!1)});case e.audioMixing.inEarMonitoringModes.ALL:e.audioMixing.mediaStreamSource.connectedToDestination||(e.audioMixing.mediaStreamSource.connect(e.audioMixing.ctx.destination),e.audioMixing.mediaStreamSource.connectedToDestination=!0)}},e._startAudioMixingBufferSource=function(t){e.audioMixing.audioContextInited||e._initAudioContext();var n={soundId:t.soundId,id:t.filePath,loop:t.loop,cycle:t.cycle,playTime:t.playTime||0},i=t.replace,a=e.createAudioBufferSource(n);return a.sound=e.audioMixing.sounds[t.soundId],a?(a.addEventListener("ended",e._audioMixingFinishedListener,{once:!0}),e._reloadInEarMonitoringMode(),i&&e.audioMixing.mediaStreamSource.disconnect(e.audioMixing.mediaStreamDest),a):null},e._stopAudioMixingBufferSource=function(t){var n=e.audioMixing.sounds[t.soundId].source;return n?(n.removeEventListener("ended",e._audioMixingFinishedListener),e.audioMixing.mediaStreamSource.connect(e.audioMixing.mediaStreamDest),n.stop(),n.gainNode&&n.gainNode.disconnect&&n.gainNode.disconnect(),n.buffer=null,n):null},e._flushAudioMixingMuteStatus=function(t){for(var n in e.audioMixing.sounds){var i=e.audioMixing.sounds[n];i&&(void 0!==t&&(i.muted=!!t),i.source&&(i.muted?i.source.gainNode.gain.value=0:i.source.gainNode.gain.value=i.volume/100))}},e._handleAudioMixingInvalidStateError=function(t,n,i){var a=e.audioMixing.sounds[n.soundId],r=-1===n.soundId?"INVALID_AUDIO_MIXING_STATE":"INVALID_PLAY_EFFECT_STATE";o.default.error("[".concat(e.streamId,"] Cannot ").concat(t,": ").concat(r,", state is ").concat(a.state)),i&&i(r)},e._handleAudioMixingNoSourceError=function(t,n,i){e.audioMixing.sounds[n.soundId].state=e.audioMixing.states.IDLE;var a=-1===n.soundId?"NO_AUDIO_MIXING_SOURCE":"NO_EFFECT_SOURCE";o.default.error("[".concat(e.streamId,"] Cannot ").concat(t,": ").concat(a)),i&&i(a)},e._getOneEffectStates=function(t){var n=e.audioMixing.sounds[t.soundId];return function(){return n?{state:n.state,startAt:n.startAt,resumeAt:n.resumeAt,pauseOffset:n.pauseOffset,pauseAt:n.pauseAt,resumeOffset:n.resumeOffset,stopAt:n.stopAt,duration:e._getOneEffectDuration(t),position:e._getOneEffectCurrentPosition(t)}:{}}},e._audioMixingFinishedListener=function(){var t=this.sound;t.state===e.audioMixing.states.IDLE&&e.audioMixing.buffer[t.options.filePath]&&!t.options.cacheResource&&(o.default.debug("Recycled buffer ".concat(t.options.filePath)),delete e.audioMixing.buffer[t.options.filePath]),-1===t.soundId&&e.dispatchEvent({type:"audioMixingFinished"})},e._playOneEffect=function(t,n){Object(W.checkValidObject)(t,"options");var i=t.soundId,a=(t.filePath,t.cacheResource);if(t.cycle,t.loop,t.playTime,t.replace,Object(m.isSafari)()&&Object(m.getBrowserVersion)()<12){var r="BROWSER_NOT_SUPPORT";return o.default.error("[".concat(e.streamId,"] Cannot _playOneEffect: "),r),n(r)}e.audioMixing.audioContextInited||e._initAudioContext(),e._initSoundIfNotExists(i);var s=e.audioMixing.sounds[i];if(s.state===e.audioMixing.states.IDLE){if(void 0!==t.cycle&&!t.cycle>0)return r="Invalid Parmeter cycle: "+t.cycle,o.default.error("[".concat(e.streamId,"] ").concat(i),r),n(r);if(Object(W.isEmpty)(a)&&(t.cacheResource=!0),s.state=e.audioMixing.states.STARTING,s.options=t,e.audioMixing.buffer[t.filePath]){var c=e._startAudioMixingBufferSource(t);if(c)return s.source=c,s.startAt=Date.now(),s.resumeAt=null,s.pauseOffset=null,s.pauseAt=null,s.resumeOffset=null,s.stopAt=null,s.startOffset=t.playTime||0,s.state=e.audioMixing.states.BUSY,e._flushAudioMixingMuteStatus(),n(null);s.state=e.audioMixing.states.IDLE;var d="CREATE_BUFFERSOURCE_FAILED";if(n)return n(d);o.default.error("[".concat(e.streamId,"] "),d)}else e.loadAudioBuffer(t.filePath,t.filePath,function(i){if(i)s.state=e.audioMixing.states.IDLE,n?n(i):o.default.error("[".concat(e.streamId,"] "),i);else{var a=e._startAudioMixingBufferSource(t);if(a)return s.source=a,s.startAt=Date.now(),s.resumeAt=null,s.pauseOffset=null,s.pauseAt=null,s.resumeOffset=null,s.stopAt=null,s.startOffset=t.playTime||0,s.state=e.audioMixing.states.BUSY,e._flushAudioMixingMuteStatus(),n(null);if(s.state=e.audioMixing.states.IDLE,i="CREATE_BUFFERSOURCE_FAILED",n)return n(i);o.default.error("[".concat(e.streamId,"] "),i)}})}else e._handleAudioMixingInvalidStateError("_playEffect",t,n)},e._stopOneEffect=function(t,n){var i=e.audioMixing.sounds[t.soundId];return e._isSoundExists(t)?i.state===e.audioMixing.states.BUSY||i.state===e.audioMixing.states.PAUSED?(e._stopAudioMixingBufferSource(t),i.stopAt=Date.now(),i.state=e.audioMixing.states.IDLE,e.audioMixing.buffer[i.options.filePath]&&!i.options.cacheResource&&(o.default.debug("Recycled buffer ".concat(i.options.filePath)),delete e.audioMixing.buffer[i.options.filePath]),void(n&&n(null))):void e._handleAudioMixingInvalidStateError("_stopOneEffect",t,n):n("SOUND_NOT_EXISTS")},e._pauseOneEffect=function(t,n){var i=e.audioMixing.sounds[t.soundId];if(i.state===e.audioMixing.states.BUSY)return e._stopAudioMixingBufferSource(t)?(i.pauseAt=Date.now(),i.state=e.audioMixing.states.PAUSED,i.resumeAt?i.pauseOffset=i.pauseAt-i.resumeAt+i.resumeOffset:i.pauseOffset=i.pauseAt-i.startAt+i.startOffset,n&&n(null)):void e._handleAudioMixingNoSourceError("_pauseOneEffect",t,n);e._handleAudioMixingInvalidStateError("_pauseOneEffect",t,n)},e._resumeOneEffect=function(t,n){var i=e.audioMixing.sounds[t.soundId];if(i.state===e.audioMixing.states.PAUSED){var a={soundId:t.soundId,filePath:i.options.filePath,cycle:i.options.cycle,loop:i.options.loop,playTime:i.pauseOffset,replace:i.options.replace},r=e._startAudioMixingBufferSource(a);if(!r){var s="CREATE_BUFFERSOURCE_FAILED";return n(s),void o.default.error("[".concat(e.streamId,"] "),s)}i.source=r,i.resumeAt=Date.now(),i.resumeOffset=i.pauseOffset,i.state=e.audioMixing.states.BUSY,i.pauseAt=null,i.pauseOffset=null,n(null)}else e._handleAudioMixingInvalidStateError("_resumeOneEffect",t,n)},e._getOneEffectDuration=function(t){var n=e.audioMixing.sounds[t.soundId];return n.options&&n.options.filePath&&e.audioMixing.buffer[n.options.filePath]?1e3*e.audioMixing.buffer[n.options.filePath].duration:null},e._getOneEffectCurrentPosition=function(t,n){var i=e.audioMixing.sounds[t.soundId];return i.state===e.audioMixing.states.PAUSED?i.pauseOffset%e._getOneEffectDuration(t):i.state===e.audioMixing.states.BUSY?i.resumeAt?(Date.now()-i.resumeAt+i.resumeOffset)%e._getOneEffectDuration(t):(Date.now()-i.startAt+i.startOffset)%e._getOneEffectDuration(t):void(n&&e._handleAudioMixingInvalidStateError("_getOneEffectCurrentPosition",t))},e._setOneEffectPosition=function(t,n,i){var a=e.audioMixing.sounds[t.soundId];if(a.state===e.audioMixing.states.BUSY){if(!e._stopAudioMixingBufferSource(t))return void e._handleAudioMixingNoSourceError("_setOneEffectPosition",t,i);var r={soundId:t.soundId,filePath:a.options.filePath,loop:a.options.loop,cycle:a.options.cycle,playTime:n},s=e._startAudioMixingBufferSource(r);if(!s){var c="CREATE_BUFFERSOURCE_FAILED";return i&&i(c),void o.default.error("[".concat(e.streamId,"] "),c)}a.source=s,a.startAt=Date.now(),a.startOffset=n,a.resumeAt=null,a.resumeOffset=null,a.pauseOffset=null,a.pauseAt=null}else{if(a.state!==e.audioMixing.states.PAUSED)return void e._handleAudioMixingInvalidStateError("_setOneEffectPosition",t,i);a.pauseOffset=n}i&&i(null)},e.startAudioMixing=function(t,n){var i=s.b.reportApiInvoke(e.sid,{callback:function(t){if(t)return n&&n(t);e.dispatchEvent({type:"audioMixingPlayed"}),n&&n(null)},getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.startAudioMixing",options:t});Object(W.checkValidObject)(t,"options");var a=t.filePath,o=t.cacheResource,c=t.cycle,d=t.loop,u=t.playTime,l=t.replace;Object(W.checkValidString)(a,"filePath",1,Object(r.getParameter)("FILEPATH_LENMAX"),!1),Object(W.checkValidNumber)(u,"playTime",0,1e8),!Object(W.isEmpty)(c)&&Object(W.checkValidNumber)(c,"cycle"),!Object(W.isEmpty)(d)&&Object(W.checkValidBoolean)(d,"loop"),!Object(W.isEmpty)(l)&&Object(W.checkValidBoolean)(l,"replace"),!Object(W.isEmpty)(o)&&Object(W.checkValidBoolean)(o,"cacheResource");var f=h()({soundId:-1},t);e._playOneEffect(f,i)},e.stopAudioMixing=function(t){var n=s.b.reportApiInvoke(e.sid,{callback:t,getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.stopAudioMixing"});e._stopOneEffect({soundId:-1},n)},e.pauseAudioMixing=function(t){var n=s.b.reportApiInvoke(e.sid,{callback:t,getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.pauseAudioMixing"});return e._pauseOneEffect({soundId:-1},n)},e.resumeAudioMixing=function(t){var n=s.b.reportApiInvoke(e.sid,{callback:function(n,i){if(n)return t&&t(n);e.dispatchEvent({type:"audioMixingPlayed"}),t&&t(null)},getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.resumeAudioMixing"});e._resumeOneEffect({soundId:-1},n)},e.adjustAudioMixingVolume=function(t){var n=s.b.reportApiInvoke(e.sid,{getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.adjustAudioMixingVolume",options:arguments,tag:"tracer"});Object(W.checkValidNumber)(t,"volume",0,100),e.audioMixing.sounds[-1].volume=t,e._flushAudioMixingMuteStatus(),n()},e.getAudioMixingDuration=function(){var t=s.b.reportApiInvoke(e.sid,{getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.getAudioMixingDuration"}),n=e._getOneEffectDuration({soundId:-1});return t(null,n),n},e.getAudioMixingCurrentPosition=function(){var t=s.b.reportApiInvoke(e.sid,{getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.getAudioMixingCurrentPosition"}),n=e._getOneEffectCurrentPosition({soundId:-1},!0);return t(null,n),n},e.setAudioMixingPosition=function(t,n){var i=s.b.reportApiInvoke(e.sid,{callback:n,options:arguments,tag:"tracer",getStates:e._getOneEffectStates({soundId:-1}),name:"Stream.setAudioMixingPosition"});Object(W.checkValidNumber)(t,"position",0,1e8),e._setOneEffectPosition({soundId:-1},t,i)},e.playEffect=function(t,n){var i=s.b.reportApiInvoke(e.sid,{callback:function(t){if(t)return n&&n(t);e.dispatchEvent({type:"effectPlayed"}),n&&n(null)},name:"Stream.playEffect",options:t});Object(W.checkValidObject)(t,"options");var a=t.soundId,o=t.filePath,c=t.cycle;Object(W.checkValidNumber)(a,"soundId",1,1e4),Object(W.checkValidString)(o,"filePath",0,Object(r.getParameter)("FILEPATH_LENMAX"),!1),!Object(W.isEmpty)(c)&&Object(W.checkValidNumber)(c,"cycle"),e._playOneEffect(t,i)},e.stopEffect=function(t,n){var i=s.b.reportApiInvoke(e.sid,{callback:n,getStates:e._getOneEffectStates({soundId:t}),name:"Stream.stopEffect"});Object(W.checkValidNumber)(t,"soundId",1,1e4),e._stopOneEffect({soundId:t},i)},e.stopAllEffects=function(t){var n=s.b.reportApiInvoke(e.sid,{callback:t,name:"Stream.stopAllEffect"}),i=!1,a=0,r=0,o=function(e){i||(e?(n(e),i=!0):a+=1,a===r&&(n(null),i=!0))};for(var c in e.audioMixing.sounds){var d=e.audioMixing.sounds[c];-1!==d.soundId&&(d.state!==e.audioMixing.states.BUSY&&d.state!==e.audioMixing.states.PAUSED||(r++,e._stopOneEffect({soundId:c},o)))}r||n(null)},e.preloadEffect=function(t,n,i){var a=s.b.reportApiInvoke(e.sid,{callback:i,options:arguments,tag:"tracer",name:"Stream.preloadEffect"});Object(W.checkValidNumber)(t,"soundId",1,1e4),Object(W.checkValidString)(n,"filePath",1,Object(r.getParameter)("FILEPATH_LENMAX"),!1),e._initSoundIfNotExists(t,n),e.audioMixing.buffer[n]?a(null):e.loadAudioBuffer(n,n,a)},e.unloadEffect=function(t,n){var i=s.b.reportApiInvoke(e.sid,{callback:n,options:arguments,tag:"tracer",name:"Stream.unloadEffect"});Object(W.checkValidNumber)(t,"soundId",1,1e4);var a=e.audioMixing.sounds[t];if(!a){var r="SOUND_NOT_EXISTS";return o.default.error(r,t),void i(r)}var c=a.options?a.options.filePath:a.filePath;if(c)delete e.audioMixing.buffer[c],delete e.audioMixing.sounds[t],i(null);else{var d="SOUND_BUFFER_NOT_FOUND";o.default.error(d,t),i(d)}},e.pauseEffect=function(t,n){var i=s.b.reportApiInvoke(e.sid,{callback:n,options:arguments,tag:"tracer",name:"Stream.pauseEffect"});return e._pauseOneEffect({soundId:t},i)},e.pauseAllEffects=function(t){var n=s.b.reportApiInvoke(e.sid,{callback:t,name:"Stream.pauseAllEffects"}),i=!1,a=0,r=0,o=function(e){i||(e?(n(e),i=!0):a+=1,a===r&&(n(null),i=!0))};for(var c in e.audioMixing.sounds)"-1"!==c&&e.audioMixing.sounds[c].state===e.audioMixing.states.BUSY&&(r++,e._pauseOneEffect({soundId:c},o));r||n(null)},e.resumeEffect=function(t,n){Object(W.checkValidNumber)(t,"soundId",1,1e4);var i=s.b.reportApiInvoke(e.sid,{callback:n,options:arguments,tag:"tracer",name:"Stream.resumeEffect"});return e._resumeOneEffect({soundId:t},i)},e.resumeAllEffects=function(t){var n=s.b.reportApiInvoke(e.sid,{callback:t,name:"Stream.resumeAllEffects"}),i=!1,a=0,r=0,o=function(e){i||(e?(n(e),i=!0):a+=1,a===r&&(n(null),i=!0))};for(var c in e.audioMixing.sounds)"-1"!==c&&e.audioMixing.sounds[c].state===e.audioMixing.states.PAUSED&&(r++,e._resumeOneEffect({soundId:c},o));r||n(null)},e.getEffectsVolume=function(){var t=[];for(var n in e.audioMixing.sounds){var i=e.audioMixing.sounds[n];i&&"-1"!==n&&t.push({soundId:parseInt(n),volume:i.volume})}return t},e.setEffectsVolume=function(t,n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setEffectsVolume",options:arguments,tag:"tracer",callback:n});for(var a in Object(W.checkValidNumber)(t,"volume",0,100),e.audioMixing.defaultVolume=t,e.audioMixing.sounds){var r=e.audioMixing.sounds[a];"-1"!==a&&(r.volume=t)}e._flushAudioMixingMuteStatus(),i(null)},e.setVolumeOfEffect=function(t,n,i){var a=s.b.reportApiInvoke(e.sid,{name:"Stream.setVolumeOfEffect",options:arguments,tag:"tracer",callback:i});Object(W.checkValidNumber)(t,"soundId",0,1e4),Object(W.checkValidNumber)(n,"volume",0,100),e._initSoundIfNotExists(t),e.audioMixing.sounds[t].volume=n,e._flushAudioMixingMuteStatus(),a(null)}}(t),ge.addVideoEffectCapability(t),function(e,t){e.videoConstraint={},t.cameraId&&(e.videoConstraint.deviceId={exact:t.cameraId}),t.facingMode&&(e.videoConstraint.facingMode=t.facingMode),e.videoSize&&(e.videoConstraint.width=e.videoSize[0],e.videoConstraint.height=e.videoSize[1]),Object(m.isLegacyChrome)()||(e.videoConstraint.frameRate={ideal:30,max:30}),e.audioConstraint={},t.microphoneId&&(e.audioConstraint.deviceId={exact:t.microphoneId}),Object(m.isLegacyChrome)()||e.audioProcessing&&(void 0!==e.audioProcessing.AGC&&(Object(m.isFireFox)()?e.audioConstraint.autoGainControl=e.audioProcessing.AGC:Object(m.isChrome)()&&(e.audioConstraint.googAutoGainControl=e.audioProcessing.AGC,e.audioConstraint.googAutoGainControl2=e.audioProcessing.AGC)),void 0!==e.audioProcessing.AEC&&(e.audioConstraint.echoCancellation=e.audioProcessing.AEC),void 0!==e.audioProcessing.ANS&&(Object(m.isFireFox)()?e.audioConstraint.noiseSuppression=e.audioProcessing.ANS:Object(m.isChrome)()&&(e.audioConstraint.googNoiseSuppression=e.audioProcessing.ANS))),e.screenConstraint={},t.sourceId&&(e.screenConstraint.sourceId=t.sourceId),t.extensionId&&Object(m.isChrome)()?(e.screenConstraint.extensionId=t.extensionId,e.screenConstraint.mandatory={chromeMediaSource:"desktop",maxWidth:e.screenAttributes.width,maxHeight:e.screenAttributes.height,maxFrameRate:e.screenAttributes.maxFr,minFrameRate:e.screenAttributes.minFr}):(e.screenConstraint.mediaSource="screen",e.screenConstraint.width=e.screenAttributes.width,e.screenConstraint.height=e.screenAttributes.height,e.screenConstraint.frameRate={ideal:e.screenAttributes.maxFr,max:e.screenAttributes.maxFr}),t.mediaSource&&(e.screenConstraint.mediaSource=t.mediaSource),e.setVideoResolution=function(n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoResolution",options:arguments,tag:"tracer"});if(!(n instanceof Array)){var a=he(n+="");return a&&a.video?(e.videoConstraint=h()(e.videoConstraint,{width:{ideal:a.video.width},height:{ideal:a.video.height}}),t.attributes.resolution=a.attributes.resolution,(r=e.stream&&e.stream.getVideoTracks&&e.stream.getVideoTracks()[0])&&r.applyConstraints?(o.default.debug("setVideoResolution applyConstraints",e.videoConstraint),r.applyConstraints(e.videoConstraint).then(i).catch(i)):i(),!0):(i("NO_PROFILE_".concat(n)),!1)}var r,c=n[0],d=n[1];e.videoConstraint=h()(e.videoConstraint,{width:{ideal:c},height:{ideal:d}}),t.attributes.resolution="".concat(c,"x").concat(d),(r=e.stream&&e.stream.getVideoTracks&&e.stream.getVideoTracks()[0])&&r.applyConstraints?(o.default.debug("setVideoResolution applyConstraints",e.videoConstraint),ge.disableVideoEffect(e).then(function(){return r.applyConstraints(e.videoConstraint).then(i).catch(i)}).then(function(){return ge.restoreVideoEffect(e)})):i()},e.setVideoFrameRate=function(n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoFrameRate",options:arguments,tag:"tracer"});if(Object(m.isFireFox)())return i("FIREFOX_NOT_SUPPORTED"),!1;if("object"===Se()(n)&&n instanceof Array&&n.length>1){e.videoConstraint=h()(e.videoConstraint,{frameRate:{ideal:n[0],max:n[1]}}),t.attributes.minFrameRate=n[0],t.attributes.maxFrameRate=n[1];var a=e.stream&&e.stream.getVideoTracks&&e.stream.getVideoTracks()[0];return a&&a.applyConstraints?(o.default.debug("setVideoFrameRate applyConstraints",e.videoConstraint),a.applyConstraints(e.videoConstraint).then(i).catch(i)):i(),!0}return i("INVALID_PARAM_".concat(JSON.stringify(n))),!1},e.setVideoBitRate=function(n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoBitRate",options:arguments,tag:"tracer"});return"object"===Se()(n)&&n instanceof Array&&n.length>1?(t.attributes.minVideoBW=n[0],t.attributes.maxVideoBW=n[1],e.connectionSpec&&(e.connectionSpec.minVideoBW=n[0],e.connectionSpec.maxVideoBW=n[1]),e.pc&&e.pc.renegotiate&&e.pc.renegotiate(),i(),!0):(i("INVALID_PARAM_".concat(JSON.stringify(n))),!1)},e.setScreenBitRate=function(n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setScreenBitRate",options:arguments,tag:"tracer"});return"object"===Se()(n)&&n instanceof Array&&n.length>1?(t.screenAttributes.minVideoBW=n[0],t.screenAttributes.maxVideoBW=n[1],i(),!0):(i("INVALID_PARAM_".concat(JSON.stringify(n))),!1)},e.setScreenProfile=function(t){var n=s.b.reportApiInvoke(e.sid,{name:"Stream.setScreenProfile",options:arguments,tag:"tracer"});Object(W.checkValidEnum)(t,"profile",["480p_1","480p_2","720p_1","720p_2","1080p_1","1080p_2"]);var i=he(t);return i&&i.screen?(e.screenConstraint.mandatory?(e.screenConstraint.mandatory.maxWidth=i.screen.width,e.screenConstraint.mandatory.maxHeight=i.screen.height,i.screen.frameRate&&i.screen.frameRate.min&&i.screen.frameRate.max&&(e.screenConstraint.mandatory.minFrameRate=i.screen.frameRate.min,e.screenConstraint.mandatory.maxFrameRate=i.screen.frameRate.max)):e.screenConstraint=h()(e.screenConstraint,i.screen),e.screenAttributes.width=i.screen.width,e.screenAttributes.height=i.screen.height,e.screenAttributes.minFr=i.screen.frameRate.min,e.screenAttributes.maxFr=i.screen.frameRate.max,n(),!0):(n("NO_SCREEN_PROFILE_".concat(JSON.stringify(t))),!1)},e.setVideoProfileCustom=function(t){var n=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoProfileCustom",options:arguments,tag:"tracer"});e.setVideoResolution(t[0]),e.setVideoFrameRate([t[1],t[1]]),e.setVideoBitRate([t[2],t[2]]),n()},e.setVideoProfileCustomPlus=function(n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoProfileCustom",options:arguments,tag:"tracer"});e.videoConstraint.width=n.width,e.videoConstraint.height=n.height,t.attributes.resolution="".concat(n.width,"x").concat(n.height),e.setVideoFrameRate([n.framerate,n.framerate]),e.setVideoBitRate([n.bitrate,n.bitrate]),i()},e.setVideoProfile=function(n){var i=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoProfile",options:arguments,tag:"tracer"}),a=he(n);if(!a){var r="Invalid Profile ".concat(n);throw new Error(r)}if(e.profile=n,a&&a.video){e.profile=a.profileName,e.videoConstraint=h()(e.videoConstraint,a.video),e.connectionSpec&&a.attributes.maxVideoBW&&(e.connectionSpec.minVideoBW=a.attributes.minVideoBW,e.connectionSpec.maxVideoBW=a.attributes.maxVideoBW),Object(m.isEdge)()&&(e.videoConstraint.frameRate.max=60),Object(m.isFireFox)()&&(e.videoConstraint.frameRate={ideal:30,max:30}),t.attributes=h()(t.attributes,a.attributes),e.pc&&e.pc.renegotiate&&e.pc.renegotiate();var c=e.stream&&e.stream.getVideoTracks&&e.stream.getVideoTracks()[0];return c&&c.applyConstraints?(o.default.debug("setVideoProfile applyConstraints",e.videoConstraint),ge.disableVideoEffect(e).then(function(){return c.applyConstraints(e.videoConstraint)}).then(function(){return ge.restoreVideoEffect(e)}).then(function(t){return new Promise(function(n,a){i(t),Object(F.vsResHack)(e.stream,function(t,i){e.videoWidth=t,e.videoHeight=i,n()},function(t){o.default.warning("[".concat(e.streamId,"] vsResHack failed: "),t),a()})})}).catch(i)):i(),!0}return i("INVALID_VIDEO_PROFILE_".concat(n)),!1},e.setAudioProfile=function(t){var n=s.b.reportApiInvoke(e.sid,{name:"Stream.setAudioProfile",options:arguments,tag:"tracer"});Object(W.checkValidEnum)(t,"profile",["speech_low_quality","speech_standard","music_standard","standard_stereo","high_quality","high_quality_stereo"]),e.audioProfile=t;var i=Ee(t);return e.highQuality=i.highQuality,e.stereo=i.stereo,e.speech=i.speech,e.lowQuality=i.lowQuality,e.stereo&&Object(m.isChrome)()&&(e.audioConstraint.googAutoGainControl=!1,e.audioConstraint.googAutoGainControl2=!1,e.audioConstraint.echoCancellation=!1,e.audioConstraint.googNoiseSuppression=!1),n(),!0},e.setVideoEncoderConfiguration=function(t){Object(W.checkValidObject)(t,"config");var n=s.b.reportApiInvoke(e.sid,{name:"Stream.setVideoEncoderConfiguration",options:t,tag:"tracer"});t.resolution&&(Object(W.checkValidNumber)(t.resolution.width,"config.resolution.width"),Object(W.checkValidNumber)(t.resolution.height,"config.resolution.height"),e.setVideoResolution([t.resolution.width,t.resolution.height])),t.frameRate&&(Object(W.checkValidNumber)(t.frameRate.min,"config.frameRate.min"),Object(W.checkValidNumber)(t.frameRate.max,"config.frameRate.max"),e.setVideoFrameRate([t.frameRate.min,t.frameRate.max])),t.bitrate&&(Object(W.checkValidNumber)(t.bitrate.min,"config.bitrate.min",1,1e7),Object(W.checkValidNumber)(t.bitrate.max,"config.bitrate.max",1,1e7),e.setVideoBitRate([t.bitrate.min,t.bitrate.max])),n()},e.getSupportedProfile=function(t){var n=s.b.reportApiInvoke(e.sid,{name:"Stream.getSupportedProfile",options:arguments,tag:"tracer",callback:t});if(!e.local){var i="ONLY_LOCAL_STREAM_SUPPORTED";return o.default.error(i),n(i)}if(!e.stream)return i="STREAM_NOT_INIT",o.default.error(i),n(i);if(!e.stream.getVideoTracks)return i="TRACK_NOT_SUPPORT",o.default.error(i),n(i);var a=e.stream.getVideoTracks()[0];if(!a)return i="NO_VIDEO_TRACK_FOUND",o.default.error(i),n(i);if(!a.getCapabilities)return i="GETCAPABILITY_NOT_SUPPORT",o.default.error(i),n(i);var r=a.getCapabilities();return n(null,_e(r))}}(t,e),t.getId=function(){return t.streamId},t.getUserId=function(){return t.userId},t.checkDualStreamEnabled=function(){if(Object(r.getParameter)("DUALSTREAM_OPERATION_CHECK")&&t.isDualStream){return o.default.error("Operation not permitted: ".concat("DUAL_STREAM_ENABLED")),"DUAL_STREAM_ENABLED"}return!1},t.setUserId=function(e){var n=s.b.reportApiInvoke(t.sid,{name:"Stream.setUserId",options:arguments,tag:"tracer"});t.userId&&o.default.warning("[".concat(t.streamId,"] Stream.userId ").concat(t.userId," => ").concat(e)),t.userId=e,n()},t.getAttributes=function(){return e.screen?t.screenAttributes:e.attributes},t.hasAudio=function(){return t.audio},t.hasVideo=function(){return t.video},t.hasScreen=function(){return t.screen},t.hasScreenAudio=function(){return t.screenAudio},t.isVideoOn=function(){return(t.hasVideo()||t.hasScreen())&&!t.userMuteVideo},t.isAudioOn=function(){return t.hasAudio()&&!t.userMuteAudio},t.init=function(i,a){var r=s.b.reportApiInvoke(t.sid,{callback:function(e,t){if(e)return a&&a(e);i&&i(t)},name:"Stream.init",options:arguments,tag:"tracer"}),c=((new Date).getTime(),arguments[2]);if(void 0===c&&(c=2),!0===t.initialized)return r({type:"warning",msg:"STREAM_ALREADY_INITIALIZED"});if(!0!==t.local)return r({type:"warning",msg:"STREAM_NOT_LOCAL"});var d=Math.random().toString().slice(3);t._streamInitID=d,t.videoSource?t.videoName="videoSource":t.video&&(t.videoName=H.searchDeviceNameById(e.cameraId)||"default"),t.audioSource?t.audioName="audioSource":t.audio&&(t.audioName=H.searchDeviceNameById(e.microphoneId)||"default"),t.screen&&(t.screenName=e.extensionId||"default");try{if(e.audio||e.video||e.screen||e.screenAudio||e.videoSource||e.audioSource){o.default.debug("[".concat(t.streamId,"] Requested access to local media"));var u={streamId:t.streamId};e.videoSource?u.videoSource=e.videoSource:e.screen?u.screen=t.screenConstraint:e.video&&(u.video=t.videoConstraint),e.audioSource?u.audioSource=e.audioSource:e.screenAudio?u.screenAudio=e.screenAudio:e.audio&&(u.audio=t.audioConstraint),j(u,function(i){if(u.screenAudio&&!i.getAudioTracks()[0]&&o.default.warning("[".concat(t.streamId,"] Audio sharing is not selected")),u.screen&&o.default.debug("[".concat(t.streamId,"] User has granted access to screen sharing")),(u.video||u.audio)&&o.default.debug("[".concat(t.streamId,"] User has granted access to local media")),null===t._streamInitID){i.getTracks().forEach(function(e){e.stop()});var a={type:"error",msg:"STREAM_IS_CLOSED",info:"stream is closed and cannot be initialized"};return o.default.error(t.streamId,a.info),void r(a)}if(t._streamInitID!==d){i.getTracks().forEach(function(e){e.stop()});a={type:"error",msg:"ABORT_OTHER_INIT",info:"stream initialization is aborted because of another stream.init"};return o.default.error(t.streamId,a.info),void r(a)}t.dispatchEvent({type:"accessAllowed"}),t.stream=i,t.initialized=!0,t.reloadDeviceName(),t.hasVideo()&&Object(F.vsResHack)(i,function(e,n){t.videoWidth=e,t.videoHeight=n},function(e){o.default.warning("[".concat(t.streamId,"] vsResHack failed: "),e)}),e.screen&&t.stream&&t.stream.getVideoTracks()[0]&&(t.stream.getVideoTracks()[0].onended=function(){t.dispatchEvent({type:"stopScreenSharing"})}),t.stream&&t.stream.getTracks&&t.stream.getTracks().forEach(function(e){e&&!e.onended&&(e.onended=n)}),r()},function(e){var n={type:"error",info:null};switch(e&&(n.msg=e.name||e.code||e,e.message&&(n.info=e.message),e.code&&(n.info?n.info+=". "+e.code:n.info=" "+e.code),e.constraint&&(n.info?n.info+=". Constraint: "+e.constraint:n.info="constraint: "+e.constraint)),n.msg){case"Starting video failed":case"TrackStartError":if(t.videoConstraint&&(delete t.videoConstraint.width,delete t.videoConstraint.height),c>0)return void setTimeout(function(){t.init(function(e){return r(e)},r,c-1)},1);n.msg="MEDIA_OPTION_INVALID";break;case"DevicesNotFoundError":n.msg="DEVICES_NOT_FOUND";break;case"NotSupportedError":n.msg="NOT_SUPPORTED";break;case"PermissionDeniedError":case"InvalidStateError":n.msg="PERMISSION_DENIED",t.dispatchEvent({type:"accessDenied"});break;case"PERMISSION_DENIED":case"NotAllowedError":t.dispatchEvent({type:"accessDenied"});break;case"ConstraintNotSatisfiedError":n.msg="CONSTRAINT_NOT_SATISFIED";break;default:n.msg||(n.msg="UNDEFINED")}var i="Media access ".concat(n.msg).concat(n.info?": "+n.info:"");o.default.error("[".concat(t.streamId,"] "),i),r(n)})}else r({type:"warning",msg:"STREAM_HAS_NO_MEDIA_ATTRIBUTES"})}catch(e){o.default.error("[".concat(t.streamId,"] Stream init: "),e),r({type:"error",msg:e.message||e})}},t.reloadDeviceName=function(){if(t.stream){if(t.stream.getVideoTracks){var e=t.stream.getVideoTracks()[0];e&&e.label&&(t.videoName=e.label)}if(t.stream.getAudioTracks){var n=t.stream.getAudioTracks()[0];n&&n.label&&(t.audioName=n.label)}}},t.close=function(){var e=s.b.reportApiInvoke(null,{name:"Stream.close",options:arguments,tag:"tracer"});if(o.default.debug("[".concat(t.streamId,"] Close stream with id"),t.streamId),void 0!==t.stream){var n=t.stream.getTracks();for(var i in n)n.hasOwnProperty(i)&&n[i].stop();!t.isLowStream&&t.local?ge.disableVideoEffect(t).then(function(){t.stream=void 0}):(t.stream&&t.stream.clean&&t.stream.clean(),t.stream=void 0)}Object(m.isSafari)()&&t.pc&&t.pc.peerConnection&&t.pc.peerConnection.removeTrack&&t.pc.peerConnection.getSenders&&t.pc.peerConnection.getSenders().forEach(function(e){e&&(o.default.debug("[".concat(t.streamId,"] Remove Track"),e),t.pc.peerConnection.removeTrack(e))});t.local&&(t.initialized=!1),t._streamInitID=null,t._onAudioMute=void 0,t._onAudioUnmute=void 0,t._onVideoMute=void 0,t._onVideoUnmute=void 0,t.lowStream&&t.lowStream.close(),e()},t.enableAudio=function(){var e,n=s.b.reportApiInvoke(t.sid,{name:"Stream.enableAudio",options:arguments,tag:"tracer"});return o.default.deprecate("[".concat(t.streamId,"] Stream.enableAudio is deprecated and will be removed in the future. Use Stream.unmuteAudio instead")),t.userMuteAudio||o.default.warning("[".concat(t.streamId,"] User already enableAudio")),t.userMuteAudio=!1,n(null,e=!t.peerMuteAudio&&t._unmuteAudio()),e},t.disableAudio=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.disableAudio",options:arguments,tag:"tracer"});o.default.deprecate("[".concat(t.streamId,"] Stream.disableAudio is deprecated and will be removed in the future. Use Stream.muteAudio instead")),t.userMuteAudio&&o.default.warning("[".concat(t.streamId,"] User already disableAudio")),t.userMuteAudio=!0;var n=t._muteAudio();return e(null,n),n},t.enableVideo=function(){var e,n=s.b.reportApiInvoke(t.sid,{name:"Stream.enableVideo",options:arguments,tag:"tracer"});return o.default.deprecate("[".concat(t.streamId,"] Stream.enableVideo is deprecated and will be removed in the future. Use Stream.unmuteVideo instead")),t.userMuteVideo||o.default.warning("[".concat(t.streamId,"] User already enableVideo")),t.userMuteVideo=!1,t.lowStream&&(t.lowStream.userMuteVideo=!1),n(null,e=!t.peerMuteVideo&&t._unmuteVideo()),e},t.disableVideo=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.disableVideo",options:arguments,tag:"tracer"});o.default.deprecate("[".concat(t.streamId,"] Stream.disableVideo is deprecated and will be removed in the future. Use Stream.muteVideo instead")),t.userMuteVideo&&o.default.warning("[".concat(t.streamId,"] User already disableVideo")),t.userMuteVideo=!0,t.lowStream&&(t.lowStream.userMuteVideo=!0);var n=t._muteVideo();return e(null,n),n},t.unmuteAudio=function(){var e,n=s.b.reportApiInvoke(t.sid,{name:"Stream.unmuteAudio",options:arguments,tag:"tracer"});return t.userMuteAudio||o.default.warning("[".concat(t.streamId,"] User already unmuteAudio")),t.userMuteAudio=!1,n(null,e=!t.peerMuteAudio&&t._unmuteAudio()),e},t.muteAudio=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.muteAudio",options:arguments,tag:"tracer"});t.userMuteAudio&&o.default.warning("[".concat(t.streamId,"] User already muteAudio")),t.userMuteAudio=!0;var n=t._muteAudio();return e(null,n),n},t.unmuteVideo=function(){var e,n=s.b.reportApiInvoke(t.sid,{name:"Stream.unmuteVideo",options:arguments,tag:"tracer"});return t.userMuteVideo||o.default.warning("[".concat(t.streamId,"] User already unmuteVideo")),t.userMuteVideo=!1,t.lowStream&&(t.lowStream.userMuteVideo=!1),n(null,e=!t.peerMuteVideo&&t._unmuteVideo()),e},t.muteVideo=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.muteVideo",options:arguments,tag:"tracer"});t.userMuteVideo&&o.default.warning("[".concat(t.streamId,"] User already muteVideo")),t.userMuteVideo=!0,t.lowStream&&(t.lowStream.userMuteVideo=!0);var n=t._muteVideo();return e(null,n),n},t._unmuteAudio=function(){return o.default.debug("[".concat(t.streamId,"] Unmuted audio stream with id "),t.streamId),t._flushAudioMixingMuteStatus(!1),!(!t.hasAudio()||!t.initialized||void 0===t.stream||!0===t.stream.getAudioTracks()[0].enabled)&&(t._onAudioUnmute&&t._onAudioUnmute(),t.pc&&(t.pc.isAudioMute=!1),t.stream.getAudioTracks()[0].enabled=!0,!0)},t._isAudioMuted=function(){if(t.stream&&t.hasAudio()){var e=t.stream.getAudioTracks();return e.length>0&&!e[0].enabled}return!1},t._isVideoMuted=function(){if(t.stream&&t.hasVideo()){var e=t.stream.getVideoTracks();return e.length>0&&!e[0].enabled}return!1},t._muteAudio=function(){return o.default.debug("[".concat(t.streamId,"] Muted audio stream with id "),t.streamId),t._flushAudioMixingMuteStatus(!0),!!(t.hasAudio()&&t.initialized&&void 0!==t.stream&&t.stream.getAudioTracks()[0].enabled)&&(t._onAudioMute&&t._onAudioMute(),t.pc&&(t.pc.isAudioMute=!0),t.stream.getAudioTracks()[0].enabled=!1,t.sid&&s.b.audioSendingStopped(t.sid,{succ:!0,reason:"muteAudio"}),!0)},t._unmuteVideo=function(){return o.default.debug("[".concat(t.streamId,"] Unmuted video stream with id"),t.streamId),!(!t.initialized||void 0===t.stream||!t.stream.getVideoTracks().length||!0===t.stream.getVideoTracks()[0].enabled)&&(t._onVideoUnmute&&t._onVideoUnmute(),t.pc&&(t.pc.isVideoMute=!1),t.stream.getVideoTracks()[0].enabled=!0,t.lowStream&&t.lowStream._unmuteVideo(),!0)},t._muteVideo=function(){return o.default.debug("[".concat(t.streamId,"] Muted video stream with id"),t.streamId),!!(t.initialized&&void 0!==t.stream&&t.stream.getVideoTracks().length&&t.stream.getVideoTracks()[0].enabled)&&(t._onVideoMute&&t._onVideoMute(),t.pc&&(t.pc.isVideoMute=!0),t.stream.getVideoTracks()[0].enabled=!1,t.lowStream&&t.lowStream._muteVideo(),t.sid&&s.b.videoSendingStopped(t.sid,{succ:!0,reason:"muteVideo"}),!0)},t.addTrack=function(i){var a=s.b.reportApiInvoke(t.sid,{name:"Stream.addTrack",options:arguments,tag:"tracer"}),r=t.checkDualStreamEnabled();if(r)return a(r);if(t.pc&&t.pc.addTrack(i,t.stream),"audio"==i.kind){t._cleanupAudioMixing();var o=new MediaStream;t.userMuteAudio&&(i.enabled=!1),o.addTrack(i);var c=t.stream.getVideoTracks()[0];c&&(o.addTrack(c),t.audio=!0,e.audio=!0),t.stream=o,t.audioLevelHelper=null,t.player&&t.player.video&&(t.player.video.srcObject=t.stream)}else t.userMuteVideo&&(i.enabled=!1),t.stream.addTrack(i),t.video=!0,e.video=!0;i.onended||(i.onended=n),a()},t.removeTrack=function(n){var i=s.b.reportApiInvoke(t.sid,{name:"Stream.removeTrack",options:arguments,tag:"tracer"}),a=t.checkDualStreamEnabled(),r=ge.checkVideoEffectEnabled(t);if(a||r)return i(a);t.pc&&t.pc.removeTrack(n,t.stream),t.stream.removeTrack(n),t._cleanupAudioMixing(),"audio"===n.kind?(t.audio=!1,e.audio=!1):(t.video=!1,e.video=!1),t.audioLevelHelper=null,"live"==n.readyState&&(n.stop(),o.default.debug("[".concat(t.streamId,"] Track ").concat(n.kind," Stopped"))),i()},t.setAudioOutput=function(e,n,i){var a=s.b.reportApiInvoke(t.sid,{callback:function(e,t){if(e)return i&&i(e);n&&n(t)},name:"Stream.setAudioOutput",options:arguments,tag:"tracer"});return Object(W.isValidString)(e,1,255)?(t.audioOutput=e,t.player?void t.player.setAudioOutput(e,function(){return a()},a):a()):(o.default.error("[".concat(t.streamId,"] setAudioOutput Invalid Parameter"),e),a(I.default.INVALID_PARAMETER))},t.play=function(e,n,i){"function"==typeof n&&(i=n,n=null),o.default.debug("[".concat(t.streamId,"] play()."),e,n);var a=s.b.reportApiInvoke(t.sid,{name:"Stream.play",options:arguments,tag:"tracer",callback:i});if(Object(W.checkValidString)(e,"elementID"),Object(W.isEmpty)(n)||(Object(W.isEmpty)(n.fit)||Object(W.checkValidEnum)(n.fit,"fit",["cover","contain"]),Object(W.isEmpty)(n.muted)||Object(W.checkValidBoolean)(n.muted,"muted")),t.player)o.default.warning("[".concat(t.streamId,"] Stream.play(): Stream is already playing. Fallback to resume stream")),t.resume().then(function(){a(null)}).catch(a);else{t.elementID=e,t.playOptions=n,!t.local||t.video||t.screen?(t.player=new y({id:t.getId(),stream:t,elementID:e,options:n}),t.local&&ge.applyEffectInPlayer(t)):t.hasAudio()&&(t.player=new y({id:t.getId(),stream:t,elementID:e,options:n}));var r={audio:null,video:null};t.on("player-status-change",function e(n){if(r[n.mediaType]=n,r.audio&&r.video)if(t.removeEventListener("player-status-change",e),r.video.isErrorState||r.audio.isErrorState){var i=r.video.isErrorState?r.video:r.audio;a({isErrorState:!0,status:i.status,reason:i.reason,video:r.video,audio:r.audio})}else"aborted"===r.video.status&&"aborted"===r.audio.status?a({status:"aborted",reason:"stop",video:r.video,audio:r.audio}):a(null)}),t.audioOutput&&t.player.setAudioOutput(t.audioOutput),void 0!==t.audioLevel&&t.player.setAudioVolume(t.audioLevel),t._flushAudioMixingMuteStatus(!1)}},t.stop=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.stop",options:arguments,tag:"tracer"});o.default.debug("[".concat(t.streamId,"] Stop stream player with id "),t.streamId),t.player?(ge.removeEffectFromLocalPlayer(t),t.player.destroy(),delete t.player):o.default.error("[".concat(t.streamId,"] Stream.stop(): Stream is not playing")),t._flushAudioMixingMuteStatus(!0),e()},t.isPlaying=function(){return!!t.player},t.isPaused=function(){return!!t.player&&(!!(t.player.video&&t.player.video.paused&&t.player.mediaElemExists(t.player.video))||!!(t.player.audio&&t.player.audio.paused&&t.player.mediaElemExists(t.player.audio)))},t.resume=function(){var e,n;return t.player?(t.player.video&&t.player.video.play&&(e=t.player.video.play()),e=e||Promise.resolve(),t.player.audio&&t.player.audio.play&&(n=t.player.audio.play()),n=n||Promise.resolve(),Promise.all([e,n])):Promise.reject("NO_PLAYER_FOUND")},t.getVideoTrack=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.getVideoTrack",options:arguments,tag:"tracer"});if(t.stream&&t.stream.getVideoTracks){var n=t.stream.getVideoTracks()[0];if(n)return o.default.info("[".concat(t.streamId,"] getVideoTrack"),n),e(),n}o.default.info("[".concat(t.streamId,"] getVideoTrack None")),e(null,"getVideoTrack None")},t.getAudioTrack=function(){var e=s.b.reportApiInvoke(t.sid,{name:"Stream.getAudioTrack",options:arguments,tag:"tracer"});if(t.stream&&t.stream.getAudioTracks){var n=t.stream.getAudioTracks()[0];if(n)return o.default.info("[".concat(t.streamId,"] getAudioTracks"),n),e(),n}o.default.info("[".concat(t.streamId,"] getAudioTracks None")),e(null,"getAudioTracks None")},t._hasVideoTracks=function(){return!!(t.stream&&t.stream.getVideoTracks&&t.stream.getVideoTracks()[0])},t._hasAudioTracks=function(){return!!(t.stream&&t.stream.getAudioTracks&&t.stream.getAudioTracks()[0])},t._replaceMediaStreamTrack=function(e,n,i){if(t.stream){if("video"==e.kind){if(r=t.stream.getVideoTracks()[0])return t.userMuteVideo&&(e.enabled=!1),t.stream.removeTrack(r),t.stream.addTrack(e),o.default.debug("[".concat(t.streamId,"] _replaceMediaStreamTrack ").concat(e.kind," SUCCESS")),"live"==r.readyState&&(r.stop(),o.default.debug("[".concat(t.streamId,"] Track ").concat(r.kind," Stopped"))),n&&n();var a="MEDIASTREAM_TRACK_NOT_FOUND";return o.default.error("[".concat(t.streamId,"] MEDIASTREAM_TRACK_NOT_FOUND ").concat(e.kind)),i(a)}if("audio"==e.kind){var r;if(r=t.stream.getAudioTracks()[0]){t.userMuteAudio&&(e.enabled=!1);var s=new MediaStream;s.addTrack(e);var c=t.stream&&t.stream.getVideoTracks()[0];return c&&s.addTrack(c),t.stream=s,t.audioLevelHelper=null,t.player&&t.player.video&&(t.player.video.srcObject=t.stream),o.default.debug("[".concat(t.streamId,"] _replaceMediaStreamTrack SUCCESS")),"live"==r.readyState&&(r.stop(),o.default.debug("[".concat(t.streamId,"] Track ").concat(r.kind," Stopped"))),n&&n()}a="MEDIASTREAM_TRACK_NOT_FOUND";return o.default.error("[".concat(t.streamId,"] MEDIASTREAM_TRACK_NOT_FOUND ").concat(e.kind)),i(a)}a="INVALID_TRACK_TYPE";return o.default.error("[".concat(t.streamId,"] _replaceMediaStreamTrack ").concat(a," ").concat(e.kind)),i&&i(a)}a="NO_STREAM_FOUND";return o.default.error("[".concat(t.streamId,"] _replaceMediaStreamTrack ").concat(a)),i&&i(a)},t.replaceTrack=function(e,i,a){var r=s.b.reportApiInvoke(t.sid,{callback:function(e,t){if(e)return a&&a(e);i&&i(t)},name:"Stream.replaceTrack",options:arguments,tag:"tracer"});if(!e||!e.kind)return r("INVALID_TRACK");var c=t.checkDualStreamEnabled();return c?r(c):(t._cleanupAudioMixing(),e.onended||(e.onended=n),t.pc&&t.pc.hasSender&&t.pc.hasSender(e.kind)?void t.pc.replaceTrack(e,function(){return o.default.debug("[".concat(t.streamId,"] PeerConnection.replaceTrack ").concat(e.kind," SUCCESS")),t._replaceMediaStreamTrack(e,function(e){return r(null,e)},r)},function(n){return o.default.error("[".concat(t.streamId,"] PeerConnection.replaceTrack ").concat(e.kind," Failed ").concat(n)),r(n)}):t._replaceMediaStreamTrack(e,function(e){return r(null,e)},r))},t.setAudioVolume=function(e){var n=s.b.reportApiInvoke(t.sid,{name:"Stream.setAudioVolume",options:arguments,tag:"tracer"});Object(W.checkValidNumber)(e,"level",0,100),t.audioLevel=e,t.player&&t.player.setAudioVolume(e),n()},t.getStats=function(e,n,i){var a=[];a.push(t._getPCStats(i)),a.push(new Promise(function(e){var n={};t.pc&&t.pc.isSubscriber?null!==window.navigator.userAgent.match("Firefox")&&(B(n,"videoReceiveResolutionHeight",t.videoHeight),B(n,"videoReceiveResolutionWidth",t.videoWidth)):t.pc&&!t.pc.isSubscriber&&((Object(m.isSafari)()||Object(m.isFireFox)())&&(B(n,"videoSendResolutionHeight",t.videoHeight),B(n,"videoSendResolutionWidth",t.videoWidth)),(Object(m.isSafari)()||Object(m.isFireFox)())&&t.uplinkStats&&B(n,"videoSendPacketsLost",t.uplinkStats.uplink_cumulative_lost)),e(n)})),a.push(new Promise(function(e){var n={};return t.traffic_stats&&t.pc&&t.pc.isSubscriber?(B(n,"accessDelay",t.traffic_stats.access_delay),B(n,"endToEndDelay",t.traffic_stats.e2e_delay),B(n,"videoReceiveDelay",t.traffic_stats.video_delay),B(n,"audioReceiveDelay",t.traffic_stats.audio_delay)):t.traffic_stats&&t.pc&&!t.pc.isSubscriber&&B(n,"accessDelay",t.traffic_stats.access_delay),e(n)})),Promise.all(a).then(function(n){for(var i={},a=n.length-1;a>=0;a--){var r=n[a];h()(i,r)}e&&setTimeout(e.bind(t,i),0)}).catch(function(e){n&&setTimeout(n.bind(t,e),0)})},t._getPCStats=function(e){return new Promise(function(n,i){if(!t.pc||"established"!==t.pc.state||!t.pc.getStats){return i("PEER_CONNECTION_NOT_ESTABLISHED")}t.pc.getStats(function(e){if(!t.pc||"established"!==t.pc.state||!t.pc.getStats){return i("PEER_CONNECTION_STATE_CHANGE")}var a=t.pc.isSubscriber?function(e){var t={};return e.forEach(function(e){e.id&&(-1===e.id.indexOf("recv")&&-1===e.id.indexOf("inbound_rtp")&&-1===e.id.indexOf("inbound-rtp")&&-1===e.id.indexOf("InboundRTP")||("audio"===e.mediaType?(B(t,"audioReceiveBytes",e.bytesReceived),B(t,"audioReceivePackets",e.packetsReceived),B(t,"audioReceivePacketsLost",e.packetsLost)):(B(t,"videoReceiveBytes",e.bytesReceived),B(t,"videoReceivePacketsLost",e.packetsLost),B(t,"videoReceivePackets",e.packetsReceived),B(t,"videoReceiveFrameRate",e.googFrameRateReceived),B(t,"videoReceiveDecodeFrameRate",e.googFrameRateDecoded),B(t,"videoReceiveResolutionWidth",e.googFrameWidthReceived),B(t,"videoReceiveResolutionHeight",e.googFrameHeightReceived))))}),t}(e):function(e){var t={};return e.forEach(function(e){e.id&&(-1===e.id.indexOf("send")&&-1===e.id.indexOf("outbound_rtp")&&-1===e.id.indexOf("OutboundRTP")||("audio"===e.mediaType?(B(t,"audioSendBytes",e.bytesSent),B(t,"audioSendPackets",e.packetsSent),B(t,"audioSendPacketsLost",e.packetsLost)):(B(t,"videoSendBytes",e.bytesSent),B(t,"videoSendPackets",e.packetsSent),B(t,"videoSendPacketsLost",e.packetsLost),B(t,"videoSendFrameRate",e.googFrameRateSent),B(t,"videoSendResolutionWidth",e.googFrameWidthSent),B(t,"videoSendResolutionHeight",e.googFrameHeightSent))))}),t}(e);return n(a)},e)}).then(function(e){return t.pc.isSubscriber?(Object(m.isFireFox)()||Object(m.isSafari)())&&(e.videoReceiveResolutionHeight&&"0"!==e.videoReceiveResolutionHeight||e.videoReceiveResolutionWidth&&"0"!==e.videoReceiveResolutionWidth||(B(e,"videoReceiveResolutionHeight",t.videoHeight),B(e,"videoReceiveResolutionWidth",t.videoWidth))):((Object(m.isSafari)()||Object(m.isFireFox)())&&(e.videoSendResolutionHeight&&"0"!==e.videoSendResolutionHeight||e.videoSendResolutionWidth&&"0"!==e.videoSendResolutionWidth||(B(e,"videoSendResolutionHeight",t.videoHeight),B(e,"videoSendResolutionWidth",t.videoWidth))),(Object(m.isSafari)()||Object(m.isFireFox)())&&t.uplinkStats&&B(e,"videoSendPacketsLost",t.uplinkStats.uplink_cumulative_lost)),Promise.resolve(e)})},t.getAudioLevel=function(){if(t.audioLevelHelper)return t.audioLevelHelper.getAudioLevel();if(t.stream){if(0!==t.stream.getAudioTracks().length)return t.audioLevelHelper=new F.audioLevelHelper(t.stream),t.audioLevelHelper.getAudioLevel();o.default.warning("[".concat(t.streamId,"] can't get audioLevel beacuse no audio trace in stream"))}else o.default.warning("[".concat(t.streamId,"] can't get audioLevel beacuse no stream exist"))},t.setVideoProfile("480P"),t._switchVideoDevice=function(e,n,i){if(e===t.cameraId)return n&&n();var a={video:h()({},t.videoConstraint,{deviceId:{exact:e}}),audio:!1};o.default.debug("[".concat(t.streamId,"] ").concat(a)),j(a,function(a){try{var r=function(){t.isPlaying()&&(t.stop(),t.elementID&&t.play(t.elementID,t.playOptions)),t.cameraId=e,t.videoConstraint.deviceId={exact:e},t.userMuteVideo&&(t.stream.getVideoTracks()[0].enabled=!1),ge.restoreVideoEffect(t),n&&n()};ge.disableVideoEffect(t).then(function(){Object(m.isSafari)()?t.replaceTrack(a.getVideoTracks()[0],r,i):(t.removeTrack(t.stream.getVideoTracks()[0]),t.addTrack(a.getVideoTracks()[0]),r())})}catch(e){return i&&i(e)}},function(e){return i&&i(e)})},t._switchAudioDevice=function(e,n,i){if(e===t.microphoneId)return n&&n();var a={video:!1,audio:h()({},t.audioConstraint,{deviceId:{exact:e}})};o.default.debug("[".concat(t.streamId,"] "),a),j(a,function(a){var r=function(){t._cleanupAudioMixing(),t.userMuteAudio&&(t.stream.getAudioTracks()[0].enabled=!1),t.isPlaying()&&(t.stop(),t.elementID&&t.play(t.elementID)),t.microphoneId=e,t.audioConstraint.deviceId={exact:e},n&&n()};try{Object(m.isSafari)()?t.replaceTrack(a.getAudioTracks()[0],r,i):(t.removeTrack(t.stream.getAudioTracks()[0]),t.addTrack(a.getAudioTracks()[0]),r())}catch(e){return i&&i(e)}},function(e){return i&&i(e)})},t.switchDevice=function(e,n,i,a){var r=s.b.reportApiInvoke(t.sid,{callback:function(e,t){if(e)return a&&a(e);i&&i(t)},name:"Stream.switchDevice",options:arguments,tag:"tracer"});Object(W.checkValidString)(n,"deviceId");var c=function(){return t.inSwitchDevice=!1,r()},d=function(e){t.inSwitchDevice=!1,o.default.error("[".concat(t.streamId,"] "),e),r(e)};if(t.inSwitchDevice)return r("Device switch is in process.");if(t.inSwitchDevice=!0,!t.local)return d("Only the local stream can switch the device.");if(t.screen&&"video"===e)return d("The device cannot be switched during screen-sharing.");if(t.videoSource||t.audioSource)return d("The device cannot be switched when using videoSource or audioSource.");if(t.lowStream)return d("The device cannot be switched when using lowstream.");var u=!1;for(var l in t.audioMixing.sounds){if(t.audioMixing.sounds[l].state!==t.audioMixing.states.IDLE){u=!0;break}}if(t.audioMixing.audioContextInited&&u)return d("The device cannot be switched when using audio Mixing.");H.getDeviceById(n,function(){if("video"===e)t._switchVideoDevice(n,c,d);else{if("audio"!==e)return d("Invalid type.");t._switchAudioDevice(n,c,d)}},function(){return d("The device does not exist.")})},t},Te=a(20),ye=a(8),be=a.n(ye),Re=["live","rtc","web","interop","h264_interop","web-only"],Ae=["vp8","h264"],Oe=["aes-128-xts","aes-256-xts","aes-128-ecb"],Ce=a(21),Ne=a.n(Ce),we=function(e){e&&e.apply(this,[].slice.call(arguments,1))},ke=a(10),De=function(e){var t=c(e);t.needReconnect=!0,t.isTimeout=!1,t.isInit=!0,t.sendbytes=0,t.recvbytes=0,t.startTime=Date.now(),t.lastMsgTime=null,t.clientId=e.clientId,t.hostIndex=0,t.requestID=0,e.host instanceof Array?t.host=e.host:t.host=[e.host],t.getSendBytes=function(){return t.sendbytes},t.getRecvBytes=function(){return t.recvbytes},t.getDuration=function(){return Math.ceil((Date.now()-t.startTime)/1e3)},t.getURL=function(){return t.connection.url},t.reconnect=function(){t.isInit=!0,t.creatConnection()},t.connectNext=function(){t.isInit=!0,++t.hostIndex,o.default.debug("["+t.clientId+"] Gateway length:"+t.host.length+" current index:"+t.hostIndex),t.hostIndex>=t.host.length?t.dispatchEvent(f({type:"recover"})):t.creatConnection()},t.replaceHost=function(e){t.host=e||t.host,t.hostIndex=0,t.creatConnection()},t.creatConnection=function(){if(t.needReconnect=!0,o.default.debug("["+t.clientId+"] start connect:"+t.host[t.hostIndex]),t.lts=(new Date).getTime(),t.connection=new WebSocket("wss://"+t.host[t.hostIndex]),t.connection.binaryType="arraybuffer",t.turnConfig={},t.connection.url){var n=t.connection.url.match(/wss\:\/\/([^:]+):(\d+)/);if(n)t.turnConfig.url=n[1],Object(r.getParameter)("TURN_ENABLE_TCP")&&(t.turnConfig.tcpport=parseInt(n[2])+30),Object(r.getParameter)("TURN_ENABLE_UDP")&&(t.turnConfig.udpport=parseInt(n[2])+30);else{var i=t.host[t.hostIndex].split(":");t.turnConfig.url=i[0],Object(r.getParameter)("TURN_ENABLE_TCP")&&(t.turnConfig.tcpport=parseInt(i[1])+30),Object(r.getParameter)("TURN_ENABLE_UDP")&&(t.turnConfig.udpport=parseInt(i[1])+30)}}t.connection.onopen=function(e){o.default.debug("["+t.clientId+"] websockect opened: "+t.host[t.hostIndex]),t.needReconnect=!0,t.isTimeout=!1,t.isInit=!1,t.sendbytes=0,t.recvbytes=0,t.startTime=Date.now(),Object(ke.resetHTTPByetsCount)(),clearTimeout(t.timeoutCheck),t.dispatchEvent(f({type:"onopen",event:e,socket:t}))},t.connection.onmessage=function(e){if(e.data instanceof ArrayBuffer)t.dispatchEvent({type:"onBinaryData",data:e.data});else{t.recvbytes+=Object(F.lengthInUtf8Bytes)(e.data);var n=JSON.parse(e.data);t.lastMsgTime=Date.now(),n.hasOwnProperty("_id")?t.dispatchEvent(f({type:n._id,msg:n})):n.hasOwnProperty("_type")&&t.dispatchSocketEvent(f({type:n._type,msg:n._message}))}},t.connection.onclose=function(n){t.needReconnect?t.isTimeout||t.isInit?(o.default.debug("["+t.clientId+"] websockect connect timeout"),s.b.joinGateway(e.sid,{lts:t.lts,succ:!1,ec:"timeout",addr:t.connection.url}),t.connectNext()):t.dispatchEvent(f({type:"disconnect",event:n})):(o.default.debug("["+t.clientId+"] websockect closeed"),we(e.onFailure,n),clearTimeout(t.timeoutCheck),t.dispatchEvent(f({type:"close",event:n})),t.connection.onopen=void 0,t.connection.onclose=void 0,t.connection.onerror=void 0,t.connection.onmessage=void 0,t.connection=void 0)},t.connection.onerror=function(e){},setTimeout(function(){t.connection&&t.connection.readyState!=WebSocket.OPEN&&(t.isTimeout=!0,t.connection.close())},5e3)},t.creatConnection(),t.sendMessage=function(e,n){if(t.connection&&t.connection.readyState==WebSocket.OPEN){var i=JSON.stringify(e);t.sendbytes+=Object(F.lengthInUtf8Bytes)(i),t.connection.send(i)}else n({error:"Gateway not connected"})},t.disconnect=function(){t.needReconnect=!0,t.connection.close()},t.close=function(){t.needReconnect=!1,t.connection.onclose=void 0,t.connection.close()},t.sendSignalCommand=function(e,n){e._id="_request_"+t.requestID,t.requestID+=1,"publish_stats"!==e._type&&"subscribe_stats"!==e._type&&"publish_stats_low"!==e._type&&t.on(e._id,function(i){i.msg&&n&&n(i.msg._result,i.msg.message),delete t.dispatcher.eventListeners[e._id]}),t.sendMessage(e,function(e){e.reason="NOT_CONNECTED",n&&n(e.reason,e)})},t.requests=[];var n=function(e){var n=t.requests.findIndex(function(t){return t.id===e.type});if(n>=0)var i=t.requests.splice(n,1)[0];i&&t.dispatcher.eventListeners[e.type]?(delete t.dispatcher.eventListeners[e.type],e.msg&&i.callback&&i.callback(e.msg._result,e.msg._message)):o.default.warning("Detached Response",e.type,e.msg)};return t.sendRequest=function(e,i){e=h()({_id:"_request_"+t.requestID},e),t.requestID+=1;var a={id:e._id,timeoutCounter:0,stalledAt:Date.now(),message:e,callback:i};t.requests.push(a),t.addEventListener(e._id,n),t.sendMessage(e,function(e){var n=this,i=t.requests.findIndex(function(e){return e.id===n.id});i>=0&&(n=t.requests.splice(i,1)[0]),n&&t.dispatcher.eventListeners[e.type]?(delete t.dispatcher.eventListeners[e.type],e.reason="NOT_CONNECTED",n.callback&&n.callback(e.reason,e)):o.default.warning("handleSendError",n)}.bind(a))},t.checkRequestTimeout=function(){for(var e=Math.ceil(Object(r.getParameter)("SIGNAL_REQUEST_TIMEOUT")/Object(r.getParameter)("SIGNAL_REQUEST_WATCH_INTERVAL")),n=t.requests.length-1;n>=0;n--){var i=t.requests[n];i.timeoutCounter>=e?(t.requests.splice(n,1),o.default.error("Request Timeout",i.timeoutCounter,i.message),i.callback&&i.callback("TIMEOUT")):i.timeoutCounter++}},clearInterval(t.requestTimer),t.requestTimer=setInterval(t.checkRequestTimeout,Object(r.getParameter)("SIGNAL_REQUEST_WATCH_INTERVAL")),t.sendReport=function(e){t.sendMessage(e,function(){})},t},Le=function(e,t){var n={connect:function(){t.host=e,n.signal=De(t),n.on=n.signal.on,n.dispatchEvent=n.signal.dispatchEvent,n.signal.on("onopen",function(e){n.signal.onEvent=function(e){n.dispatchEvent(f({type:e.event,msg:e}))},n.dispatchEvent(f({type:"connect",msg:e}))}),n.signal.on("onError",function(e){var t=e.msg;onError(t.code,"error")})},getLastMsgTime:function(){return n.signal&&n.signal.lastMsgTime},getSendBytes:function(){return n.signal.getSendBytes()},getRecvBytes:function(){return n.signal.getRecvBytes()},getDuration:function(){return n.signal.getDuration()},disconnect:function(){n.signal.disconnect()},close:function(){n.signal.close()},getURL:function(){return n.signal.getURL()},reconnect:function(){n.signal.reconnect()},connectNext:function(){n.signal.connectNext()},replaceHost:function(e){n.signal.replaceHost(e)},emitSimpleMessage:function(e,t){n.signal.sendSignalCommand(e,t)},emitRequest:function(e,t){n.signal.sendRequest(e,t)},emitReport:function(e){n.signal.sendReport(e)}};return n.connect(),n},Me=function(e,t){var n=!1,i=0,a={command:"convergeAllocateEdge",sid:e.sid,appId:e.appId,token:e.token,uid:e.uid,cname:e.cname,ts:Math.floor(Date.now()/1e3),version:r.VERSION,seq:0,requestId:1};Object(r.getParameter)("PROXY_CS").map(function(c){var d=(new Date).getTime();Pe("https://"+c+"/api/v1",a,function(a,u){if(a)return o.default.debug("["+e.clientId+"] Request proxy server failed: ",a),i++,s.b.requestProxyAppCenter(e.sid,{lts:d,succ:!1,APAddr:c,workerManagerList:null,ec:JSON.stringify(a),response:JSON.stringify({err:a,res:u})}),void(i>=Object(r.getParameter)("PROXY_CS").length&&t&&t("Get proxy server failed: request all failed"));if(!n)if((u=JSON.parse(u)).json_body){var l=JSON.parse(u.json_body);if(o.default.debug("["+e.clientId+"] App return:",l.servers),200!==l.code){a="Get proxy server failed: response code ["+l.code+"], reason [ "+l.reason+"]";o.default.debug("["+e.clientId+"] "+a),s.b.requestProxyAppCenter(e.sid,{lts:d,succ:!1,APAddr:c,workerManagerList:null,ec:a,response:JSON.stringify({err:a,res:u})})}else{n=!0;var f=Ue(l.servers);s.b.requestProxyAppCenter(e.sid,{lts:d,succ:!0,APAddr:c,workerManagerList:JSON.stringify(f),ec:null,response:JSON.stringify({res:u})}),t&&t(null,f)}}else o.default.debug("["+e.clientId+"] Get proxy server failed: no json_body"),s.b.requestProxyAppCenter(e.sid,{lts:d,succ:!1,APAddr:c,workerManagerList:null,ec:"Get proxy server failed: no json_body",response:JSON.stringify({res:u})})})})},Pe=function(e,t,n){var i={service_name:"webrtc_proxy",json_body:JSON.stringify(t)};Object(ke.post)(e,i,function(e){n&&n(null,e)},function(e){n&&n(e)},{"X-Packet-Service-Type":0,"X-Packet-URI":61})},xe=function(e,t,n){var i=!1,a=0,r={command:"request",gatewayType:"http",appId:e.appId,cname:e.cname,uid:e.uid+"",sdkVersion:"2.3.1",sid:e.sid,seq:1,ts:+new Date,requestId:3,clientRequest:{appId:e.appId,cname:e.cname,uid:e.uid+"",sid:e.sid}};t.map(function(c){var d=(new Date).getTime();!function(e,t,n){Object(ke.post)(e,t,function(e){n&&n(null,e)},function(e){n&&n(e)})}("https://"+c+":4000/v2/machine",r,function(r,u){if(r)return o.default.debug("["+e.clientId+"] Request worker manager failed: ",r),a++,s.b.requestProxyWorkerManager(e.sid,{lts:d,succ:!1,workerManagerAddr:c,ec:JSON.stringify(r),response:JSON.stringify({res:u})}),void(a>=t.length&&n&&n("requeet worker manager server failed: request failed"));if(!i){if(!(u=JSON.parse(u)).serverResponse)return n&&n("requeet worker manager server failed: serverResponse is undefined");i=!0,s.b.requestProxyWorkerManager(e.sid,{lts:d,succ:!0,workerManagerAddr:c,ec:JSON.stringify(r),response:JSON.stringify({res:u})}),n&&n(null,{address:c,serverResponse:u.serverResponse})}})})},Ue=function(e){if(!e||[]instanceof Array==!1)return[];var t=[];return e.forEach(function(e){var n;e.address&&e.tcp?(e.address.match(/^[\.\:\d]+$/)?n="".concat(e.address.replace(/[^\d]/g,"-"),".edge.agora.io"):(o.default.info("["+joinInfo.clientId+"] "+"Cannot recognized as IP address ".concat(e.address,". Used As Host instead")),n="".concat(e.address,":").concat(e.tcp)),t.push(n)):o.default.error("["+joinInfo.clientId+"] Invalid address format ",e)}),t},Ve=function(e,t){var n=h()({},e),i=Object(r.getParameter)("CDS_AP"),a=[],o=!1;(i=i.map(function(e){return n.proxyServer?"https://".concat(n.proxyServer,"/ap/?url=").concat(e+"/api/v1"):"https://".concat(e,"/api/v1?action=config")})).map(function(e){!function(e,t,n){var i={flag:64,cipher_method:0,timeout:1e3,features:t};Object(ke.post)(e,i,function(e){try{var t=JSON.parse(e);n&&n(null,t)}catch(e){n&&n(e)}n&&n(null,e)},function(e){n&&n(e)},{"X-Packet-Service-Type":0,"X-Packet-URI":54})}(e,n,function(e,n){o||(e?(a.push(e),a.length>=i.length&&t&&t("ALL_REQUEST_FAILED")):(o=!0,t&&t(null,n)))})})},je={},Fe={},Be=function(e,t,n,i){var a=(new Date).getTime(),r=t,c="";t.multiIP&&t.multiIP.gateway_ip&&(c={vocs_ip:[t.multiIP.uni_lbs_ip],vos_ip:[t.multiIP.gateway_ip]});var d={opid:133,flag:4096,ts:+new Date,key:t.token,cname:t.cname,sid:t.sid,detail:{6:t.stringUid},uid:t.uid||0};c&&(d.detail[5]=JSON.stringify(c)),Object(ke.post)(e+"".concat(-1===e.indexOf("?")?"?":"&","action=wrtc_gateway"),d,function(c){try{var d=JSON.parse(c);d.res&&(d=d.res);var u=d.code}catch(e){var l="requestChooseServer failed with unexpected body "+c;return o.default.error("["+r.clientId+"]",l),i(l)}if(u){var f=I.APErrorCode[d.code]||u;return s.b.joinChooseServer(t.sid,{lts:a,succ:!1,csAddr:e,serverList:null,ec:f}),i("Get server node failed ["+f+"]",e,f)}var p=[],m=[".agora.io",".agoraio.cn"],g=0;if(e.indexOf(m[1])>-1&&(g=1),d.addresses.forEach(function(e){var t;e.ip&&e.port?(e.ip.match(/^[\.\:\d]+$/)?t="".concat(e.ip.replace(/[^\d]/g,"-"),".edge").concat(m[g++%m.length],":").concat(e.port):(o.default.info("["+r.clientId+"] "+"Cannot recognized as IP address ".concat(e.ip,". Used As Host instead")),t="".concat(e.ip,":").concat(e.port)),p.push(t)):o.default.error("["+r.clientId+"] Invalid address format ",e)}),!p.length){o.default.error("["+r.clientId+"] Empty Address response",d);f="EMPTY_ADDRESS_RESPONSE";return s.b.joinChooseServer(t.sid,{lts:a,succ:!1,csAddr:e,serverList:null,ec:f}),i("Get server node failed ["+f+"]",e,f)}var v={gateway_addr:p,uid:d.uid,cid:d.cid,vid:d.detail&&d.detail[8],res:d,uni_lbs_ip:d.detail};return n(v,e)},function(e,n){"timeout"===e.type?(s.b.joinChooseServer(t.sid,{lts:a,succ:!1,csAddr:n,serverList:null,ec:"timeout"}),i("Connect choose server timeout",n)):s.b.joinChooseServer(t.sid,{lts:a,succ:!1,csAddr:n,serverList:null,ec:"server_wrong"})},{"X-Packet-Service-Type":0,"X-Packet-URI":69})},He=function(e,t,n){var i=!1,a=null,c=1,d=1,u=null,l=e.clientId,f=function t(d,f){if(!i){var p=!1,g=!1,v=[],S=m.getBrowserInfo()||{};Ve({device:S.name,system:S.os,vendor:e.appId,version:r.VERSION,cname:e.cname,sid:e.sid,session_id:Object(s.a)(),detail:"",proxyServer:d},function(t,n){g=!0;try{var i=Object.keys(n.test_tags)[0],a=JSON.parse(n.test_tags[i]);u=a[1]}catch(e){u=null}s.b.reportApiInvoke(e.sid,{name:"_config-distribute-request",options:{err:t,res:n}})(),Fe[l]!==et.DISCONNECTED&&Fe[l]!==et.DISCONNECTING?p&&f&&f(v,u):o.default.debug("[".concat(e.clientId,"] Request config success when connection state is ").concat(Fe[l]))}),function(e,t,n){for(var i=(new Date).getTime(),a=!1,c=!0,d=function(n,r){if(a)s.b.joinChooseServer(e.sid,{lts:i,succ:!0,csAddr:r,serverList:n.gateway_addr,cid:n.cid+"",uid:n.uid+"",ec:null},!1);else{if(clearTimeout(g),a=!0,o.default.debug("["+e.clientId+"] Get gateway address:",n.gateway_addr),e.proxyServer){for(var c=n.gateway_addr,d=0;d<c.length;d++){var u=c[d].split(":");n.gateway_addr[d]=e.proxyServer+"/ws/?h="+u[0]+"&p="+u[1]}o.default.debug("["+e.clientId+"] Get gateway address:",n.gateway_addr)}t(n),s.b.joinChooseServer(e.sid,{lts:i,succ:!0,csAddr:r,serverList:n.gateway_addr,cid:n.cid+"",uid:n.uid+"",ec:null},!0)}},u=function(t,i,a){c&&(o.default.error("["+e.clientId+"]",t,i,a),a&&-1===I.JOIN_CS_RETRY_LIST.indexOf(a)&&(c=!1,n(a)))},l=Object(r.getParameter)("WEBCS_DOMAIN"),f=0;f<l.length;++f){var p;if("string"==typeof l[f]){var m=l[f];p=e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(m+"/api/v1"):"https://".concat(m,"/api/v1"),o.default.debug("["+e.clientId+"] "+"Connect to choose_server: ".concat(p)),Be(p,e,d,u)}else o.default.error("["+e.clientId+"] Invalid Host",l[f])}var g=setTimeout(function(){if(!a)for(var t=Object(r.getParameter)("WEBCS_DOMAIN_BACKUP_LIST"),n=0;n<t.length;++n)if("string"==typeof t[n]){var i=t[n];p=e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(i+"/api/v1"):"https://".concat(i,"/api/v1"),o.default.debug("["+e.clientId+"] "+"Connect to backup_choose_server: ".concat(p)),Be(p,e,d,u)}else o.default.error("["+e.clientId+"] Invalid Host",t[n])},1e3);setTimeout(function(){!a&&c&&n()},Object(r.getParameter)("WEBCS_BACKUP_CONNECT_TIMEOUT"))}(e,function(t){i=!0,p=!0,v=t,clearTimeout(a),Fe[l]!==et.DISCONNECTED&&Fe[l]!==et.DISCONNECTING?g&&f&&f(v,u):o.default.debug("[".concat(e.clientId,"] Request gateway list success when connection state is ").concat(Fe[l]))},function(i){if(i)return o.default.info("["+e.clientId+"] Join failed: "+i),void(n&&n(i));if(Fe[l]===et.DISCONNECTED||Fe[l]===et.DISCONNECTING)return o.default.debug("[".concat(e.clientId,"] Request gateway list falied when connection state is ").concat(Fe[l])),void(n&&n("OPERATION_ABORT"));o.default.debug("["+e.clientId+"] Request gateway list will be restart in "+c+"s"),a=setTimeout(function(){t(d,f)},1e3*c),je[l]=a;var s=Object(r.getParameter)("AP_BACKOFF_MAX_TIME");c=c>=s?s:2*c})}};e.useProxyServer?function n(){!function(e,t){Me(e,function(n,i){if(n)return t&&t(n);o.default.debug("["+e.clientId+"] getProxyServerList: ",i),xe(e,i,t)})}(e,function(i,c){if(i){o.default.debug("["+e.clientId+"]",i),o.default.debug("["+e.clientId+"] Request proxy will be restart in "+d+"s"),a=setTimeout(function(){n()},1e3*d),je[l]=a;var u=Object(r.getParameter)("AP_BACKOFF_MAX_TIME");d=d>=u?u:2*d}else{clearTimeout(a);var p=c.address;e.proxyServer=p,e.turnServer={mode:"manual",url:c.address,tcpport:c.serverResponse.tcpport||"3433",udpport:c.serverResponse.udpport||"3478",username:c.serverResponse.username||"test",credential:c.serverResponse.password||"111111",forceturn:!0},e.turnServer.tcpport+="",e.turnServer.udpport+="",s.b.setProxyServer(p),o.default.setProxyServer(p),f(p,t)}})}():f(null,t)},We=function(e,t,n,i){var a=Date.now();i=i||t.stringUid;var r={sid:t.sid,opid:10,appid:t.appId,string_uid:i};return new Promise(function(c,d){Object(ke.post)(e+"".concat(-1===e.indexOf("?")?"?":"&","action=stringuid"),r,function(u){try{var l=JSON.parse(u),f=l.code}catch(c){var p="requestUserAccount failed with unexpected body "+u;return o.default.error("["+t.clientId+"]",p),d({retryable:!0,info:p,url:e}),n&&n.dispatchEvent({type:"error",reason:"USER_ACCOUNT_BODY_NOT_JSON"}),void s.b.reqUserAccount(r.sid,{lts:a,success:!1,serverAddress:e,stringUid:i,uid:null,extend:u,errorCode:"USER_ACCOUNT_BODY_NOT_JSON"})}if(f){var m=I.StringUidErrorCode[l.code%1e4]||"REQ_ACCOUNT_ERR_".concat(f);return n&&n.dispatchEvent({type:"error",reason:m}),s.b.reqUserAccount(r.sid,{lts:a,success:!1,serverAddress:e,stringUid:i,uid:null,errorCode:m,extend:r}),d({retryable:!1,info:p="Get String Uid Failed ["+m+"]",url:e,error:m})}var g=l.uid;if(!(g>0&&g<Math.pow(2,32))){o.default.error("["+t.clientId+"] "+"Invalid Uint Uid ".concat(i," => ").concat(g),l);m="INVALID_UINT_UID_".concat(g);return n&&n.dispatchEvent({type:"error",reason:m}),s.b.reqUserAccount(r.sid,{lts:a,success:!1,serverAddress:e,stringUid:i,uid:null,errorCode:m,extend:r}),d({retryable:!0,error:m,info:"Get String Uid failed ["+m+"]",url:e})}c({uid:g,url:e}),s.b.reqUserAccount(r.sid,{lts:a,success:!0,serverAddress:e,stringUid:i,uid:g,errorCode:null,extend:r})},function(e,t){if("timeout"===e.type){var o="USER_ACCOUNT_TIMEOUT";n&&n.dispatchEvent({type:"error",reason:o}),s.b.reqUserAccount(r.sid,{lts:a,success:!1,serverAddress:t,stringUid:i,uid:null,errorCode:o,extend:r}),d({retryable:!0,info:o,url:t})}else{var c="USER_ACCOUNT_SERVER_WRONG_".concat(e.type);n&&n.dispatchEvent({type:"error",reason:c}),s.b.reqUserAccount(r.sid,{lts:a,success:!1,serverAddress:t,stringUid:i,uid:null,errorCode:c,extend:r}),d({retryable:!0,info:c,url:t})}},{"X-Packet-Service-Type":0,"X-Packet-URI":72})})},Ge=function(e,t,n){Date.now();var a,s=Object(r.getParameter)("ACCOUNT_REGISTER"),c=!1,d=Object(r.getParameter)("ACCOUNT_REGISTER_RETRY_TIMEOUT"),u=null,l=null,f=new Promise(function(){var f=K()(Y.a.mark(function f(p,m){var g,v,S;return Y.a.wrap(function(f){for(;;)switch(f.prev=f.next){case 0:u=p,l=m,a=0;case 3:if(!(a<Object(r.getParameter)("ACCOUNT_REGISTER_RETRY_COUNT_MAX"))){f.next=33;break}if(!c){f.next=6;break}return f.abrupt("return");case 6:return g=s[a%s.length],v=e.proxyServer?"https://".concat(e.proxyServer,"/ap/?url=").concat(s[i]+"/api/v1"):"https://".concat(g,"/api/v1"),f.prev=8,f.delegateYield(Y.a.mark(function i(){var a;return Y.a.wrap(function(i){for(;;)switch(i.prev=i.next){case 0:return i.next=2,We(v,e,t,n);case 2:if(a=i.sent,!c){i.next=5;break}return i.abrupt("return",{v:void 0});case 5:c=!0,setTimeout(function(){o.default.debug("Get UserAccount Successfully",a),u(a)},0);case 7:case"end":return i.stop()}},i,this)})(),"t0",10);case 10:if(S=f.t0,"object"!==Se()(S)){f.next=13;break}return f.abrupt("return",S.v);case 13:f.next=30;break;case 15:if(f.prev=15,f.t1=f.catch(8),!c){f.next=19;break}return f.abrupt("return");case 19:if(!f.t1.retryable){f.next=27;break}return(d=Math.ceil(d*Object(r.getParameter)("ACCOUNT_REGISTER_RETRY_RATIO")))>Object(r.getParameter)("ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX")&&(d=Object(r.getParameter)("ACCOUNT_REGISTER_RETRY_TIMEOUT_MAX")),o.default.error("".concat(f.t1.info," ").concat(f.t1.url," Will Fetch User Account in ").concat(d/1e3," seconds")),f.next=25,new Promise(function(e){setTimeout(e,d)});case 25:f.next=30;break;case 27:o.default.error("Get UserAccount Error: ".concat(f.t1.info," ").concat(f.t1.url),f.t1.error),c=!0,l(f.t1);case 30:a++,f.next=3;break;case 33:case"end":return f.stop()}},f,this,[[8,15]])}));return function(e,t){return f.apply(this,arguments)}}());return f.cancel=function(){c||(c=!0,l({info:"Request Cancelled",retryable:!1}))},f.isFinished=function(){return c},f},qe={ERR_NO_VOCS_AVAILABLE:"tryNext",ERR_NO_VOS_AVAILABLE:"tryNext",ERR_JOIN_CHANNEL_TIMEOUT:"tryNext",WARN_REPEAT_JOIN:"quit",ERR_JOIN_BY_MULTI_IP:"recover",WARN_LOOKUP_CHANNEL_TIMEOUT:"tryNext",WARN_OPEN_CHANNEL_TIMEOUT:"tryNext",ERR_VOM_SERVICE_UNAVAILABLE:"tryNext",ERR_TOO_MANY_USERS:"tryNext",ERR_MASTER_VOCS_UNAVAILABLE:"tryNext",ERR_INTERNAL_ERROR:"tryNext",K_SERVICE_NOT_READY:"recover",notification_test_recover:"recover",notification_test_tryNext:"tryNext",notification_test_retry:"retry"},Ye={googActualEncBitrate:"A_aeb",googAvailableSendBandwidth:"A_asb",googRetransmitBitrate:"A_rb",googAvailableReceiveBandwidth:"A_arb",googTargetEncBitrate:"A_teb",googBucketDelay:"A_bd",googTransmitBitrate:"A_tb",googCodecName:"A_cn",bytesSent:"bytesSent",packetsLost:"packetsLost",packetsSent:"packetsSent",googAdaptationChanges:"A_ac",googAvgEncodeMs:"A_aem",googEncodeUsagePercent:"A_eup",googFirsReceived:"A_fr",googFrameHeightInput:"A_fhi",googFrameHeightSent:"A_fhs",googFrameRateInput:"A_fri",googFrameRateSent:"A_frs",googFrameWidthInput:"A_fwi",googFrameWidthSent:"A_fws",googNacksReceived:"A_nr",googPlisReceived:"A_pr",googRtt:"A_rtt",aecDivergentFilterFraction:"A_adff",audioInputLevel:"A_ail",googEchoCancellationReturnLoss:"A_ecrl",googEchoCancellationReturnLossEnhancement:"A_ecrle",googResidualEchoLikelihood:"A_rel",googResidualEchoLikelihoodRecentMax:"A_relrm",googTargetDelayMs:"A_tdm",bytesReceived:"bytesReceived",packetsReceived:"packetsReceived",googDecodeMs:"A_dm",googMaxDecodeMs:"A_mdm",googRenderDelayMs:"A_rdm",googFrameWidthReceived:"A_fwr",googFrameHeightReceived:"A_fhr",googFrameRateReceived:"A_frr",googFrameRateDecoded:"A_frd",googFrameRateOutput:"A_fro",googJitterBufferMs:"A_jbm",googCurrentDelayMs:"A_cdm",googMinPlayoutDelayMs:"A_mpdm",googNacksSent:"A_ns",googPlisSent:"A_ps",googFirsSent:"A_fs",audioOutputLevel:"A_aol",googAccelerateRate:"A_ar",googDecodingCNG:"A_dcng",googDecodingCTN:"A_dctn",googDecodingCTSG:"A_dctsg",googDecodingNormal:"A_dn",googDecodingPLC:"A_dplc",googDecodingPLCCNG:"A_dplccng",googExpandRate:"A_er",googJitterReceived:"A_jr",googPreemptiveExpandRate:"A_per",googPreferredJitterBufferMs:"A_pjbm",googSecondaryDecodedRate:"A_sdr",googSpeechExpandRate:"A_ser",uplink_fraction_lost:"B_ufl",uplink_cumulative_lost:"B_ucl",uplink_available_bandwidth:"B_uab",period_fir:"B_fir",access_delay:"B_acd",uplink_network_quality:"B_unq",downlink_network_quality:"B_dnq",pub_audio_lost_ratio_400ms:"B_palr4",pub_video_lost_ratio_400ms:"B_pvlr4",e2e_delay:"B_ed",audio_delay:"B_ad",video_delay:"B_vd",stream_type:"B_st",e2e_audio_lost_ratio_400ms:"B_ealr4",e2e_video_lost_ratio_400ms:"B_evlr4",downlink_estimate_bandwidth:"B_deb"},Je={};for(var Ke in Ye){var ze=Ye[Ke];Je[ze]&&console.error("Key Conflict: ".concat(ze,": ").concat(Ye[ze],"| ").concat(Ke)),Je[ze]=Ke}var Xe=function(e){return Ye[e]||e},Qe=function(e){return Je[e]||e};var $e=function t(n){var i=!1,a=function(e){return{_type:"control",_message:e}},d=function(e,t){var n={};return Object.keys(t).forEach(function(e){Object(r.getParameter)("STATS_FILTER")[e]||(n[Xe(e)]=t[e])}),{_type:"subscribe_related_stats",_message:{stream_type:"high",stream_id:e,stats:n}}},g=function(e){return{_type:"publish",_message:e}},v=function(e,t){var n={};return Object.keys(t).forEach(function(e){Object(r.getParameter)("STATS_FILTER")[e]||(n[Xe(e)]=t[e])}),{_type:"subscribe_stats",_message:{stream_id:e,stats:n}}},S=t.DISCONNECTED,_=t.CONNECTING,E=t.CONNECTED,T=t.DISCONNECTING,y=S,b=c(n);Object.defineProperty(b,"state",{set:function(e){var n=y;y=e,function(e,t){Fe[e]=t}(b.clientId,e),n!==e&&b.dispatchEvent({type:"connection-state-change",prevState:t.connetionStateMap[n],curState:t.connetionStateMap[e]})},get:function(){return y}}),b.socket=void 0,b.state=S,b.mode=n.mode,b.role=n.role,b.codec=n.codec,b.config={},b.timers={},b.timer_counter={},b.localStreams={},b.remoteStreams={},b.remoteMuteState={},b.attemps=1,b.p2p_attemps=1,b.audioLevel={},b.activeSpeaker=void 0,b.reconnectMode="retry",b.rejoinAttempt=0,b.hasChangeBGPAddress=!1,b.traffic_stats={},b.clientId=n.clientId,b.pingpongCounter=0,b.hasInvokeLeave=!1,b.p2ps=new Map,b.liveStreams=new Map,b.injectLiveStreams=new Map,b.remoteStreamsInChannel=new Set,function(e){var t=we;e.makeRequest=function(n,i,a){if(void 0===e.socket)return o.default.debug("[".concat(e.clientId,"] No socket available")),void t(a,I.default.INVALID_OPERATION);try{e.socket.emitRequest(n,function(e,t){var n;"success"===e?"function"==typeof i&&i(t):"function"==typeof a&&(n=t&&t.error_code&&I.GatewayErrorCode[t.error_code]?I.GatewayErrorCode[t.error_code]:t&&t.error_str?t.error_str:t&&t.error_code?"UNKNOW_ERROR_".concat(t.error_code):e,a(n,t))})}catch(i){o.default.debug("[".concat(e.clientId,"] Socket emit message failed ").concat(JSON.stringify(n))),o.default.debug("[".concat(e.clientId,"] "),i),t(a,I.default.SOCKET_ERROR)}},e.makeReport=function(t){void 0===e.socket&&o.default.debug("[".concat(e.clientId,"] No socket available"));try{e.socket.emitReport(t)}catch(n){o.default.debug("[".concat(e.clientId,"] Socket emit report failed ").concat(JSON.stringify(t)))}}}(b),b.inChannelInfo={joinAt:null,duration:0},b._sendMessage=function(e,t){switch(e){case"SubscribeStats":b.makeReport(v.apply(void 0,Ne()(t)))}};var R=we;b.p2pCounter=Object(F.random)(1e5),b.generateP2PId=function(){return++b.p2pCounter},b.audioVolumeIndication={enabled:!1,sortedAudioVolumes:[],smooth:3,interval:2e3},b.remoteVideoStreamTypes={REMOTE_VIDEO_STREAM_HIGH:0,REMOTE_VIDEO_STREAM_LOW:1,REMOTE_VIDEO_STREAM_MEDIUM:2},b.streamFallbackTypes={STREAM_FALLBACK_OPTION_DISABLED:0,STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW:1,STREAM_FALLBACK_OPTION_AUDIO_ONLY:2},b.configPublisher=function(e){b.config=e},b.getGatewayInfo=function(e,t){b.makeRequest({_type:"gateway_info"},e,t)},b.setClientRole=function(e,t){o.default.debug("[".concat(b.clientId,"] setClientRole to ").concat(e));var n=s.b.reportApiInvoke(b.joinInfo.sid,{name:"_setClientRole",callback:t});b.makeRequest({_type:"set_client_role",_message:{role:e}},function(){b.role=e,b.dispatchEvent({type:"client-role-changed",role:e}),n&&n(null,{role:e})},function(t,i){if(i&&i.code&&(t=I.GatewayErrorCode[i.code]||"UNKNOW_ERROR_"+i.code),"ERR_SET_CLIENT_ROLE_ALREADY_IN_USE"===t)return n&&n(null);o.default.error("set Client role error to "+e+": "+t),n&&n(t)})},b.join=function(e,t,i,a){e.useProxyServer&&(b.hasChangeBGPAddress=!0);var c=(new Date).getTime(),d=e.uid;if(b.inChannelInfo.joinAt&&(b.inChannelInfo.duration+=c-b.inChannelInfo.joinAt),b.inChannelInfo.joinAt=c,b.state!==_)return o.default.error("[".concat(b.clientId,"] GatewayClient.join Failed: state "),b.state),a&&a(I.default.INVALID_OPERATION),void s.b.joinGateway(e.sid,{lts:c,succ:!1,ec:I.default.INVALID_OPERATION,addr:null});if(null!=d&&parseInt(d)!==d)return o.default.error("[".concat(b.clientId,"] Input uid is invalid")),b.state=S,a&&a(I.default.INVALID_PARAMETER),void s.b.joinGateway(e.sid,{lts:c,succ:!1,ec:I.default.INVALID_PARAMETER,addr:null});var u=Ze.register(b,{uid:d,cname:e&&e.cname});if(u)return b.state=S,a&&a(u),void s.b.joinGateway(e.sid,{lts:c,succ:!1,ec:u,addr:null});b.joinInfo=h()({},e),b.uid=d,b.key=t,b.pingpongCounter=0,N(e,function(t){if(b.state===T||b.state===S)return a&&a("LEAVE_BEFORE_JOIN_SUCCESS");var u,l,p,m;b.state=E,o.default.debug("[".concat(b.clientId,"] Connected to gateway server")),clearInterval(b.pingTimer),b.pingTimer=setInterval(function(){var e=Object(r.getParameter)("PING_PONG_TIME_OUT");if(++b.pingpongCounter>=e){var t=Date.now();b.socket&&o.default.warning("PINGPONG Timeout. Last Socket Message: ".concat(t-b.socket.getLastMsgTime(),"ms")),b.socket&&b.socket.getLastMsgTime()&&t-b.socket.getLastMsgTime()>Object(r.getParameter)("WEBSOCKET_TIMEOUT_MIN")&&(b.pingpongCounter=0,b.socket.close(),b.socket.dispatchEvent(f({type:"disconnect",event:{msg:"PING_PONG_TIME_OUT"}})))}var n=Date.now();b.makeRequest({_type:"ping"},function(){b.pingpongCounter=0;var e=Date.now()-n;setTimeout(function(){Object(r.getParameter)("REPORT_STATS")&&b.makeRequest({_type:"ping_back",_message:{pingpongElapse:e}})},1e3)},function(e,t){"TIMEOUT"!==e&&(o.default.error("Ping Error ".concat(e," ").concat(JSON.stringify(t))),t&&t.error_code&&b.socket&&b.socket.signal&&b.socket.signal.connection&&b.socket.signal.connection.readyState===WebSocket.OPEN&&(o.default.info("Disconnecting websocket connection"),b.socket.signal.connection.close()))})},3e3),b.makeRequest((u={role:b.role},l=u.role,p=h()({},b.joinInfo.apResponse),m={session_id:b.joinInfo.sid,app_id:n.appId,channel_key:b.key,channel_name:b.joinInfo.cname,sdk_version:r.VERSION,browser:navigator.userAgent,process_id:Object(s.a)(),mode:b.mode,codec:b.codec,role:l,has_changed_gateway:Object(r.getParameter)("FORCE_CHANGED_GATEWAY_FLAG")||b.hasChangeBGPAddress,ap_response:p,extend:Object(r.getParameter)("JOIN_EXTEND"),details:{}},b.joinInfo.hasOwnProperty("stringUid")&&(m.string_uid=b.joinInfo.stringUid),b.joinInfo.aesmode&&b.joinInfo.aespassword&&(m.aes_mode=b.joinInfo.aesmode,m.aes_secret=b.joinInfo.aespassword),b.socket&&b.socket.signal&&b.socket.signal&&(p.addresses[b.socket.signal.hostIndex]&&(m.ap_response.ticket=p.addresses[b.socket.signal.hostIndex].ticket,delete p.addresses),b.joinInfo.turnServer&&"auto"===b.joinInfo.turnServer.mode&&b.socket.signal.turnConfig&&(b.joinInfo.turnServer.url=b.socket.signal.turnConfig.url,b.socket.signal.turnConfig.tcpport&&(b.joinInfo.turnServer.tcpport=""+b.socket.signal.turnConfig.tcpport),b.socket.signal.turnConfig.udpport&&(b.joinInfo.turnServer.udpport=""+b.socket.signal.turnConfig.udpport)),o.default.debug("Turn config",b.joinInfo.turnServer)),b.dispatchEvent({type:"join-message-hook",joinMessage:m},!0),{_type:"join",_message:m}),function(t){s.b.joinGateway(e.sid,{lts:c,succ:!0,ec:null,vid:e.vid,addr:b.socket.getURL()}),b.rejoinAttempt=0,i&&i(t.uid),b.dispatchEvent({type:"join"}),clearInterval(b.timers.trafficStats),b.timers.trafficStats=setInterval(function(){b.makeRequest({_type:"traffic_stats"},function(e){var t={};for(var n in e)t[Qe(n)]=e[n];if(t.peer_delay&&t.peer_delay.length){var i=[];t.peer_delay.forEach(function(e){var t={};for(var n in e)t[Qe(n)]=e[n];i.push(t)}),t.peer_delay=i}b.traffic_stats=t;var a=b.joinInfo.stringUid,r=b.localStreams[d]||b.localStreams[a];r&&(r.traffic_stats={access_delay:t.access_delay}),t.peer_delay&&t.peer_delay.forEach(function(e){var n=b.remoteStreams[e.peer_uid];n&&(n.traffic_stats={access_delay:t.access_delay,e2e_delay:e.e2e_delay,audio_delay:e.audio_delay,video_delay:e.video_delay})}),b.dispatchEvent({type:"after-getTrafficStats",trafficStats:t})})},3e3)},function(t,n){if(o.default.error("[".concat(b.clientId,"] User join failed [").concat(t,"]")),"ERR_JOIN_BY_MULTI_IP"===t){try{s.b.joinGateway(e.sid,{lts:c,succ:!1,ec:"ERR_JOIN_BY_MULTI_IP",addr:b.socket.getURL()})}catch(e){}return b.dispatchEvent({type:"onMultiIP",option:n.option},!0)}qe[t]&&b.rejoinAttempt<4?b._doWithAction(qe[t],i,a):a&&a(t),s.b.joinGateway(e.sid,{lts:c,succ:!1,ec:t,addr:b.socket.getURL()})})},function(t){o.default.error("[".concat(b.clientId,"] User join failed [").concat(t,"]")),a&&a(t),s.b.joinGateway(e.sid,{lts:c,succ:!1,ec:t,addr:b.socket.getURL()})}),this.remoteMuteState={},b.resetAudioVolumeIndication()},b.leave=function(e,t){var n=Ze.unregister(b);switch(n&&o.default.debug("[".concat(b.clientId,"] "),n),b.state){case S:return o.default.debug("[".concat(b.clientId,"] Client Already in DISCONNECTED status")),void R(e);case T:return o.default.debug("[".concat(b.clientId,"] Client Already in DISCONNECTING status")),void R(t,I.default.INVALID_OPERATION);case _:return 1==b.reconnectingCS?e&&e():(b.socket.close(),b.socket=void 0,o.default.info("[".concat(b.clientId,"] Client connecting, Leave channel success")),b.state=S,e&&e())}for(var i in b.state=T,b.channelMediaConfig&&(b.channelMediaRelayController&&b.channelMediaRelayController.dispose(),b.channelMediaConfig,b.channelMediaRelayController=null),clearInterval(b.pingTimer),b.timers)b.timers.hasOwnProperty(i)&&clearInterval(b.timers[i]);for(var i in b.inChannelInfo.joinAt&&(b.inChannelInfo.duration+=Date.now()-b.inChannelInfo.joinAt,b.inChannelInfo.joinAt=null),b.makeRequest({_type:"leave"},function(t){b.socket.close(),b.socket=void 0,o.default.info("[".concat(b.clientId,"] Leave channel success")),b.state=S,e&&e(t)},function(e){"TIMEOUT"!==e&&(o.default.error("[".concat(b.clientId,"] Leave Channel Failed"),e),b.state=E,t&&t(e))}),b.localStreams)if(b.localStreams.hasOwnProperty(i)){var a=b.localStreams[i];delete b.localStreams[i],void 0!==a.pc&&(a.pc.close(),a.pc=void 0)}D()},b.publish=function(e,t,n,i){var c=(new Date).getTime(),d=!1;if(e.publishLTS=c,"object"!==Se()(e)||null===e)return o.default.error("[".concat(b.clientId,"] Invalid local stream")),i&&i(I.default.INVALID_LOCAL_STREAM),void s.b.publish(b.joinInfo.sid,{lts:c,succ:!1,audioName:e.hasAudio()&&e.audioName,videoName:e.hasVideo()&&e.videoName,screenName:e.hasScreen()&&e.screenName,ec:I.default.INVALID_LOCAL_STREAM});if(!e.stream&&void 0===e.url)return o.default.error("[".concat(b.clientId,"] Invalid local media stream")),i&&i(I.default.INVALID_LOCAL_STREAM),void s.b.publish(b.joinInfo.sid,{lts:c,succ:!1,audioName:e.hasAudio()&&e.audioName,videoName:e.hasVideo()&&e.videoName,screenName:e.hasScreen()&&e.screenName,ec:I.default.INVALID_LOCAL_STREAM});if(b.state!==E)return o.default.error("[".concat(b.clientId,"] User is not in the session")),i&&i(I.default.INVALID_OPERATION),void s.b.publish(b.joinInfo.sid,{lts:c,succ:!1,audioName:e.hasAudio()&&e.audioName,videoName:e.hasVideo()&&e.videoName,screenName:e.hasScreen()&&e.screenName,ec:I.default.INVALID_OPERATION});var u=e.getAttributes()||{};if(e.local&&void 0===b.localStreams[e.getId()]&&(e.hasAudio()||e.hasVideo()||e.hasScreen())){var f=b.generateP2PId();if(b.p2ps.set(f,e),e.p2pId=f,void 0!==e.url)w(g({state:"url",audio:e.hasAudio(),video:e.hasVideo(),attributes:e.getAttributes()},e.url),function(t,n){"success"===t?(e.getUserId()!==n&&e.setUserId(n),b.localStreams[n]=e,e.onClose=function(){b.unpublish(e)}):o.default.error("[".concat(b.clientId,"] Publish local stream failed"),t)});else{b.localStreams[e.getId()]=e,e.connectionSpec={callback:function(u){o.default.debug("[".concat(b.clientId,"] SDP exchange in publish : send offer --  "),JSON.parse(u)),b.makeRequest(g({state:"offer",stream_type:1==t.streamType?"low":"high",p2p_id:f,sdp:u,audio:e.audio||e.screenAudio,video:e.screen||e.video,screen:e.screen,attributes:e.getAttributes(),dtx:e.DTX,hq:e.highQuality,lq:e.lowQuality,stereo:e.stereo,speech:e.speech,codec:b.codec,extend:Object(r.getParameter)("PUB_EXTEND")}),function(t){e.getUserId()!==t.uid&&e.setUserId(t.uid),o.default.info("[".concat(b.clientId,"] Local stream published with uid"),t.uid),e.onClose=function(){b.unpublish(e)},e._onAudioUnmute=function(){b.makeReport(a({action:"unmute_local_audio",stream_id:e.getId()}))},e._onVideoUnmute=function(){b.makeReport(a({action:"unmute_local_video",stream_id:e.getId()}))},e._onAudioMute=function(){b.makeReport(a({action:"mute_local_audio",stream_id:e.getId()}))},e._onVideoMute=function(){b.makeReport(a({action:"mute_local_video",stream_id:e.getId()}))},e.getId()===e.getUserId()&&(e.isAudioOn()||e.hasAudio()&&(o.default.debug("[".concat(b.clientId,"] local stream audio mute")),e._onAudioMute()),e.isVideoOn()||(e.hasVideo()||e.hasScreen())&&(o.default.debug("[".concat(b.clientId,"] local stream video mute")),e._onVideoMute())),e.pc.oniceconnectionstatechange=function(t){if("failed"===t){if(null!=b.timers[e.getId()]&&(clearInterval(b.timers[e.getId()]),clearInterval(b.timers[e.getId()]+"_RelatedStats")),o.default.error("[".concat(b.clientId,"] Publisher connection is lost -- streamId: ").concat(e.getId(),", p2pId: ").concat(f)),b.p2ps.delete(f),o.default.debug("[".concat(b.clientId,"] publish p2p failed: "),b.p2ps),!d)return d=!0,s.b.publish(b.joinInfo.sid,{lts:c,succ:!1,audioName:e.hasAudio()&&e.audioName,videoName:e.hasVideo()&&e.videoName,screenName:e.hasScreen()&&e.screenName,ec:I.default.PEERCONNECTION_FAILED}),b.dispatchEvent(l({type:"pubP2PLost",stream:e})),i&&i(I.default.PEERCONNECTION_FAILED);b.dispatchEvent(l({type:"pubP2PLost",stream:e}))}else if("connected"===t&&(o.default.debug("[".concat(b.clientId,"] publish p2p connected: "),b.p2ps),e._isAudioMuted()?b.makeReport(a({action:"mute_local_audio",stream_id:e.getId()})):b.makeReport(a({action:"unmute_local_audio",stream_id:e.getId()})),e._isVideoMuted()?b.makeReport(a({action:"mute_local_video",stream_id:e.getId()})):b.makeReport(a({action:"unmute_local_video",stream_id:e.getId()})),!d))return d=!0,s.b.publish(b.joinInfo.sid,{lts:c,succ:!0,audioName:e.hasAudio()&&e.audioName,videoName:e.hasVideo()&&e.videoName,screenName:e.hasScreen()&&e.screenName,ec:null}),n&&n()},o.default.debug("[".concat(b.clientId,"] SDP exchange in publish : receive answer --  "),JSON.parse(t.sdp)),e.pc.processSignalingMessage(t.sdp)},function(t,n){o.default.error("Publish Failed: ".concat(t)),s.b.publish(b.joinInfo.sid,{lts:c,succ:!0,audioName:e.hasAudio()&&e.audioName,videoName:e.hasVideo()&&e.videoName,screenName:e.hasScreen()&&e.screenName,ec:t}),"TIMEOUT"!=t&&(b.processPublishFailure(e),i&&i(t))})},audio:e.hasAudio(),video:e.hasVideo(),screen:e.hasScreen(),isSubscriber:!1,stunServerUrl:b.stunServerUrl,turnServer:b.joinInfo.turnServer,maxAudioBW:u.maxAudioBW,minVideoBW:u.minVideoBW,maxVideoBW:u.maxVideoBW,mode:b.mode,codec:b.codec,isVideoMute:e.userMuteVideo||e.peerMuteVideo,isAudioMute:e.userMuteAudio||e.peerMuteAudio,maxFrameRate:e.attributes.maxFrameRate,clientId:b.clientId},e.pc=V(e.connectionSpec),e.pc.addStream(e.stream),o.default.debug("[".concat(b.clientId,"] PeerConnection add stream :"),e.stream),e.pc.onnegotiationneeded=function(n){var i={state:"negotiation",stream_type:1===t.streamType?"low":"high",p2p_id:f,sdp:n};b.makeRequest(g(i),function(t){o.default.debug("Negotating Stream ".concat(e.getId())),e.pc.processSignalingMessage(t.sdp)},function(e,t){o.default.error("Negotiation failed ".concat(e),t,i)})},clearInterval(b.timers[e.getId()]),b.timers[e.getId()]=setInterval(function(){if(Object(r.getParameter)("REPORT_STATS")){var t=0;e&&e.pc&&e.pc.getStats&&e.pc.getStatsRate(function(n){n.forEach(function(n){if(n&&n.id&&!/_recv$/.test(n.id)&&!/^time$/.test(n.id)&&e.getUserId()){if(-1===n.id.indexOf("outbound_rtp")&&-1===n.id.indexOf("OutboundRTP")||"video"!==n.mediaType||(n.googFrameWidthSent=e.videoWidth+"",n.googFrameHeightSent=e.videoHeight+""),"video"===n.mediaType)try{var i=e.stream.getVideoTracks()[0];n.A_vstd=i.enabled?"0":"1"}catch(e){}if("audio"===n.mediaType)try{var a=e.stream.getAudioTracks()[0];n.A_astd=a.enabled?"0":"1"}catch(e){}if(e.getId()==e.getUserId()){var s=200*t;t++,setTimeout(function(){var e=b.socket&&b.socket.getLastMsgTime()&&Date.now()-b.socket.getLastMsgTime();e>Object(r.getParameter)("REPORT_STATS_TIMEOUT")?o.default.debug("PublishStats report blocked by REPORT_STATS_TIMEOUT ".concat(e)):b.makeReport(function(e){var t={};return Object.keys(e).forEach(function(n){Object(r.getParameter)("STATS_FILTER")[n]||(t[Xe(n)]=e[n])}),{_type:"publish_stats",_message:{stream_type:"high",stats:t}}}(n))},s)}else{s=200*t;t++,setTimeout(function(){var e=b.socket&&b.socket.getLastMsgTime()&&Date.now()-b.socket.getLastMsgTime();e>Object(r.getParameter)("REPORT_STATS_TIMEOUT")?o.default.debug("PublishStatsLow report blocked by REPORT_STATS_TIMEOUT ".concat(e)):b.makeReport(function(e){var t={};return Object.keys(e).forEach(function(n){Object(r.getParameter)("STATS_FILTER")[n]||(t[Xe(n)]=e[n])}),{_type:"publish_stats",_message:{stream_type:"low",stats:t}}}(n))},s)}}})})}},3e3);var p=function(){Object(r.getParameter)("REPORT_STATS")&&e&&e.pc&&e.pc.getVideoRelatedStats&&e.pc.getVideoRelatedStats(function(t){var n,i,a=b.socket&&b.socket.getLastMsgTime()&&Date.now()-b.socket.getLastMsgTime();a>Object(r.getParameter)("REPORT_STATS_TIMEOUT")?o.default.debug("PublishRelatedStats report blocked by REPORT_STATS_TIMEOUT ".concat(a)):e.getId()===e.getUserId()?b.makeReport((n=t,i={},Object.keys(n).forEach(function(e){Object(r.getParameter)("STATS_FILTER")[e]||(i[Xe(e)]=n[e])}),{_type:"publish_related_stats",_message:{stream_type:"high",stats:i}})):b.makeReport(function(e){var t={};return Object.keys(e).forEach(function(n){Object(r.getParameter)("STATS_FILTER")[n]||(t[Xe(n)]=e[n])}),{_type:"publish_related_stats",_message:{stream_type:"low",stats:t}}}(t))})};p(),clearInterval(b.timers[e.getId()+"_RelatedStats"]),b.timers[e.getId()+"_RelatedStats"]=setInterval(p,1e3)}}},b.unpublish=function(e,t,n,i){if("object"!==Se()(e)||null===e)return o.default.error("[".concat(b.clientId,"] Invalid local stream")),void R(i,I.default.INVALID_LOCAL_STREAM);if(b.state!==E)return o.default.error("[".concat(b.clientId,"] User not in the session")),void R(i,I.default.INVALID_OPERATION);if(null!=b.timers[e.getId()]&&(clearInterval(b.timers[e.getId()]),clearInterval(b.timers[e.getId()+"_RelatedStats"])),void 0!==b.socket)if(e.local&&void 0!==b.localStreams[e.getId()]){delete b.localStreams[e.getId()];var a={stream_id:e.getUserId(),stream_type:1===t.streamType?"low":"high"};b.makeRequest({_type:"unpublish",_message:a}),(e.hasAudio()||e.hasVideo()||e.hasScreen())&&void 0===e.url&&void 0!==e.pc&&(e.pc.close(),e.pc=void 0),e.onClose=void 0,e._onAudioMute=void 0,e._onAudioUnute=void 0,e._onVideoMute=void 0,e._onVideoUnmute=void 0,b.p2ps.delete(e.p2pId),b.dispatchEvent({type:"stream-unpublished",stream:e,options:t}),n&&n()}else o.default.error("[".concat(b.clientId,"] Invalid local stream")),R(i,I.default.INVALID_LOCAL_STREAM);else o.default.error("[".concat(b.clientId,"] User not in the session")),R(i,I.default.INVALID_OPERATION)},b.subscribe=function(e,t,n){var i=(new Date).getTime();e.subscribeLTS=i;var c=!1;if(o.default.info("[".concat(b.clientId,"] Gatewayclient ").concat(b.uid," Subscribe ").concat(e.getId(),": ").concat(JSON.stringify(e.subscribeOptions))),"object"!==Se()(e)||null===e)return o.default.error("[".concat(b.clientId,"] Invalid remote stream")),n&&n(I.default.INVALID_REMOTE_STREAM),void s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!1,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:I.default.INVALID_REMOTE_STREAM});if(b.state!==E&&(o.default.error("[".concat(b.clientId,"] User is not in the session")),!c))return c=!0,s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!1,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:I.default.INVALID_OPERATION}),n&&n(I.default.INVALID_OPERATION);if(!e.local&&b.remoteStreams.hasOwnProperty(e.getId()))if(e.hasAudio()||e.hasVideo()||e.hasScreen()){var f=b.generateP2PId();b.p2ps.set(f,e),e.p2pId=f,e.pc=V({callback:function(t){o.default.debug("[".concat(b.clientId,"] SDP exchange in subscribe : send offer --  "),JSON.parse(t));var a={stream_id:e.getId(),audio:!e.subscribeOptions||e.subscribeOptions.audio,video:!e.subscribeOptions||e.subscribeOptions.video,codec:b.codec,p2p_id:f,sdp:t,tcc:Object(r.getParameter)("SUBSCRIBE_TCC"),extend:Object(r.getParameter)("SUB_EXTEND")};b.makeRequest({_type:"subscribe",_message:a},function(t){o.default.debug("[".concat(b.clientId,"] SDP exchange in subscribe : receive answer --  "),JSON.parse(t.sdp)),e.pc.processSignalingMessage(t.sdp)},function(t,a){o.default.error("[".concat(b.clientId,"] Subscribe remote stream Failed: ").concat(t,", closing stream "),e.getId(),a),s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!1,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:t}),"TIMEOUT"!=t&&(b.processSubscribeFailure(e),n&&n(t))})},nop2p:!0,audio:!0,video:!0,screen:e.hasScreen(),isSubscriber:!0,stunServerUrl:b.stunServerUrl,turnServer:b.joinInfo.turnServer,isVideoMute:e.userMuteVideo,isAudioMute:e.userMuteAudio,uid:e.getId(),clientId:b.clientId}),e.pc.onaddstream=function(t,n){if(e._onAudioUnmute=function(){b.makeReport(a({action:"unmute_remote_audio",stream_id:e.getId()}),function(){},function(){})},e._onAudioMute=function(){b.makeReport(a({action:"mute_remote_audio",stream_id:e.getId()}),function(){},function(){})},e._onVideoUnmute=function(){b.makeReport(a({action:"unmute_remote_video",stream_id:e.getId()}),function(){},function(){})},e._onVideoMute=function(){b.makeReport(a({action:"mute_remote_video",stream_id:e.getId()}),function(){},function(){})},"ontrack"===n&&"video"===t.track.kind||"onaddstream"===n){o.default.info("[".concat(b.clientId,"] Remote stream subscribed with uid "),e.getId());var i=b.remoteStreams[e.getId()];if(b.remoteStreams[e.getId()].stream="onaddstream"===n?t.stream:t.streams[0],b.remoteStreams[e.getId()].hasVideo()){if(Object(m.isFireFox)()||Object(m.isSafari)()){var r=b.remoteStreams[e.getId()].stream;Object(F.vsResHack)(r,function(t,n){e.videoWidth=t,e.videoHeight=n},function(e){return o.default.warning("[".concat(b.clientId,"] vsResHack failed: ")+e)})}}else{var s=b.remoteStreams[e.getId()];s.peerMuteVideo=!0,b._adjustPCMuteStatus(s)}i&&i.isPlaying()&&i.elementID&&(o.default.debug("[".concat(b.clientId,"] Reload Player ").concat(i.elementID," StreamId ").concat(i.getId())),e.audioOutput=i.audioOutput,i.stop(),e.play(i.elementID,i.playOptions)),delete e.audioLevelHelper;var c=u({type:"stream-subscribed",stream:b.remoteStreams[e.getId()]});b.dispatchEvent(c)}},clearInterval(b.timers[e.getId()]),b.timers[e.getId()]=setInterval(function(){if(Object(r.getParameter)("REPORT_STATS")){var t=0;e&&e.pc&&e.pc.getStats&&e.pc.getStatsRate(function(n){n.forEach(function(n){if(n&&n.id){if(/_send$/.test(n.id)||/^time$/.test(n.id)||/^bweforvideo$/.test(n.id))return;-1===n.id.indexOf("inbound_rtp")&&-1===n.id.indexOf("inbound-rtp")||"video"!==n.mediaType||(n.googFrameWidthReceived=e.videoWidth+"",n.googFrameHeightReceived=e.videoHeight+"");var i=200*t;t++;var a=e.getId();setTimeout(function(){var e=b.socket&&b.socket.getLastMsgTime()&&Date.now()-b.socket.getLastMsgTime();e>Object(r.getParameter)("REPORT_STATS_TIMEOUT")?o.default.debug("SubscribeStats report blocked by REPORT_STATS_TIMEOUT ".concat(e)):b.makeReport(v(a,n))},i)}else;})})}},3e3),clearInterval(b.timers[e.getId()+"_RelatedStats"]),b.timers[e.getId()+"_RelatedStats"]=setInterval(function(){if(Object(r.getParameter)("REPORT_STATS")&&e&&e.pc){var t=b.socket&&b.socket.getLastMsgTime()&&Date.now()-b.socket.getLastMsgTime();if(t>Object(r.getParameter)("REPORT_STATS_TIMEOUT"))return void o.default.debug("SubscribeRelatedStats report blocked by REPORT_STATS_TIMEOUT ".concat(t));e.pc.getVideoRelatedStats&&e.pc.getVideoRelatedStats(function(t){b.makeReport(d(e.getId(),t))}),e.pc.getAudioRelatedStats&&e.pc.getAudioRelatedStats(function(t){b.makeReport(d(e.getId(),t))})}},1e3),b.audioLevel[e.getId()]=0,clearInterval(b.timers[e.getId()+"audio"]),b.timers[e.getId()+"audio"]=setInterval(function(){b.hasListeners("active-speaker")&&e&&e.pc&&"established"===e.pc.state&&e.pc.getStats&&e.pc.getStats(function(t){t.forEach(function(t){if("audio"===t.mediaType){if(t.audioOutputLevel>5e3)for(var n in b.audioLevel[e.getId()]<20&&(b.audioLevel[e.getId()]+=1),b.audioLevel)n!==""+e.getId()&&b.audioLevel[n]>0&&(b.audioLevel[n]-=1);var i=Object.keys(b.audioLevel).sort(function(e,t){return b.audioLevel[t]-b.audioLevel[e]});if(b.activeSpeaker!==i[0]){var a=l({type:"active-speaker",uid:i[0]});b.dispatchEvent(a),b.activeSpeaker=i[0],o.default.debug("[".concat(b.clientId,"] Update active speaker: ").concat(b.activeSpeaker))}}})},50)},50),e.pc.oniceconnectionstatechange=function(a){if("failed"===a)null!=b.timers[e.getId()]&&(clearInterval(b.timers[e.getId()]),clearInterval(b.timers[e.getId()]+"audio")),o.default.error("[".concat(b.clientId,"] Subscriber connection is lost -- streamId: ").concat(e.getId(),", p2pId: ").concat(f)),o.default.debug("[".concat(b.clientId,"] subscribe p2p failed: "),b.p2ps),c||(c=!0,n&&n(I.default.PEERCONNECTION_FAILED),s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!1,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:I.default.PEERCONNECTION_FAILED})),b.remoteStreams[e.getId()]&&b.p2ps.has(f)&&(b.p2ps.delete(f),b.dispatchEvent(l({type:"subP2PLost",stream:e})));else if("connected"===a&&(o.default.debug("[".concat(b.clientId,"] subscribe p2p connected: "),b.p2ps),!c)){c=!0,s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!0,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:null}),b._adjustPCMuteStatus(e);var r=!1,d=!1,u=setInterval(function(){r&&d||(e.pc?e.pc.getStats(function(t){t.forEach(function(t){-1===t.id.indexOf("recv")&&-1===t.id.indexOf("inbound_rtp")&&-1===t.id.indexOf("inbound-rtp")&&-1===t.id.indexOf("InboundRTP")||"audio"===t.mediaType&&((t.googDecodingNormal>0||t.audioOutputLevel>0)&&(r||(r=!0,b.dispatchEvent({type:"first-audio-frame-decode",stream:e}),r&&d&&clearInterval(u),s.b.reportApiInvoke(b.joinInfo.sid,{name:"firstAudioDecode"})(null,{elapse:Date.now()-e.subscribeLTS}))),parseInt(t.packetsReceived)>0&&(d||(d=!0,b.dispatchEvent({type:"first-audio-packet-received",stream:e}),r&&d&&clearInterval(u),s.b.reportApiInvoke(b.joinInfo.sid,{name:"firstAudioReceived"})(null,{elapse:Date.now()-e.subscribeLTS}))))})},100):clearInterval(u))},100),p=!1,m=!1,g=setInterval(function(){p&&m||(e.pc?e.pc.getStats(function(t){t.forEach(function(t){-1===t.id.indexOf("recv")&&-1===t.id.indexOf("inbound_rtp")&&-1===t.id.indexOf("inbound-rtp")&&-1===t.id.indexOf("InboundRTP")||"video"===t.mediaType&&((t.framesDecoded>0||t.googFramesDecoded>0)&&(p||(p=!0,b.dispatchEvent({type:"first-video-frame-decode",stream:e}),p&&m&&clearInterval(g),e.firstFrameTime=(new Date).getTime()-e.subscribeLTS,s.b.firstRemoteFrame(b.joinInfo.sid,{lts:(new Date).getTime(),peerid:e.getId(),succ:!0,width:+t.googFrameWidthReceived,height:+t.googFrameHeightReceived}))),t.packetsReceived>0&&(m||(m=!0,b.dispatchEvent({type:"first-video-packet-received",stream:e}),p&&m&&clearInterval(g),s.b.reportApiInvoke(b.joinInfo.sid,{name:"firstVideoReceived"})(null,{elapse:Date.now()-e.subscribeLTS}))))})},100):clearInterval(g))},100);return e.sid=b.joinInfo.sid,t&&t()}}}else o.default.error("[".concat(b.clientId,"] Invalid remote stream")),c||(c=!0,n&&n(I.default.INVALID_REMOTE_STREAM),s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!1,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:I.default.INVALID_REMOTE_STREAM}));else o.default.error("[".concat(b.clientId,"] No such remote stream")),c||(c=!0,n&&n(I.default.NO_SUCH_REMOTE_STREAM),s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!1,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:I.default.NO_SUCH_REMOTE_STREAM}))},b.subscribeChange=function(e,t,n){var i=Date.now();o.default.info("[".concat(b.clientId,"] Gatewayclient ").concat(b.uid," SubscribeChange ").concat(e.getId(),": ").concat(JSON.stringify(e.subscribeOptions))),b._adjustPCMuteStatus(e);var a={stream_id:e.getId(),audio:e.subscribeOptions.audio,video:e.subscribeOptions.video};b.makeRequest({_type:"subscribe_change",_message:a},function(n){var a=u({type:"stream-subscribe-changed",stream:b.remoteStreams[e.getId()]});s.b.subscribe(b.joinInfo.sid,{lts:i,succ:!0,video:e.subscribeOptions&&e.subscribeOptions.video,audio:e.subscribeOptions&&e.subscribeOptions.audio,peerid:e.getId(),ec:null}),b.dispatchEvent(a),t&&t()},function(t,i){o.default.error("[".concat(b.clientId,"] Subscribe Change Failed ").concat(e.getId()),t,i),n&&n(t,i)})},b.processPublishFailure=function(e){e.publishLTS=null,e.p2pId&&b.p2ps.get(e.p2pId)===e&&b.p2ps.delete(e.p2pId),b.localStreams[e.getUserId()]===e&&delete b.localStreams[e.getUserId()],b.localStreams[e.getId()]===e&&delete b.localStreams[e.getId()],e.pc&&(e.pc.processSignalingMessage=function(){},e.pc.oniceconnectionstatechange=function(){},e.pc.close(),delete e.pc),delete e.onClose,delete e._onAudioUnmute,delete e._onVideoUnmute,delete e._onAudioMute,delete e._onVideoMute,delete e._onAudioUnmute},b.processSubscribeFailure=function(e){e.p2pId&&b.p2ps.get(e.p2pId)===e&&b.p2ps.delete(e.p2pId),b.remoteStreams[e.getId()]===e&&delete b.remoteStreams[e.getId()],b.remoteStreams[e.getId()]===e&&delete b.remoteStreams[e.getId()],e.pc&&(e.pc.onaddstream=function(){},e.pc.processSignalingMessage=function(){},e.pc.oniceconnectionstatechange=function(){},e.pc.close(),delete e.pc),delete e.onClose,delete e._onAudioUnmute,delete e._onVideoUnmute,delete e._onAudioMute,delete e._onVideoMute,delete e._onAudioUnmute},b._adjustPCMuteStatus=function(e){!e.local&&e.pc&&e.pc.peerConnection.getReceivers&&e.pc.peerConnection.getReceivers().forEach(function(t){if(t&&t.track&&"audio"===t.track.kind){var n=!e.userMuteAudio&&!e.peerMuteAudio;e.subscribeOptions&&!e.subscribeOptions.audio&&(n=!1),t.track.enabled=!!n}else if(t&&t.track&&"video"===t.track.kind){var i=!e.userMuteVideo&&!e.peerMuteVideo;e.subscribeOptions&&!e.subscribeOptions.video&&(i=!1),t.track.enabled=!!i}})},b.unsubscribe=function(e,t,n){if("object"!==Se()(e)||null===e)return o.default.error("[".concat(b.clientId,"] Invalid remote stream")),void R(n,I.default.INVALID_REMOTE_STREAM);if(b.state!==E)return o.default.error("[".concat(b.clientId,"] User is not in the session")),void R(n,I.default.INVALID_OPERATION);if(null!=b.timers[e.getId()]&&(clearInterval(b.timers[e.getId()]),clearInterval(b.timers[e.getId()]+"audio")),null!=b.audioLevel[e.getId()]&&delete b.audioLevel[e.getId()],null!=b.timer_counter[e.getId()]&&delete b.timer_counter[e.getId()],b.remoteStreams.hasOwnProperty(e.getId())){if(!b.socket)return o.default.error("[".concat(b.clientId,"] User is not in the session")),void R(n,I.default.INVALID_OPERATION);if(e.local)return o.default.error("[".concat(b.clientId,"] Invalid remote stream")),void R(n,I.default.INVALID_REMOTE_STREAM);e.close();var i={stream_id:e.getId()};b.makeRequest({_type:"unsubscribe",_message:i}),void 0!==e.pc&&(e.pc.close(),e.pc=void 0),e.onClose=void 0,e._onAudioMute=void 0,e._onAudioUnute=void 0,e._onVideoMute=void 0,e._onVideoUnmute=void 0,delete e.subscribeOptions,b.p2ps.delete(e.p2pId),o.default.info("[".concat(b.clientId,"] Unsubscribe stream success")),t&&t()}else R(n,I.default.NO_SUCH_REMOTE_STREAM)},b.setRemoteVideoStreamType=function(e,t){if(o.default.debug("[".concat(b.clientId,"] Switching remote video stream ").concat(e.getId()," to ").concat(t)),"object"===Se()(e)&&null!==e)if(b.state===E){if(!e.local){switch(t){case b.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_HIGH:case b.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_LOW:case b.remoteVideoStreamTypes.REMOTE_VIDEO_STREAM_MEDIUM:break;default:return}var n={stream_id:e.getId(),stream_type:t};b.makeRequest({_type:"switch_video_stream",_message:n},function(){o.default.debug("SwitchVideoStream Success ".concat(n.stream_id," ").concat(n.stream_type))},function(e,t){o.default.error("SwitchVideoStream Error ".concat(e," ").concat(n.stream_id," ").concat(n.stream_type),t)})}}else o.default.error("[".concat(b.clientId,"] User is not in the session"));else o.default.error("[".concat(b.clientId,"] Invalid remote stream"))},b.renewToken=function(e,t,n){e?b.key?b.state!==E?(o.default.debug("[".concat(b.clientId,"] Client is not connected. Trying to rejoin")),b.key=e,b.rejoin(),t&&t()):(o.default.debug("[".concat(b.clientId,"] renewToken from ").concat(b.key," to ").concat(e)),b.makeRequest({_type:"renew_token",_message:{token:e}},t,n)):(o.default.error("[".concat(b.clientId,"] Client is previously joined without token")),n&&n(I.default.INVALID_PARAMETER)):(o.default.error("[".concat(b.clientId,"] Invalid Token ").concat(e)),n&&n(I.default.INVALID_PARAMETER))},b.setStreamFallbackOption=function(e,t){if(o.default.debug("[".concat(b.clientId,"] Set stream fallback option ").concat(e.getId()," to ").concat(t)),"object"===Se()(e)&&null!==e)if(b.state===E){if(!e.local){switch(t){case b.streamFallbackTypes.STREAM_FALLBACK_OPTION_DISABLED:case b.streamFallbackTypes.STREAM_FALLBACK_OPTION_VIDEO_STREAM_LOW:case b.streamFallbackTypes.STREAM_FALLBACK_OPTION_AUDIO_ONLY:break;default:return}var n={stream_id:e.getId(),fallback_type:t};b.makeRequest({_type:"set_fallback_option",_message:n},function(){o.default.debug("SetStreamFallbackOption success ".concat(n.stream_id," ").concat(t))},function(e,i){o.default.error("Failed to SetStreamFallbackOption ".concat(n.stream_id," ").concat(t," ").concat(e),i)})}}else o.default.error("[".concat(b.clientId,"] User is not in the session"));else o.default.error("[".concat(b.clientId,"] Invalid remote stream"))},b.enableAudioVolumeIndicator=function(e,t){b.audioVolumeIndication.enabled=!0,b.audioVolumeIndication.interval=e,b.audioVolumeIndication.smooth=t,b.resetAudioVolumeIndication()},b.resetAudioVolumeIndication=function(){if(clearInterval(b.timers.audioVolumeIndication),clearInterval(b.timers.audioVolumeSampling),b.audioVolumeIndication.enabled&&b.audioVolumeIndication.interval){var e=Math.floor(1e3*b.audioVolumeIndication.smooth/100);clearInterval(b.timers.audioVolumeSampling),b.timers.audioVolumeSampling=setInterval(function(){b.audioVolumeSampling||(b.audioVolumeSampling={});var t={};for(var n in b.remoteStreams){var i=b.remoteStreams[n];if(i.stream&&i.hasAudio()){var a=i.getAudioLevel();a>0&&a<1&&(a*=100);var r=b.audioVolumeSampling[n]||[];for(r.push(a);r.length>e;)r.shift();t[n]=r}}b.audioVolumeSampling=t},100),clearInterval(b.timers.audioVolumeIndication),b.timers.audioVolumeIndication=setInterval(function(){if(b.socket&&b.socket.signal&&b.socket.signal.connection&&b.socket.signal.connection.readyState===WebSocket.OPEN){var e=[];for(var t in b.remoteStreams)if(b.audioVolumeSampling&&b.audioVolumeSampling[t]){var n=b.audioVolumeSampling[t],i=0;n.forEach(function(e){i+=e});var a={uid:t,level:Math.floor(i/n.length)};a.level&&e.push(a)}var r=e.sort(function(e,t){return e.level-t.level});o.default.debug("[".concat(b.clientId,"] volume-indicator "),JSON.stringify(r)),b.audioVolumeIndication.sortedAudioVolumes=r;var s=l({type:"volume-indicator",attr:r});b.dispatchEvent(s)}},b.audioVolumeIndication.interval)}},b.closeGateway=function(){o.default.debug("[".concat(b.clientId,"] close gateway")),b.state=S,b.socket.close(),O()},b.startChannelMediaRelay=function(){var e=K()(Y.a.mark(function e(t){var n,i,a,r;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!b.channelMediaRelayController){e.next=2;break}throw new ye.ChannelMediaError("RELAY_ALREADY_START","",ye.CHANNEL_MEDIA_RELAY_ERROR.RELAY_ALREADY_START);case 2:return n=function(e){b.dispatchEvent({type:"channel-media-relay-event",code:e})},i=function(e,t,n){e===ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_FAILURE&&t===ye.CHANNEL_MEDIA_RELAY_ERROR.SERVER_CONNECTION_LOST&&(b.channelMediaRelayController.dispose(),b.channelMediaRelayController=null),b.dispatchEvent({type:"channel-media-relay-state",state:e,code:t,data:n})},b.channelMediaRelayController=new be.a(b.joinInfo,b.clientId),b.channelMediaRelayController.on("event",n),b.channelMediaRelayController.on("state",i),e.prev=7,e.next=10,b.channelMediaRelayController.startChannelMediaRelay(t);case 10:e.next=22;break;case 12:throw e.prev=12,e.t0=e.catch(7),o.default.debug("[".concat(b.clientId,"] startChannelMediaRelay exception: ").concat(JSON.stringify(e.t0))),a=ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_FAILURE,r="",r=e.t0 instanceof ye.ChannelMediaError?"SetSourceChannelStatus"===e.t0.data||e.t0.data&&e.t0.data.serverResponse&&"SetSourceChannel"===e.t0.data.serverResponse.command?"FAILED_JOIN_SRC":"SetDestChannelStatus"===e.t0.data||e.t0.data&&e.t0.data.serverResponse&&"SetDestChannel"===e.t0.data.serverResponse.command?"FAILED_JOIN_DEST":e.t0.data&&e.t0.data.serverResponse&&"StartPacketTransfer"===e.t0.data.serverResponse.command?"FAILED_PACKET_SENT_TO_DEST":e.t0.message===ye.CHANNEL_MEDIA_ERROR.REQUEST_TIMEOUT||e.t0.message===ye.CHANNEL_MEDIA_ERROR.WAIT_STATUS_TIMEOUT?"SERVER_NO_RESPONSE":e.t0.message===ye.CHANNEL_MEDIA_ERROR.REQUEST_FAILED||e.t0.message===ye.CHANNEL_MEDIA_ERROR.WAIT_STATUS_ERROR?"SERVER_ERROR_RESPONSE":e.t0.message===ye.CHANNEL_MEDIA_ERROR.AP_REQUEST_TIMEOUT?"NO_RESOURCE_AVAILABLE":e.t0.message===ye.CHANNEL_MEDIA_ERROR.WS_ABORT||e.t0.message===ye.CHANNEL_MEDIA_ERROR.AP_REQUEST_ABORT?"OPERATION_ABORT":"INTERNAL_ERROR":"INTERNAL_ERROR",b.dispatchEvent({type:"channel-media-relay-state",state:a,code:ye.CHANNEL_MEDIA_RELAY_ERROR[r]}),b.channelMediaRelayController&&(b.channelMediaRelayController.dispose(),b.channelMediaConfig=null,b.channelMediaRelayController=null),b.dispatchEvent({type:"channel-media-relay-state",state:ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_IDLE}),new ye.ChannelMediaError(r,null,ye.CHANNEL_MEDIA_RELAY_ERROR[r]);case 22:b.dispatchEvent({type:"channel-media-relay-state",state:ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_RUNNING,code:ye.CHANNEL_MEDIA_RELAY_ERROR.RELAY_OK}),b.channelMediaConfig=t;case 24:case"end":return e.stop()}},e,this,[[7,12]])}));return function(t){return e.apply(this,arguments)}}(),b.updateChannelMediaRelay=function(){var t=K()(Y.a.mark(function t(n){var i,a;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(b.channelMediaRelayController){t.next=2;break}throw new ye.ChannelMediaError("RELAY_NOT_START",null,ye.CHANNEL_MEDIA_RELAY_ERROR.RELAY_NOT_START);case 2:return t.prev=2,t.next=5,b.channelMediaRelayController.updateChannelMediaRelay(n);case 5:t.next=18;break;case 7:throw t.prev=7,t.t0=t.catch(2),o.default.debug("[".concat(b.clientId,"] updateChannelMediaRelay exception: ").concat(JSON.stringify(e))),i=ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_FAILURE,a="",a=e instanceof ye.ChannelMediaError?e.message===ye.CHANNEL_MEDIA_ERROR.REQUEST_TIMEOUT||e.message===ye.CHANNEL_MEDIA_ERROR.WAIT_STATUS_TIMEOUT?"SERVER_NO_RESPONSE":e.message===ye.CHANNEL_MEDIA_ERROR.REQUEST_FAILED||e.message===ye.CHANNEL_MEDIA_ERROR.WAIT_STATUS_ERROR?"SERVER_ERROR_RESPONSE":e.message===ye.CHANNEL_MEDIA_ERROR.WS_ABORT||e.message===ye.CHANNEL_MEDIA_ERROR.AP_REQUEST_ABORT?"OPERATION_ABORT":"INTERNAL_ERROR":"INTERNAL_ERROR",b.dispatchEvent({type:"channel-media-relay-event",code:ye.CHANNEL_MEDIA_RELAY_EVENT.PACKET_UPDATE_DEST_CHANNEL_REFUSED}),b.dispatchEvent({type:"channel-media-relay-state",state:i,code:ye.CHANNEL_MEDIA_RELAY_ERROR[a]}),b.channelMediaRelayController&&(b.channelMediaRelayController.dispose(),b.channelMediaConfig=null,b.channelMediaRelayController=null),b.dispatchEvent({type:"channel-media-relay-state",state:ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_IDLE}),new ye.ChannelMediaError(a,null,ye.CHANNEL_MEDIA_RELAY_ERROR[a]);case 18:b.channelMediaConfig=n;case 19:case"end":return t.stop()}},t,this,[[2,7]])}));return function(e){return t.apply(this,arguments)}}(),b.stopChannelMediaRelay=K()(Y.a.mark(function t(){var n,i;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(b.channelMediaRelayController){t.next=2;break}throw new ye.ChannelMediaError("RELAY_NOT_START",null,ye.CHANNEL_MEDIA_RELAY_ERROR.RELAY_NOT_START);case 2:return t.prev=2,t.next=5,b.channelMediaRelayController.stopChannelMediaRelay();case 5:t.next=17;break;case 7:throw t.prev=7,t.t0=t.catch(2),o.default.debug("[".concat(b.clientId,"] stopChannelMediaRelay exception: ").concat(JSON.stringify(e))),n=ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_FAILURE,i="",i=e instanceof ye.ChannelMediaError?e.message===ye.CHANNEL_MEDIA_ERROR.REQUEST_TIMEOUT||e.message===ye.CHANNEL_MEDIA_ERROR.WAIT_STATUS_TIMEOUT?"SERVER_NO_RESPONSE":e.message===ye.CHANNEL_MEDIA_ERROR.REQUEST_FAILED||e.message===ye.CHANNEL_MEDIA_ERROR.WAIT_STATUS_ERROR?"SERVER_ERROR_RESPONSE":"INTERNAL_ERROR":"INTERNAL_ERROR",b.dispatchEvent({type:"channel-media-relay-state",state:n,code:ye.CHANNEL_MEDIA_RELAY_ERROR[i]}),b.channelMediaRelayController&&(b.channelMediaRelayController.dispose(),b.channelMediaConfig=null,b.channelMediaRelayController=null),b.dispatchEvent({type:"channel-media-relay-state",state:ye.CHANNEL_MEDIA_RELAY_STATE.RELAY_STATE_IDLE}),new ye.ChannelMediaError(i,null,ye.CHANNEL_MEDIA_RELAY_ERROR[i]);case 17:b.channelMediaConfig=null,b.channelMediaRelayController=null;case 19:case"end":return t.stop()}},t,this,[[2,7]])}));var A=function(){o.default.debug("[".concat(b.clientId,"] Reconnect gateway")),b.state=S,b.socket.close(),O(),b.reconnectMode="recover",b.state=_,C()};b.recover=A;var O=function(){for(var e in b.dispatchEvent({type:"before-clear-connection"}),b.timers)b.timers.hasOwnProperty(e)&&clearInterval(b.timers[e]);for(var e in b.remoteStreams)if(b.remoteStreams.hasOwnProperty(e)){var t=b.remoteStreams[e],n=l({type:"stream-removed",uid:t.getId(),stream:t});b.dispatchEvent(n)}b.p2ps.clear(),D(),k(),clearInterval(b.pingTimer)};b.rejoin=function(){b.socket&&(clearInterval(b.pingTimer),b.socket.close(),b.socket=void 0),b.state=_,C()};var C=function(e,t){b.dispatchEvent(l({type:"rejoin-start"})),e=e||function(e){o.default.info("[".concat(b.clientId,"] User ").concat(e," is re-joined to ").concat(b.joinInfo.cname)),b.dispatchEvent(l({type:"rejoin"})),b.channelMediaConfig&&b.startChannelMediaRelay(b.channelMediaConfig).then(function(){o.default.debug("[".concat(b.clientId,"] restartChannelMediaRelay success"))}).catch(function(e){o.default.debug("[".concat(b.clientId,"] restartChannelMediaRelay failed: ").concat(JSON.stringify(e)))}),b.liveStreams&&b.liveStreams.size&&b.liveStreams.forEach(function(e,t){e&&b.setLiveTranscoding(b.transcoding),b.startLiveStreaming(t,e)}),b.injectLiveStreams&&b.injectLiveStreams.size&&b.injectLiveStreams.forEach(function(e,t){b.addInjectStreamUrl(t,e)})},t=t||function(e){o.default.error("[".concat(b.clientId,"] Re-join to channel failed "),e),b.dispatchEvent(u({type:"error",reason:e}))},b.key?(++b.rejoinAttempt,b.join(b.joinInfo,b.key,e,t)):o.default.error("[".concat(b.clientId,"] Connection recover failed [Invalid channel key]"))},N=function(e,t,n){if(b.onConnect=t,b.socket){if(b.dispatchEvent({type:"reconnect"}),"retry"===b.reconnectMode)o.default.debug("[".concat(b.clientId,"] Retry current gateway")),b.socket.reconnect();else if("tryNext"===b.reconnectMode)o.default.debug("[".concat(b.clientId,"] Try next gateway")),b.socket.connectNext();else if("recover"===b.reconnectMode){o.default.debug("[".concat(b.clientId,"] Recover gateway")),o.default.debug("[".concat(b.clientId,"] Try to reconnect choose server and get gateway list again ")),b.reconnectingCS=!0;var a=b.joinInfo&&b.joinInfo.sid;0,He(b.joinInfo,function(e){o.default.debug("[".concat(b.clientId,"] session:  ").concat(a," get gateway list success")),b.joinInfo.apResponse=e.res,b.reconnectingCS?b.socket.replaceHost(e.gateway_addr):o.default.debug("[".concat(b.clientId,"] session:  ").concat(a," already leave"))})}}else c=e.gatewayAddr,b.socket=Le(c,{sid:b.joinInfo.sid,clientId:b.clientId}),b.socket.on("start-connection",function(e){b.ticket=e&&e.msg&&e.msg.ticket}),b.socket.on("on_uplink_stats",function(e){var t={};for(var n in e)t[Qe(n)]=e[n];if(b.OutgoingAvailableBandwidth=t.uplink_available_bandwidth,b.localStreams[b.uid]){var i=b.localStreams[b.uid].uplinkStats;i&&i.period_fir===t.period_fir||o.default.debug("[".concat(b.clientId,"]: Period fir change to: ").concat(t.period_fir)),b.localStreams[b.uid].uplinkStats=t}}),b.socket.on("connect",function(){b.dispatchEvent({type:"connected"}),b.attemps=1,b.onConnect()}),b.socket.on("recover",function(){b.state=_,o.default.debug("[".concat(b.clientId,"] Try to reconnect choose server and get gateway list again ")),b.reconnectingCS=!0;var e=b.joinInfo&&b.joinInfo.sid;He(b.joinInfo,function(t){o.default.debug("[".concat(b.clientId,"] session:  ").concat(e," get gateway list success")),b.reconnectingCS?b.socket.replaceHost(t.gateway_addr):o.default.debug("[".concat(b.clientId,"] session:  ").concat(e," already leave"))})}),b.socket.on("disconnect",function(e){if(o.default.debug("[".concat(b.clientId,"] Receive disconnect message")),b.state!==S){b.state=S;var t=u({type:"error",reason:I.default.SOCKET_DISCONNECTED});try{b.dispatchEvent(t,!0)}catch(e){o.default.debug("[".concat(b.clientId,"] Error in SOCKET_DISCONNECTED event"),e)}if(0===b.p2ps.size?b.reconnectMode="tryNext":b.reconnectMode="retry",O(),b.channelMediaRelayController&&b.channelMediaRelayController.dispose(),b.channelMediaRelayController=null,1!=i){var n,a=(n=b.attemps,1e3*Math.min(30,Math.pow(2,n)-1));if(o.default.error("[".concat(b.clientId,"] Disconnect from server [").concat(JSON.stringify(e),"], attempt to recover [#").concat(b.attemps,"] after ").concat(a/1e3," seconds")),b.hasInvokeLeave)return o.default.debug("[".concat(b.clientId,"] No reconnection because Client.leave has been invoked")),void(b.hasInvokeLeave=!1);setTimeout(function(){b.attemps++,b.state=_,b.inChannelInfo&&Date.now()-b.inChannelInfo.joinAt>Object(r.getParameter)("TICKET_RENEW_TIMEOUT")?(o.default.debug("Recovering to renew ticket"),A()):C()},a)}}}),b.socket.on("on_add_audio_stream",function(e){if(o.default.info("[".concat(b.clientId,"] Newly added audio stream with uid ").concat(e.uid)),b.joinInfo.stringUid&&"string"!=typeof e.uid&&o.default.error("StringUID is Mixed with UintUID"),b.remoteStreamsInChannel.has(e.uid)||b.remoteStreamsInChannel.add(e.uid),void 0===b.remoteStreams[e.uid]){var t=Ie({streamID:e.uid,local:!1,audio:e.audio,video:e.video});t.peerMuteVideo=!0,b.remoteStreams[e.uid]=t;var n=u({type:"stream-added",stream:t});b.dispatchEvent(n);var i=b.remoteMuteState[e.uid];if(i&&i.audio){n=l({type:"mute-audio",uid:e.uid});b.dispatchEvent(n)}if(i&&i.video){n=l({type:"mute-video",uid:e.uid});b.dispatchEvent(n)}}s.b.reportApiInvoke(b.joinInfo.sid,{name:"on_add_audio_stream"})()}),b.socket.on("on_update_stream",function(e){var t=b.remoteStreams[e.uid];if(b.joinInfo.stringUid&&"string"!=typeof e.uid&&o.default.error("StringUID is Mixed with UintUID"),t){t.audio=e.audio,t.video=e.video,t.screen=e.screen,t.pc&&b._adjustPCMuteStatus(t);var n=u({type:"stream-updated",stream:t});b.dispatchEvent(n)}else o.default.debug("[".concat(b.clientId,"] Ignoring onUpdateStream event before onAddStream for uid ").concat(e.uid))}),b.socket.on("on_add_video_stream",function(e){if(o.default.info("[".concat(b.clientId,"] Newly added remote stream with uid ").concat(e.uid,".")),b.joinInfo.stringUid&&"string"!=typeof e.uid&&o.default.error("StringUID is Mixed with UintUID"),b.remoteStreamsInChannel.has(e.uid)||b.remoteStreamsInChannel.add(e.uid),void 0===b.remoteStreams[e.uid]){var t=Ie({streamID:e.uid,local:!1,audio:e.audio,video:e.video});b.remoteStreams[e.uid]=t;var n=u({type:"stream-added",stream:t});b.dispatchEvent(n);var i=b.remoteMuteState[e.uid];if(i&&i.audio){n=l({type:"mute-audio",uid:e.uid});b.dispatchEvent(n)}if(i&&i.video){n=l({type:"mute-video",uid:e.uid});b.dispatchEvent(n)}}else{var a=b.remoteStreams[e.uid];if(void 0!==a.stream){if((t=b.remoteStreams[e.uid]).video=!0,t.peerMuteVideo=!1,t.pc&&b._adjustPCMuteStatus(t),o.default.info("[".concat(b.clientId,"] Stream changed: enable video ").concat(e.uid)),t.isPlaying()){var r=t.player.elementID;t.stop(),t.play(r,t.playOptions)}}else if(a.p2pId)b.remoteStreams[e.uid].video=!0;else{t=Ie({streamID:e.uid,local:!1,audio:!0,video:!0});b.remoteStreams[e.uid]=t,o.default.info("[".concat(b.clientId,"] Stream changed: modify video ").concat(e.uid))}}s.b.reportApiInvoke(b.joinInfo.sid,{name:"on_add_video_stream"})()}),b.socket.on("on_remove_stream",function(e){b.remoteStreamsInChannel.has(e.uid)&&b.remoteStreamsInChannel.delete(e.uid);var t=b.remoteStreams[e.uid];if(t){delete b.remoteStreams[e.uid],delete b.remoteMuteState[e.uid];var n=u({type:"stream-removed",stream:t});b.dispatchEvent(n),t.close(),void 0!==t.pc&&(t.pc.close(),t.pc=void 0,b.p2ps.delete(t.p2pId)),s.b.reportApiInvoke(b.joinInfo.sid,{name:"on_remove_stream"})()}else o.default.error("ERROR stream ",e.uid," not found onRemoveStream ",e)}),b.socket.on("on_publish_stream",function(e){var t=b.localStreams[e.uid],n=u({type:"streamPublished",stream:t});b.dispatchEvent(n)}),b.socket.on("mute_audio",function(e){o.default.info("[".concat(b.clientId,"] rcv peer mute audio: ").concat(e.uid)),b.remoteMuteState[e.uid]=b.remoteMuteState[e.uid]||{audio:!1,video:!1},b.remoteMuteState[e.uid].audio=!0;var t=l({type:"mute-audio",uid:e.uid}),n=b.remoteStreams[e.uid];n?(n.peerMuteAudio=!0,n.pc&&b._adjustPCMuteStatus(n),b.dispatchEvent(t)):o.default.debug("Ignoring event ".concat(e.type),e)}),b.socket.on("unmute_audio",function(e){o.default.info("[".concat(b.clientId,"] rcv peer unmute audio: ").concat(e.uid)),b.remoteMuteState[e.uid]=b.remoteMuteState[e.uid]||{audio:!1,video:!1},b.remoteMuteState[e.uid].audio=!1;var t=l({type:"unmute-audio",uid:e.uid}),n=b.remoteStreams[e.uid];n?(n.peerMuteAudio=!1,n.pc&&b._adjustPCMuteStatus(n),b.dispatchEvent(t)):o.default.debug("Ignoring event ".concat(e.type),e)}),b.socket.on("mute_video",function(e){o.default.info("[".concat(b.clientId,"] rcv peer mute video: ").concat(e.uid)),b.remoteMuteState[e.uid]=b.remoteMuteState[e.uid]||{audio:!1,video:!1},b.remoteMuteState[e.uid].video=!0;var t=l({type:"mute-video",uid:e.uid}),n=b.remoteStreams[e.uid];n?(n.peerMuteVideo=!0,n.pc&&b._adjustPCMuteStatus(n),b.dispatchEvent(t)):o.default.debug("Ignoring event ".concat(e.type),e)}),b.socket.on("unmute_video",function(e){o.default.info("[".concat(b.clientId,"] rcv peer unmute video: ").concat(e.uid)),b.remoteMuteState[e.uid]=b.remoteMuteState[e.uid]||{audio:!1,video:!1},b.remoteMuteState[e.uid].video=!1;var t=l({type:"unmute-video",uid:e.uid}),n=b.remoteStreams[e.uid];n?(n.peerMuteVideo=!1,n.pc&&b._adjustPCMuteStatus(n),b.dispatchEvent(t)):o.default.debug("Ignoring event ".concat(e.type),e)}),b.socket.on("on_crypt_error",function(e){o.default.warning("[".concat(b.clientId,"] stream crypt error"));var t=l({type:"crypt-error",cryptType:e.crypt_type});b.dispatchEvent(t)}),b.socket.on("on_user_banned",function(e){o.default.info("[".concat(b.clientId,"] user banned uid: ").concat(e.uid," error: ").concat(e.error_code));var t=l({type:"client-banned",uid:e.uid,attr:e.error_code});b.dispatchEvent(t),i=!0}),b.socket.on("on_stream_fallback_update",function(e){o.default.info("[".concat(b.clientId,"] stream fallback peerId: ").concat(e.stream_id," type: ").concat(e.stream_type));var t=l({type:"stream-fallback",uid:e.stream_id,stream:e.stream_id,attr:e.stream_type});b.dispatchEvent(t)}),b.socket.on("stream_recover",function(e){o.default.info("[".concat(b.clientId,"] stream recover uid: ").concat(e.id," peerId: ").concat(e.peerid," type: ").concat(e.type));var t=l({type:"stream-recover",uid:e.id,stream:e.peerid,attr:e.type});b.dispatchEvent(t)}),b.socket.on("on_p2p_lost",function(e){o.default.debug("[".concat(b.clientId,"] p2plost: "),e,"p2ps:",b.p2ps);var t,n="DTLS failed";(t=b.localStreams[e.uid]||b.remoteStreams[e.uid])?(t.pc&&t.pc.offerCandidates&&0===t.pc.offerCandidates.length&&(n="NO_CANDIDATES_IN_OFFER"),"publish"===e.event&&s.b.publish(b.joinInfo.sid,{lts:t.publishLTS,succ:!1,audioName:t.hasAudio()&&t.audioName,videoName:t.hasVideo()&&t.videoName,screenName:t.hasScreen()&&t.screenName,ec:n}),"subscribe"===e.event&&s.b.subscribe(b.joinInfo.sid,{lts:t.subscribeLTS,succ:!1,video:t.subscribeOptions&&t.subscribeOptions.video,audio:t.subscribeOptions&&t.subscribeOptions.audio,peerid:e.uid+"",ec:n})):o.default.warning("P2PLost Stream Not found",e),o.default.debug("[".concat(b.clientId,"] p2plost:"),e.p2pid),(t=b.p2ps.get(e.p2pid))&&(b.p2ps.delete(e.p2pid),t.local?b.dispatchEvent(l({type:"pubP2PLost",stream:t,attr:n})):b.remoteStreams[t.getId()]&&b.dispatchEvent(l({type:"subP2PLost",stream:t,attr:n})))}),b.socket.on("on_token_privilege_will_expire",function(e){o.default.debug("[".concat(b.clientId,"] Received Message onTokenPrivilegeWillExpire")),b.dispatchEvent(l({type:"onTokenPrivilegeWillExpire"}))}),b.socket.on("on_token_privilege_did_expire",function(){o.default.warning("[".concat(b.clientId,"] Received Message onTokenPrivilegeDidExpire, please get new token and join again")),b.closeGateway(),b.dispatchEvent(l({type:"onTokenPrivilegeDidExpire"}))}),b.socket.on("enable_local_video",function(e){b.dispatchEvent(l({type:"enable-local-video",uid:e.uid}))}),b.socket.on("disable_local_video",function(e){b.dispatchEvent(l({type:"disable-local-video",uid:e.uid}))}),b._doWithAction=function(e,t,n){"tryNext"===e?function(e,t){o.default.debug("[".concat(b.clientId,"] Connect next gateway")),b.state=S,b.socket.close(),O(),b.reconnectMode="tryNext",C(e,t)}(t,n):"retry"===e?function(e,t){o.default.debug("[".concat(b.clientId,"] Reconnect gateway")),b.state=S,b.socket.close(),O(),b.reconnectMode="retry",C(e,t)}(t,n):"quit"===e?(o.default.debug("[".concat(b.clientId,"] quit gateway")),b.state=S,b.socket.close(),O()):"recover"===e&&A()},b.socket.on("on_notification",function(e){if(o.default.debug("[".concat(b.clientId,"] Receive notification: "),e),"ERR_JOIN_BY_MULTI_IP"===I.GatewayErrorCode[e.code])return b.dispatchEvent({type:"onMultiIP",option:e.option});e.detail?b._doWithAction(qe[I.GatewayErrorCode[e.code]]):e.action&&b._doWithAction(e.action)}),b.socket.on("on_user_offline",function(e){var t=l({type:"peer-leave",uid:e.uid});if(b.remoteStreamsInChannel.has(e.uid)&&b.remoteStreamsInChannel.delete(e.uid),b.remoteStreams.hasOwnProperty(e.uid)&&(t.stream=b.remoteStreams[e.uid]),t.reason=e.reason,b.dispatchEvent(t),b.remoteStreams.hasOwnProperty(e.uid)){o.default.info("[".concat(b.clientId,"] closing stream on peer leave"),e.uid);var n=b.remoteStreams[e.uid];n.close(),delete b.remoteStreams[e.uid],void 0!==n.pc&&(n.pc.close(),n.pc=void 0,b.p2ps.delete(n.p2pId))}b.timers.hasOwnProperty(e.uid)&&(clearInterval(b.timers[e.uid]),clearInterval(b.timers[e.uid]+"_RelatedStats"),delete b.timers[e.uid]),null!=b.audioLevel[e.uid]&&delete b.audioLevel[e.uid],null!=b.timer_counter[e.uid]&&delete b.timer_counter[e.uid]}),b.socket.on("onUplinkStats",function(e){}),b.socket.on("liveStreamingStarted",function(e){var t=p({type:"liveStreamingStarted",url:e.url});b.dispatchEvent(t)}),b.socket.on("liveStreamingFailed",function(e){var t=p({type:"liveStreamingFailed",url:e.url});b.dispatchEvent(t)}),b.socket.on("liveStreamingStopped",function(e){var t=p({type:"liveStreamingStopped",url:e.url});b.dispatchEvent(t)}),b.socket.on("liveTranscodingUpdated",function(e){var t=p({type:"liveTranscodingUpdated",reason:e.reason});b.dispatchEvent(t)}),b.socket.on("streamInjectedStatus",function(e){var t=p({type:"streamInjectedStatus",url:e.url,uid:e.uid,status:e.status});b.dispatchEvent(t)}),b.socket.on("on_user_online",function(e){b.joinInfo.stringUid&&"string"!=typeof e.uid&&o.default.error("StringUID is Mixed with UintUID"),b.dispatchEvent({type:"peer-online",uid:e.uid})});var c},w=function(e,t){if(void 0!==b.socket)try{b.socket.emitSimpleMessage(e,function(e,n){t&&t(e,n)})}catch(e){o.default.error("[".concat(b.clientId,"] Error in sendSimpleSdp [").concat(e,"]"))}else o.default.error("[".concat(b.clientId,"] Error in sendSimpleSdp [socket not ready]"))},k=function(){for(var e in b.localStreams)if(void 0!==b.localStreams[e]){var t=b.localStreams[e];delete b.localStreams[e],void 0!==t.pc&&(t.pc.close(),t.pc=void 0)}},D=function(){for(var e in b.remoteStreamsInChannel.clear(),b.remoteStreams)if(b.remoteStreams.hasOwnProperty(e)){var t=b.remoteStreams[e];t.isPlaying()&&t.stop(),t.close(),delete b.remoteStreams[e],void 0!==t.pc&&(t.pc.close(),t.pc=void 0)}};return b},Ze={_gatewayClients:{},register:function(e,t){if(!t.uid){var n="NO_UID_PROVIDED";return o.default.error("[".concat(e.clientId,"] "),n,t),n}if(t.cname){if(this._gatewayClients[t.cname]&&this._gatewayClients[t.cname][t.uid]&&this._gatewayClients[t.cname][t.uid]!==e){n="UID_CONFLICT";return o.default.error("[".concat(e.clientId,"] "),n,t),n}return o.default.debug("[".concat(e.clientId,"] register client Channel"),t.cname,"Uid",t.uid),this._gatewayClients[t.cname]||(this._gatewayClients[t.cname]={}),this._gatewayClients[t.cname][t.uid]=e,null}var n="NO_CHANNEL_PROVIDED";return o.default.error("[".concat(e.clientId,"] "),n,t),n},unregister:function(e){var t=e&&e.uid,n=e.joinInfo&&e.joinInfo.cname;if(!t||!n){var i="INVALID_GATEWAYCLIENT";return o.default.error("[".concat(e.clientId,"] "),i),i}if(this._gatewayClients[n]&&this._gatewayClients[n][t]){if(this._gatewayClients[n][t]!==e){i="GATEWAYCLIENT_UID_CONFLICT";return o.default.error("[".concat(e.clientId,"] "),i),i}return o.default.debug("[".concat(e.clientId,"] unregister client "),e.uid),delete this._gatewayClients[n][t],null}var i="GATEWEAY_CLIENT_UNREGISTERED";o.default.error("[".concat(e.clientId,"] "),i)}};$e.DISCONNECTED=0,$e.CONNECTING=1,$e.CONNECTED=2,$e.DISCONNECTING=3,$e.connetionStateMap={0:"DISCONNECTED",1:"CONNECTING",2:"CONNECTED",3:"DISCONNECTING"};var et=$e,tt=function(e){var t;switch(e){case"120p":case"120p_1":t=["120p_1","120p_1","120p_1"];break;case"120p_3":t=["120p_3","120p_3","120p_3"];break;case"180p":case"180p_1":t=["90p_1","90p_1","180p_1"];break;case"180p_3":t=["120p_3","120p_3","180p_3"];break;case"180p_4":t=["120p_1","120p_1","180p_4"];break;case"240p":case"240p_1":t=["120p_1","120p_1","240p_1"];break;case"240p_3":t=["120p_3","120p_3","240p_3"];break;case"240p_4":t=["120p_4","120p_4","240p_4"];break;case"360p":case"360p_1":case"360p_4":case"360p_9":case"360p_10":case"360p_11":t=["90p_1","90p_1","360p_1"];break;case"360p_3":case"360p_6":t=["120p_3","120p_3","360p_3"];break;case"360p_7":case"360p_8":t=["120p_1","120p_1","360p_7"];break;case"480p":case"480p_1":case"480p_2":case"480p_4":case"480p_10":t=["120p_1","120p_1","480p_1"];break;case"480p_3":case"480p_6":t=["120p_3","120p_3","480p_3"];break;case"480p_8":case"480p_9":t=["120p_4","120p_4","480p_8"];break;case"720p":case"720p_1":case"720p_2":case"720p_3":t=["90p_1","90p_1","720p_1"];break;case"720p_5":case"720p_6":t=["120p_1","120p_1","720p_5"];break;case"1080p":case"1080p_1":case"1080p_2":case"1080p_3":case"1080p_5":t=["90p_1","90p_1","1080p_1"];break;case"1440p":case"1440p_1":case"1440p_2":t=["90p_1","90p_1","1440p_1"];break;case"4k":case"4k_1":case"4k_3":t=["90p_1","90p_1","4k_1"];break;default:t=["120p_1","120p_1","360p_7"]}return Object(m.isOpera)()?[e,15,50]:Object(m.isFireFox)()?[t[1],15,100]:Object(m.isSafari)()?[t[2],15,50]:[t[0],15,50]},nt={1001:"FRAMERATE_INPUT_TOO_LOW",1002:"FRAMERATE_SENT_TOO_LOW",1003:"SEND_VIDEO_BITRATE_TOO_LOW",1005:"RECV_VIDEO_DECODE_FAILED",2001:"AUDIO_INPUT_LEVEL_TOO_LOW",2002:"AUDIO_OUTPUT_LEVEL_TOO_LOW",2003:"SEND_AUDIO_BITRATE_TOO_LOW",2005:"RECV_AUDIO_DECODE_FAILED",3001:"FRAMERATE_INPUT_TOO_LOW_RECOVER",3002:"FRAMERATE_SENT_TOO_LOW_RECOVER",3003:"SEND_VIDEO_BITRATE_TOO_LOW_RECOVER",3005:"RECV_VIDEO_DECODE_FAILED_RECOVER",4001:"AUDIO_INPUT_LEVEL_TOO_LOW_RECOVER",4002:"AUDIO_OUTPUT_LEVEL_TOO_LOW_RECOVER",4003:"SEND_AUDIO_BITRATE_TOO_LOW_RECOVER",4005:"RECV_AUDIO_DECODE_FAILED_RECOVER"},it={FramerateInput:1001,FramerateSent:1002,SendVideoBitrate:1003,VideoDecode:1005,AudioIntputLevel:2001,AudioOutputLevel:2002,SendAudioBitrate:2003,AudioDecode:2005},at=function(e){var t={remoteStreamStorage:{},localStreamStorage:{}};return t.gatewayClient=e,t.checkAudioOutputLevel=function(e){return!(e&&parseInt(e.audioRecvBytesDelta)>0&&parseInt(e.audioDecodingNormalDelta)>0&&0===parseInt(e.audioOutputLevel))},t.checkAudioIntputLevel=function(e){return!e||0!==parseInt(e.audioInputLevel)},t.checkFramerateInput=function(e,t){if(!e||!t.attributes)return!0;var n=parseInt(t.attributes.maxFrameRate),i=parseInt(e.googFrameRateInput);return!n||!i||!(n>10&&i<5||n<10&&n>=5&&i<=1)},t.checkFramerateSent=function(e){return!(e&&parseInt(e.googFrameRateInput)>5&&parseInt(e.googFrameRateSent)<=1)},t.checkSendVideoBitrate=function(e){return!e||0!==parseInt(e.videoSendBytesDelta)},t.checkSendAudioBitrate=function(e){return!e||0!==parseInt(e.audioSendBytesDelta)},t.checkVideoDecode=function(e){return!e||0===parseInt(e.videoRecvBytesDelta)||0!==parseInt(e.googFrameRateDecoded)},t.checkAudioDecode=function(e){return!e||0===parseInt(e.audioRecvBytesDelta)||0!==parseInt(e.audioDecodingNormalDelta)},t.record=function(e,n,i,a,r){i[e]||(i[e]={isPrevNormal:!0,record:[]});var o=i[e],s=t["check"+e](n,r);if(o.record.push(s),o.record.length>=5){o.isCurNormal=-1!==o.record.indexOf(!0);var c=it[e];o.isPrevNormal&&!o.isCurNormal&&t.gatewayClient.dispatchEvent({type:"exception",code:c,msg:nt[c],uid:a}),!o.isPrevNormal&&o.isCurNormal&&t.gatewayClient.dispatchEvent({type:"exception",code:c+2e3,msg:nt[c+2e3],uid:a}),o.isPrevNormal=o.isCurNormal,o.record=[]}},t.setLocalStats=function(e){var n={};Object.keys(e).map(function(i){var a=e[i],r=t.gatewayClient.localStreams[parseInt(i)],o=t.localStreamStorage[i]||{};r&&r.hasVideo()&&(t.record("SendVideoBitrate",a.videoStats,o,i),t.record("FramerateInput",a.videoStats,o,i,r),t.record("FramerateSent",a.videoStats,o,i)),r&&r.hasAudio()&&(t.record("AudioIntputLevel",a.audioStats,o,i),t.record("SendAudioBitrate",a.audioStats,o,i)),n[i]=o}),t.localStreamStorage=n},t.setRemoteStats=function(n){var i={};Object.keys(n).map(function(a){var r=n[a],o=e.remoteStreams[a],s=t.remoteStreamStorage[a]||{};o&&o.hasVideo()&&o.isPlaying()&&t.record("VideoDecode",r.videoStats,s,a),o&&o.hasAudio()&&o.isPlaying()&&(t.record("AudioOutputLevel",r.audioStats,s,a),t.record("AudioDecode",r.audioStats,s,a)),i[a]=s}),t.remoteStreamStorage=i},t},rt=new function(){var e=c();return e.states={UNINIT:"UNINIT",INITING:"INITING",INITED:"INITED"},e.state=e.states.UNINIT,e.type=null,e.lastConnectedAt=null,e.lastDisconnectedAt=null,e.lastTypeChangedAt=null,e.networkChangeTimer=null,e._init=function(t,n){if(e.state=e.states.INITING,navigator.connection&&navigator.connection.addEventListener){var i=e._getNetworkInfo();e.type=i&&i.type,e.state=e.states.INITED,t&&t()}else e.state=e.states.UNINIT,n&&n("DO_NOT_SUPPORT")},e._getNetworkInfo=function(){return navigator.connection},e._reloadNetworkInfo=function(){var t=e._getNetworkInfo(),n=t&&t.type||"UNSUPPORTED",i=Date.now();if(n!==e.type){e.lastTypeChangedAt=i,"none"==n?e.lastDisconnectedAt=i:"none"==e.type&&(e.lastConnectedAt=i),e.type=n;var a={type:"networkTypeChanged",networkType:n};e.dispatchEvent(a)}},e.getStats=function(t,n){var i={},a=e._getNetworkInfo();a&&(i.NetworkType=a.type||"UNSUPPORTED"),setTimeout(function(){t(i)},0)},e._init(function(){navigator.connection.addEventListener("change",function(){e._reloadNetworkInfo()}),e.networkChangeTimer=setInterval(function(){e._reloadNetworkInfo()},5e3)},function(e){}),e},ot="DISCONNECTING",st="DISCONNECTED",ct="CONNECTED",dt="INIT",ut=[],lt=(setInterval(function(){Date.now();ut.forEach(function(e){for(var t=e.requests.length-1;t>=0;t--){var n=e.requests[t];n.timeoutCnt++,n.timeoutCnt>=15&&(e.requests.splice(t,1),n.promises.reject({reason:"TIMEOUT",code:499}))}})},1e3),1),ft=1,pt=1,mt=function(){var e=K()(Y.a.mark(function e(t){var n,i,a,s,c,d,u;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return n=t.uid,i=t.url,a=t.serviceName,s=t.sid,c=t.appId,d=t.cname,u=t.timeout,e.abrupt("return",new Promise(function(e,t){var l=!1,f=new XMLHttpRequest;f.open("POST",i,!0),f.setRequestHeader("Content-Type","application/json; charset=utf-8"),f.setRequestHeader("X-Packet-Service-Type","0"),f.setRequestHeader("X-Packet-URI","61"),f.onload=function(){if(!l){var n=null,i=null;try{n=JSON.parse(f.responseText)}catch(e){var a="Invalid text ".concat(f.responseText);return o.default.error(a),l=!0,t(a)}if(n.code){var r="AP_ERR_".concat(n.code);return o.default.error(r,n),l=!0,t(r)}try{i=JSON.parse(n.json_body||n.json)}catch(e){var s="Invalid json_body ".concat(f.responseText);return o.default.error(s),l=!0,t(s)}if(200!==i.code){var c="APPCENTER_CODE_".concat(i.code);return o.default.error(c,i),l=!0,t(c)}if(!(i.servers&&i.servers.length>0)){return o.default.error("APPCENTER_EMPTY_SERVER",i),l=!0,t("APPCENTER_EMPTY_SERVER")}return l=!0,e(i)}},f.onerror=function(e){var n="AP_REUEST_".concat(e.type);o.default.error(n,i,e),l||(l=!0,t(n))},f.ontimeout=function(e){o.default.error("AP_REUEST_TIMEOUT",i,e),l||(l=!0,t("AP_REUEST_TIMEOUT"))},u&&(f.timeout=u),f.send(JSON.stringify({service_name:a,json_body:JSON.stringify({command:"convergeAllocateEdge",sid:s,uid:n+"",appId:c,ts:Math.floor(Date.now()/1e3),seq:lt++,cname:d,version:r.VERSION,requestId:ft++})}))}));case 2:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),gt=function(){var e=K()(Y.a.mark(function e(t){var n,i,a,s,c,d,u,l,f,p,m,g;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:n=t.serviceName,i=t.sid,a=t.appId,s=t.cname,c=t.uid,d=null,e.t0=Y.a.keys(Object(r.getParameter)("UAP_AP"));case 3:if((e.t1=e.t0()).done){e.next=34;break}return u=e.t1.value,l="https://".concat(Object(r.getParameter)("UAP_AP")[u],"/api/v1?action=uap"),f=void 0,e.prev=7,e.next=10,mt({uid:c,url:l,appId:a,sid:i,serviceName:n,cname:s,timeout:Object(r.getParameter)("HTTP_CONNECT_TIMEOUT")});case 10:f=e.sent,e.next=18;break;case 13:return e.prev=13,e.t2=e.catch(7),o.default.error(e.t2),d=e.t2,e.abrupt("continue",3);case 18:p=Y.a.mark(function e(t){var i,a,r;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(i=f.servers[t],a="wss://".concat(i.address.replace(/\./g,"-"),".edge.").concat(t%2==0?"agora.io":"agoraio.cn",":").concat(i.wss,"?serviceName=").concat(encodeURIComponent(n)),i.wss){e.next=5;break}return o.default.error("Invalid server response",i),e.abrupt("return","continue");case 5:return e.prev=5,e.next=8,new Promise(function(e,t){var n=new WebSocket(a),i=!1;n.addEventListener("open",function(){i||(i=!0,e(n))}),n.addEventListener("error",function(e){i||(i=!0,t(e))})});case 8:return(r=e.sent).workerToken=f.workerToken,e.abrupt("return",{v:r});case 13:e.prev=13,e.t0=e.catch(5),o.default.error(e.t0),d=e.t0;case 17:case"end":return e.stop()}},e,this,[[5,13]])}),m=0;case 20:if(!(m<f.servers.length)){e.next=32;break}return e.delegateYield(p(m),"t3",22);case 22:g=e.t3,e.t4=g,e.next="continue"===e.t4?26:27;break;case 26:return e.abrupt("continue",29);case 27:if("object"!==Se()(g)){e.next=29;break}return e.abrupt("return",g.v);case 29:m++,e.next=20;break;case 32:e.next=3;break;case 34:throw d;case 35:case"end":return e.stop()}},e,this,[[7,13]])}));return function(t){return e.apply(this,arguments)}}(),vt={},St=function(e){return vt[e]?(vt[e]+=1,vt[e]):(vt[e]=1,vt[e])},ht={},_t=function(e){return ht[e]?(ht[e]+=1,ht[e]):(ht[e]=1,ht[e])},Et=function(e){var t=e.appId,n=e.cname,i=e.uid,a=e.sid,s=c();return s.status=dt,s.pingpongTimer=null,s.connection=null,s.requests=[],s.appId=t,s.cname=n,s.uid=i,s.sid=a,s.connection=null,s.connectionId=pt++,s.connect=function(){var e=K()(Y.a.mark(function e(t){var n;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=t.wsClient,s.status===dt){e.next=4;break}return o.default.debug("Ignored UapConnection.connect: ".concat(s.status)),e.abrupt("return");case 4:s.connection=n,s.status=ct,s._flush(),s.startPingpong(),n.addEventListener("close",function(e){if(console.log("Weboskcet closed",e),n===s.connection){var t={type:"close",evt:e};s.dispatchEvent(t)}}),n.addEventListener("message",function(e){if(e.data){var t=null;try{t=JSON.parse(e.data)}catch(e){return void o.default.error("Invalid data from worker manager",t)}if(t.requestId)for(var n=s.requests.length-1;n>=0;n--){var i=s.requests[n];if(i.reqData.requestId===t.requestId){s.requests.splice(n,1),t.code<400&&t.code>=200?i.promises.resolve(t):i.promises.reject(t);break}}else t.type="notification",s.dispatchEvent(t)}});case 10:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),s.disconnect=K()(Y.a.mark(function e(){var t;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:for(t in s.status=ot,clearInterval(s.pingpongTimer),s.pingpongTimer=null,s.requests)s.requests[t].promises.reject("DISCONNECTED");return s.requests=[],null,s.connection&&(s.connection.close(),s.connection=null),s.status=st,e.abrupt("return",null);case 9:case"end":return e.stop()}},e,this)})),s.request=function(){var e=K()(Y.a.mark(function e(t){var n,i,a,c;return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=h()({command:"request",sdkVersion:r.VERSION,seq:_t(s.sid),appId:s.appId,cname:s.cname,uid:""+s.uid,sid:s.sid,requestId:St(s.sid),ts:Math.floor(Date.now()/1e3)},t),"INIT"!==s.status){e.next=5;break}return e.abrupt("return",new Promise(function(e,t){var i={reqData:n,stalledTs:Date.now(),timeoutCnt:0,promises:{resolve:e,reject:t}};s.requests.push(i)}));case 5:if(s.connection){e.next=11;break}throw i="NO_WEBSOCKET_CONNECTION",o.default.error(i),new Error(i);case 11:if(s.status!==ot||t.clientRequest&&"DestroyWorker"===t.clientRequest.command){e.next=17;break}throw a="WEBSOCKET_DISCONNECTING",o.default.error(a),new Error(a);case 17:if("DISCONNECTED"!==s.status){e.next=23;break}throw c="WEBSOCKET_DISCONNECTED",o.default.error(c),new Error(c);case 23:return e.abrupt("return",new Promise(function(e,t){var i={reqData:n,stalledTs:Date.now(),timeoutCnt:0,promises:{resolve:e,reject:t}};s.requests.push(i),s._flush()}));case 24:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}(),s._flush=function(){s.connection&&s.status===ct&&s.requests.forEach(function(e){e.sentTs||(e.sentTs=Date.now(),e.reqData.clientRequest&&(e.reqData.clientRequest.workerToken=s.connection.workerToken),s.connection.send(JSON.stringify(e.reqData)))})},s.startPingpong=function(){clearInterval(s.pingpongTimer),s.pingpongTimer=setInterval(K()(Y.a.mark(function e(){return Y.a.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(s.status!==ct||!s.connection||1!==s.connection.readyState){e.next=9;break}return e.prev=1,e.next=4,s.request({command:"ping"});case 4:e.next=9;break;case 6:e.prev=6,e.t0=e.catch(1),console.error("pingpong",e.t0);case 9:case"end":return e.stop()}},e,this,[[1,6]])})),6e3)},s._flush(),s.startPingpong(),ut.push(s),s},It=function(e){e.disconnect();var t=ut.find(function(t){return e.connectionId===t.connectionId});ut.splice(t,1)},Tt=function(e){return"number"==typeof e&&0<=e&&e<=4294967295};var yt=function(e){var t=e;if(Object(r.getParameter)("LIVESTREAMING_ALIGN"))switch(e){case 200:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_START_SUCCESS;break;case 451:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_START_ALREADY_EXISTS;break;case 453:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_START_UNAUTHORIZED;break;case 470:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_BROKEN;break;case 499:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_START_TIMEDOUT;break;default:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_START_FAILED}return t},bt=function(e){var t=e;if(Object(r.getParameter)("LIVESTREAMING_ALIGN"))switch(e){case 200:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_STOP_SUCCESS;break;case 404:case 452:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_STOP_NOT_FOUND;break;case 453:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_STOP_UNAUTHORIZED;break;case 499:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_STOP_TIMEDOUT;break;default:t=I.INJECT_STREAM_STATUS.INJECT_STREAM_STATUS_STOP_FAILED}return t},Rt=a(22),At=a.n(Rt),Ot=function(e){var t={key:void 0,highStream:null,lowStream:null,lowStreamParameter:null,isDualStream:!1,highStreamState:2,lowStreamState:2,proxyServer:null};t.turnServer={mode:"auto",username:"test",credential:"111111",forceturn:Object(r.getParameter)("FORCE_TURN")},t.useProxyServer=!1,t.mode=e.mode,t.codec=e.codec,t.clientId=Object(F.generateSessionId)().slice(0,5),t.uintUid=null;e=h()({},e);return t.aespassword=null,t.aesmode="none",t.hasPublished=!1,t.getSessionId=function(){return e.sessionId},t.startChannelMediaRelay=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:function(e){if(e)return i&&i(e);i&&i()},name:"Client.startChannelMediaRelay",options:arguments,tag:"tracer"});if(!(n instanceof ye.ChannelMediaRelayConfiguration))throw"Configration should be instance of [ChannelMediaRelayConfiguration]";var r=n.getSrcChannelMediaInfo(),o=n.getDestChannelMediaInfos();if(Object(W.isEmpty)(r))throw"srcChannelMediaInfo should not be empty";if(Object(W.isEmpty)(o)||0===o.length)throw"destChannelMediaInfos should not be empty";if(!Object(F.is32Uint)(r.uid))throw"Invalid uid in srcChannelMediaInfo";if(!Object(W.isValidChannelName)(r.channelName))throw"Invalid channelName in srcChannelMediaInfo";if(r.token&&!Object(W.isValidToken)(r.token))throw"Invalid token in srcChannelMediaInfo";if(o.forEach(function(e){if(!Object(F.is32Uint)(e.uid))throw"Invalid uid in destChannelMediaInfo";if(!Object(W.isValidChannelName)(e.channelName))throw"Invalid channelName in destChannelMediaInfo";if(e.token&&!Object(W.isValidToken)(e.token))throw"Invalid token in destChannelMediaInfo"}),t.gatewayClient.state!==et.CONNECTED)throw"startChannelMediaRelay should be used after join";t.gatewayClient.startChannelMediaRelay(n).then(function(){a&&a()}).catch(function(e){a&&a(e)})},t.updateChannelMediaRelay=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:function(e){if(e)return i&&i(e);i&&i()},name:"Client.updateChannelMediaRelay",options:arguments,tag:"tracer"});if(!(n instanceof ye.ChannelMediaRelayConfiguration))throw"Configration should be instance of [ChannelMediaRelayConfiguration]";var r=n.getSrcChannelMediaInfo(),o=n.getDestChannelMediaInfos();if(Object(W.isEmpty)(r))throw"srcChannelMediaInfo should not be empty";if(Object(W.isEmpty)(o)||0===o.length)throw"destChannelMediaInfos should not be empty";if(!Object(F.is32Uint)(r.uid))throw"Invalid uid in srcChannelMediaInfo";if(!Object(W.isValidChannelName)(r.channelName))throw"Invalid channelName in srcChannelMediaInfo";if(r.token&&!Object(W.isValidToken)(r.token))throw"Invalid token in srcChannelMediaInfo";if(o.forEach(function(e){if(!Object(F.is32Uint)(e.uid))throw"Invalid uid in destChannelMediaInfo";if(!Object(W.isValidChannelName)(e.channelName))throw"Invalid channelName in destChannelMediaInfo";if(e.token&&!Object(W.isValidToken)(e.token))throw"Invalid token in destChannelMediaInfo"}),t.gatewayClient.state!==et.CONNECTED)throw"updateChannelMediaRelay should be used after join";t.gatewayClient.updateChannelMediaRelay(n).then(function(){a&&a()}).catch(function(e){a&&a(e)})},t.stopChannelMediaRelay=function(n){var i=s.b.reportApiInvoke(e.sessionId,{callback:function(e){if(e)return n&&n(e);n&&n()},name:"Client.stopChannelMediaRelay",options:arguments,tag:"tracer"});t.gatewayClient.stopChannelMediaRelay().then(function(){i&&i()}).catch(function(e){i&&i(e)})},t.getConnectionState=function(){var n=s.b.reportApiInvoke(e.sessionId,{name:"Client.getConnectionState",options:arguments,tag:"tracer"}),i=et.connetionStateMap[t.gatewayClient.state];return n(),i},t.setClientRole=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:i,name:"Client.setClientRole",options:arguments,tag:"tracer"});if(Object(W.checkValidEnum)(n,"setClientRole",["host","audience"]),"rtc"===t.mode){var r="RTC mode can not use setClientRole";return o.default.warning("[".concat(t.clientId,"] ").concat(r)),a&&a(r)}t.gatewayClient&&t.gatewayClient.state===et.CONNECTED?("audience"===n&&(0===this.highStreamState?this._unpublish(this.highStream,function(){a&&a(null,{role:n})},function(e){a&&a(e)}):t.gatewayClient.setClientRole("audience",a)),"host"===n&&t.gatewayClient.setClientRole("host",a)):(t.gatewayClient.role=n,a&&a(null,{role:n}))},t.getGatewayInfo=function(e){if(t.gatewayClient.state!==et.CONNECTED){var n="Client is not in connected state";return o.default.error("[".concat(t.clientId,"] ").concat(n)),void e(n)}t.gatewayClient.getGatewayInfo(function(t){e(null,t)},e)},t.renewToken=function(n,i,a){var r=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return o.default.error("Failed to renew token ".concat(e),t),a&&a(e);i&&i(t)},name:"Client.renewToken",options:arguments,tag:"tracer"});if(!Object(W.isValidToken)(n))throw new Error("Invalid token: Token is of the string type .Length of the string: [1,255]. ASCII characters only.");return t.gatewayClient?t.key?(t.key=n,void t.gatewayClient.renewToken(n,function(e){return r(null,e)},r)):(o.default.error("[".concat(t.clientId,"] renewToken should not be called before user join")),r(I.default.INVALID_OPERATION)):(o.default.error("[".concat(t.clientId,"] renewToken Failed. GatewayClient not Exist")),r(I.default.INVALID_OPERATION))},t.setLowStreamParameter=function(n){var i=s.b.reportApiInvoke(e.sessionId,{name:"Client.setLowStreamParameter",options:arguments,tag:"tracer"});Object(W.checkValidObject)(n,"param");var a=n.width,r=n.height,c=n.framerate,d=n.bitrate;Object(W.isEmpty)(a)||Object(W.checkValidNumber)(a,"width"),Object(W.isEmpty)(r)||Object(W.checkValidNumber)(r,"height"),Object(W.isEmpty)(c)||Object(W.checkValidNumber)(c,"framerate"),Object(W.isEmpty)(d)||Object(W.checkValidNumber)(d,"bitrate",1,1e7),(!a&&r||a&&!r)&&o.default.warning("[".concat(t.clientId,"] The width and height parameters take effect only when both are set")),t.lowStreamParameter=n,i()},t.init=function(n,i,a){var r=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return a&&a(e);i&&i(t)},name:"Client.init",options:arguments,tag:"tracer"});Object(W.checkValidString)(n),Object(m.isChromeKernel)()&&Object(m.getChromeKernelVersion)()<=48?a?r(I.default.BAD_ENVIRONMENT):Object(F.popBanTip)():(o.default.info("[".concat(t.clientId,"] Initializing AgoraRTC client, appId: ").concat(n,".")),e.appId=n,e.sessionId=Object(F.generateSessionId)(),r())},t.setTurnServer=function(n){var i=s.b.reportApiInvoke(e.sessionId,{name:"Client.setTurnServer",options:arguments,tag:"tracer"});if(t.gatewayClient&&t.gatewayClient.state!==et.DISCONNECTED)throw new Error("Set turn server before join channel");if(t.useProxyServer)throw new Error("You have already set the proxy");Object(W.checkValidObject)(n,"turnServer");var a=n.turnServerURL,r=n.username,c=n.password,d=n.udpport,u=n.forceturn,l=n.tcpport;Object(W.checkValidString)(a,"turnServerURL"),Object(W.checkValidString)(r,"username"),Object(W.checkValidString)(c,"password"),Object(W.checkValidString)(d,"udpport"),Object(W.isEmpty)(u)||Object(W.checkValidBoolean)(u,"forceturn"),t.turnServer.mode="manual",t.turnServer.url=a,t.turnServer.udpport=d,t.turnServer.username=r,t.turnServer.credential=c,t.turnServer.forceturn=u||!1,Object(W.isEmpty)(l)||(Object(W.checkValidString)(l,"tcpport"),t.turnServer.tcpport=l,o.default.info("[".concat(t.clientId,"] Set turnserver tcpurl. ").concat(t.turnServer.url,":").concat(t.turnServer.tcpport))),o.default.info("[".concat(t.clientId,"] Set turnserver udpurl. ").concat(t.turnServer.url,":").concat(t.turnServer.udpport,",username: ").concat(t.turnServer.uername,",password: ").concat(t.turnServer.credential)),i()},t.setProxyServer=function(n){var i=s.b.reportApiInvoke(e.sessionId,{name:"Client.setProxyServer",options:arguments,tag:"tracer"});if(t.gatewayClient&&t.gatewayClient.state!==et.DISCONNECTED)throw new Error("Set proxy server before join channel");if(!n)throw new Error("Do not set the proxyServer parameter as empty");if(t.useProxyServer)throw new Error("You have already set the proxy");Object(W.checkValidString)(n,"proxyServer"),t.proxyServer=n,s.b.setProxyServer(n),o.default.setProxyServer(n),i()},t.startProxyServer=function(){var n=s.b.reportApiInvoke(e.sessionId,{name:"Client.startProxyServer",options:arguments,tag:"tracer"});if(t.gatewayClient&&t.gatewayClient.state!==et.DISCONNECTED)throw new Error("Start proxy server before join channel");if(t.proxyServer||t.turnServer.url)throw new Error("You have already set the proxy");t.useProxyServer=!0,n()},t.stopProxyServer=function(){var n=s.b.reportApiInvoke(e.sessionId,{name:"Client.stopProxyServer",options:arguments,tag:"tracer"});if(t.gatewayClient&&t.gatewayClient.state!==et.DISCONNECTED)throw new Error("Stop proxy server after leave channel");s.b.setProxyServer(),o.default.setProxyServer(),t.turnServer={},t.proxyServer=null,t.useProxyServer=!1,n()},t.setEncryptionSecret=function(n){var i=s.b.reportApiInvoke(e.sessionId,{name:"Client.setEncryptionSecret",options:arguments,tag:"tracer"});Object(W.checkValidString)(n,"password"),t.aespassword=n,i()},t.setEncryptionMode=function(n){var i=s.b.reportApiInvoke(e.sessionId,{name:"Client.setEncryptionMode",options:arguments,tag:"tracer"});if(Object(W.checkValidString)(n,"encryptionMode"),-1===Oe.indexOf(n))throw new Error('Invalid encryptionMode: encryptionMode should be "aes-128-xts" | "aes-256-xts" | "aes-128-ecb"');t.aesmode=n,i()},t.configPublisher=function(n){var i=s.b.reportApiInvoke(e.sessionId,{name:"Client.configPublisher",options:arguments,tag:"tracer"});Object(W.checkValidObject)(n,"config");var a=n.width,r=n.height,o=n.framerate,c=n.bitrate,d=n.publisherUrl;Object(W.checkValidNumber)(a,"width"),Object(W.checkValidNumber)(r,"height"),Object(W.checkValidNumber)(o,"framerate"),Object(W.checkValidNumber)(c,"bitrate",1,1e7),d&&Object(W.checkValidString)(d,"publisherUrl"),t.gatewayClient.configPublisher(n),i()},t.enableDualStream=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return i&&i(e);n&&n(t)},name:"Client.enableDualStream",options:arguments,tag:"tracer"});return"iOS"===Object(m.getBrowserOS)()?(s.b.streamSwitch(e.sessionId,{lts:(new Date).getTime(),isdual:!0,succ:!1}),a(I.default.IOS_NOT_SUPPORT)):Object(m.isWeChatBrowser)()?(s.b.streamSwitch(e.sessionId,{lts:(new Date).getTime(),isdual:!0,succ:!1}),a(I.default.WECHAT_NOT_SUPPORT)):(s.b.streamSwitch(e.sessionId,{lts:(new Date).getTime(),isdual:!0,succ:!0}),t.isDualStream=!0,t.highStream&&(t.highStream.isDualStream=!0),void(0===t.highStreamState?t._publishLowStream(function(e){return a(null,e)},function(e){o.default.warning("[".concat(t.clientId,"]"),e),a(I.default.ENABLE_DUALSTREAM_FAILED)}):1===t.highStreamState?a(I.default.STILL_ON_PUBLISHING):a(null)))},t.disableDualStream=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return i&&i(e);n&&n(t)},name:"Client.disableDualStream",options:arguments,tag:"tracer"});s.b.streamSwitch(e.sessionId,{lts:(new Date).getTime(),isdual:!1,succ:!0}),t.isDualStream=!1,t.highStream&&(t.highStream.isDualStream=!1),0===t.highStreamState?t._unpublishLowStream(function(){t.highStream.lowStream=null,a()},function(e){o.default.warning("[".concat(t.clientId,"]"),e),a(I.default.DISABLE_DUALSTREAM_FAILED)}):1===t.highStreamState?a(I.default.STILL_ON_PUBLISHING):a()},t._createLowStream=function(e,n){if(t.highStream&&t.highStream.stream){var i=h()({},t.highStream.params);if(i.streamID+=1,i.audio=!1,i.video){var a=t.highStream.stream.getVideoTracks()[0];a?H.getVideoCameraIdByLabel(a.label,function(a){i.cameraId=a;var s=new Ie(i);if(s.isLowStream=!0,s.streamId=t.highStream.getId()+1,t.lowStreamParameter){var c=h()({},t.lowStreamParameter);if(!c.width||!c.height){var d=tt(t.highStream.profile),u=r.SUPPORT_RESOLUTION_LIST[d[0]];c.width=u[0],c.height=u[1]}if(c.framerate=c.framerate||5,c.bitrate=c.bitrate||50,Object(m.isSafari)()||Object(m.isOpera)()){o.default.debug("[".concat(t.clientId,"] Shimming lowStreamParameter"));u=r.SUPPORT_RESOLUTION_LIST[t.highStream.profile];c.width=u[0],c.height=u[1]}s.setVideoProfileCustomPlus(c)}else s.setVideoProfileCustom(tt(t.highStream.profile));s.init(function(){t.highStream.lowStream=s,t.highStream.userMuteVideo&&s.muteVideo(),e&&e(s)},n)},n):n&&n(I.default.HIGH_STREAM_NOT_VIDEO_TRACE)}else n&&n(I.default.HIGH_STREAM_NOT_VIDEO_TRACE)}else n&&n(I.default.HIGH_STREAM_NOT_VIDEO_TRACE)},t._getLowStream=function(e,n){t.lowStream?e(t.lowStream):t.highStream.videoSource?t._createSourceLowStream(function(n){t.lowStream=n,e(t.lowStream)},n):t._createLowStream(function(n){t.lowStream=n,e(t.lowStream)},n)},t._createSourceLowStream=function(e,n){var i=h()({},t.highStream.params);i.streamID+=1,i.audio=!1;var a=new Ie(i);if(a.isLowStream=!0,a.streamId=t.highStream.getId()+1,!t.lowStreamParameter)return o.default.debug("NOT_SET_LOW_STREAM_PARAMETER"),n&&n("NOT_SET_LOW_STREAM_PARAMETER");var r=h()({},t.lowStreamParameter);r.width&&r.height||(r.width=320,r.height=240),r.framerate=r.framerate||15,r.bitrate=r.bitrate||200,a.setVideoProfileCustomPlus(r);try{var s=At()(t.highStream.stream,{width:r.width,height:r.height,framerate:r.framerate});return a.stream=s,t.highStream.lowStream=a,t.highStream.userMuteVideo&&a.muteVideo(),e&&e(a)}catch(e){return n&&n(e)}},t._publishLowStream=function(e,n){return 2!==t.lowStreamState?n&&n(I.default.LOW_STREAM_ALREADY_PUBLISHED):t.highStream&&t.highStream.hasScreen()?n&&n(I.default.SHARING_SCREEN_NOT_SUPPORT):void t._getLowStream(function(i){t.lowStreamState=1,t.gatewayClient.publish(i,{streamType:1},function(){t.lowStreamState=0,e&&e()},function(e){1===t.lowStreamState&&(t.lowStreamState=2),o.default.debug("[".concat(t.clientId,"] publish low stream failed")),n&&n(e)})},n)},t._unpublishLowStream=function(e,n){if(0!==t.lowStreamState)return n&&n(I.default.LOW_STREAM_NOT_YET_PUBLISHED);t.lowStream&&(t.gatewayClient.unpublish(t.lowStream,{streamType:1},function(){},function(e){o.default.debug("[".concat(t.clientId,"] unpublish low stream failed")),n&&n(e)}),t.lowStream.close(),t.lowStream=null,t.lowStreamState=2,e&&e())},t.join=function(n,i,a,r,c){var d=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return c&&c(e);r&&r(t)},name:"Client.join",options:arguments,tag:"tracer"});if(n&&!Object(W.isValidToken)(n))return o.default.warning("[".concat(t.clientId,"] Param channelKey should be string")),d(I.default.INVALID_PARAMETER);if(!Object(W.isValidChannelName)(i))return o.default.error("Invalid Channel Name ".concat(i)),o.default.warning("[".concat(t.clientId,"] The length must be within 64 bytes. The supported characters: a-z,A-Z,0-9,space,!, #, $, %, &, (, ), +, -, :, ;, <, =, ., >, ?, @, [, ], ^, _,  {, }, |, ~, ,")),d(I.default.INVALID_PARAMETER);if("string"==typeof i&&""===i)return o.default.warning("[".concat(t.clientId,"] Param channel should not be empty")),d(I.default.INVALID_PARAMETER);if(a&&!Object(F.is32Uint)(a)&&!Object(W.isValidString)(a,1,255))return o.default.error("Invalid UID ".concat(a," ").concat(Se()(a))),o.default.warning("[".concat(t.clientId,"] [String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]")),d(I.default.INVALID_PARAMETER);if("string"==typeof a&&0==a.length)return o.default.warning("[".concat(t.clientId,"] String uid should not be empty")),d(I.default.INVALID_PARAMETER);if("string"==typeof a&&a.length>256)return o.default.warning("[".concat(t.clientId,"] Length of string uid should be less than 255")),d(I.default.INVALID_PARAMETER);t.highStream=null,t.lowStream=null,t.lowStreamParameter=null,t.isDualStream=!1,t.highStreamState=2,t.lowStreamState=2;var u={clientId:t.clientId,appId:e.appId,sid:e.sessionId,cname:i,uid:a,turnServer:t.turnServer,proxyServer:t.proxyServer,token:n||e.appId,useProxyServer:t.useProxyServer};if("string"==typeof a&&(u.stringUid=a,t.uintUid?(u.uid=t.uintUid,delete t.uintUid):u.uid=0),t.aespassword&&"none"!==t.aesmode&&h()(u,{aespassword:t.aespassword,aesmode:t.aesmode}),s.b.sessionInit(e.sessionId,{lts:(new Date).getTime(),cname:i,appid:e.appId,mode:e.mode,succ:!0}),t.onSuccess=function(e){t.rtcStatsCollector.startNetworkQualityTimer(),t.onSuccess=null,d(null,e)},t.onFailure=function(e){return d(e)},t.channel=i,t.gatewayClient.state!==et.DISCONNECTED)return o.default.error("[".concat(t.clientId,"] Client already in connecting/connected state")),d(I.default.INVALID_OPERATION),void s.b.joinGateway(e.sessionId,{lts:Date.now(),succ:!1,ec:I.default.INVALID_OPERATION,addr:null});t.gatewayClient.state=et.CONNECTING;var l=function(a,r){o.default.info("[".concat(t.clientId,"] Joining channel: ").concat(i)),t.gatewayClient.dispatchEvent({type:"config-distribute",config:r,joinInfo:u}),t.key=n||e.appId,u.cid=a.cid,u.uid||(u.uid=a.uid),u.vid=a.vid,u.clientId=t.clientId,u.apResponse=a.res,a.uni_lbs_ip&&a.uni_lbs_ip[1]&&(u.uni_lbs_ip=a.uni_lbs_ip[1]),u.gatewayAddr=a.gateway_addr,t.joinInfo=u,t.gatewayClient.join(u,t.key,function(e){o.default.info("[".concat(t.clientId,"] Join channel ").concat(i," success, join with uid: ").concat(e,".")),t.onSuccess=null,t.rtcStatsCollector.startNetworkQualityTimer(),d(null,e)},function(e){return d(e)})};u.stringUid&&!u.uid?(t.userAccountReq&&!t.userAccountReq.isFinished()&&t.userAccountReq.cancel(),t.userAccountReq=Ge(u,t.gatewayClient),t.userAccountReq.then(function(e){o.default.debug("getUserAccount Success ".concat(e.url," ").concat(u.stringUid," => ").concat(e.uid)),u.uid=e.uid,He(u,l,function(e){return d(e)})}).catch(function(e){o.default.error("getUserAccount rejected",e),d(e)})):He(u,l,function(e){return d(e)})},t.renewChannelKey=function(n,i,a){var r=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return a&&a(e);i&&i(t)},name:"Client.renewChannelKey",options:arguments,tag:"tracer"});Object(W.checkValidString)(n,"key",1,2047),void 0===t.key?(o.default.error("[".concat(t.clientId,"] renewChannelKey should not be called before user join")),r(I.default.INVALID_OPERATION)):(t.key=n,t.gatewayClient.joinInfo.token=n,t.gatewayClient.key=n,t.gatewayClient.recover(),r())},t.leave=function(n,i){t.gatewayClient.hasInvokeLeave=!0;var a=!1,c=s.b.reportApiInvoke(e.sessionId,{callback:function(e,a){if(e)return i&&i(e);var r;t.gatewayClient.reconnectingCS=!1,t.gatewayClient.state=et.DISCONNECTED,clearTimeout((r=t.clientId,je[r])),t._renewSession(),t.rtcStatsCollector.clearNetworkQualityTimer(),n&&n(a)},name:"Client.leave",options:arguments,tag:"tracer"});o.default.info("[".concat(t.clientId,"] Leaving channel")),t.userAccountReq&&!t.userAccountReq.isFinished()&&(t.userAccountReq.cancel(),t.gatewayClient.state===et.CONNECTING&&(t.gatewayClient.state=et.DISCONNECTED)),t.gatewayClient.leave(function(e){a=!0,c(null,e)},c),setTimeout(function(){a||(t.gatewayClient.socket&&(t.gatewayClient.socket.close(),t.gatewayClient.socket=null),t.gatewayClient.state=et.DISCONNECTED,c(null,"LEAVE_MSG_TIMEOUT"))},Object(r.getParameter)("LEAVE_MSG_TIMEOUT"))},t._renewSession=function(){var n=Object(F.generateSessionId)();if(o.default.debug("renewSession ".concat(e.sessionId," => ").concat(n)),e.sessionId=n,t.joinInfo&&(t.joinInfo.sid=n),t.gatewayClient&&(t.gatewayClient.joinInfo&&(t.gatewayClient.joinInfo.sid=n),t.gatewayClient.localStreams))for(var i in t.gatewayClient.localStreams){var a=t.gatewayClient.localStreams[i];a&&(a.sid=n)}},t._publish=function(n,i,a,s){if(2!==t.highStreamState)return o.default.warning("[".concat(t.clientId,"] Can't publish stream when stream already publish ").concat(n.getId())),a&&a(I.default.STREAM_ALREADY_PUBLISHED);if("auto"===t.turnServer.mode&&Object(r.getParameter)("FORCE_TURN")&&!Object(r.getParameter)("TURN_ENABLE_TCP")&&!Object(r.getParameter)("TURN_ENABLE_UDP"))throw new Error("force TURN With No TURN Configuration");o.default.info("[".concat(t.clientId,"] Publishing stream, uid ").concat(n.getId())),t.highStream=n,t.highStreamState=1,t.highStream.streamId=t.joinInfo.stringUid||t.joinInfo.uid,t.hasPublished=!1;var c=function(n,i,a){t.gatewayClient.publish(n,{streamType:0},function(){n.sid=e.sessionId,t.highStreamState=0,o.default.info("[".concat(t.clientId,"] Publish success, uid: ").concat(n.getId())),t.highStream&&(t.highStream.isDualStream=t.isDualStream),t.isDualStream?t._publishLowStream(function(){i&&i()},function(e){o.default.warning("[".concat(t.clientId,"] "),e),ge.replaceWithCanvasTrack(n),i&&i()}):(ge.replaceWithCanvasTrack(n),i&&i())},a)};"audience"!==t.gatewayClient.role||"live"!==t.mode||s?c(n,i,a):t.gatewayClient.setClientRole("host",function(e){if(e)return a&&a(e);c(n,i,a)})},t._unpublish=function(e,n,i,a){if(0!==t.highStreamState)return o.default.warning("[".concat(t.clientId,"] Can't unpublish stream when stream not publish")),i&&i(I.default.STREAM_NOT_YET_PUBLISHED);o.default.info("[".concat(t.clientId,"] Unpublish stream, uid ").concat(e.getId()));var r=function(e,n,i){t.isDualStream&&t.lowStream&&t._unpublishLowStream(null,i),t.gatewayClient.unpublish(e,{streamType:0},function(){t.highStreamState=2,o.default.info("[".concat(t.clientId,"] Unpublish stream success, uid: ").concat(e.getId())),n&&n()},function(n){o.default.info("[".concat(t.clientId,"] Unpublish stream fail, uid: ").concat(e.getId())),i&&i(n)})};"host"!==t.gatewayClient.role||"live"!==t.mode||a?r(e,n,i):t.gatewayClient.setClientRole("audience",function(t){if(t)return i&&i(t);r(e,n,i)})},t.publish=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:function(e,n){if(e)return 1===t.highStreamState&&(t.highStreamState=2),i&&i(e)},name:"Client.publish",tag:"tracer",options:{stream:"too long to show",onFailure:!!i}});2===t.highStreamState?n._hasVideoTracks()||n._hasAudioTracks()?t._publish(n,function(e){return a(null,e)},function(e){return a(e)}):a(I.default.NO_TRACK_IN_STREAM):a(I.default.STREAM_ALREADY_PUBLISHED)},t.unpublish=function(n,i,a){var r=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return i&&i(e);a&&a(t)},name:"Client.unpublish",tag:"tracer",options:{stream:"too long to show",onFailure:!!i}});0===t.highStreamState?t._unpublish(n,function(e){return r(null,e)},function(e){return r(e)}):r(I.default.STREAM_NOT_YET_PUBLISHED)},t.subscribe=function(n,i,a){var r=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return a&&a(e)},name:"Client.subscribe",tag:"tracer",options:{stream:"too long to show",options:i,onFailure:!!a}});"function"==typeof i&&(a=i,i=null),Object(W.checkValidObject)(n,"stream"),Object(W.isEmpty)(i)||(Object(W.checkValidObject)(i,"options"),Object(W.isEmpty)(i.video)||Object(W.checkValidBoolean)(i.video,"options.video"),Object(W.isEmpty)(i.audio)||Object(W.checkValidBoolean)(i.audio,"options.audio"));var c={video:!0,audio:!0};if(!Object(W.isEmpty)(i)){if(Object(m.isSafari)()&&(!i.video||!i.audio)){var d="SAFARI_NOT_SUPPORTED_FOR_TRACK_SUBSCRIPTION";return o.default.error("[".concat(t.clientId,"] "),d),void r(d)}if(!Object(W.isEmpty)(i.video)&&!Object(W.isValidBoolean)(i.video)||!Object(W.isEmpty)(i.audio)&&!Object(W.isValidBoolean)(i.audio)||!1===i.audio&&!1===i.video){d="INVALID_PARAMETER ".concat(JSON.stringify(i));return o.default.error("[".concat(t.clientId,"] "),d),void r(d)}}n.subscribeOptions?(h()(n.subscribeOptions,c,i),t.gatewayClient.subscribeChange(n,function(e){return r(null,e)},r)):(n.subscribeOptions=h()({},c,i),t.gatewayClient.subscribe(n,function(e){return r(null,e)},r))},t.unsubscribe=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{callback:function(e,t){if(e)return i&&i(e)},name:"Client.unsubscribe",tag:"tracer",options:{stream:"too long to show",onFailure:!!i}});o.default.info("[".concat(t.clientId,"] Unsubscribe stream, uid: ").concat(n.getId())),t.gatewayClient.unsubscribe(n,function(e){return a(null,e)},a)},t.setRemoteVideoStreamType=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{name:"Client.setRemoteVideoStreamType",tag:"tracer",options:{stream:"too long to show",streamType:i}});Object(W.checkValidEnum)(i,"streamType",[0,1]),t.gatewayClient.setRemoteVideoStreamType(n,i),a()},t.setStreamFallbackOption=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{name:"Client.setStreamFallbackOption",tag:"tracer",options:{stream:"too long to show",fallbackType:i}});Object(W.checkValidEnum)(i,"fallbackType",[0,1,2]),t.gatewayClient.setStreamFallbackOption(n,i),a()},t.enableAudioVolumeIndicator=function(n,i){var a=s.b.reportApiInvoke(e.sessionId,{name:"Client.enableAudioVolumeIndicator",options:arguments,tag:"tracer"});n=n||2e3,i=i||3,Object(W.checkValidNumber)(i,"smooth",1,100),Object(W.checkValidNumber)(n,"interval",50,1e5),t.audioVolumeIndication=t.audioVolumeIndication||{enabled:!0},t.audioVolumeIndication.interval=n,t.audioVolumeIndication.smooth=i,t.audioVolumeIndication={interval:n,smooth:i},o.default.info("[".concat(t.clientId,"] enableAudioVolumeIndicator interval ").concat(n," smooth ").concat(i)),t.gatewayClient.enableAudioVolumeIndicator(n,i),a()},t.getNetworkStats=function(e,n){return o.default.deprecate("[".concat(t.clientId,"] client.getNetworkStats is deprecated. Use client.getTransportStats instead.")),rt.getStats(e,n)},t.getSystemStats=function(e,t){return v.getStats(e,t)},t.getRecordingDevices=function(e,t){return H.getRecordingDevices(e,t)},t.getPlayoutDevices=function(e,t){return H.getPlayoutDevices(e,t)},t.getCameras=function(e,t){return H.getCameras(e,t)},t.getRemoteAudioStats=function(e,n){return t.rtcStatsCollector.getRemoteAudioStats(e,n)},t.getLocalAudioStats=function(e,n){return t.rtcStatsCollector.getLocalAudioStats(e,n)},t.getRemoteVideoStats=function(e,n){return t.rtcStatsCollector.getRemoteVideoStats(e,n)},t.getLocalVideoStats=function(e,n){return t.rtcStatsCollector.getLocalVideoStats(e,n)},t._getRemoteVideoQualityStats=function(e,n){return t.rtcStatsCollector.getRemoteVideoQualityStats(e,n)},t._getRemoteAudioQualityStats=function(e,n){return t.rtcStatsCollector.getRemoteAudioQualityStats(e,n)},t.getTransportStats=function(e,n){return t.rtcStatsCollector.getTransportStats(function(t){return rt.getStats(function(n){var i=h()({},t,n);e&&e(i)},n)},n)},t.getSessionStats=function(e,n){return t.rtcStatsCollector.getSessionStats(e,n)},t.onNetworkQuality=function(){return t.rtcStatsCollector.onNetworkQuality(onSuccess,onFailure)},e.clientId=t.clientId,t.gatewayClient=et(e),t.listenerLoggerTimer=null,t.listenerLoggerCache=[],t.on=function(e,n){t.gatewayClient.on(e,n),t.listenerLoggerCache.push("".concat(e).concat(n.name?":"+n.name:"")),t.listenerLoggerTimer?clearTimeout(t.listenerLoggerTimer):o.default.info("[".concat(t.clientId,"] Adding event handler on ").concat(e)),t.listenerLoggerTimer=setTimeout(function(){t.listenerLoggerCache.length&&(t.listenerLoggerTimer=null,o.default.info("[".concat(t.clientId,"] Added event handler on ").concat(t.listenerLoggerCache.join(", "))),t.listenerLoggerCache=[])},0)},t.off=function(e,n){o.default.info("remove event handler from [".concat(e,"]")),t.gatewayClient.removeEventListener(e,n)},t.rtcStatsCollector=function(e){var t=c();return t.gatewayClient=e,t.exceptionMonitor=new at(e),t.localStats={},t.remoteStats={},t.session={sendBytes:0,recvBytes:0,WSSendBytes:0,WSSendBytesDelta:0,WSRecvBytes:0,WSRecvBytesDelta:0,HTTPSendBytes:0,HTTPSendBytesDelta:0,HTTPRecvBytes:0,HTTPRecvBytesDelta:0},t.getRemoteAudioStats=function(e){var n={};for(var i in t.remoteStats){var a={},r=t.remoteStats[i];B(a,"End2EndDelay",r.peer_delay&&r.peer_delay.audio_delay),B(a,"TransportDelay",r.peer_delay&&r.peer_delay.e2e_delay),B(a,"PacketLossRate",r.peer_delay&&r.peer_delay.e2e_audio_lost_ratio_400ms),B(a,"RecvLevel",r.audioStats&&r.audioStats.audioOutputLevel),B(a,"RecvBitrate",r.audioRecvBitrate),B(a,"CodecType",r.audioStats&&r.audioStats.googCodecName),B(a,"MuteState",r.audioDisabled),B(a,"TotalFreezeTime",r.audioStats&&r.audioStats.audioTotalFreezeTime),B(a,"TotalPlayDuration",r.audioStats&&r.audioStats.audioTotalPlayDuration),n[i]=a}e&&e(n)},t.getLocalAudioStats=function(e){var n={};for(var i in t.localStats){var a={},r=t.localStats[i];B(a,"RecordingLevel",r.audioStats&&r.audioStats.audioInputLevel),B(a,"SendLevel",r.audioStats&&r.audioStats.totalAudioEnergy),B(a,"SamplingRate",r.audioStats&&r.audioStats.totalSamplesDuration),B(a,"SendBitrate",r.audioSendBitrate),B(a,"CodecType",r.audioStats&&r.audioStats.googCodecName),B(a,"MuteState",r.audioDisabled);var o=t.gatewayClient.localStreams[i];o&&o.isPlaying()&&B(a,"MuteState",o.userMuteAudio?"1":"0"),n[i]=a}e&&e(n)},t.getRemoteVideoStats=function(e){var n={};for(var i in t.remoteStats){var a={},r=t.remoteStats[i];B(a,"End2EndDelay",r.peer_delay&&r.peer_delay.video_delay),B(a,"TransportDelay",r.peer_delay&&r.peer_delay.e2e_delay),B(a,"PacketLossRate",r.peer_delay&&r.peer_delay.e2e_video_lost_ratio_400ms),B(a,"RecvBitrate",r.videoRecvBitrate),B(a,"RecvResolutionWidth",r.videoStats&&r.videoStats.googFrameWidthReceived),B(a,"RecvResolutionHeight",r.videoStats&&r.videoStats.googFrameHeightReceived),B(a,"RenderResolutionWidth",r.videoStats&&r.videoStats.renderRemoteWidth),B(a,"RenderResolutionHeight",r.videoStats&&r.videoStats.renderRemoteHeight),B(a,"RenderFrameRate",r.videoStats&&r.videoStats.googFrameRateOutput),B(a,"MuteState",r.videoDisabled),B(a,"TotalFreezeTime",r.videoStats&&r.videoStats.videoTotalFreezeTime),B(a,"TotalPlayDuration",r.videoStats&&r.videoStats.videoTotalPlayDuration),n[i]=a}e&&e(n)},t.getLocalVideoStats=function(e){var n={};for(var i in t.localStats){var a={},r=t.localStats[i];B(a,"TargetSendBitrate",r.videoTargetSendBitrate),B(a,"SendFrameRate",r.videoStats&&r.videoStats.googFrameRateSent),B(a,"SendBitrate",r.videoSendBitrate),B(a,"SendResolutionWidth",r.videoStats&&r.videoStats.googFrameWidthSent),B(a,"SendResolutionHeight",r.videoStats&&r.videoStats.googFrameHeightSent),B(a,"CaptureResolutionWidth",r.videoStats&&r.videoStats.googFrameWidthInput),B(a,"CaptureResolutionHeight",r.videoStats&&r.videoStats.googFrameHeightInput),B(a,"EncodeDelay",r.videoStats&&r.videoStats.googAvgEncodeMs),B(a,"MuteState",r.videoDisabled),B(a,"TotalFreezeTime",r.videoStats&&r.videoStats.videoTotalFreezeTime),B(a,"TotalDuration",r.videoStats&&r.videoStats.videoTotalPlayDuration),B(a,"CaptureFrameRate",r.videoStats&&r.videoStats.googFrameRateSent),r.videoStats&&!r.videoStats.googFrameWidthInput&&B(a,"CaptureResolutionWidth",r.videoStats&&r.videoStats.renderLocalWidth),r.videoStats&&!r.videoStats.googFrameHeightInput&&B(a,"CaptureResolutionHeight",r.videoStats&&r.videoStats.renderLocalHeight),n[i]=a,e&&e(n)}},t.getRemoteVideoQualityStats=function(e){var n={};for(var i in t.remoteStats){var a={},r=t.remoteStats[i];B(a,"videoReceiveDelay",r.videoStats&&r.videoStats.googCurrentDelayMs),B(a,"VideoFreezeRate",r.videoStats&&r.videoStats.videoFreezeRate),B(a,"FirstFrameTime",r.firstFrameTime),n[i]=a}e&&e(n)},t.getRemoteAudioQualityStats=function(e){var n={};for(var i in t.remoteStats){var a={},r=t.remoteStats[i];B(a,"audioReceiveDelay",r.audioStats&&r.audioStats.googCurrentDelayMs),B(a,"AudioFreezeRate",r.videoStats&&r.videoStats.videoFreezeRate),n[i]=a}e&&e(n)},t.getTransportStats=function(e){var n={},i={},a=t.gatewayClient.traffic_stats,r=a.peer_delay;if(B(n,"OutgoingAvailableBandwidth",t.gatewayClient.OutgoingAvailableBandwidth/1e3),B(n,"RTT",a&&a.access_delay),r){var o=!0,s=!1,c=void 0;try{for(var d,u=r[Symbol.iterator]();!(o=(d=u.next()).done);o=!0){var l=d.value;l.downlink_estimate_bandwidth&&(i[l.peer_uid]=l.downlink_estimate_bandwidth/1e3+"")}}catch(e){s=!0,c=e}finally{try{o||null==u.return||u.return()}finally{if(s)throw c}}}n.IncomingAvailableBandwidth=i,e&&e(n)},t.getSessionStats=function(e){var n={},i=t.gatewayClient.traffic_stats,a=t.gatewayClient.socket,r=0,o=0;for(var s in t.remoteStats)(c=t.remoteStats[s])&&c.videoStats&&c.videoStats.videoRecvBytesDelta&&(o+=parseInt(c.videoStats.videoRecvBytesDelta)),c&&c.audioStats&&c.audioStats.audioRecvBytesDelta&&(o+=parseInt(c.audioStats.audioRecvBytesDelta));for(var s in t.localStats){var c;(c=t.localStats[s])&&c.videoStats&&c.videoStats.videoSendBytesDelta&&(r+=parseInt(c.videoStats.videoSendBytesDelta)),c&&c.audioStats&&c.audioStats.audioSendBytesDelta&&(r+=parseInt(c.audioStats.audioSendBytesDelta))}var d=r+t.session.WSSendBytesDelta+t.session.HTTPSendBytesDelta,u=o+t.session.WSRecvBytesDelta+t.session.HTTPRecvBytesDelta,l=t.session.sendBytes+Object(ke.getHTTPSendBytes)(),f=t.session.recvBytes+Object(ke.getHTTPRecvBytes)();t.gatewayClient.socket&&t.gatewayClient.socket.state===t.gatewayClient.CONNECTED&&(l+=a.getSendBytes(),f+=a.getRecvBytes());var p=1;i.peer_delay&&(p=i.peer_delay.length,p+=1),B(n,"Duration",a.getDuration()),B(n,"UserCount",p),B(n,"SendBytes",l),B(n,"RecvBytes",f),B(n,"SendBitrate",8*d/1e3),B(n,"RecvBitrate",8*u/1e3),e&&e(n)},t.isLocalVideoFreeze=function(e,t){var n=0,i=0;if(!e||!t)return!1;if(Object(m.isChrome)()||Object(m.isOpera)())n=e.googFrameRateInput,i=e.googFrameRateSent;else if(Object(m.isSafari)())n=parseInt(e.framerateMean),i=parseInt(e.framesEncoded)-parseInt(t.framesEncoded);else{if(!Object(m.isFireFox)())return!1;n=parseInt(e.framerateMean),i=parseInt(e.framesEncoded)-parseInt(t.framesEncoded)}return n>5&&i<3},t.isRemoteVideoFreeze=function(e,t){var n=0,i=0;if(!e||!t)return!1;if(Object(m.isChrome)()||Object(m.isOpera)())n=e.googFrameRateReceived,i=e.googFrameRateDecoded;else if(Object(m.isSafari)())n=e.framerateMean,i=parseInt(e.framesDecoded)-parseInt(t.framesDecoded);else{if(!Object(m.isFireFox)())return!1;n=parseInt(e.framesReceived)-parseInt(t.framesReceived),i=parseInt(e.framesDecoded)-parseInt(t.framesDecoded)}return n>5&&n<10&&i<3||n>10&&n<20&&i<4||n>20&&i<5},t.isAudioFreeze=function(e){if(Object(m.isChrome)()&&e){if(e.googDecodingPLC&&e.googDecodingPLCCNG&&e.googDecodingCTN)return(parseInt(e.googDecodingPLC)+parseInt(e.googDecodingPLCCNG))/parseInt(e.googDecodingCTN)>.2}else if((Object(m.isSafari)()||Object(m.isFireFox)())&&e.packetsLost&&e.packetsReceived)return parseInt(e.packetsLost)/(parseInt(e.packetsLost)+parseInt(e.packetsReceived))>.2;return!1},t.isAudioDecodeFailed=function(e){return!!((Object(m.isChrome)()||Object(m.isOpera)())&&e&&parseInt(e.bytesReceived)>0&&0===parseInt(e.googDecodingNormal))},t.startNetworkQualityTimer=function(){t.clearNetworkQualityTimer(),t.networkQualityTimer=setInterval(function(){if(t.gatewayClient.state!==et.CONNECTED)t.gatewayClient.dispatchEvent({type:"network-quality",uplinkNetworkQuality:0,downlinkNetworkQuality:0});else{var e=t.gatewayClient.traffic_stats;t.gatewayClient.dispatchEvent({type:"network-quality",uplinkNetworkQuality:t.networkQualityTrans(e.uplink_network_quality),downlinkNetworkQuality:t.networkQualityTrans(e.downlink_network_quality)})}},2e3)},t.clearNetworkQualityTimer=function(){t.networkQualityTimer&&clearInterval(t.networkQualityTimer)},t.networkQualityTrans=function(e){return e>=0&&e<.17?1:e>=.17&&e<.36?2:e>=.36&&e<.59?3:e>=.59&&e<=1?4:e>1?5:0},t.getStatsTimer=setInterval(function(){var e=t.gatewayClient.traffic_stats,n=Date.now();t.gatewayClient.dispatchEvent({type:"_testException"}),Object.keys(t.localStats).length&&t.exceptionMonitor.setLocalStats(t.localStats),Object.keys(t.remoteStats).length&&t.exceptionMonitor.setRemoteStats(t.remoteStats);var i={};Object.keys(t.gatewayClient.remoteStreams).forEach(function(a){var r=t.gatewayClient.remoteStreams[a],o=t.remoteStats[a],s={id:a,updatedAt:n};i[a]=s,s.firstFrameTime=r.firstFrameTime,o?(s.audioTotalPlayDuration=o.audioTotalPlayDuration+1,s.audioTotalFreezeTime=o.audioTotalFreezeTime,s.isAudioFreeze=!1,s.isAudioDecodeFailed=!1,s.videoTotalPlayDuration=o.videoTotalPlayDuration+1,s.videoTotalFreezeTime=o.videoTotalFreezeTime,s.isVideoFreeze=!1):(s.audioTotalPlayDuration=1,s.audioTotalFreezeTime=0,s.videoTotalPlayDuration=1,s.videoTotalFreezeTime=0);var c=e&&e.peer_delay&&e.peer_delay.find(function(e){return e.peer_uid==a});c&&(s.peer_delay=c),r&&(r.isPlaying()&&(s.audioDisabled=r.userMuteAudio||r.peerMuteAudio?"1":"0",s.videoDisabled=r.userMuteVideo||r.peerMuteVideo?"1":"0"),o&&o.peer_delay&&c&&o.peer_delay.stream_type!==c.stream_type&&t.gatewayClient.dispatchEvent({type:"streamTypeChange",uid:a,streamType:c.stream_type}),r.pc&&"established"==r.pc.state&&r.pc.getStats(function(e){if(s.pcStats=e,s.audioStats=e.find(function(e){return"audio"==e.mediaType&&(e.id.indexOf("_recv")>-1||e.id.toLowerCase().indexOf("inbound")>-1)}),s.videoStats=e.find(function(e){return"video"==e.mediaType&&(e.id.indexOf("_recv")>-1||e.id.toLowerCase().indexOf("inbound")>-1)}),o&&o.audioStats&&s.audioStats){var n=parseInt(s.audioStats.bytesReceived)-parseInt(o.audioStats.bytesReceived),i=parseInt(s.audioStats.googDecodingNormal)-parseInt(o.audioStats.googDecodingNormal);if(s.audioStats.audioRecvBytesDelta=n,s.audioStats.audioDecodingNormalDelta=i,t.session.recvBytes+=n,isFinite(n)&&s.audioStats.timestamp){var a=s.audioStats.timestamp.getTime()-o.audioStats.timestamp.getTime();s.audioRecvBitrate=Math.floor(8*n/a)}t.isAudioFreeze(s.audioStats)&&s.audioTotalPlayDuration>10&&(s.audioTotalFreezeTime++,s.isAudioFreeze=!0),t.isAudioDecodeFailed(s.audioStats)&&s.audioTotalPlayDuration>10&&(s.isAudioDecodeFailed=!0),s.audioStats.audioTotalFreezeTime=s.audioTotalFreezeTime,s.audioStats.audioTotalPlayDuration=s.audioTotalPlayDuration,s.audioStats.audioFreezeRate=Math.ceil(100*s.audioTotalFreezeTime/s.audioTotalPlayDuration)}if(o&&o.videoStats&&s.videoStats){var c=parseInt(s.videoStats.bytesReceived)-parseInt(o.videoStats.bytesReceived);s.videoStats.videoRecvBytesDelta=c,t.session.recvBytes+=c,isFinite(c)&&s.videoStats.timestamp&&(a=s.videoStats.timestamp.getTime()-o.videoStats.timestamp.getTime(),s.videoRecvBitrate=Math.floor(8*c/a)),t.isRemoteVideoFreeze(s.videoStats,o.videoStats)&&(s.videoTotalFreezeTime++,s.isVideoFreeze=!0),s.videoStats.videoTotalFreezeTime=s.videoTotalFreezeTime,s.videoStats.videoTotalPlayDuration=s.videoTotalPlayDuration,s.videoStats.videoFreezeRate=Math.ceil(100*s.videoTotalFreezeTime/s.videoTotalPlayDuration),r.player&&r.player.video&&r.player.video.videoWidth&&r.player.video.videoHeight?(s.videoStats.renderRemoteWidth=r.player.video.videoWidth,s.videoStats.renderRemoteHeight=r.player.video.videoHeight):(s.videoStats.renderRemoteWidth=r.videoWidth||s.videoStats.googFrameWidthReceived,s.videoStats.renderRemoteHeight=r.videoHeight||s.videoStats.googFrameHeightReceived)}}))}),t.remoteStats=i;var a={};if(Object.keys(t.gatewayClient.localStreams).forEach(function(e){var i=t.gatewayClient.localStreams[e],r=t.localStats[e],o={id:e,updatedAt:n};a[e]=o,r?(o.videoTotalPlayDuration=r.videoTotalPlayDuration+1,o.videoTotalFreezeTime=r.videoTotalFreezeTime,o.isVideoFreeze=!1):(o.videoTotalPlayDuration=1,o.videoTotalFreezeTime=0),i&&(i.isPlaying()&&(o.audioDisabled=i.userMuteAudio?"1":"0",o.videoDisabled=i.userMuteVideo?"1":"0"),i.video&&i.attributes.maxVideoBW?o.videoTargetSendBitrate=i.attributes.maxVideoBW:i.video&&i.screenAttributes&&(o.videoTargetSendBitrate=i.screenAttributes.maxVideoBW),i.pc&&"established"==i.pc.state&&i.pc.getStats(function(e){if(o.pcStats=e.reverse(),o.audioStats=e.find(function(e){return"audio"==e.mediaType&&(e.id.indexOf("_send")>-1||e.id.toLowerCase().indexOf("outbound")>-1)}),o.videoStats=e.find(function(e){return"video"==e.mediaType&&(e.id.indexOf("_send")>-1||e.id.toLowerCase().indexOf("outbound")>-1)}),o.audioStats&&r&&r.audioStats){var n=parseInt(o.audioStats.bytesSent)-parseInt(r.audioStats.bytesSent);if(o.audioStats.audioSendBytesDelta=n,t.session.sendBytes+=n,isFinite(n)&&o.audioStats.timestamp){var a=o.audioStats.timestamp.getTime()-r.audioStats.timestamp.getTime();o.audioSendBitrate=Math.floor(8*n/a)}}if(o.videoStats&&r&&r.videoStats){var s=parseInt(o.videoStats.bytesSent)-parseInt(r.videoStats.bytesSent);o.videoStats.videoSendBytesDelta=s,t.session.sendBytes+=s,isFinite(s)&&o.videoStats.timestamp&&(a=o.videoStats.timestamp.getTime()-r.videoStats.timestamp.getTime(),o.videoSendBitrate=Math.floor(8*s/a)),t.isLocalVideoFreeze(o.videoStats,r.videoStats)&&(o.videoTotalFreezeTime++,o.isVideoFreeze=!0),o.videoStats.videoTotalFreezeTime=o.videoTotalFreezeTime,o.videoStats.videoTotalPlayDuration=o.videoTotalPlayDuration,o.videoStats.videoFreezeRate=Math.ceil(100*o.videoTotalFreezeTime/o.videoTotalPlayDuration),o.videoStats.renderLocalWidth=i.videoWidth||o.videoStats.googFrameWidthSent,o.videoStats.renderLocalHeight=i.videoHeight||o.videoStats.googFrameHeightSent}}))}),t.localStats=a,t.session.HTTPSendBytesDelta=Object(ke.getHTTPSendBytes)()-t.session.HTTPSendBytes,t.session.HTTPSendBytes=Object(ke.getHTTPSendBytes)(),t.session.HTTPRecvBytesDelta=Object(ke.getHTTPRecvBytes)()-t.session.HTTPRecvBytes,t.session.HTTPRecvBytes=Object(ke.getHTTPRecvBytes)(),t.gatewayClient.socket&&t.gatewayClient.socket.state===t.gatewayClient.CONNECTED){var r=t.gatewayClient.socket;t.session.WSSendBytesDelta=r.getSendBytes()-t.session.WSSendBytes,t.session.WSSendBytes=r.getSendBytes(),t.session.WSRecvBytesDelta=r.getRecvBytes()-t.session.WSRecvBytes,t.session.WSRecvBytes=r.getRecvBytes()}},1e3),t.gatewayClient.on("join",function(){t.session={sendBytes:0,recvBytes:0,WSSendBytes:0,WSSendBytesDelta:0,WSRecvBytes:0,WSRecvBytesDelta:0,HTTPSendBytes:0,HTTPSendBytesDelta:0,HTTPRecvBytes:0,HTTPRecvBytesDelta:0}}),t}(t.gatewayClient),t.configDistributManager=function(e){var t={};return t.client=e,t.client.gatewayClient&&t.client.gatewayClient.on("config-distribute",function(n){var i=n.joinInfo,a=n.config;if(a){Object(W.isEmpty)(a.uploadLog)||(Object(r.setParameter)("UPLOAD_LOG",a.uploadLog),s.b.reportApiInvoke(i.sid,{name:"_configDistribute",options:{feature:"uploadLog",value:a.uploadLog}})()),Object(W.isEmpty)(a.dualStream)||(e.isDualStream=a.dualStream,s.b.reportApiInvoke(i.sid,{name:"_configDistribute",options:{feature:"dualStream",value:a.dualStream}})()),Object(W.isEmpty)(a.streamFallbackOption)||t.client.gatewayClient&&t.client.gatewayClient.on("stream-subscribed",function(e){var n=e.stream;n?(t.client.gatewayClient.setStreamFallbackOption(n,a.streamFallbackOption),s.b.reportApiInvoke(i.sid,{name:"_configDistribute",options:{feature:"streamFallbackOption",value:a.streamFallbackOption,streamId:n.getId()}})()):s.b.reportApiInvoke(i.sid,{name:"_configDistribute",options:{feature:"streamFallbackOption",value:a.streamFallbackOption,streamId:n.getId(),err:"invalid stream"}})()});try{o.default.debug("[".concat(e.clientId,"] setParameter in distribution: ").concat(JSON.stringify(a))),Object.keys(a).map(function(e){return Object(r.setParameter)(e,a[e])})}catch(t){o.default.debug("[".concat(e.clientId,"] setParameter in distribution failed: ").concat(JSON.stringify(a)))}}}),t}(t),function(e,t){var n=arguments;e.liveStreaming=c(),e.liveStreaming.connections={inject_streaming:null,mix_streaming:null,raw_streaming:null},e.liveStreaming.connectionTypes={inject_streaming:"pull",mix_streaming:"push",raw_streaming:"push"},e.liveStreaming.pushStates={},e.liveStreaming.pullStates={},e.gatewayClient.addEventListener("join",function(t){e.liveStreaming.resumeStates("pull")}),e.gatewayClient.addEventListener("stream-unpublished",function(t){if(t.options&&0===t.options.streamType)for(var n in e.liveStreaming.pushStates){var i=e.liveStreaming.pushStates[n];i.url&&e._stopLiveStreaming(i.url,i.transcodingEnabled,!0)}}),e.gatewayClient.addEventListener("stream-published",function(t){e.liveStreaming.resumeStates("push")}),e.liveStreaming.connect=(m=K()(Y.a.mark(function n(i){var a,r;return Y.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:if(e.joinInfo&&e.joinInfo.uid&&parseInt(e.joinInfo.vid,10)){n.next=3;break}throw new Error("CLIENT_NOT_JOINED");case 3:return a=new Et({appId:t.appId,cname:e.channel,sid:t.sessionId,uid:e.joinInfo.uid}),e.liveStreaming.connections[i]=a,n.next=7,gt({appId:t.appId,cname:e.channel,serviceName:i,sid:t.sessionId,uid:e.joinInfo.uid});case 7:return r=n.sent,n.next=10,a.connect({wsClient:r});case 10:return a.on("notification",function(t){if(t.serviceName=i,e.liveStreaming.dispatchEvent(t),503===t.code);else switch(t.serviceName){case"inject_streaming":var n={reason:t&&t.reason,status:yt(t&&t.code),type:"streamInjectedStatus",uid:t&&t.serverStatus&&t.serverStatus.inject_uid,url:t&&t.serverStatus&&t.serverStatus.url};e.gatewayClient.dispatchEvent(n);break;case"raw_streaming":case"mix_streaming":var a={reason:t&&t.reason,status:t&&t.code,type:t&&200===t.code?"liveStreamingStarted":"liveStreamingFailed",uid:t&&t.serverStatus&&t.uid,url:t&&t.serverStatus&&t.serverStatus.url};e.gatewayClient.dispatchEvent(a)}}),a.on("close",function(t){It(a),o.default.debug("Reconnect ".concat(i)),e.liveStreaming.connect(i).catch(function(t){e.liveStreaming.connections[i]=null,e.gatewayClient.dispatchEvent({type:"".concat(i.replace("_","-"),"-disconnected")})})}),o.default.debug("".concat(i," connected")),n.abrupt("return",a);case 14:case"end":return n.stop()}},n,this)})),function(e){return m.apply(this,arguments)}),e.liveStreaming.disconnect=(p=K()(Y.a.mark(function t(n){var i,a;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=Y.a.keys(e.liveStreaming.connections);case 1:if((t.t1=t.t0()).done){t.next=13;break}if(i=t.t1.value,!e.liveStreaming.connections.hasOwnProperty(i)){t.next=11;break}if(!(a=e.liveStreaming.connections[i])||n&&n!==i){t.next=11;break}return o.default.info("Disconnecting liveStreaming ".concat(i)),t.next=9,a.disconnect();case 9:t.sent,e.liveStreaming.connections[i]=null;case 11:t.next=1;break;case 13:case"end":return t.stop()}},t,this)})),function(e){return p.apply(this,arguments)}),e.liveStreaming.resumeStates=(f=K()(Y.a.mark(function t(n){var i,a,r,s,c,d,u,l;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:t.t0=Y.a.keys(e.liveStreaming.connections);case 1:if((t.t1=t.t0()).done){t.next=8;break}if(i=t.t1.value,!n||e.liveStreaming.connectionTypes[i]===n){t.next=5;break}return t.abrupt("continue",1);case 5:e.liveStreaming.connections.hasOwnProperty(i)&&(a=e.liveStreaming.connections[i])&&(o.default.info("LiveStreaming closing connection ".concat(i)),a.disconnect(),e.liveStreaming.connections[i]=null),t.next=1;break;case 8:t.t2=Y.a.keys(e.liveStreaming.pushStates);case 9:if((t.t3=t.t2()).done){t.next=37;break}if(r=t.t3.value,!n||"push"===n){t.next=13;break}return t.abrupt("continue",9);case 13:if(!e.liveStreaming.pushStates.hasOwnProperty(r)){t.next=35;break}if(s=e.liveStreaming.pushStates[r],"audience"!==e.gatewayClient.role){t.next=19;break}o.default.warning("Cannot resume LiveStreaming in audience mode. ".concat(s.url),s),t.next=35;break;case 19:if(!s){t.next=35;break}return o.default.debug("Resuming LiveStreaming ".concat(s.url),s),t.prev=21,t.next=24,e._startLiveStreaming(s.url,s.transcodingEnabled);case 24:c=t.sent,o.default.debug("Resumed LiveStreaming ".concat(s.url,": ").concat(c.reason)),t.next=35;break;case 28:if(t.prev=28,t.t4=t.catch(21),454!==t.t4.code){t.next=34;break}o.default.debug("Resumed LiveStreaming ".concat(s.url,": ").concat(t.t4.reason)),t.next=35;break;case 34:throw t.t4;case 35:t.next=9;break;case 37:t.t5=Y.a.keys(e.liveStreaming.pullStates);case 38:if((t.t6=t.t5()).done){t.next=62;break}if(d=t.t6.value,!n||"pull"===n){t.next=42;break}return t.abrupt("continue",38);case 42:if(!e.liveStreaming.pullStates.hasOwnProperty(d)){t.next=60;break}if(u=e.liveStreaming.pullStates[d],"audience"!==e.gatewayClient.role){t.next=48;break}o.default.warning("Cannot resume addInjectStreamUrl in audience mode. ".concat(u.url),u),t.next=60;break;case 48:if(!u){t.next=60;break}return o.default.debug("Resuming LiveStreaming pullStream ".concat(u.url),u),t.prev=50,t.next=53,e._addInjectStreamUrl(u.url,u.transcodingConfig);case 53:l=t.sent,o.default.debug("Resumed LiveStreaming pullStream ".concat(u.url,": ").concat(l.reason)),t.next=60;break;case 57:t.prev=57,t.t7=t.catch(50),451===t.t7.code&&o.default.debug("Resumed LiveStreaming pullStream ".concat(u.url,": ").concat(t.t7.reason));case 60:t.next=38;break;case 62:case"end":return t.stop()}},t,this,[[21,28],[50,57]])})),function(e){return f.apply(this,arguments)}),e.liveStreaming.startOptions={autoDestroyTime:30},e.liveStreaming.transcodingConfig={audioBitrate:48,audioChannels:1,audioSampleRate:48e3,backgroundColor:0,height:360,images:[],lowLatency:!1,metadata:"",userConfigExtraInfo:"",userConfigs:[],videoBitrate:400,videoCodecProfile:100,videoCodecType:1,videoFramerate:15,videoGop:30,width:640},e.startLiveStreaming=function(n,i){Object(W.isEmpty)(i)||Object(W.checkValidBoolean)(i,"transcodingEnabled"),Object(W.checkValidString)(n,"url",1,1024);var a=s.b.reportApiInvoke(t.sessionId,{name:"Client.startLiveStreaming",options:arguments,tag:"tracer"});if(e.gatewayClient&&"audience"===e.gatewayClient.role){var r={code:403,reason:"AUDIENCE_STREAMING_FORBIDDEN"};throw a(r),r}var o=e._startLiveStreaming(n,i);return o.then(function(e){a(null,e)}).catch(function(e){a(e)}),o},e._startLiveStreaming=(l=K()(Y.a.mark(function n(i,a){var r,s,c,d;return Y.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return r=h()({allocate:!0,clientRequest:{command:"PublishStream"},command:"request"}),o.default.debug("startLiveStreaming ".concat(i,", ").concat(a)),h()(r.clientRequest,e.liveStreaming.startOptions,{ts:Date.now(),url:i,vid:parseInt(e.joinInfo.vid,10)}),s=null,a?(e.liveStreaming.connections.mix_streaming||e.liveStreaming.connect("mix_streaming"),r.clientRequest.transcodingConfig=JSON.parse(JSON.stringify(e.liveStreaming.transcodingConfig)),s=e.liveStreaming.connections.mix_streaming):("vp8"===t.codec&&o.default.warning("VP8 is not supported by raw_streaming. Subscriber side will suffer"),"rtc"===t.mode&&o.default.warning("RTC mode is not supported by raw_streaming. Subscriber side will suffer"),e.liveStreaming.connections.raw_streaming||e.liveStreaming.connect("raw_streaming"),s=e.liveStreaming.connections.raw_streaming),c=null,d={},n.prev=7,n.next=10,s.request(r);case 10:c=n.sent,d.type="liveStreamingStarted",d.reason=c&&c.reason,d.status=c&&c.code,d.url=c&&c.serverResponse&&c.serverResponse.url,e.gatewayClient.dispatchEvent(d),n.next=26;break;case 18:throw n.prev=18,n.t0=n.catch(7),d.type="liveStreamingFailed",d.reason=n.t0&&n.t0.reason,d.status=n.t0&&n.t0.code,d.url=n.t0&&n.t0.serverResponse&&n.t0.serverResponse.url,e.gatewayClient.dispatchEvent(d),n.t0;case 26:return e.liveStreaming.pushStates[i]={transcodingEnabled:a,url:i},n.abrupt("return",c);case 28:case"end":return n.stop()}},n,this,[[7,18]])})),function(e,t){return l.apply(this,arguments)}),e.setLiveTranscoding=function(n,i){o.default.debug("setLiveTranscoding: ".concat(JSON.stringify(n))),Object(W.checkValidObject)(n,"transcoding");var a=n,r=a.width,c=a.height,d=a.videoBitrate,u=a.videoFramerate,l=a.lowLatency,f=a.audioSampleRate,p=a.audioBitrate,m=a.audioChannels,g=a.videoGop,v=a.images,S=a.videoCodecProfile,h=a.userCount,_=a.backgroundColor,E=a.transcodingUsers;if(E||(E=n.userConfigs),Object(W.isEmpty)(r)||Object(W.checkValidNumber)(r,"width"),Object(W.isEmpty)(c)||Object(W.checkValidNumber)(c,"height"),Object(W.isEmpty)(d)||Object(W.checkValidNumber)(d,"videoBitrate",1,1e6),Object(W.isEmpty)(u)||Object(W.checkValidNumber)(u,"videoFramerate"),Object(W.isEmpty)(l)||Object(W.checkValidBoolean)(l,"lowLatency"),Object(W.isEmpty)(f)||Object(W.checkValidEnum)(f,"audioSampleRate",[32e3,44100,48e3]),Object(W.isEmpty)(p)||Object(W.checkValidNumber)(p,"audioBitrate",1,128),Object(W.isEmpty)(m)||Object(W.checkValidEnum)(m,"audioChannels",[1,2,3,4,5]),Object(W.isEmpty)(g)||Object(W.checkValidNumber)(g,"videoGop"),Object(W.isEmpty)(S)||Object(W.checkValidEnum)(S,"videoCodecProfile",[66,77,100]),Object(W.isEmpty)(h)||Object(W.checkValidNumber)(h,"userCount",0,17),Object(W.isEmpty)(_)||Object(W.checkValidNumber)(_,"backgroundColor",0,16777215),!Object(W.isEmpty)(E)){if(!Object(W.isArray)(E))throw new Error("[transcodingUsers]: transcodingUsers should be Array");if(E.length>17)throw new Error("The length of transcodingUsers cannot greater than 17");E.map(function(e,t){if(!Object(W.isEmpty)(e.uid)&&!Tt(e.uid)&&!Object(W.isValidString)(e.uid,1,255))throw new Error("[String uid] Length of the string: [1,255]. ASCII characters only. [Number uid] The value range is [0,10000]");if(Object(W.isEmpty)(e.x)||Object(W.checkValidNumber)(e.x,"transcodingUser[".concat(t,"].x"),0,1e4),Object(W.isEmpty)(e.y)||Object(W.checkValidNumber)(e.y,"transcodingUser[".concat(t,"].y"),0,1e4),Object(W.isEmpty)(e.width)||Object(W.checkValidNumber)(e.width,"transcodingUser[".concat(t,"].width"),0,1e4),Object(W.isEmpty)(e.height)||Object(W.checkValidNumber)(e.height,"transcodingUser[".concat(t,"].height"),0,1e4),Object(W.isEmpty)(e.zOrder)||Object(W.checkValidNumber)(e.zOrder,"transcodingUser[".concat(t,"].zOrder"),0,100),!(Object(W.isEmpty)(e.alpha)||Object(W.isNumber)(e.alpha)&&e.alpha<=1&&e.alpha>=0))throw new Error("transcodingUser[${index}].alpha: The value range is [0, 1]")})}if(!Object(W.isEmpty)(v)){if(!Object(W.isArray)(v))throw new Error("[images]: images should be Array");v.map(function(e,t){if(Object(W.checkValidString)(e.url,"images[".concat(t,"].url"),1,1024),Object(W.isEmpty)(e.x)?e.x=0:Object(W.checkValidNumber)(e.x,"images[".concat(t,"].x"),0,1e4),Object(W.isEmpty)(e.y)?e.y=0:Object(W.checkValidNumber)(e.y,"images[".concat(t,"].y"),0,1e4),Object(W.isEmpty)(e.width)?e.width=160:Object(W.checkValidNumber)(e.width,"images[".concat(t,"].width"),0,1e4),Object(W.isEmpty)(e.height)?e.height=160:Object(W.checkValidNumber)(e.height,"images[".concat(t,"].height"),0,1e4),Object(W.isEmpty)(e.zOrder)?e.zOrder=0:Object(W.checkValidNumber)(e.zOrder,"images[".concat(t,"].zOrder"),0,100),Object(W.isEmpty)(e.alpha))e.alpha=1;else if(!(Object(W.isNumber)(e.alpha)&&e.alpha<=1&&e.alpha>=0))throw new Error("image[${index}].alpha: The value range is [0, 1]")})}var I=s.b.reportApiInvoke(t.sessionId,{name:"Client.setLiveTranscoding",options:arguments,tag:"tracer"});if((n=JSON.parse(JSON.stringify(n))).transcodingUsers&&(n.userConfigs=n.transcodingUsers,delete n.transcodingUsers),e.joinInfo.stringUid&&n.userConfigs&&n.userConfigs.length){var T=[];n.userConfigs.forEach(function(t){T.push(Ge(e.joinInfo,e.gatewayClient,t.uid).then(function(e){t.uid=e.uid}))});var y=Promise.all(T).then(function(){return e._setLiveTranscoding(n,i)});return y.then(function(e){I(null,e)}).catch(function(e){I(e)}),y}var b=e._setLiveTranscoding(n,i);return b.then(function(e){I(null,e)}).catch(function(e){I(e)}),b},e._setLiveTranscoding=(u=K()(Y.a.mark(function t(n,i){var a,r,o;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(e.liveStreaming.transcodingConfig=h()(e.liveStreaming.transcodingConfig,n),"boolean"!=typeof i&&(i=!!e.liveStreaming.connections.mix_streaming),a=JSON.parse(JSON.stringify({allocate:!1,clientRequest:{command:"UpdateTranscoding",transcodingConfig:e.liveStreaming.transcodingConfig},command:"request"})),r={},!i){t.next=16;break}return e.liveStreaming.connections.mix_streaming||e.liveStreaming.connect("mix_streaming"),t.next=8,e.liveStreaming.connections.mix_streaming.request(a);case 8:return o=t.sent,r.type="liveTranscodingUpdated",r.reason=o.reason,r.status=o.code,e.gatewayClient.dispatchEvent(r),t.abrupt("return",o);case 16:return t.abrupt("return",{code:200,reason:"success"});case 17:case"end":return t.stop()}},t,this)})),function(e,t){return u.apply(this,arguments)}),e.stopLiveStreaming=function(n,i){Object(W.checkValidString)(n,"url",1,1024);var a=s.b.reportApiInvoke(t.sessionId,{name:"Client.stopLiveStreaming",options:arguments,tag:"tracer"}),r=e._stopLiveStreaming(n,i);return r.then(function(e){a(null,e)}).catch(function(e){a(e)}),r},e._stopLiveStreaming=(d=K()(Y.a.mark(function t(n,i,a){var r,o,s,c,d,u;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return r=null,o=e.liveStreaming.pushStates[n],r=o?o.transcodingEnabled?"mix_streaming":"raw_streaming":i?"mix_streaming":"raw_streaming",s={allocate:!1,clientRequest:{command:"UnpublishStream",url:n},command:"request"},e.liveStreaming.connections[r]||e.liveStreaming.connect(r),c=null,t.prev=6,t.next=9,e.liveStreaming.connections[r].request(s);case 9:c=t.sent,(d={}).type="liveStreamingStopped",d.reason=c&&c.reason,d.status=c&&c.code,d.url=c&&c.serverResponse&&c.serverResponse.url,e.gatewayClient.dispatchEvent(d),t.next=27;break;case 18:throw t.prev=18,t.t0=t.catch(6),(u={}).type="liveStreamingStopped",u.reason=t.t0&&t.t0.reason,u.status=t.t0&&t.t0.code,u.url=t.t0&&t.t0.serverResponse&&t.t0.serverResponse.url,e.gatewayClient.dispatchEvent(u),t.t0;case 27:return a||delete e.liveStreaming.pushStates[n],t.abrupt("return",c);case 29:case"end":return t.stop()}},t,this,[[6,18]])})),function(e,t,n){return d.apply(this,arguments)}),e.liveStreaming.injectStreamTranscodingConfig={autoDestroyTime:30,audioBitrate:48,audioChannels:1,audioSampleRate:44100,height:0,videoBitrate:400,videoFramerate:15,videoGop:30,width:0},e.addInjectStreamUrl=function(i,a){Object(W.checkValidString)(i,"url",1,1024),Object(W.checkValidObject)(a,"config"),!Object(W.isEmpty)(a&&a.width)&&Object(W.checkValidNumber)(a.width,"config.width",0,1e4),!Object(W.isEmpty)(a&&a.height)&&Object(W.checkValidNumber)(a.height,"config.height",0,1e4),!Object(W.isEmpty)(a&&a.videoGop)&&Object(W.checkValidNumber)(a.videoGop,"config.videoGop",1,1e4),!Object(W.isEmpty)(a&&a.videoFramerate)&&Object(W.checkValidNumber)(a.videoFramerate,"config.videoFramerate",1,1e4),!Object(W.isEmpty)(a&&a.videoBitrate)&&Object(W.checkValidNumber)(a.videoBitrate,"config.videoBitrate",1,1e4),!Object(W.isEmpty)(a&&a.audioSampleRate)&&Object(W.checkValidEnum)(a.audioSampleRate,"config.audioSampleRate",[32e3,44100,48e3]),!Object(W.isEmpty)(a&&a.audioBitrate)&&Object(W.checkValidNumber)(a.audioBitrate,"config.audioBitrate",1,1e4),!Object(W.isEmpty)(a&&a.audioChannels)&&Object(W.checkValidNumber)(a.audioChannels,"config.audioChannels",1,2);var r=s.b.reportApiInvoke(t.sessionId,{name:"Client.addInjectStreamUrl",options:n,tag:"tracer"});if("audience"===e.gatewayClient.role){var o={code:403,reason:"AUDIENCE_INJECTING_FORBIDDEN"};throw r(o),o}var c=e._addInjectStreamUrl(i,a);return c.then(function(e){r(null,e)}).catch(function(e){r(e)}),c},e._addInjectStreamUrl=(r=K()(Y.a.mark(function n(i,a){var r,o,s,c,d;return Y.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return r=h()({},e.liveStreaming.injectStreamTranscodingConfig,a),o={allocate:!0,clientRequest:{cname:e.channel,command:"InjectStream",sid:t.sessionId,transcodingConfig:r,ts:Date.now(),url:i,vid:parseInt(e.joinInfo.vid,10)},command:"request"},e.liveStreaming.connections.inject_streaming||e.liveStreaming.connect("inject_streaming"),s=null,n.prev=4,n.next=7,e.liveStreaming.connections.inject_streaming.request(o);case 7:s=n.sent,c={reason:s&&s.reason,status:yt(s&&s.code),type:"streamInjectedStatus",uid:s&&s.serverResponse&&s.serverResponse.inject_uid,url:s&&s.serverResponse&&s.serverResponse.url},e.gatewayClient.dispatchEvent(c),n.next=17;break;case 12:throw n.prev=12,n.t0=n.catch(4),d={reason:n.t0&&n.t0.reason,status:yt(n.t0&&n.t0.code),type:"streamInjectedStatus",uid:n.t0&&n.t0.serverResponse&&n.t0.serverResponse.inject_uid,url:n.t0&&n.t0.serverResponse&&n.t0.serverResponse.url},e.gatewayClient.dispatchEvent(d),n.t0;case 17:return e.liveStreaming.pullStates[i]={transcodingConfig:r,url:i},n.abrupt("return",s);case 19:case"end":return n.stop()}},n,this,[[4,12]])})),function(e,t){return r.apply(this,arguments)}),e.removeInjectStreamUrl=(a=K()(Y.a.mark(function n(i){var a,r,o=arguments;return Y.a.wrap(function(n){for(;;)switch(n.prev=n.next){case 0:return Object(W.checkValidString)(i,"url",1,255),a=s.b.reportApiInvoke(t.sessionId,{name:"Client.removeInjectStreamUrl",options:o,tag:"tracer"}),(r=e._removeInjectStreamUrl(i)).then(function(e){a(null,e)}).catch(function(e){a(e)}),n.abrupt("return",r);case 5:case"end":return n.stop()}},n,this)})),function(e){return a.apply(this,arguments)}),e._removeInjectStreamUrl=(i=K()(Y.a.mark(function t(n){var i,a,r,o;return Y.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return i={allocate:!1,clientRequest:{command:"UninjectStream",url:n},command:"request"},e.liveStreaming.connections.inject_streaming||e.liveStreaming.connect("inject_streaming"),a=null,t.prev=3,t.next=6,e.liveStreaming.connections.inject_streaming.request(i);case 6:a=t.sent,r={reason:a&&a.reason,status:bt(a&&a.code),type:"streamInjectedStatus",uid:a&&a.serverResponse&&a.serverResponse.inject_uid,url:a&&a.serverResponse&&a.serverResponse.url},e.gatewayClient.dispatchEvent(r),t.next=16;break;case 11:throw t.prev=11,t.t0=t.catch(3),o={reason:t.t0&&t.t0.reason,status:bt(t.t0&&t.t0.code),type:"streamInjectedStatus",uid:t.t0&&t.t0.serverResponse&&t.t0.serverResponse.inject_uid,url:t.t0&&t.t0.serverResponse&&t.t0.serverResponse.url},e.gatewayClient.dispatchEvent(o),t.t0;case 16:return delete e.liveStreaming.pullStates[n],t.abrupt("return",a);case 18:case"end":return t.stop()}},t,this,[[3,11]])})),function(e){return i.apply(this,arguments)});var i;var a;var r;var d;var u;var l;var f;var p;var m}(t,e),Object(W.isEmpty)(e.turnServer)||t.setTurnServer(e.turnServer),Object(W.isEmpty)(e.proxyServer)||t.setProxyServer(e.proxyServer),"live"===t.mode&&(t.gatewayClient.role="audience"),"rtc"===t.mode&&(t.gatewayClient.role="host"),t.gatewayClient.on("onMultiIP",function(e){t.gatewayClient.closeGateway(),t.gatewayClient.socket=void 0,t.gatewayClient.hasChangeBGPAddress=!0,t.joinInfo.multiIP=e.option,t.gatewayClient.state=et.CONNECTING;var n=function(e){o.default.info("[".concat(t.clientId,"] Joining channel: ").concat(t.channel)),t.joinInfo.cid=e.cid,t.joinInfo.uid||(t.joinInfo.uid=e.uid),t.joinInfo.uni_lbs_ip=e.uni_lbs_ip,t.joinInfo.gatewayAddr=e.gateway_addr,t.onSuccess?t.gatewayClient.join(t.joinInfo,t.key,function(e){o.default.info("[".concat(t.clientId,"] Join channel ").concat(t.channel," success"));var n=t.onSuccess;t.onSuccess=null,t.onFailure=null,n(e)},t.onFailure):(t.gatewayClient.joinInfo=h()({},t.joinInfo),t.gatewayClient.rejoin())};t.joinInfo.stringUid&&!t.joinInfo.uid?(t.userAccountReq&&!t.userAccountReq.isFinished()&&t.userAccountReq.cancel(),t.userAccountReq=Ge(joinInfo,t.gatewayClient),t.userAccountReq.then(function(e){o.default.error("getUserAccount Success ".concat(e.url," ").concat(joinInfo.stringUid," => ").concat(e.uid)),t.joinInfo.uid=e.uid,He(t.joinInfo,n,t.onFailure)}).catch(function(e){o.default.error("getUserAccount rejected",e),t.onFailure(e)})):He(t.joinInfo,n,t.onFailure)}),t.gatewayClient.on("rejoin-start",function(){t._renewSession(),s.b.sessionInit(e.sessionId,{lts:(new Date).getTime(),extend:{rejoin:!0},cname:t.channel,appid:e.appId,mode:e.mode,succ:!0})}),t.gatewayClient.on("recover",function(){t._renewSession(),console.log("recover",e.sessionId),s.b.sessionInit(e.sessionId,{lts:(new Date).getTime(),extend:{recover:!0},cname:t.channel,appid:e.appId,mode:e.mode,succ:!0})}),t.gatewayClient.on("rejoin",function(){var e=t.highStreamState;if(o.default.debug("[".concat(t.clientId,"] Client local stream preState: ").concat(e)),t.onSuccess){var n=t.onSuccess;t.onSuccess=null,t.onFailure=null,n()}!t.highStream||0!==e&&1!==e||(o.default.info("[".concat(t.clientId,"] publish after rejoin")),t.highStreamState=2,t.lowStreamState=2,t.publish(t.highStream,function(e){e&&o.default.info("[".concat(t.clientId,"] "),e)}))}),t.gatewayClient.on("streamPublished",function(e){t.hasPublished||(t.hasPublished=!0,t.gatewayClient.dispatchEvent(u({type:"stream-published",stream:e.stream})))}),t.gatewayClient.on("pubP2PLost",function(e){o.default.debug("[".concat(t.clientId,"] Start reconnect local peerConnection: ").concat(t.highStream.getId())),t.gatewayClient.dispatchEvent({type:"stream-reconnect-start",uid:t.highStream.getId()}),1===t.highStreamState&&(t.highStreamState=0,t.lowStreamState=0),t._unpublish(t.highStream,function(){t._publish(t.highStream,function(){o.default.debug("[".concat(t.clientId,"] Reconnect local peerConnection success: ").concat(t.highStream.getId())),t.gatewayClient.dispatchEvent({type:"stream-reconnect-end",uid:t.highStream.getId(),success:!0,reason:""})},function(e){o.default.debug("[".concat(t.clientId,"] Reconnect local peerConnection failed: ").concat(e)),t.gatewayClient.dispatchEvent({type:"stream-reconnect-end",uid:t.highStream.getId(),success:!1,reason:e})},!0)},function(e){o.default.debug("[".concat(t.clientId,"] Reconnect local peerConnection failed: ").concat(e)),t.gatewayClient.dispatchEvent({type:"stream-reconnect-end",uid:t.highStream.getId(),success:!1,reason:e})},!0)}),t.gatewayClient.on("subP2PLost",function(e){o.default.debug("[".concat(t.clientId,"] Start reconnect remote peerConnection: ").concat(e.stream.getId()," ").concat(e.stream.subscribeOptions)),t.gatewayClient.dispatchEvent({type:"stream-reconnect-start",uid:e.stream.getId()});var n=e.stream.subscribeOptions;console.log("Re-subscribe stream",n,e.stream),t.gatewayClient.unsubscribe(e.stream,function(){e.stream.subscribeOptions=n,t.gatewayClient.subscribe(e.stream,function(){o.default.debug("[".concat(t.clientId,"] Reconnect remote peerConnection success: ").concat(e.stream.getId())),t.gatewayClient.dispatchEvent({type:"stream-reconnect-end",uid:e.stream.getId(),success:!1,reason:""})},function(n){o.default.debug("[".concat(t.clientId,"] Reconnect remote peerConnection failed: "),n),t.gatewayClient.dispatchEvent({type:"stream-reconnect-end",uid:e.stream.getId(),success:!1,reason:n})})},function(n){o.default.debug("[".concat(t.clientId,"] Reconnect remote peerConnection failed: "),n),t.gatewayClient.dispatchEvent({type:"stream-reconnect-end",uid:e.stream.getId(),success:!1,reason:n})})}),rt.on("networkTypeChanged",function(e){t.gatewayClient&&t.gatewayClient.dispatchEvent(e);var n=h()({},e,{type:"network-type-changed"});t.gatewayClient.dispatchEvent(n)}),H.on("recordingDeviceChanged",function(e){t.gatewayClient&&t.gatewayClient.dispatchEvent(e);var n=h()({},e,{type:"recording-device-changed"});t.gatewayClient.dispatchEvent(n)}),H.on("playoutDeviceChanged",function(e){t.gatewayClient&&t.gatewayClient.dispatchEvent(e);var n=h()({},e,{type:"playout-device-changed"});t.gatewayClient.dispatchEvent(n)}),H.on("cameraChanged",function(e){t.gatewayClient&&t.gatewayClient.dispatchEvent(e);var n=h()({},e,{type:"camera-changed"});t.gatewayClient.dispatchEvent(n)}),t.gatewayClient.on("streamTypeChange",function(n){var i=h()({},n,{type:"stream-type-changed"});t.gatewayClient.dispatchEvent(i),s.b.reportApiInvoke(e.sessionId,{name:"streamTypeChange"})(null,JSON.stringify(n))}),t},Ct={width:640,height:360,videoBitrate:400,videoFramerate:15,lowLatency:!1,audioSampleRate:48e3,audioBitrate:48,audioChannels:1,videoGop:30,videoCodecProfile:100,userCount:0,userConfigExtraInfo:{},backgroundColor:0,transcodingUsers:[]},Nt=H.getDevices,wt=M,kt=JSON.parse(JSON.stringify(r.SUPPORT_RESOLUTION_LIST));n.default={TranscodingUser:{uid:0,x:0,y:0,width:0,height:0,zOrder:0,alpha:1},LiveTranscoding:Ct,createClient:function(e){var t=s.b.reportApiInvoke(null,{name:"createClient",options:arguments,tag:"tracer"});(e=h()({},e||{})).codec||(e.codec=function(e){switch(e){case"h264_interop":return"h264";default:return"vp8"}}(e.mode));var n=function(e){return-1===Re.indexOf(e.mode)?I.default.INVALID_CLIENT_MODE:-1===Ae.indexOf(e.codec)?I.default.INVALID_CLIENT_CODEC:"h264_interop"==e.mode&&"h264"!==e.codec&&I.default.CLIENT_MODE_CODEC_MISMATCH}(e);if(n)throw o.default.error("Invalid parameter setting MODE: ".concat(e.mode," CODEC: ").concat(e.codec," ERROR ").concat(n)),t(n),new Error(n);return o.default.info("Creating client, MODE: ".concat(e.mode," CODEC: ").concat(e.codec)),function(e){switch(e.mode){case"interop":case"h264_interop":e.mode="live";break;case"web-only":e.mode="rtc"}}(e),t(null,e),Ot(e)},createStream:function(e){var t=s.b.reportApiInvoke(null,{name:"createStream",options:arguments,tag:"tracer",getStates:function(){return{audioTrackEnable:e&&e.audioSource?e.audioSource.enabled:null,videoTrackEnable:e&&e.videoSource?e.videoSource.enabled:null}}});Object(W.checkValidObject)(e,"StreamSpec");var n=e.streamID,i=e.audio,a=e.video,r=e.screen,c=e.screenAudio,d=(e.audioSource,e.videoSource,e.cameraId),u=e.facingMode,l=e.microphoneId,f=e.mirror,p=e.extensionId,m=e.mediaSource,g=e.audioProcessing;if(!Object(W.isEmpty)(n)&&!Object(F.is32Uint)(n)&&!Object(W.isValidString)(n,1,255))throw new Error("[String streamID] Length of the string: [1,255]. ASCII characters only. [Number streamID] The value range is Uint32");if(Object(W.checkValidBoolean)(i,"audio"),Object(W.checkValidBoolean)(a,"video"),Object(W.isEmpty)(r)||Object(W.checkValidBoolean)(r,"screen"),Object(W.isEmpty)(c)||Object(W.checkValidBoolean)(c,"screenAudio"),Object(W.isEmpty)(d)||Object(W.checkValidString)(d,"cameraId",0,255,!1),Object(W.isEmpty)(u)||Object(W.checkValidEnum)(u,"facingMode",["user","environment","left","right"]),Object(W.isEmpty)(l)||Object(W.checkValidString)(l,"microphoneId",0,255,!1),Object(W.isEmpty)(p)||Object(W.checkValidString)(p,"extensionId"),Object(W.isEmpty)(m)||Object(W.checkValidEnum)(m,"mediaSource",["screen","application","window"]),Object(W.isEmpty)(f)||Object(W.checkValidBoolean)(f,"mirror"),!Object(W.isEmpty)(g)){var v=g.AGC,S=g.AEC,h=g.ANS;Object(W.isEmpty)(v)||Object(W.checkValidBoolean)(v,"AGC"),Object(W.isEmpty)(S)||Object(W.checkValidBoolean)(S,"AEC"),Object(W.isEmpty)(h)||Object(W.checkValidBoolean)(h,"ANS")}o.default.debug("Create stream"),!0===c&&!0===i&&o.default.warning("Do not set both 'screenAudio' and 'audio' to true at the same time");var _=Ie(e);return t(),_},Logger:o.default,report:s.b,getDevices:Nt,getScreenSources:wt,getParameter:r.getParameter,setParameter:r.setParameter,checkSystemRequirements:function(){var e=s.b.reportApiInvoke(null,{name:"checkSystemRequirements",options:arguments,tag:"tracer"}),t=window.RTCPeerConnection||window.mozRTCPeerConnection||window.webkitRTCPeerConnection,n=navigator.getUserMedia||navigator.webkitGetUserMedia||navigator.msGetUserMedia||navigator.mozGetUserMedia||navigator.mediaDevices&&navigator.mediaDevices.getUserMedia,i=window.WebSocket,a=!!t&&!!n&&!!i,r=!1;o.default.debug(m.getBrowserInfo(),"isAPISupport:"+a),m.isChrome()&&m.getBrowserVersion()>=58&&"iOS"!==m.getBrowserOS()&&(r=!0),m.isFireFox()&&m.getBrowserVersion()>=56&&(r=!0),m.isOpera()&&m.getBrowserVersion()>=45&&(r=!0),m.isSafari()&&m.getBrowserVersion()>=11&&(r=!0),m.isEdge()&&(r=!0),(m.isWeChatBrowser()||m.isQQBrowser())&&"iOS"!==m.getBrowserOS()&&(r=!0),m.isSupportedPC()||m.isSupportedMobile()||(r=!1);var c=a&&r;return e(null,c),c},getSupportedCodec:Te.getSupportedCodec,ChannelMediaRelayConfiguration:ye.ChannelMediaRelayConfiguration,VERSION:r.VERSION,BUILD:r.BUILD,PROFILE_TABLE:kt,AUDIO_SAMPLE_RATE_32000:32e3,AUDIO_SAMPLE_RATE_44100:44100,AUDIO_SAMPLE_RATE_48000:48e3,VIDEO_CODEC_PROFILE_BASELINE:66,VIDEO_CODEC_PROFILE_MAIN:77,VIDEO_CODEC_PROFILE_HIGH:100,REMOTE_VIDEO_STREAM_HIGH:0,REMOTE_VIDEO_STREAM_LOW:1,REMOTE_VIDEO_STREAM_MEDIUM:2}}]).default});
/*! @preserve
 * AgoraRTM Web SDK 1.2.2 - commit: v1.2.2-0-gb428acc
 * Copyright (C) 2018-2020 Agora Lab.
 * This file is licensed under the AGORA, INC. SDK LICENSE AGREEMENT
 * A copy of this license may be found at https://www.agora.io/en/sdk-license-agreement/
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):(e=e||self).AgoraRTM=t()}(this,function(){"use strict";var commonjsGlobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{};function unwrapExports(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function createCommonjsModule(e,t){return e(t={exports:{}},t.exports),t.exports}var _global=createCommonjsModule(function(e){var t=e.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=t)}),_core=createCommonjsModule(function(e){var t=e.exports={version:"2.6.9"};"number"==typeof __e&&(__e=t)}),_core_1=_core.version,_isObject=function(e){return"object"==typeof e?null!==e:"function"==typeof e},_anObject=function(e){if(!_isObject(e))throw TypeError(e+" is not an object!");return e},_fails=function(e){try{return!!e()}catch(e){return!0}},_descriptors=!_fails(function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}),document$1=_global.document,is=_isObject(document$1)&&_isObject(document$1.createElement),_domCreate=function(e){return is?document$1.createElement(e):{}},_ie8DomDefine=!_descriptors&&!_fails(function(){return 7!=Object.defineProperty(_domCreate("div"),"a",{get:function(){return 7}}).a}),_toPrimitive=function(e,t){if(!_isObject(e))return e;var r,n;if(t&&"function"==typeof(r=e.toString)&&!_isObject(n=r.call(e)))return n;if("function"==typeof(r=e.valueOf)&&!_isObject(n=r.call(e)))return n;if(!t&&"function"==typeof(r=e.toString)&&!_isObject(n=r.call(e)))return n;throw TypeError("Can't convert object to primitive value")},dP=Object.defineProperty,f=_descriptors?Object.defineProperty:function(e,t,r){if(_anObject(e),t=_toPrimitive(t,!0),_anObject(r),_ie8DomDefine)try{return dP(e,t,r)}catch(e){}if("get"in r||"set"in r)throw TypeError("Accessors not supported!");return"value"in r&&(e[t]=r.value),e},_objectDp={f:f},_propertyDesc=function(e,t){return{enumerable:!(1&e),configurable:!(2&e),writable:!(4&e),value:t}},_hide=_descriptors?function(e,t,r){return _objectDp.f(e,t,_propertyDesc(1,r))}:function(e,t,r){return e[t]=r,e},hasOwnProperty={}.hasOwnProperty,_has=function(e,t){return hasOwnProperty.call(e,t)},id=0,px=Math.random(),_uid=function(e){return"Symbol(".concat(void 0===e?"":e,")_",(++id+px).toString(36))},_library=!1,_shared=createCommonjsModule(function(e){var t=_global["__core-js_shared__"]||(_global["__core-js_shared__"]={});(e.exports=function(e,r){return t[e]||(t[e]=void 0!==r?r:{})})("versions",[]).push({version:_core.version,mode:"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})}),_functionToString=_shared("native-function-to-string",Function.toString),_redefine=createCommonjsModule(function(e){var t=_uid("src"),r=(""+_functionToString).split("toString");_core.inspectSource=function(e){return _functionToString.call(e)},(e.exports=function(e,n,o,i){var s="function"==typeof o;s&&(_has(o,"name")||_hide(o,"name",n)),e[n]!==o&&(s&&(_has(o,t)||_hide(o,t,e[n]?""+e[n]:r.join(String(n)))),e===_global?e[n]=o:i?e[n]?e[n]=o:_hide(e,n,o):(delete e[n],_hide(e,n,o)))})(Function.prototype,"toString",function(){return"function"==typeof this&&this[t]||_functionToString.call(this)})}),_aFunction=function(e){if("function"!=typeof e)throw TypeError(e+" is not a function!");return e},_ctx=function(e,t,r){if(_aFunction(e),void 0===t)return e;switch(r){case 1:return function(r){return e.call(t,r)};case 2:return function(r,n){return e.call(t,r,n)};case 3:return function(r,n,o){return e.call(t,r,n,o)}}return function(){return e.apply(t,arguments)}},PROTOTYPE="prototype",$export=function(e,t,r){var n,o,i,s,a=e&$export.F,u=e&$export.G,l=e&$export.S,c=e&$export.P,p=e&$export.B,f=u?_global:l?_global[t]||(_global[t]={}):(_global[t]||{})[PROTOTYPE],d=u?_core:_core[t]||(_core[t]={}),g=d[PROTOTYPE]||(d[PROTOTYPE]={});for(n in u&&(r=t),r)i=((o=!a&&f&&void 0!==f[n])?f:r)[n],s=p&&o?_ctx(i,_global):c&&"function"==typeof i?_ctx(Function.call,i):i,f&&_redefine(f,n,i,e&$export.U),d[n]!=i&&_hide(d,n,s),c&&g[n]!=i&&(g[n]=i)};_global.core=_core,$export.F=1,$export.G=2,$export.S=4,$export.P=8,$export.B=16,$export.W=32,$export.U=64,$export.R=128;var _export=$export,toString={}.toString,_cof=function(e){return toString.call(e).slice(8,-1)},_iobject=Object("z").propertyIsEnumerable(0)?Object:function(e){return"String"==_cof(e)?e.split(""):Object(e)},_defined=function(e){if(null==e)throw TypeError("Can't call method on  "+e);return e},_toIobject=function(e){return _iobject(_defined(e))},ceil=Math.ceil,floor=Math.floor,_toInteger=function(e){return isNaN(e=+e)?0:(e>0?floor:ceil)(e)},min=Math.min,_toLength=function(e){return e>0?min(_toInteger(e),9007199254740991):0},max=Math.max,min$1=Math.min,_toAbsoluteIndex=function(e,t){return(e=_toInteger(e))<0?max(e+t,0):min$1(e,t)},_arrayIncludes=function(e){return function(t,r,n){var o,i=_toIobject(t),s=_toLength(i.length),a=_toAbsoluteIndex(n,s);if(e&&r!=r){for(;s>a;)if((o=i[a++])!=o)return!0}else for(;s>a;a++)if((e||a in i)&&i[a]===r)return e||a||0;return!e&&-1}},shared=_shared("keys"),_sharedKey=function(e){return shared[e]||(shared[e]=_uid(e))},arrayIndexOf=_arrayIncludes(!1),IE_PROTO=_sharedKey("IE_PROTO"),_objectKeysInternal=function(e,t){var r,n=_toIobject(e),o=0,i=[];for(r in n)r!=IE_PROTO&&_has(n,r)&&i.push(r);for(;t.length>o;)_has(n,r=t[o++])&&(~arrayIndexOf(i,r)||i.push(r));return i},_enumBugKeys="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(","),_objectKeys=Object.keys||function(e){return _objectKeysInternal(e,_enumBugKeys)},f$1={}.propertyIsEnumerable,_objectPie={f:f$1},isEnum=_objectPie.f,_objectToArray=function(e){return function(t){for(var r,n=_toIobject(t),o=_objectKeys(n),i=o.length,s=0,a=[];i>s;)r=o[s++],_descriptors&&!isEnum.call(n,r)||a.push(e?[r,n[r]]:n[r]);return a}},$entries=_objectToArray(!0);_export(_export.S,"Object",{entries:function(e){return $entries(e)}});var _stringRepeat=function(e){var t=String(_defined(this)),r="",n=_toInteger(e);if(n<0||n==1/0)throw RangeError("Count can't be negative");for(;n>0;(n>>>=1)&&(t+=t))1&n&&(r+=t);return r},_stringPad=function(e,t,r,n){var o=String(_defined(e)),i=o.length,s=void 0===r?" ":String(r),a=_toLength(t);if(a<=i||""==s)return o;var u=a-i,l=_stringRepeat.call(s,Math.ceil(u/s.length));return l.length>u&&(l=l.slice(0,u)),n?l+o:o+l},navigator$1=_global.navigator,_userAgent=navigator$1&&navigator$1.userAgent||"",WEBKIT_BUG=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(_userAgent);_export(_export.P+_export.F*WEBKIT_BUG,"String",{padEnd:function(e){return _stringPad(this,e,arguments.length>1?arguments[1]:void 0,!1)}});var WEBKIT_BUG$1=/Version\/10\.\d+(\.\d+)?( Mobile\/\w+)? Safari\//.test(_userAgent);_export(_export.P+_export.F*WEBKIT_BUG$1,"String",{padStart:function(e){return _stringPad(this,e,arguments.length>1?arguments[1]:void 0,!0)}});var _wks=createCommonjsModule(function(e){var t=_shared("wks"),r=_global.Symbol,n="function"==typeof r;(e.exports=function(e){return t[e]||(t[e]=n&&r[e]||(n?r:_uid)("Symbol."+e))}).store=t}),MATCH=_wks("match"),_isRegexp=function(e){var t;return _isObject(e)&&(void 0!==(t=e[MATCH])?!!t:"RegExp"==_cof(e))},_stringContext=function(e,t,r){if(_isRegexp(t))throw TypeError("String#"+r+" doesn't accept regex!");return String(_defined(e))},MATCH$1=_wks("match"),_failsIsRegexp=function(e){var t=/./;try{"/./"[e](t)}catch(r){try{return t[MATCH$1]=!1,!"/./"[e](t)}catch(e){}}return!0},STARTS_WITH="startsWith",$startsWith=""[STARTS_WITH];_export(_export.P+_export.F*_failsIsRegexp(STARTS_WITH),"String",{startsWith:function(e){var t=_stringContext(this,e,STARTS_WITH),r=_toLength(Math.min(arguments.length>1?arguments[1]:void 0,t.length)),n=String(e);return $startsWith?$startsWith.call(t,n,r):t.slice(r,r+n.length)===n}});var ENDS_WITH="endsWith",$endsWith=""[ENDS_WITH];_export(_export.P+_export.F*_failsIsRegexp(ENDS_WITH),"String",{endsWith:function(e){var t=_stringContext(this,e,ENDS_WITH),r=arguments.length>1?arguments[1]:void 0,n=_toLength(t.length),o=void 0===r?n:Math.min(_toLength(r),n),i=String(e);return $endsWith?$endsWith.call(t,i,o):t.slice(o-i.length,o)===i}});var UNSCOPABLES=_wks("unscopables"),ArrayProto=Array.prototype;null==ArrayProto[UNSCOPABLES]&&_hide(ArrayProto,UNSCOPABLES,{});var _addToUnscopables=function(e){ArrayProto[UNSCOPABLES][e]=!0},$includes=_arrayIncludes(!0);_export(_export.P,"Array",{includes:function(e){return $includes(this,e,arguments.length>1?arguments[1]:void 0)}}),_addToUnscopables("includes");var _toObject=function(e){return Object(_defined(e))},_iterCall=function(e,t,r,n){try{return n?t(_anObject(r)[0],r[1]):t(r)}catch(t){var o=e.return;throw void 0!==o&&_anObject(o.call(e)),t}},_iterators={},ITERATOR=_wks("iterator"),ArrayProto$1=Array.prototype,_isArrayIter=function(e){return void 0!==e&&(_iterators.Array===e||ArrayProto$1[ITERATOR]===e)},_createProperty=function(e,t,r){t in e?_objectDp.f(e,t,_propertyDesc(0,r)):e[t]=r},TAG=_wks("toStringTag"),ARG="Arguments"==_cof(function(){return arguments}()),tryGet=function(e,t){try{return e[t]}catch(e){}},_classof=function(e){var t,r,n;return void 0===e?"Undefined":null===e?"Null":"string"==typeof(r=tryGet(t=Object(e),TAG))?r:ARG?_cof(t):"Object"==(n=_cof(t))&&"function"==typeof t.callee?"Arguments":n},ITERATOR$1=_wks("iterator"),core_getIteratorMethod=_core.getIteratorMethod=function(e){if(null!=e)return e[ITERATOR$1]||e["@@iterator"]||_iterators[_classof(e)]},ITERATOR$2=_wks("iterator"),SAFE_CLOSING=!1;try{var riter=[7][ITERATOR$2]();riter.return=function(){SAFE_CLOSING=!0},Array.from(riter,function(){throw 2})}catch(e){}var _iterDetect=function(e,t){if(!t&&!SAFE_CLOSING)return!1;var r=!1;try{var n=[7],o=n[ITERATOR$2]();o.next=function(){return{done:r=!0}},n[ITERATOR$2]=function(){return o},e(n)}catch(e){}return r};_export(_export.S+_export.F*!_iterDetect(function(e){Array.from(e)}),"Array",{from:function(e){var t,r,n,o,i=_toObject(e),s="function"==typeof this?this:Array,a=arguments.length,u=a>1?arguments[1]:void 0,l=void 0!==u,c=0,p=core_getIteratorMethod(i);if(l&&(u=_ctx(u,a>2?arguments[2]:void 0,2)),null==p||s==Array&&_isArrayIter(p))for(r=new s(t=_toLength(i.length));t>c;c++)_createProperty(r,c,l?u(i[c],c):i[c]);else for(o=p.call(i),r=new s;!(n=o.next()).done;c++)_createProperty(r,c,l?_iterCall(o,u,[n.value,c],!0):n.value);return r.length=c,r}});var INCLUDES="includes";_export(_export.P+_export.F*_failsIsRegexp(INCLUDES),"String",{includes:function(e){return!!~_stringContext(this,e,INCLUDES).indexOf(e,arguments.length>1?arguments[1]:void 0)}});var _sameValue=Object.is||function(e,t){return e===t?0!==e||1/e==1/t:e!=e&&t!=t},builtinExec=RegExp.prototype.exec,_regexpExecAbstract=function(e,t){var r=e.exec;if("function"==typeof r){var n=r.call(e,t);if("object"!=typeof n)throw new TypeError("RegExp exec method returned something other than an Object or null");return n}if("RegExp"!==_classof(e))throw new TypeError("RegExp#exec called on incompatible receiver");return builtinExec.call(e,t)},_flags=function(){var e=_anObject(this),t="";return e.global&&(t+="g"),e.ignoreCase&&(t+="i"),e.multiline&&(t+="m"),e.unicode&&(t+="u"),e.sticky&&(t+="y"),t},nativeExec=RegExp.prototype.exec,nativeReplace=String.prototype.replace,patchedExec=nativeExec,LAST_INDEX="lastIndex",UPDATES_LAST_INDEX_WRONG=function(){var e=/a/,t=/b*/g;return nativeExec.call(e,"a"),nativeExec.call(t,"a"),0!==e[LAST_INDEX]||0!==t[LAST_INDEX]}(),NPCG_INCLUDED=void 0!==/()??/.exec("")[1],PATCH=UPDATES_LAST_INDEX_WRONG||NPCG_INCLUDED;PATCH&&(patchedExec=function(e){var t,r,n,o,i=this;return NPCG_INCLUDED&&(r=new RegExp("^"+i.source+"$(?!\\s)",_flags.call(i))),UPDATES_LAST_INDEX_WRONG&&(t=i[LAST_INDEX]),n=nativeExec.call(i,e),UPDATES_LAST_INDEX_WRONG&&n&&(i[LAST_INDEX]=i.global?n.index+n[0].length:t),NPCG_INCLUDED&&n&&n.length>1&&nativeReplace.call(n[0],r,function(){for(o=1;o<arguments.length-2;o++)void 0===arguments[o]&&(n[o]=void 0)}),n});var _regexpExec=patchedExec;_export({target:"RegExp",proto:!0,forced:_regexpExec!==/./.exec},{exec:_regexpExec});var SPECIES=_wks("species"),REPLACE_SUPPORTS_NAMED_GROUPS=!_fails(function(){var e=/./;return e.exec=function(){var e=[];return e.groups={a:"7"},e},"7"!=="".replace(e,"$<a>")}),SPLIT_WORKS_WITH_OVERWRITTEN_EXEC=function(){var e=/(?:)/,t=e.exec;e.exec=function(){return t.apply(this,arguments)};var r="ab".split(e);return 2===r.length&&"a"===r[0]&&"b"===r[1]}(),_fixReWks=function(e,t,r){var n=_wks(e),o=!_fails(function(){var t={};return t[n]=function(){return 7},7!=""[e](t)}),i=o?!_fails(function(){var t=!1,r=/a/;return r.exec=function(){return t=!0,null},"split"===e&&(r.constructor={},r.constructor[SPECIES]=function(){return r}),r[n](""),!t}):void 0;if(!o||!i||"replace"===e&&!REPLACE_SUPPORTS_NAMED_GROUPS||"split"===e&&!SPLIT_WORKS_WITH_OVERWRITTEN_EXEC){var s=/./[n],a=r(_defined,n,""[e],function(e,t,r,n,i){return t.exec===_regexpExec?o&&!i?{done:!0,value:s.call(t,r,n)}:{done:!0,value:e.call(r,t,n)}:{done:!1}}),u=a[0],l=a[1];_redefine(String.prototype,e,u),_hide(RegExp.prototype,n,2==t?function(e,t){return l.call(e,this,t)}:function(e){return l.call(e,this)})}};_fixReWks("search",1,function(e,t,r,n){return[function(r){var n=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},function(e){var t=n(r,e,this);if(t.done)return t.value;var o=_anObject(e),i=String(this),s=o.lastIndex;_sameValue(s,0)||(o.lastIndex=0);var a=_regexpExecAbstract(o,i);return _sameValue(o.lastIndex,s)||(o.lastIndex=s),null===a?-1:a.index}]});var SPECIES$1=_wks("species"),_speciesConstructor=function(e,t){var r,n=_anObject(e).constructor;return void 0===n||null==(r=_anObject(n)[SPECIES$1])?t:_aFunction(r)},_stringAt=function(e){return function(t,r){var n,o,i=String(_defined(t)),s=_toInteger(r),a=i.length;return s<0||s>=a?e?"":void 0:(n=i.charCodeAt(s))<55296||n>56319||s+1===a||(o=i.charCodeAt(s+1))<56320||o>57343?e?i.charAt(s):n:e?i.slice(s,s+2):o-56320+(n-55296<<10)+65536}},at=_stringAt(!0),_advanceStringIndex=function(e,t,r){return t+(r?at(e,t).length:1)},$min=Math.min,$push=[].push,$SPLIT="split",LENGTH="length",LAST_INDEX$1="lastIndex",MAX_UINT32=4294967295,SUPPORTS_Y=!_fails(function(){RegExp(MAX_UINT32,"y")});_fixReWks("split",2,function(e,t,r,n){var o;return o="c"=="abbc"[$SPLIT](/(b)*/)[1]||4!="test"[$SPLIT](/(?:)/,-1)[LENGTH]||2!="ab"[$SPLIT](/(?:ab)*/)[LENGTH]||4!="."[$SPLIT](/(.?)(.?)/)[LENGTH]||"."[$SPLIT](/()()/)[LENGTH]>1||""[$SPLIT](/.?/)[LENGTH]?function(e,t){var n=String(this);if(void 0===e&&0===t)return[];if(!_isRegexp(e))return r.call(n,e,t);for(var o,i,s,a=[],u=(e.ignoreCase?"i":"")+(e.multiline?"m":"")+(e.unicode?"u":"")+(e.sticky?"y":""),l=0,c=void 0===t?MAX_UINT32:t>>>0,p=new RegExp(e.source,u+"g");(o=_regexpExec.call(p,n))&&!((i=p[LAST_INDEX$1])>l&&(a.push(n.slice(l,o.index)),o[LENGTH]>1&&o.index<n[LENGTH]&&$push.apply(a,o.slice(1)),s=o[0][LENGTH],l=i,a[LENGTH]>=c));)p[LAST_INDEX$1]===o.index&&p[LAST_INDEX$1]++;return l===n[LENGTH]?!s&&p.test("")||a.push(""):a.push(n.slice(l)),a[LENGTH]>c?a.slice(0,c):a}:"0"[$SPLIT](void 0,0)[LENGTH]?function(e,t){return void 0===e&&0===t?[]:r.call(this,e,t)}:r,[function(r,n){var i=e(this),s=null==r?void 0:r[t];return void 0!==s?s.call(r,i,n):o.call(String(i),r,n)},function(e,t){var i=n(o,e,this,t,o!==r);if(i.done)return i.value;var s=_anObject(e),a=String(this),u=_speciesConstructor(s,RegExp),l=s.unicode,c=(s.ignoreCase?"i":"")+(s.multiline?"m":"")+(s.unicode?"u":"")+(SUPPORTS_Y?"y":"g"),p=new u(SUPPORTS_Y?s:"^(?:"+s.source+")",c),f=void 0===t?MAX_UINT32:t>>>0;if(0===f)return[];if(0===a.length)return null===_regexpExecAbstract(p,a)?[a]:[];for(var d=0,g=0,h=[];g<a.length;){p.lastIndex=SUPPORTS_Y?g:0;var b,_=_regexpExecAbstract(p,SUPPORTS_Y?a:a.slice(g));if(null===_||(b=$min(_toLength(p.lastIndex+(SUPPORTS_Y?0:g)),a.length))===d)g=_advanceStringIndex(a,g,l);else{if(h.push(a.slice(d,g)),h.length===f)return h;for(var y=1;y<=_.length-1;y++)if(h.push(_[y]),h.length===f)return h;g=d=b}}return h.push(a.slice(d)),h}]});var _strictMethod=function(e,t){return!!e&&_fails(function(){t?e.call(null,function(){},1):e.call(null)})},$sort=[].sort,test=[1,2,3];_export(_export.P+_export.F*(_fails(function(){test.sort(void 0)})||!_fails(function(){test.sort(null)})||!_strictMethod($sort)),"Array",{sort:function(e){return void 0===e?$sort.call(_toObject(this)):$sort.call(_toObject(this),_aFunction(e))}});var _iterStep=function(e,t){return{value:t,done:!!e}},_objectDps=_descriptors?Object.defineProperties:function(e,t){_anObject(e);for(var r,n=_objectKeys(t),o=n.length,i=0;o>i;)_objectDp.f(e,r=n[i++],t[r]);return e},document$2=_global.document,_html=document$2&&document$2.documentElement,IE_PROTO$1=_sharedKey("IE_PROTO"),Empty=function(){},PROTOTYPE$1="prototype",createDict=function(){var e,t=_domCreate("iframe"),r=_enumBugKeys.length;for(t.style.display="none",_html.appendChild(t),t.src="javascript:",(e=t.contentWindow.document).open(),e.write("<script>document.F=Object<\/script>"),e.close(),createDict=e.F;r--;)delete createDict[PROTOTYPE$1][_enumBugKeys[r]];return createDict()},_objectCreate=Object.create||function(e,t){var r;return null!==e?(Empty[PROTOTYPE$1]=_anObject(e),r=new Empty,Empty[PROTOTYPE$1]=null,r[IE_PROTO$1]=e):r=createDict(),void 0===t?r:_objectDps(r,t)},def=_objectDp.f,TAG$1=_wks("toStringTag"),_setToStringTag=function(e,t,r){e&&!_has(e=r?e:e.prototype,TAG$1)&&def(e,TAG$1,{configurable:!0,value:t})},IteratorPrototype={};_hide(IteratorPrototype,_wks("iterator"),function(){return this});var _iterCreate=function(e,t,r){e.prototype=_objectCreate(IteratorPrototype,{next:_propertyDesc(1,r)}),_setToStringTag(e,t+" Iterator")},IE_PROTO$2=_sharedKey("IE_PROTO"),ObjectProto=Object.prototype,_objectGpo=Object.getPrototypeOf||function(e){return e=_toObject(e),_has(e,IE_PROTO$2)?e[IE_PROTO$2]:"function"==typeof e.constructor&&e instanceof e.constructor?e.constructor.prototype:e instanceof Object?ObjectProto:null},ITERATOR$3=_wks("iterator"),BUGGY=!([].keys&&"next"in[].keys()),FF_ITERATOR="@@iterator",KEYS="keys",VALUES="values",returnThis=function(){return this},_iterDefine=function(e,t,r,n,o,i,s){_iterCreate(r,t,n);var a,u,l,c=function(e){if(!BUGGY&&e in g)return g[e];switch(e){case KEYS:case VALUES:return function(){return new r(this,e)}}return function(){return new r(this,e)}},p=t+" Iterator",f=o==VALUES,d=!1,g=e.prototype,h=g[ITERATOR$3]||g[FF_ITERATOR]||o&&g[o],b=h||c(o),_=o?f?c("entries"):b:void 0,y="Array"==t&&g.entries||h;if(y&&(l=_objectGpo(y.call(new e)))!==Object.prototype&&l.next&&(_setToStringTag(l,p,!0),"function"!=typeof l[ITERATOR$3]&&_hide(l,ITERATOR$3,returnThis)),f&&h&&h.name!==VALUES&&(d=!0,b=function(){return h.call(this)}),(BUGGY||d||!g[ITERATOR$3])&&_hide(g,ITERATOR$3,b),_iterators[t]=b,_iterators[p]=returnThis,o)if(a={values:f?b:c(VALUES),keys:i?b:c(KEYS),entries:_},s)for(u in a)u in g||_redefine(g,u,a[u]);else _export(_export.P+_export.F*(BUGGY||d),t,a);return a},es6_array_iterator=_iterDefine(Array,"Array",function(e,t){this._t=_toIobject(e),this._i=0,this._k=t},function(){var e=this._t,t=this._k,r=this._i++;return!e||r>=e.length?(this._t=void 0,_iterStep(1)):_iterStep(0,"keys"==t?r:"values"==t?e[r]:[r,e[r]])},"values");_iterators.Arguments=_iterators.Array,_addToUnscopables("keys"),_addToUnscopables("values"),_addToUnscopables("entries");for(var ITERATOR$4=_wks("iterator"),TO_STRING_TAG=_wks("toStringTag"),ArrayValues=_iterators.Array,DOMIterables={CSSRuleList:!0,CSSStyleDeclaration:!1,CSSValueList:!1,ClientRectList:!1,DOMRectList:!1,DOMStringList:!1,DOMTokenList:!0,DataTransferItemList:!1,FileList:!1,HTMLAllCollection:!1,HTMLCollection:!1,HTMLFormElement:!1,HTMLSelectElement:!1,MediaList:!0,MimeTypeArray:!1,NamedNodeMap:!1,NodeList:!0,PaintRequestList:!1,Plugin:!1,PluginArray:!1,SVGLengthList:!1,SVGNumberList:!1,SVGPathSegList:!1,SVGPointList:!1,SVGStringList:!1,SVGTransformList:!1,SourceBufferList:!1,StyleSheetList:!0,TextTrackCueList:!1,TextTrackList:!1,TouchList:!1},collections=_objectKeys(DOMIterables),i=0;i<collections.length;i++){var NAME=collections[i],explicit=DOMIterables[NAME],Collection=_global[NAME],proto=Collection&&Collection.prototype,key;if(proto&&(proto[ITERATOR$4]||_hide(proto,ITERATOR$4,ArrayValues),proto[TO_STRING_TAG]||_hide(proto,TO_STRING_TAG,NAME),_iterators[NAME]=ArrayValues,explicit))for(key in es6_array_iterator)proto[key]||_redefine(proto,key,es6_array_iterator[key],!0)}var dP$1=_objectDp.f,FProto=Function.prototype,nameRE=/^\s*function ([^ (]*)/,NAME$1="name";NAME$1 in FProto||_descriptors&&dP$1(FProto,NAME$1,{configurable:!0,get:function(){try{return(""+this).match(nameRE)[1]}catch(e){return""}}}),_descriptors&&"g"!=/./g.flags&&_objectDp.f(RegExp.prototype,"flags",{configurable:!0,get:_flags});var TO_STRING="toString",$toString=/./[TO_STRING],define=function(e){_redefine(RegExp.prototype,TO_STRING,e,!0)};_fails(function(){return"/a/b"!=$toString.call({source:"a",flags:"b"})})?define(function(){var e=_anObject(this);return"/".concat(e.source,"/","flags"in e?e.flags:!_descriptors&&e instanceof RegExp?_flags.call(e):void 0)}):$toString.name!=TO_STRING&&define(function(){return $toString.call(this)});var test$1={};function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function asyncGeneratorStep(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep(i,n,o,s,a,"throw",e)}s(void 0)})}}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass(e,t,r){return t&&_defineProperties(e.prototype,t),r&&_defineProperties(e,r),e}function _defineProperty(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function ownKeys(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function _objectSpread2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys(r,!0).forEach(function(t){_defineProperty(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _inherits(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf(e,t)}function _getPrototypeOf(e){return(_getPrototypeOf=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _setPrototypeOf(e,t){return(_setPrototypeOf=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function isNativeReflectConstruct(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}function _construct(e,t,r){return(_construct=isNativeReflectConstruct()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&_setPrototypeOf(o,r.prototype),o}).apply(null,arguments)}function _isNativeFunction(e){return-1!==Function.toString.call(e).indexOf("[native code]")}function _wrapNativeSuper(e){var t="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper=function(e){if(null===e||!_isNativeFunction(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return _construct(e,arguments,_getPrototypeOf(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf(r,e)})(e)}function _objectWithoutPropertiesLoose(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}function _objectWithoutProperties(e,t){if(null==e)return{};var r,n,o=_objectWithoutPropertiesLoose(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function _assertThisInitialized(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _possibleConstructorReturn(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?_assertThisInitialized(e):t}function _superPropBase(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_getPrototypeOf(e)););return e}function _get(e,t,r){return(_get="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=_superPropBase(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}})(e,t,r||e)}function _slicedToArray(e,t){return _arrayWithHoles(e)||_iterableToArrayLimit(e,t)||_nonIterableRest()}function _toConsumableArray(e){return _arrayWithoutHoles(e)||_iterableToArray(e)||_nonIterableSpread()}function _arrayWithoutHoles(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _arrayWithHoles(e){if(Array.isArray(e))return e}function _iterableToArray(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _iterableToArrayLimit(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return r}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}test$1[_wks("toStringTag")]="z",test$1+""!="[object z]"&&_redefine(Object.prototype,"toString",function(){return"[object "+_classof(this)+"]"},!0);var max$1=Math.max,min$2=Math.min,floor$1=Math.floor,SUBSTITUTION_SYMBOLS=/\$([$&`']|\d\d?|<[^>]*>)/g,SUBSTITUTION_SYMBOLS_NO_NAMED=/\$([$&`']|\d\d?)/g,maybeToString=function(e){return void 0===e?e:String(e)};_fixReWks("replace",2,function(e,t,r,n){return[function(n,o){var i=e(this),s=null==n?void 0:n[t];return void 0!==s?s.call(n,i,o):r.call(String(i),n,o)},function(e,t){var i=n(r,e,this,t);if(i.done)return i.value;var s=_anObject(e),a=String(this),u="function"==typeof t;u||(t=String(t));var l=s.global;if(l){var c=s.unicode;s.lastIndex=0}for(var p=[];;){var f=_regexpExecAbstract(s,a);if(null===f)break;if(p.push(f),!l)break;""===String(f[0])&&(s.lastIndex=_advanceStringIndex(a,_toLength(s.lastIndex),c))}for(var d="",g=0,h=0;h<p.length;h++){f=p[h];for(var b=String(f[0]),_=max$1(min$2(_toInteger(f.index),a.length),0),y=[],m=1;m<f.length;m++)y.push(maybeToString(f[m]));var v=f.groups;if(u){var $=[b].concat(y,_,a);void 0!==v&&$.push(v);var E=String(t.apply(void 0,$))}else E=o(b,a,_,y,v,t);_>=g&&(d+=a.slice(g,_)+E,g=_+b.length)}return d+a.slice(g)}];function o(e,t,n,o,i,s){var a=n+e.length,u=o.length,l=SUBSTITUTION_SYMBOLS_NO_NAMED;return void 0!==i&&(i=_toObject(i),l=SUBSTITUTION_SYMBOLS),r.call(s,l,function(r,s){var l;switch(s.charAt(0)){case"$":return"$";case"&":return e;case"`":return t.slice(0,n);case"'":return t.slice(a);case"<":l=i[s.slice(1,-1)];break;default:var c=+s;if(0===c)return r;if(c>u){var p=floor$1(c/10);return 0===p?r:p<=u?void 0===o[p-1]?s.charAt(1):o[p-1]+s.charAt(1):r}l=o[c-1]}return void 0===l?"":l})}});var f$2=_wks,_wksExt={f:f$2},defineProperty=_objectDp.f,_wksDefine=function(e){var t=_core.Symbol||(_core.Symbol=_global.Symbol||{});"_"==e.charAt(0)||e in t||defineProperty(t,e,{value:_wksExt.f(e)})};_wksDefine("asyncIterator");var _meta=createCommonjsModule(function(e){var t=_uid("meta"),r=_objectDp.f,n=0,o=Object.isExtensible||function(){return!0},i=!_fails(function(){return o(Object.preventExtensions({}))}),s=function(e){r(e,t,{value:{i:"O"+ ++n,w:{}}})},a=e.exports={KEY:t,NEED:!1,fastKey:function(e,r){if(!_isObject(e))return"symbol"==typeof e?e:("string"==typeof e?"S":"P")+e;if(!_has(e,t)){if(!o(e))return"F";if(!r)return"E";s(e)}return e[t].i},getWeak:function(e,r){if(!_has(e,t)){if(!o(e))return!0;if(!r)return!1;s(e)}return e[t].w},onFreeze:function(e){return i&&a.NEED&&o(e)&&!_has(e,t)&&s(e),e}}}),_meta_1=_meta.KEY,_meta_2=_meta.NEED,_meta_3=_meta.fastKey,_meta_4=_meta.getWeak,_meta_5=_meta.onFreeze,f$3=Object.getOwnPropertySymbols,_objectGops={f:f$3},_enumKeys=function(e){var t=_objectKeys(e),r=_objectGops.f;if(r)for(var n,o=r(e),i=_objectPie.f,s=0;o.length>s;)i.call(e,n=o[s++])&&t.push(n);return t},_isArray=Array.isArray||function(e){return"Array"==_cof(e)},hiddenKeys=_enumBugKeys.concat("length","prototype"),f$4=Object.getOwnPropertyNames||function(e){return _objectKeysInternal(e,hiddenKeys)},_objectGopn={f:f$4},gOPN=_objectGopn.f,toString$1={}.toString,windowNames="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[],getWindowNames=function(e){try{return gOPN(e)}catch(e){return windowNames.slice()}},f$5=function(e){return windowNames&&"[object Window]"==toString$1.call(e)?getWindowNames(e):gOPN(_toIobject(e))},_objectGopnExt={f:f$5},gOPD=Object.getOwnPropertyDescriptor,f$6=_descriptors?gOPD:function(e,t){if(e=_toIobject(e),t=_toPrimitive(t,!0),_ie8DomDefine)try{return gOPD(e,t)}catch(e){}if(_has(e,t))return _propertyDesc(!_objectPie.f.call(e,t),e[t])},_objectGopd={f:f$6},META=_meta.KEY,gOPD$1=_objectGopd.f,dP$2=_objectDp.f,gOPN$1=_objectGopnExt.f,$Symbol=_global.Symbol,$JSON=_global.JSON,_stringify=$JSON&&$JSON.stringify,PROTOTYPE$2="prototype",HIDDEN=_wks("_hidden"),TO_PRIMITIVE=_wks("toPrimitive"),isEnum$1={}.propertyIsEnumerable,SymbolRegistry=_shared("symbol-registry"),AllSymbols=_shared("symbols"),OPSymbols=_shared("op-symbols"),ObjectProto$1=Object[PROTOTYPE$2],USE_NATIVE="function"==typeof $Symbol&&!!_objectGops.f,QObject=_global.QObject,setter=!QObject||!QObject[PROTOTYPE$2]||!QObject[PROTOTYPE$2].findChild,setSymbolDesc=_descriptors&&_fails(function(){return 7!=_objectCreate(dP$2({},"a",{get:function(){return dP$2(this,"a",{value:7}).a}})).a})?function(e,t,r){var n=gOPD$1(ObjectProto$1,t);n&&delete ObjectProto$1[t],dP$2(e,t,r),n&&e!==ObjectProto$1&&dP$2(ObjectProto$1,t,n)}:dP$2,wrap=function(e){var t=AllSymbols[e]=_objectCreate($Symbol[PROTOTYPE$2]);return t._k=e,t},isSymbol=USE_NATIVE&&"symbol"==typeof $Symbol.iterator?function(e){return"symbol"==typeof e}:function(e){return e instanceof $Symbol},$defineProperty=function(e,t,r){return e===ObjectProto$1&&$defineProperty(OPSymbols,t,r),_anObject(e),t=_toPrimitive(t,!0),_anObject(r),_has(AllSymbols,t)?(r.enumerable?(_has(e,HIDDEN)&&e[HIDDEN][t]&&(e[HIDDEN][t]=!1),r=_objectCreate(r,{enumerable:_propertyDesc(0,!1)})):(_has(e,HIDDEN)||dP$2(e,HIDDEN,_propertyDesc(1,{})),e[HIDDEN][t]=!0),setSymbolDesc(e,t,r)):dP$2(e,t,r)},$defineProperties=function(e,t){_anObject(e);for(var r,n=_enumKeys(t=_toIobject(t)),o=0,i=n.length;i>o;)$defineProperty(e,r=n[o++],t[r]);return e},$create=function(e,t){return void 0===t?_objectCreate(e):$defineProperties(_objectCreate(e),t)},$propertyIsEnumerable=function(e){var t=isEnum$1.call(this,e=_toPrimitive(e,!0));return!(this===ObjectProto$1&&_has(AllSymbols,e)&&!_has(OPSymbols,e))&&(!(t||!_has(this,e)||!_has(AllSymbols,e)||_has(this,HIDDEN)&&this[HIDDEN][e])||t)},$getOwnPropertyDescriptor=function(e,t){if(e=_toIobject(e),t=_toPrimitive(t,!0),e!==ObjectProto$1||!_has(AllSymbols,t)||_has(OPSymbols,t)){var r=gOPD$1(e,t);return!r||!_has(AllSymbols,t)||_has(e,HIDDEN)&&e[HIDDEN][t]||(r.enumerable=!0),r}},$getOwnPropertyNames=function(e){for(var t,r=gOPN$1(_toIobject(e)),n=[],o=0;r.length>o;)_has(AllSymbols,t=r[o++])||t==HIDDEN||t==META||n.push(t);return n},$getOwnPropertySymbols=function(e){for(var t,r=e===ObjectProto$1,n=gOPN$1(r?OPSymbols:_toIobject(e)),o=[],i=0;n.length>i;)!_has(AllSymbols,t=n[i++])||r&&!_has(ObjectProto$1,t)||o.push(AllSymbols[t]);return o};USE_NATIVE||($Symbol=function(){if(this instanceof $Symbol)throw TypeError("Symbol is not a constructor!");var e=_uid(arguments.length>0?arguments[0]:void 0),t=function(r){this===ObjectProto$1&&t.call(OPSymbols,r),_has(this,HIDDEN)&&_has(this[HIDDEN],e)&&(this[HIDDEN][e]=!1),setSymbolDesc(this,e,_propertyDesc(1,r))};return _descriptors&&setter&&setSymbolDesc(ObjectProto$1,e,{configurable:!0,set:t}),wrap(e)},_redefine($Symbol[PROTOTYPE$2],"toString",function(){return this._k}),_objectGopd.f=$getOwnPropertyDescriptor,_objectDp.f=$defineProperty,_objectGopn.f=_objectGopnExt.f=$getOwnPropertyNames,_objectPie.f=$propertyIsEnumerable,_objectGops.f=$getOwnPropertySymbols,_descriptors&&!_library&&_redefine(ObjectProto$1,"propertyIsEnumerable",$propertyIsEnumerable,!0),_wksExt.f=function(e){return wrap(_wks(e))}),_export(_export.G+_export.W+_export.F*!USE_NATIVE,{Symbol:$Symbol});for(var es6Symbols="hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","),j=0;es6Symbols.length>j;)_wks(es6Symbols[j++]);for(var wellKnownSymbols=_objectKeys(_wks.store),k=0;wellKnownSymbols.length>k;)_wksDefine(wellKnownSymbols[k++]);_export(_export.S+_export.F*!USE_NATIVE,"Symbol",{for:function(e){return _has(SymbolRegistry,e+="")?SymbolRegistry[e]:SymbolRegistry[e]=$Symbol(e)},keyFor:function(e){if(!isSymbol(e))throw TypeError(e+" is not a symbol!");for(var t in SymbolRegistry)if(SymbolRegistry[t]===e)return t},useSetter:function(){setter=!0},useSimple:function(){setter=!1}}),_export(_export.S+_export.F*!USE_NATIVE,"Object",{create:$create,defineProperty:$defineProperty,defineProperties:$defineProperties,getOwnPropertyDescriptor:$getOwnPropertyDescriptor,getOwnPropertyNames:$getOwnPropertyNames,getOwnPropertySymbols:$getOwnPropertySymbols});var FAILS_ON_PRIMITIVES=_fails(function(){_objectGops.f(1)});_export(_export.S+_export.F*FAILS_ON_PRIMITIVES,"Object",{getOwnPropertySymbols:function(e){return _objectGops.f(_toObject(e))}}),$JSON&&_export(_export.S+_export.F*(!USE_NATIVE||_fails(function(){var e=$Symbol();return"[null]"!=_stringify([e])||"{}"!=_stringify({a:e})||"{}"!=_stringify(Object(e))})),"JSON",{stringify:function(e){for(var t,r,n=[e],o=1;arguments.length>o;)n.push(arguments[o++]);if(r=t=n[1],(_isObject(t)||void 0!==e)&&!isSymbol(e))return _isArray(t)||(t=function(e,t){if("function"==typeof r&&(t=r.call(this,e,t)),!isSymbol(t))return t}),n[1]=t,_stringify.apply($JSON,n)}}),$Symbol[PROTOTYPE$2][TO_PRIMITIVE]||_hide($Symbol[PROTOTYPE$2],TO_PRIMITIVE,$Symbol[PROTOTYPE$2].valueOf),_setToStringTag($Symbol,"Symbol"),_setToStringTag(Math,"Math",!0),_setToStringTag(_global.JSON,"JSON",!0),function(e){var t=function(){try{return!!Symbol.iterator}catch(e){return!1}}(),r=function(e){var r={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return t&&(r[Symbol.iterator]=function(){return r}),r},n=function(e){return encodeURIComponent(e).replace(/%20/g,"+")},o=function(e){return decodeURIComponent(String(e).replace(/\+/g," "))};(function(){try{var t=e.URLSearchParams;return"a=1"===new t("?a=1").toString()&&"function"==typeof t.prototype.set}catch(e){return!1}})()||function(){var o=function e(t){Object.defineProperty(this,"_entries",{writable:!0,value:{}});var r=_typeof(t);if("undefined"===r);else if("string"===r)""!==t&&this._fromString(t);else if(t instanceof e){var n=this;t.forEach(function(e,t){n.append(t,e)})}else{if(null===t||"object"!==r)throw new TypeError("Unsupported input's type for URLSearchParams");if("[object Array]"===Object.prototype.toString.call(t))for(var o=0;o<t.length;o++){var i=t[o];if("[object Array]"!==Object.prototype.toString.call(i)&&2===i.length)throw new TypeError("Expected [string, any] as entry at index "+o+" of URLSearchParams's input");this.append(i[0],i[1])}else for(var s in t)t.hasOwnProperty(s)&&this.append(s,t[s])}},i=o.prototype;i.append=function(e,t){e in this._entries?this._entries[e].push(String(t)):this._entries[e]=[String(t)]},i.delete=function(e){delete this._entries[e]},i.get=function(e){return e in this._entries?this._entries[e][0]:null},i.getAll=function(e){return e in this._entries?this._entries[e].slice(0):[]},i.has=function(e){return e in this._entries},i.set=function(e,t){this._entries[e]=[String(t)]},i.forEach=function(e,t){var r;for(var n in this._entries)if(this._entries.hasOwnProperty(n)){r=this._entries[n];for(var o=0;o<r.length;o++)e.call(t,r[o],n,this)}},i.keys=function(){var e=[];return this.forEach(function(t,r){e.push(r)}),r(e)},i.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),r(e)},i.entries=function(){var e=[];return this.forEach(function(t,r){e.push([r,t])}),r(e)},t&&(i[Symbol.iterator]=i.entries),i.toString=function(){var e=[];return this.forEach(function(t,r){e.push(n(r)+"="+n(t))}),e.join("&")},e.URLSearchParams=o}();var i=e.URLSearchParams.prototype;"function"!=typeof i.sort&&(i.sort=function(){var e=this,t=[];this.forEach(function(r,n){t.push([n,r]),e._entries||e.delete(n)}),t.sort(function(e,t){return e[0]<t[0]?-1:e[0]>t[0]?1:0}),e._entries&&(e._entries={});for(var r=0;r<t.length;r++)this.append(t[r][0],t[r][1])}),"function"!=typeof i._fromString&&Object.defineProperty(i,"_fromString",{enumerable:!1,configurable:!1,writable:!1,value:function(e){if(this._entries)this._entries={};else{var t=[];this.forEach(function(e,r){t.push(r)});for(var r=0;r<t.length;r++)this.delete(t[r])}var n,i=(e=e.replace(/^\?/,"")).split("&");for(r=0;r<i.length;r++)n=i[r].split("="),this.append(o(n[0]),n.length>1?o(n[1]):"")}})}(void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof window?window:"undefined"!=typeof self?self:commonjsGlobal),function(e){var t,r,n;if(function(){try{var t=new e.URL("b","http://a");return t.pathname="c%20d","http://a/c%20d"===t.href&&t.searchParams}catch(e){return!1}}()||(t=e.URL,n=(r=function(t,r){"string"!=typeof t&&(t=String(t));var n,o=document;if(r&&(void 0===e.location||r!==e.location.href)){(n=(o=document.implementation.createHTMLDocument("")).createElement("base")).href=r,o.head.appendChild(n);try{if(0!==n.href.indexOf(r))throw new Error(n.href)}catch(e){throw new Error("URL unable to set base "+r+" due to "+e)}}var i=o.createElement("a");if(i.href=t,n&&(o.body.appendChild(i),i.href=i.href),":"===i.protocol||!/:/.test(i.href))throw new TypeError("Invalid URL");Object.defineProperty(this,"_anchorElement",{value:i});var s=new e.URLSearchParams(this.search),a=!0,u=!0,l=this;["append","delete","set"].forEach(function(e){var t=s[e];s[e]=function(){t.apply(s,arguments),a&&(u=!1,l.search=s.toString(),u=!0)}}),Object.defineProperty(this,"searchParams",{value:s,enumerable:!0});var c=void 0;Object.defineProperty(this,"_updateSearchParams",{enumerable:!1,configurable:!1,writable:!1,value:function(){this.search!==c&&(c=this.search,u&&(a=!1,this.searchParams._fromString(this.search),a=!0))}})}).prototype,["hash","host","hostname","port","protocol"].forEach(function(e){!function(e){Object.defineProperty(n,e,{get:function(){return this._anchorElement[e]},set:function(t){this._anchorElement[e]=t},enumerable:!0})}(e)}),Object.defineProperty(n,"search",{get:function(){return this._anchorElement.search},set:function(e){this._anchorElement.search=e,this._updateSearchParams()},enumerable:!0}),Object.defineProperties(n,{toString:{get:function(){var e=this;return function(){return e.href}}},href:{get:function(){return this._anchorElement.href.replace(/\?$/,"")},set:function(e){this._anchorElement.href=e,this._updateSearchParams()},enumerable:!0},pathname:{get:function(){return this._anchorElement.pathname.replace(/(^\/?)/,"/")},set:function(e){this._anchorElement.pathname=e},enumerable:!0},origin:{get:function(){var e={"http:":80,"https:":443,"ftp:":21}[this._anchorElement.protocol],t=this._anchorElement.port!=e&&""!==this._anchorElement.port;return this._anchorElement.protocol+"//"+this._anchorElement.hostname+(t?":"+this._anchorElement.port:"")},enumerable:!0},password:{get:function(){return""},set:function(e){},enumerable:!0},username:{get:function(){return""},set:function(e){},enumerable:!0}}),r.createObjectURL=function(e){return t.createObjectURL.apply(t,arguments)},r.revokeObjectURL=function(e){return t.revokeObjectURL.apply(t,arguments)},e.URL=r),void 0!==e.location&&!("origin"in e.location)){var o=function(){return e.location.protocol+"//"+e.location.hostname+(e.location.port?":"+e.location.port:"")};try{Object.defineProperty(e.location,"origin",{get:o,enumerable:!0})}catch(t){setInterval(function(){e.location.origin=o()},100)}}}(void 0!==commonjsGlobal?commonjsGlobal:"undefined"!=typeof window?window:"undefined"!=typeof self?self:commonjsGlobal);for(var TYPED=_uid("typed_array"),VIEW=_uid("view"),ABV=!(!_global.ArrayBuffer||!_global.DataView),CONSTR=ABV,i$1=0,l=9,Typed,TypedArrayConstructors="Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array".split(",");i$1<l;)(Typed=_global[TypedArrayConstructors[i$1++]])?(_hide(Typed.prototype,TYPED,!0),_hide(Typed.prototype,VIEW,!0)):CONSTR=!1;var _typed={ABV:ABV,CONSTR:CONSTR,TYPED:TYPED,VIEW:VIEW},_redefineAll=function(e,t,r){for(var n in t)_redefine(e,n,t[n],r);return e},_anInstance=function(e,t,r,n){if(!(e instanceof t)||void 0!==n&&n in e)throw TypeError(r+": incorrect invocation!");return e},_toIndex=function(e){if(void 0===e)return 0;var t=_toInteger(e),r=_toLength(t);if(t!==r)throw RangeError("Wrong length!");return r},_arrayFill=function(e){for(var t=_toObject(this),r=_toLength(t.length),n=arguments.length,o=_toAbsoluteIndex(n>1?arguments[1]:void 0,r),i=n>2?arguments[2]:void 0,s=void 0===i?r:_toAbsoluteIndex(i,r);s>o;)t[o++]=e;return t},_typedBuffer=createCommonjsModule(function(e,t){var r=_objectGopn.f,n=_objectDp.f,o="prototype",i="Wrong index!",s=_global.ArrayBuffer,a=_global.DataView,u=_global.Math,l=_global.RangeError,c=_global.Infinity,p=s,f=u.abs,d=u.pow,g=u.floor,h=u.log,b=u.LN2,_=_descriptors?"_b":"buffer",y=_descriptors?"_l":"byteLength",m=_descriptors?"_o":"byteOffset";function v(e,t,r){var n,o,i,s=new Array(r),a=8*r-t-1,u=(1<<a)-1,l=u>>1,p=23===t?d(2,-24)-d(2,-77):0,_=0,y=e<0||0===e&&1/e<0?1:0;for((e=f(e))!=e||e===c?(o=e!=e?1:0,n=u):(n=g(h(e)/b),e*(i=d(2,-n))<1&&(n--,i*=2),(e+=n+l>=1?p/i:p*d(2,1-l))*i>=2&&(n++,i/=2),n+l>=u?(o=0,n=u):n+l>=1?(o=(e*i-1)*d(2,t),n+=l):(o=e*d(2,l-1)*d(2,t),n=0));t>=8;s[_++]=255&o,o/=256,t-=8);for(n=n<<t|o,a+=t;a>0;s[_++]=255&n,n/=256,a-=8);return s[--_]|=128*y,s}function $(e,t,r){var n,o=8*r-t-1,i=(1<<o)-1,s=i>>1,a=o-7,u=r-1,l=e[u--],p=127&l;for(l>>=7;a>0;p=256*p+e[u],u--,a-=8);for(n=p&(1<<-a)-1,p>>=-a,a+=t;a>0;n=256*n+e[u],u--,a-=8);if(0===p)p=1-s;else{if(p===i)return n?NaN:l?-c:c;n+=d(2,t),p-=s}return(l?-1:1)*n*d(2,p-t)}function E(e){return e[3]<<24|e[2]<<16|e[1]<<8|e[0]}function I(e){return[255&e]}function S(e){return[255&e,e>>8&255]}function w(e){return[255&e,e>>8&255,e>>16&255,e>>24&255]}function O(e){return v(e,52,8)}function R(e){return v(e,23,4)}function T(e,t,r){n(e[o],t,{get:function(){return this[r]}})}function A(e,t,r,n){var o=_toIndex(+r);if(o+t>e[y])throw l(i);var s=e[_]._b,a=o+e[m],u=s.slice(a,a+t);return n?u:u.reverse()}function N(e,t,r,n,o,s){var a=_toIndex(+r);if(a+t>e[y])throw l(i);for(var u=e[_]._b,c=a+e[m],p=n(+o),f=0;f<t;f++)u[c+f]=p[s?f:t-f-1]}if(_typed.ABV){if(!_fails(function(){s(1)})||!_fails(function(){new s(-1)})||_fails(function(){return new s,new s(1.5),new s(NaN),"ArrayBuffer"!=s.name})){for(var L,P=(s=function(e){return _anInstance(this,s),new p(_toIndex(e))})[o]=p[o],C=r(p),k=0;C.length>k;)(L=C[k++])in s||_hide(s,L,p[L]);P.constructor=s}var x=new a(new s(2)),q=a[o].setInt8;x.setInt8(0,2147483648),x.setInt8(1,2147483649),!x.getInt8(0)&&x.getInt8(1)||_redefineAll(a[o],{setInt8:function(e,t){q.call(this,e,t<<24>>24)},setUint8:function(e,t){q.call(this,e,t<<24>>24)}},!0)}else s=function(e){_anInstance(this,s,"ArrayBuffer");var t=_toIndex(e);this._b=_arrayFill.call(new Array(t),0),this[y]=t},a=function(e,t,r){_anInstance(this,a,"DataView"),_anInstance(e,s,"DataView");var n=e[y],o=_toInteger(t);if(o<0||o>n)throw l("Wrong offset!");if(o+(r=void 0===r?n-o:_toLength(r))>n)throw l("Wrong length!");this[_]=e,this[m]=o,this[y]=r},_descriptors&&(T(s,"byteLength","_l"),T(a,"buffer","_b"),T(a,"byteLength","_l"),T(a,"byteOffset","_o")),_redefineAll(a[o],{getInt8:function(e){return A(this,1,e)[0]<<24>>24},getUint8:function(e){return A(this,1,e)[0]},getInt16:function(e){var t=A(this,2,e,arguments[1]);return(t[1]<<8|t[0])<<16>>16},getUint16:function(e){var t=A(this,2,e,arguments[1]);return t[1]<<8|t[0]},getInt32:function(e){return E(A(this,4,e,arguments[1]))},getUint32:function(e){return E(A(this,4,e,arguments[1]))>>>0},getFloat32:function(e){return $(A(this,4,e,arguments[1]),23,4)},getFloat64:function(e){return $(A(this,8,e,arguments[1]),52,8)},setInt8:function(e,t){N(this,1,e,I,t)},setUint8:function(e,t){N(this,1,e,I,t)},setInt16:function(e,t){N(this,2,e,S,t,arguments[2])},setUint16:function(e,t){N(this,2,e,S,t,arguments[2])},setInt32:function(e,t){N(this,4,e,w,t,arguments[2])},setUint32:function(e,t){N(this,4,e,w,t,arguments[2])},setFloat32:function(e,t){N(this,4,e,R,t,arguments[2])},setFloat64:function(e,t){N(this,8,e,O,t,arguments[2])}});_setToStringTag(s,"ArrayBuffer"),_setToStringTag(a,"DataView"),_hide(a[o],_typed.VIEW,!0),t.ArrayBuffer=s,t.DataView=a}),SPECIES$2=_wks("species"),_arraySpeciesConstructor=function(e){var t;return _isArray(e)&&("function"!=typeof(t=e.constructor)||t!==Array&&!_isArray(t.prototype)||(t=void 0),_isObject(t)&&null===(t=t[SPECIES$2])&&(t=void 0)),void 0===t?Array:t},_arraySpeciesCreate=function(e,t){return new(_arraySpeciesConstructor(e))(t)},_arrayMethods=function(e,t){var r=1==e,n=2==e,o=3==e,i=4==e,s=6==e,a=5==e||s,u=t||_arraySpeciesCreate;return function(t,l,c){for(var p,f,d=_toObject(t),g=_iobject(d),h=_ctx(l,c,3),b=_toLength(g.length),_=0,y=r?u(t,b):n?u(t,0):void 0;b>_;_++)if((a||_ in g)&&(f=h(p=g[_],_,d),e))if(r)y[_]=f;else if(f)switch(e){case 3:return!0;case 5:return p;case 6:return _;case 2:y.push(p)}else if(i)return!1;return s?-1:o||i?i:y}},SPECIES$3=_wks("species"),_setSpecies=function(e){var t=_global[e];_descriptors&&t&&!t[SPECIES$3]&&_objectDp.f(t,SPECIES$3,{configurable:!0,get:function(){return this}})},_arrayCopyWithin=[].copyWithin||function(e,t){var r=_toObject(this),n=_toLength(r.length),o=_toAbsoluteIndex(e,n),i=_toAbsoluteIndex(t,n),s=arguments.length>2?arguments[2]:void 0,a=Math.min((void 0===s?n:_toAbsoluteIndex(s,n))-i,n-o),u=1;for(i<o&&o<i+a&&(u=-1,i+=a-1,o+=a-1);a-- >0;)i in r?r[o]=r[i]:delete r[o],o+=u,i+=u;return r},_typedArray=createCommonjsModule(function(e){if(_descriptors){var t=_library,r=_global,n=_fails,o=_export,i=_typed,s=_typedBuffer,a=_ctx,u=_anInstance,l=_propertyDesc,c=_hide,p=_redefineAll,f=_toInteger,d=_toLength,g=_toIndex,h=_toAbsoluteIndex,b=_toPrimitive,_=_has,y=_classof,m=_isObject,v=_toObject,$=_isArrayIter,E=_objectCreate,I=_objectGpo,S=_objectGopn.f,w=core_getIteratorMethod,O=_uid,R=_wks,T=_arrayMethods,A=_arrayIncludes,N=_speciesConstructor,L=es6_array_iterator,P=_iterators,C=_iterDetect,k=_setSpecies,x=_arrayFill,q=_arrayCopyWithin,M=_objectDp,j=_objectGopd,U=M.f,D=j.f,B=r.RangeError,G=r.TypeError,F=r.Uint8Array,V=Array.prototype,H=s.ArrayBuffer,z=s.DataView,W=T(0),K=T(2),J=T(3),Z=T(4),Y=T(5),X=T(6),Q=A(!0),ee=A(!1),te=L.values,re=L.keys,ne=L.entries,oe=V.lastIndexOf,ie=V.reduce,se=V.reduceRight,ae=V.join,ue=V.sort,le=V.slice,ce=V.toString,pe=V.toLocaleString,fe=R("iterator"),de=R("toStringTag"),ge=O("typed_constructor"),he=O("def_constructor"),be=i.CONSTR,_e=i.TYPED,ye=i.VIEW,me=T(1,function(e,t){return Se(N(e,e[he]),t)}),ve=n(function(){return 1===new F(new Uint16Array([1]).buffer)[0]}),$e=!!F&&!!F.prototype.set&&n(function(){new F(1).set({})}),Ee=function(e,t){var r=f(e);if(r<0||r%t)throw B("Wrong offset!");return r},Ie=function(e){if(m(e)&&_e in e)return e;throw G(e+" is not a typed array!")},Se=function(e,t){if(!(m(e)&&ge in e))throw G("It is not a typed array constructor!");return new e(t)},we=function(e,t){return Oe(N(e,e[he]),t)},Oe=function(e,t){for(var r=0,n=t.length,o=Se(e,n);n>r;)o[r]=t[r++];return o},Re=function(e,t,r){U(e,t,{get:function(){return this._d[r]}})},Te=function(e){var t,r,n,o,i,s,u=v(e),l=arguments.length,c=l>1?arguments[1]:void 0,p=void 0!==c,f=w(u);if(null!=f&&!$(f)){for(s=f.call(u),n=[],t=0;!(i=s.next()).done;t++)n.push(i.value);u=n}for(p&&l>2&&(c=a(c,arguments[2],2)),t=0,r=d(u.length),o=Se(this,r);r>t;t++)o[t]=p?c(u[t],t):u[t];return o},Ae=function(){for(var e=0,t=arguments.length,r=Se(this,t);t>e;)r[e]=arguments[e++];return r},Ne=!!F&&n(function(){pe.call(new F(1))}),Le=function(){return pe.apply(Ne?le.call(Ie(this)):Ie(this),arguments)},Pe={copyWithin:function(e,t){return q.call(Ie(this),e,t,arguments.length>2?arguments[2]:void 0)},every:function(e){return Z(Ie(this),e,arguments.length>1?arguments[1]:void 0)},fill:function(e){return x.apply(Ie(this),arguments)},filter:function(e){return we(this,K(Ie(this),e,arguments.length>1?arguments[1]:void 0))},find:function(e){return Y(Ie(this),e,arguments.length>1?arguments[1]:void 0)},findIndex:function(e){return X(Ie(this),e,arguments.length>1?arguments[1]:void 0)},forEach:function(e){W(Ie(this),e,arguments.length>1?arguments[1]:void 0)},indexOf:function(e){return ee(Ie(this),e,arguments.length>1?arguments[1]:void 0)},includes:function(e){return Q(Ie(this),e,arguments.length>1?arguments[1]:void 0)},join:function(e){return ae.apply(Ie(this),arguments)},lastIndexOf:function(e){return oe.apply(Ie(this),arguments)},map:function(e){return me(Ie(this),e,arguments.length>1?arguments[1]:void 0)},reduce:function(e){return ie.apply(Ie(this),arguments)},reduceRight:function(e){return se.apply(Ie(this),arguments)},reverse:function(){for(var e,t=Ie(this).length,r=Math.floor(t/2),n=0;n<r;)e=this[n],this[n++]=this[--t],this[t]=e;return this},some:function(e){return J(Ie(this),e,arguments.length>1?arguments[1]:void 0)},sort:function(e){return ue.call(Ie(this),e)},subarray:function(e,t){var r=Ie(this),n=r.length,o=h(e,n);return new(N(r,r[he]))(r.buffer,r.byteOffset+o*r.BYTES_PER_ELEMENT,d((void 0===t?n:h(t,n))-o))}},Ce=function(e,t){return we(this,le.call(Ie(this),e,t))},ke=function(e){Ie(this);var t=Ee(arguments[1],1),r=this.length,n=v(e),o=d(n.length),i=0;if(o+t>r)throw B("Wrong length!");for(;i<o;)this[t+i]=n[i++]},xe={entries:function(){return ne.call(Ie(this))},keys:function(){return re.call(Ie(this))},values:function(){return te.call(Ie(this))}},qe=function(e,t){return m(e)&&e[_e]&&"symbol"!=typeof t&&t in e&&String(+t)==String(t)},Me=function(e,t){return qe(e,t=b(t,!0))?l(2,e[t]):D(e,t)},je=function(e,t,r){return!(qe(e,t=b(t,!0))&&m(r)&&_(r,"value"))||_(r,"get")||_(r,"set")||r.configurable||_(r,"writable")&&!r.writable||_(r,"enumerable")&&!r.enumerable?U(e,t,r):(e[t]=r.value,e)};be||(j.f=Me,M.f=je),o(o.S+o.F*!be,"Object",{getOwnPropertyDescriptor:Me,defineProperty:je}),n(function(){ce.call({})})&&(ce=pe=function(){return ae.call(this)});var Ue=p({},Pe);p(Ue,xe),c(Ue,fe,xe.values),p(Ue,{slice:Ce,set:ke,constructor:function(){},toString:ce,toLocaleString:Le}),Re(Ue,"buffer","b"),Re(Ue,"byteOffset","o"),Re(Ue,"byteLength","l"),Re(Ue,"length","e"),U(Ue,de,{get:function(){return this[_e]}}),e.exports=function(e,s,a,l){var p=e+((l=!!l)?"Clamped":"")+"Array",f="get"+e,h="set"+e,b=r[p],_=b||{},v=b&&I(b),$=!b||!i.ABV,w={},O=b&&b.prototype,R=function(e,t){U(e,t,{get:function(){return function(e,t){var r=e._d;return r.v[f](t*s+r.o,ve)}(this,t)},set:function(e){return function(e,t,r){var n=e._d;l&&(r=(r=Math.round(r))<0?0:r>255?255:255&r),n.v[h](t*s+n.o,r,ve)}(this,t,e)},enumerable:!0})};$?(b=a(function(e,t,r,n){u(e,b,p,"_d");var o,i,a,l,f=0,h=0;if(m(t)){if(!(t instanceof H||"ArrayBuffer"==(l=y(t))||"SharedArrayBuffer"==l))return _e in t?Oe(b,t):Te.call(b,t);o=t,h=Ee(r,s);var _=t.byteLength;if(void 0===n){if(_%s)throw B("Wrong length!");if((i=_-h)<0)throw B("Wrong length!")}else if((i=d(n)*s)+h>_)throw B("Wrong length!");a=i/s}else a=g(t),o=new H(i=a*s);for(c(e,"_d",{b:o,o:h,l:i,e:a,v:new z(o)});f<a;)R(e,f++)}),O=b.prototype=E(Ue),c(O,"constructor",b)):n(function(){b(1)})&&n(function(){new b(-1)})&&C(function(e){new b,new b(null),new b(1.5),new b(e)},!0)||(b=a(function(e,t,r,n){var o;return u(e,b,p),m(t)?t instanceof H||"ArrayBuffer"==(o=y(t))||"SharedArrayBuffer"==o?void 0!==n?new _(t,Ee(r,s),n):void 0!==r?new _(t,Ee(r,s)):new _(t):_e in t?Oe(b,t):Te.call(b,t):new _(g(t))}),W(v!==Function.prototype?S(_).concat(S(v)):S(_),function(e){e in b||c(b,e,_[e])}),b.prototype=O,t||(O.constructor=b));var T=O[fe],A=!!T&&("values"==T.name||null==T.name),N=xe.values;c(b,ge,!0),c(O,_e,p),c(O,ye,!0),c(O,he,b),(l?new b(1)[de]==p:de in O)||U(O,de,{get:function(){return p}}),w[p]=b,o(o.G+o.W+o.F*(b!=_),w),o(o.S,p,{BYTES_PER_ELEMENT:s}),o(o.S+o.F*n(function(){_.of.call(b,1)}),p,{from:Te,of:Ae}),"BYTES_PER_ELEMENT"in O||c(O,"BYTES_PER_ELEMENT",s),o(o.P,p,Pe),k(p),o(o.P+o.F*$e,p,{set:ke}),o(o.P+o.F*!A,p,xe),t||O.toString==ce||(O.toString=ce),o(o.P+o.F*n(function(){new b(1).slice()}),p,{slice:Ce}),o(o.P+o.F*(n(function(){return[1,2].toLocaleString()!=new b([1,2]).toLocaleString()})||!n(function(){O.toLocaleString.call([1,2])})),p,{toLocaleString:Le}),P[p]=A?T:N,t||A||c(O,fe,N)}}else e.exports=function(){}});_typedArray("Uint8",1,function(e){return function(t,r,n){return e(this,t,r,n)}});var _forOf=createCommonjsModule(function(e){var t={},r={},n=e.exports=function(e,n,o,i,s){var a,u,l,c,p=s?function(){return e}:core_getIteratorMethod(e),f=_ctx(o,i,n?2:1),d=0;if("function"!=typeof p)throw TypeError(e+" is not iterable!");if(_isArrayIter(p)){for(a=_toLength(e.length);a>d;d++)if((c=n?f(_anObject(u=e[d])[0],u[1]):f(e[d]))===t||c===r)return c}else for(l=p.call(e);!(u=l.next()).done;)if((c=_iterCall(l,f,u.value,n))===t||c===r)return c};n.BREAK=t,n.RETURN=r}),_invoke=function(e,t,r){var n=void 0===r;switch(t.length){case 0:return n?e():e.call(r);case 1:return n?e(t[0]):e.call(r,t[0]);case 2:return n?e(t[0],t[1]):e.call(r,t[0],t[1]);case 3:return n?e(t[0],t[1],t[2]):e.call(r,t[0],t[1],t[2]);case 4:return n?e(t[0],t[1],t[2],t[3]):e.call(r,t[0],t[1],t[2],t[3])}return e.apply(r,t)},process$1=_global.process,setTask=_global.setImmediate,clearTask=_global.clearImmediate,MessageChannel=_global.MessageChannel,Dispatch=_global.Dispatch,counter=0,queue={},ONREADYSTATECHANGE="onreadystatechange",defer,channel,port,run=function(){var e=+this;if(queue.hasOwnProperty(e)){var t=queue[e];delete queue[e],t()}},listener=function(e){run.call(e.data)};setTask&&clearTask||(setTask=function(e){for(var t=[],r=1;arguments.length>r;)t.push(arguments[r++]);return queue[++counter]=function(){_invoke("function"==typeof e?e:Function(e),t)},defer(counter),counter},clearTask=function(e){delete queue[e]},"process"==_cof(process$1)?defer=function(e){process$1.nextTick(_ctx(run,e,1))}:Dispatch&&Dispatch.now?defer=function(e){Dispatch.now(_ctx(run,e,1))}:MessageChannel?(channel=new MessageChannel,port=channel.port2,channel.port1.onmessage=listener,defer=_ctx(port.postMessage,port,1)):_global.addEventListener&&"function"==typeof postMessage&&!_global.importScripts?(defer=function(e){_global.postMessage(e+"","*")},_global.addEventListener("message",listener,!1)):defer=ONREADYSTATECHANGE in _domCreate("script")?function(e){_html.appendChild(_domCreate("script"))[ONREADYSTATECHANGE]=function(){_html.removeChild(this),run.call(e)}}:function(e){setTimeout(_ctx(run,e,1),0)});var _task={set:setTask,clear:clearTask},macrotask=_task.set,Observer=_global.MutationObserver||_global.WebKitMutationObserver,process$2=_global.process,Promise$1=_global.Promise,isNode="process"==_cof(process$2),_microtask=function(){var e,t,r,n=function(){var n,o;for(isNode&&(n=process$2.domain)&&n.exit();e;){o=e.fn,e=e.next;try{o()}catch(n){throw e?r():t=void 0,n}}t=void 0,n&&n.enter()};if(isNode)r=function(){process$2.nextTick(n)};else if(!Observer||_global.navigator&&_global.navigator.standalone)if(Promise$1&&Promise$1.resolve){var o=Promise$1.resolve(void 0);r=function(){o.then(n)}}else r=function(){macrotask.call(_global,n)};else{var i=!0,s=document.createTextNode("");new Observer(n).observe(s,{characterData:!0}),r=function(){s.data=i=!i}}return function(n){var o={fn:n,next:void 0};t&&(t.next=o),e||(e=o,r()),t=o}};function PromiseCapability(e){var t,r;this.promise=new e(function(e,n){if(void 0!==t||void 0!==r)throw TypeError("Bad Promise constructor");t=e,r=n}),this.resolve=_aFunction(t),this.reject=_aFunction(r)}var f$7=function(e){return new PromiseCapability(e)},_newPromiseCapability={f:f$7},_perform=function(e){try{return{e:!1,v:e()}}catch(e){return{e:!0,v:e}}},_promiseResolve=function(e,t){if(_anObject(e),_isObject(t)&&t.constructor===e)return t;var r=_newPromiseCapability.f(e);return(0,r.resolve)(t),r.promise},task=_task.set,microtask=_microtask(),PROMISE="Promise",TypeError$1=_global.TypeError,process$3=_global.process,versions=process$3&&process$3.versions,v8=versions&&versions.v8||"",$Promise=_global[PROMISE],isNode$1="process"==_classof(process$3),empty=function(){},Internal,newGenericPromiseCapability,OwnPromiseCapability,Wrapper,newPromiseCapability=newGenericPromiseCapability=_newPromiseCapability.f,USE_NATIVE$1=!!function(){try{var e=$Promise.resolve(1),t=(e.constructor={})[_wks("species")]=function(e){e(empty,empty)};return(isNode$1||"function"==typeof PromiseRejectionEvent)&&e.then(empty)instanceof t&&0!==v8.indexOf("6.6")&&-1===_userAgent.indexOf("Chrome/66")}catch(e){}}(),isThenable=function(e){var t;return!(!_isObject(e)||"function"!=typeof(t=e.then))&&t},notify=function(e,t){if(!e._n){e._n=!0;var r=e._c;microtask(function(){for(var n=e._v,o=1==e._s,i=0,s=function(t){var r,i,s,a=o?t.ok:t.fail,u=t.resolve,l=t.reject,c=t.domain;try{a?(o||(2==e._h&&onHandleUnhandled(e),e._h=1),!0===a?r=n:(c&&c.enter(),r=a(n),c&&(c.exit(),s=!0)),r===t.promise?l(TypeError$1("Promise-chain cycle")):(i=isThenable(r))?i.call(r,u,l):u(r)):l(n)}catch(e){c&&!s&&c.exit(),l(e)}};r.length>i;)s(r[i++]);e._c=[],e._n=!1,t&&!e._h&&onUnhandled(e)})}},onUnhandled=function(e){task.call(_global,function(){var t,r,n,o=e._v,i=isUnhandled(e);if(i&&(t=_perform(function(){isNode$1?process$3.emit("unhandledRejection",o,e):(r=_global.onunhandledrejection)?r({promise:e,reason:o}):(n=_global.console)&&n.error&&n.error("Unhandled promise rejection",o)}),e._h=isNode$1||isUnhandled(e)?2:1),e._a=void 0,i&&t.e)throw t.v})},isUnhandled=function(e){return 1!==e._h&&0===(e._a||e._c).length},onHandleUnhandled=function(e){task.call(_global,function(){var t;isNode$1?process$3.emit("rejectionHandled",e):(t=_global.onrejectionhandled)&&t({promise:e,reason:e._v})})},$reject=function(e){var t=this;t._d||(t._d=!0,(t=t._w||t)._v=e,t._s=2,t._a||(t._a=t._c.slice()),notify(t,!0))},$resolve=function(e){var t,r=this;if(!r._d){r._d=!0,r=r._w||r;try{if(r===e)throw TypeError$1("Promise can't be resolved itself");(t=isThenable(e))?microtask(function(){var n={_w:r,_d:!1};try{t.call(e,_ctx($resolve,n,1),_ctx($reject,n,1))}catch(e){$reject.call(n,e)}}):(r._v=e,r._s=1,notify(r,!1))}catch(e){$reject.call({_w:r,_d:!1},e)}}};USE_NATIVE$1||($Promise=function(e){_anInstance(this,$Promise,PROMISE,"_h"),_aFunction(e),Internal.call(this);try{e(_ctx($resolve,this,1),_ctx($reject,this,1))}catch(e){$reject.call(this,e)}},Internal=function(e){this._c=[],this._a=void 0,this._s=0,this._d=!1,this._v=void 0,this._h=0,this._n=!1},Internal.prototype=_redefineAll($Promise.prototype,{then:function(e,t){var r=newPromiseCapability(_speciesConstructor(this,$Promise));return r.ok="function"!=typeof e||e,r.fail="function"==typeof t&&t,r.domain=isNode$1?process$3.domain:void 0,this._c.push(r),this._a&&this._a.push(r),this._s&&notify(this,!1),r.promise},catch:function(e){return this.then(void 0,e)}}),OwnPromiseCapability=function(){var e=new Internal;this.promise=e,this.resolve=_ctx($resolve,e,1),this.reject=_ctx($reject,e,1)},_newPromiseCapability.f=newPromiseCapability=function(e){return e===$Promise||e===Wrapper?new OwnPromiseCapability(e):newGenericPromiseCapability(e)}),_export(_export.G+_export.W+_export.F*!USE_NATIVE$1,{Promise:$Promise}),_setToStringTag($Promise,PROMISE),_setSpecies(PROMISE),Wrapper=_core[PROMISE],_export(_export.S+_export.F*!USE_NATIVE$1,PROMISE,{reject:function(e){var t=newPromiseCapability(this);return(0,t.reject)(e),t.promise}}),_export(_export.S+_export.F*!USE_NATIVE$1,PROMISE,{resolve:function(e){return _promiseResolve(this,e)}}),_export(_export.S+_export.F*!(USE_NATIVE$1&&_iterDetect(function(e){$Promise.all(e).catch(empty)})),PROMISE,{all:function(e){var t=this,r=newPromiseCapability(t),n=r.resolve,o=r.reject,i=_perform(function(){var r=[],i=0,s=1;_forOf(e,!1,function(e){var a=i++,u=!1;r.push(void 0),s++,t.resolve(e).then(function(e){u||(u=!0,r[a]=e,--s||n(r))},o)}),--s||n(r)});return i.e&&o(i.v),r.promise},race:function(e){var t=this,r=newPromiseCapability(t),n=r.reject,o=_perform(function(){_forOf(e,!1,function(e){t.resolve(e).then(r.resolve,n)})});return o.e&&n(o.v),r.promise}});var support={searchParams:"URLSearchParams"in self,iterable:"Symbol"in self&&"iterator"in Symbol,blob:"FileReader"in self&&"Blob"in self&&function(){try{return new Blob,!0}catch(e){return!1}}(),formData:"FormData"in self,arrayBuffer:"ArrayBuffer"in self};function isDataView(e){return e&&DataView.prototype.isPrototypeOf(e)}if(support.arrayBuffer)var viewClasses=["[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]"],isArrayBufferView=ArrayBuffer.isView||function(e){return e&&viewClasses.indexOf(Object.prototype.toString.call(e))>-1};function normalizeName(e){if("string"!=typeof e&&(e=String(e)),/[^a-z0-9\-#$%&'*+.^_`|~]/i.test(e))throw new TypeError("Invalid character in header field name");return e.toLowerCase()}function normalizeValue(e){return"string"!=typeof e&&(e=String(e)),e}function iteratorFor(e){var t={next:function(){var t=e.shift();return{done:void 0===t,value:t}}};return support.iterable&&(t[Symbol.iterator]=function(){return t}),t}function Headers(e){this.map={},e instanceof Headers?e.forEach(function(e,t){this.append(t,e)},this):Array.isArray(e)?e.forEach(function(e){this.append(e[0],e[1])},this):e&&Object.getOwnPropertyNames(e).forEach(function(t){this.append(t,e[t])},this)}function consumed(e){if(e.bodyUsed)return Promise.reject(new TypeError("Already read"));e.bodyUsed=!0}function fileReaderReady(e){return new Promise(function(t,r){e.onload=function(){t(e.result)},e.onerror=function(){r(e.error)}})}function readBlobAsArrayBuffer(e){var t=new FileReader,r=fileReaderReady(t);return t.readAsArrayBuffer(e),r}function readBlobAsText(e){var t=new FileReader,r=fileReaderReady(t);return t.readAsText(e),r}function readArrayBufferAsText(e){for(var t=new Uint8Array(e),r=new Array(t.length),n=0;n<t.length;n++)r[n]=String.fromCharCode(t[n]);return r.join("")}function bufferClone(e){if(e.slice)return e.slice(0);var t=new Uint8Array(e.byteLength);return t.set(new Uint8Array(e)),t.buffer}function Body(){return this.bodyUsed=!1,this._initBody=function(e){this._bodyInit=e,e?"string"==typeof e?this._bodyText=e:support.blob&&Blob.prototype.isPrototypeOf(e)?this._bodyBlob=e:support.formData&&FormData.prototype.isPrototypeOf(e)?this._bodyFormData=e:support.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)?this._bodyText=e.toString():support.arrayBuffer&&support.blob&&isDataView(e)?(this._bodyArrayBuffer=bufferClone(e.buffer),this._bodyInit=new Blob([this._bodyArrayBuffer])):support.arrayBuffer&&(ArrayBuffer.prototype.isPrototypeOf(e)||isArrayBufferView(e))?this._bodyArrayBuffer=bufferClone(e):this._bodyText=e=Object.prototype.toString.call(e):this._bodyText="",this.headers.get("content-type")||("string"==typeof e?this.headers.set("content-type","text/plain;charset=UTF-8"):this._bodyBlob&&this._bodyBlob.type?this.headers.set("content-type",this._bodyBlob.type):support.searchParams&&URLSearchParams.prototype.isPrototypeOf(e)&&this.headers.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"))},support.blob&&(this.blob=function(){var e=consumed(this);if(e)return e;if(this._bodyBlob)return Promise.resolve(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(new Blob([this._bodyArrayBuffer]));if(this._bodyFormData)throw new Error("could not read FormData body as blob");return Promise.resolve(new Blob([this._bodyText]))},this.arrayBuffer=function(){return this._bodyArrayBuffer?consumed(this)||Promise.resolve(this._bodyArrayBuffer):this.blob().then(readBlobAsArrayBuffer)}),this.text=function(){var e=consumed(this);if(e)return e;if(this._bodyBlob)return readBlobAsText(this._bodyBlob);if(this._bodyArrayBuffer)return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));if(this._bodyFormData)throw new Error("could not read FormData body as text");return Promise.resolve(this._bodyText)},support.formData&&(this.formData=function(){return this.text().then(decode)}),this.json=function(){return this.text().then(JSON.parse)},this}Headers.prototype.append=function(e,t){e=normalizeName(e),t=normalizeValue(t);var r=this.map[e];this.map[e]=r?r+", "+t:t},Headers.prototype.delete=function(e){delete this.map[normalizeName(e)]},Headers.prototype.get=function(e){return e=normalizeName(e),this.has(e)?this.map[e]:null},Headers.prototype.has=function(e){return this.map.hasOwnProperty(normalizeName(e))},Headers.prototype.set=function(e,t){this.map[normalizeName(e)]=normalizeValue(t)},Headers.prototype.forEach=function(e,t){for(var r in this.map)this.map.hasOwnProperty(r)&&e.call(t,this.map[r],r,this)},Headers.prototype.keys=function(){var e=[];return this.forEach(function(t,r){e.push(r)}),iteratorFor(e)},Headers.prototype.values=function(){var e=[];return this.forEach(function(t){e.push(t)}),iteratorFor(e)},Headers.prototype.entries=function(){var e=[];return this.forEach(function(t,r){e.push([r,t])}),iteratorFor(e)},support.iterable&&(Headers.prototype[Symbol.iterator]=Headers.prototype.entries);var methods=["DELETE","GET","HEAD","OPTIONS","POST","PUT"];function normalizeMethod(e){var t=e.toUpperCase();return methods.indexOf(t)>-1?t:e}function Request(e,t){var r=(t=t||{}).body;if(e instanceof Request){if(e.bodyUsed)throw new TypeError("Already read");this.url=e.url,this.credentials=e.credentials,t.headers||(this.headers=new Headers(e.headers)),this.method=e.method,this.mode=e.mode,this.signal=e.signal,r||null==e._bodyInit||(r=e._bodyInit,e.bodyUsed=!0)}else this.url=String(e);if(this.credentials=t.credentials||this.credentials||"same-origin",!t.headers&&this.headers||(this.headers=new Headers(t.headers)),this.method=normalizeMethod(t.method||this.method||"GET"),this.mode=t.mode||this.mode||null,this.signal=t.signal||this.signal,this.referrer=null,("GET"===this.method||"HEAD"===this.method)&&r)throw new TypeError("Body not allowed for GET or HEAD requests");this._initBody(r)}function decode(e){var t=new FormData;return e.trim().split("&").forEach(function(e){if(e){var r=e.split("="),n=r.shift().replace(/\+/g," "),o=r.join("=").replace(/\+/g," ");t.append(decodeURIComponent(n),decodeURIComponent(o))}}),t}function parseHeaders(e){var t=new Headers;return e.replace(/\r?\n[\t ]+/g," ").split(/\r?\n/).forEach(function(e){var r=e.split(":"),n=r.shift().trim();if(n){var o=r.join(":").trim();t.append(n,o)}}),t}function Response(e,t){t||(t={}),this.type="default",this.status=void 0===t.status?200:t.status,this.ok=this.status>=200&&this.status<300,this.statusText="statusText"in t?t.statusText:"OK",this.headers=new Headers(t.headers),this.url=t.url||"",this._initBody(e)}Request.prototype.clone=function(){return new Request(this,{body:this._bodyInit})},Body.call(Request.prototype),Body.call(Response.prototype),Response.prototype.clone=function(){return new Response(this._bodyInit,{status:this.status,statusText:this.statusText,headers:new Headers(this.headers),url:this.url})},Response.error=function(){var e=new Response(null,{status:0,statusText:""});return e.type="error",e};var redirectStatuses=[301,302,303,307,308];Response.redirect=function(e,t){if(-1===redirectStatuses.indexOf(t))throw new RangeError("Invalid status code");return new Response(null,{status:t,headers:{location:e}})};var DOMException$1=self.DOMException;try{new DOMException$1}catch(err){DOMException$1=function(e,t){this.message=e,this.name=t;var r=Error(e);this.stack=r.stack},DOMException$1.prototype=Object.create(Error.prototype),DOMException$1.prototype.constructor=DOMException$1}function fetch(e,t){return new Promise(function(r,n){var o=new Request(e,t);if(o.signal&&o.signal.aborted)return n(new DOMException$1("Aborted","AbortError"));var i=new XMLHttpRequest;function s(){i.abort()}i.onload=function(){var e={status:i.status,statusText:i.statusText,headers:parseHeaders(i.getAllResponseHeaders()||"")};e.url="responseURL"in i?i.responseURL:e.headers.get("X-Request-URL");var t="response"in i?i.response:i.responseText;r(new Response(t,e))},i.onerror=function(){n(new TypeError("Network request failed"))},i.ontimeout=function(){n(new TypeError("Network request failed"))},i.onabort=function(){n(new DOMException$1("Aborted","AbortError"))},i.open(o.method,o.url,!0),"include"===o.credentials?i.withCredentials=!0:"omit"===o.credentials&&(i.withCredentials=!1),"responseType"in i&&support.blob&&(i.responseType="blob"),o.headers.forEach(function(e,t){i.setRequestHeader(t,e)}),o.signal&&(o.signal.addEventListener("abort",s),i.onreadystatechange=function(){4===i.readyState&&o.signal.removeEventListener("abort",s)}),i.send(void 0===o._bodyInit?null:o._bodyInit)})}function get(e,t){var r,n,o=arguments.length<3?e:arguments[2];return _anObject(e)===o?e[t]:(r=_objectGopd.f(e,t))?_has(r,"value")?r.value:void 0!==r.get?r.get.call(o):void 0:_isObject(n=_objectGpo(e))?get(n,t,o):void 0}fetch.polyfill=!0,self.fetch||(self.fetch=fetch,self.Headers=Headers,self.Request=Request,self.Response=Response),_export(_export.S,"Reflect",{get:get});var check=function(e,t){if(_anObject(e),!_isObject(t)&&null!==t)throw TypeError(t+": can't set as prototype!")},_setProto={set:Object.setPrototypeOf||("__proto__"in{}?function(e,t,r){try{(r=_ctx(Function.call,_objectGopd.f(Object.prototype,"__proto__").set,2))(e,[]),t=!(e instanceof Array)}catch(e){t=!0}return function(e,n){return check(e,n),t?e.__proto__=n:r(e,n),e}}({},!1):void 0),check:check};_export(_export.S,"Object",{setPrototypeOf:_setProto.set}),function(){function e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function t(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function r(e,r,n){return r&&t(e.prototype,r),n&&t(e,n),e}function n(e){return(n=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function s(e,t,r){return(s="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=n(e)););return e}(e,t);if(o){var i=Object.getOwnPropertyDescriptor(o,t);return i.get?i.get.call(r):i.value}})(e,t,r||e)}var a=function(){function t(){e(this,t),Object.defineProperty(this,"listeners",{value:{},writable:!0,configurable:!0})}return r(t,[{key:"addEventListener",value:function(e,t){e in this.listeners||(this.listeners[e]=[]),this.listeners[e].push(t)}},{key:"removeEventListener",value:function(e,t){if(e in this.listeners)for(var r=this.listeners[e],n=0,o=r.length;n<o;n++)if(r[n]===t)return void r.splice(n,1)}},{key:"dispatchEvent",value:function(e){var t=this;if(e.type in this.listeners){for(var r=function(r){setTimeout(function(){return r.call(t,e)})},n=this.listeners[e.type],o=0,i=n.length;o<i;o++)r(n[o]);return!e.defaultPrevented}}}]),t}(),u=function(t){function u(){var t,r,o;return e(this,u),(r=this,o=n(u).call(this),t=!o||"object"!==_typeof(o)&&"function"!=typeof o?i(r):o).listeners||a.call(i(t)),Object.defineProperty(i(t),"aborted",{value:!1,writable:!0,configurable:!0}),Object.defineProperty(i(t),"onabort",{value:null,writable:!0,configurable:!0}),t}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}(u,t),r(u,[{key:"toString",value:function(){return"[object AbortSignal]"}},{key:"dispatchEvent",value:function(e){"abort"===e.type&&(this.aborted=!0,"function"==typeof this.onabort&&this.onabort.call(this,e)),s(n(u.prototype),"dispatchEvent",this).call(this,e)}}]),u}(a),l=function(){function t(){e(this,t),Object.defineProperty(this,"signal",{value:new u,writable:!0,configurable:!0})}return r(t,[{key:"abort",value:function(){var e;try{e=new Event("abort")}catch(t){"undefined"!=typeof document?document.createEvent?(e=document.createEvent("Event")).initEvent("abort",!1,!1):(e=document.createEventObject()).type="abort":e={type:"abort",bubbles:!1,cancelable:!1}}this.signal.dispatchEvent(e)}},{key:"toString",value:function(){return"[object AbortController]"}}]),t}();"undefined"!=typeof Symbol&&Symbol.toStringTag&&(l.prototype[Symbol.toStringTag]="AbortController",u.prototype[Symbol.toStringTag]="AbortSignal"),function(e){(function(e){return e.__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL?(console.log("__FORCE_INSTALL_ABORTCONTROLLER_POLYFILL=true is set, will force install polyfill"),!0):"function"==typeof e.Request&&!e.Request.prototype.hasOwnProperty("signal")||!e.AbortController})(e)&&(e.AbortController=l,e.AbortSignal=u)}("undefined"!=typeof self?self:commonjsGlobal)}(),_export(_export.S,"Math",{clz32:function(e){return(e>>>=0)?31-Math.floor(Math.log(e+.5)*Math.LOG2E):32}});var log=Math.log,LN2=Math.LN2,clz32=Math.clz32||function(e){return 31-log(e>>>0)/LN2|0},fromCharCode=String.fromCharCode,Object_prototype_toString={}.toString,NativeUint8Array=window.Uint8Array,patchedU8Array=NativeUint8Array||Array,ArrayBufferString=Object_prototype_toString.call((window.ArrayBuffer||patchedU8Array).prototype),RtmStatusCode;function decoderReplacer(e){var t=e.charCodeAt(0)<<24,r=0|clz32(~t),n=0,o=0|e.length,i="";if(r<5&&o>=r){for(t=t<<r>>>24+r,n=1;n<r;n=n+1|0)t=t<<6|63&e.charCodeAt(n);t<=65535?i+=fromCharCode(t):t<=1114111?i+=fromCharCode(55296+((t=t-65536|0)>>10)|0,56320+(1023&t)|0):n=0}for(;n<o;n=n+1|0)i+="�";return i}function TextDecoder$1(){}function encoderReplacer(e){var t=0|e.charCodeAt(0);if(t>=55296&&t<=56319){var r=0|e.charCodeAt(1);if(r!=r)return fromCharCode(239,191,189);if(!(r>=56320&&r<=57343))return fromCharCode(239,191,189);if((t=(t-55296<<10)+r-56320+65536|0)>65535)return fromCharCode(240|t>>>18,128|t>>>12&63,128|t>>>6&63,128|63&t)}return t<=127?e:t<=2047?fromCharCode(192|t>>>6,128|63&t):fromCharCode(224|t>>>12,128|t>>>6&63,128|63&t)}function TextEncoder$1(){}TextDecoder$1.prototype.decode=function(e){var t=e&&e.buffer||e;if(Object_prototype_toString.call(t)!==ArrayBufferString)throw Error("Failed to execute 'decode' on 'TextDecoder': The provided value is not of type '(ArrayBuffer or ArrayBufferView)'");for(var r=NativeUint8Array?new patchedU8Array(t):t,n="",o=0,i=0|r.length;o<i;o=o+32768|0)n+=fromCharCode.apply(0,r[NativeUint8Array?"slice":"subarray"](o,o+32768|0));return n.replace(/[\xc0-\xff][\x80-\xbf]*/g,decoderReplacer)},window.TextDecoder||(window.TextDecoder=TextDecoder$1),TextEncoder$1.prototype.encode=function(e){for(var t=void 0===e?"":(""+e).replace(/[\x80-\uD7ff\uDC00-\uFFFF]|[\uD800-\uDBFF][\uDC00-\uDFFF]?/g,encoderReplacer),r=0|t.length,n=new patchedU8Array(r),o=0;o<r;o=o+1|0)n[o]=t.charCodeAt(o);return n},window.TextEncoder||(window.TextEncoder=TextEncoder$1),function(e){var t,r,n,o,i,s,a,u,l;!function(e){e.LOGIN="LOGIN",e.LOGIN_SUCCESS="LOGIN_SUCCESS",e.LOGIN_FAILURE="LOGIN_FAILURE",e.LOGIN_TIMEOUT="LOGIN_TIMEOUT",e.INTERRUPTED="INTERRUPTED",e.LOGOUT="LOGOUT",e.BANNED_BY_SERVER="BANNED_BY_SERVER",e.REMOTE_LOGIN="REMOTE_LOGIN"}(t||(t={})),e.ConnectionChangeReason=t,function(e){e.DISCONNECTED="DISCONNECTED",e.CONNECTING="CONNECTING",e.CONNECTED="CONNECTED",e.RECONNECTING="RECONNECTING",e.ABORTED="ABORTED"}(r||(r={})),e.ConnectionState=r,function(e){e.IDLE="IDLE",e.SENT_TO_REMOTE="SENT_TO_REMOTE",e.RECEIVED_BY_REMOTE="RECEIVED_BY_REMOTE",e.ACCEPTED_BY_REMOTE="ACCEPTED_BY_REMOTE",e.REFUSED_BY_REMOTE="REFUSED_BY_REMOTE",e.CANCELED="CANCELED",e.FAILURE="FAILURE"}(n||(n={})),e.LocalInvitationState=n,function(e){e.INVITATION_RECEIVED="INVITATION_RECEIVED",e.ACCEPT_SENT_TO_LOCAL="ACCEPT_SENT_TO_LOCAL",e.REFUSED="REFUSED",e.ACCEPTED="ACCEPTED",e.CANCELED="CANCELED",e.FAILURE="FAILURE"}(o||(o={})),e.RemoteInvitationState=o,function(e){e.UNKNOWN="UNKNOWN",e.PEER_NO_RESPONSE="PEER_NO_RESPONSE",e.INVITATION_EXPIRE="INVITATION_EXPIRE",e.PEER_OFFLINE="PEER_OFFLINE",e.NOT_LOGGEDIN="NOT_LOGGEDIN"}(i||(i={})),e.LocalInvitationFailureReason=i,function(e){e.UNKNOWN="UNKNOWN",e.PEER_OFFLINE="PEER_OFFLINE",e.ACCEPT_FAILURE="ACCEPT_FAILURE",e.INVITATION_EXPIRE="INVITATION_EXPIRE"}(s||(s={})),e.RemoteInvitationFailureReason=s,function(e){e.ONLINE="ONLINE",e.UNREACHABLE="UNREACHABLE",e.OFFLINE="OFFLINE"}(a||(a={})),e.PeerOnlineState=a,function(e){e.ONLINE_STATUS="ONLINE_STATUS"}(u||(u={})),e.PeerSubscriptionOption=u,function(e){e.TEXT="TEXT",e.RAW="RAW"}(l||(l={})),e.MessageType=l}(RtmStatusCode||(RtmStatusCode={}));for(var RtmStatusCode$1=RtmStatusCode,rngBrowser=createCommonjsModule(function(e){var t="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(t){var r=new Uint8Array(16);e.exports=function(){return t(r),r}}else{var n=new Array(16);e.exports=function(){for(var e,t=0;t<16;t++)0==(3&t)&&(e=4294967296*Math.random()),n[t]=e>>>((3&t)<<3)&255;return n}}}),byteToHex=[],i$2=0;i$2<256;++i$2)byteToHex[i$2]=(i$2+256).toString(16).substr(1);function bytesToUuid(e,t){var r=t||0,n=byteToHex;return[n[e[r++]],n[e[r++]],n[e[r++]],n[e[r++]],"-",n[e[r++]],n[e[r++]],"-",n[e[r++]],n[e[r++]],"-",n[e[r++]],n[e[r++]],"-",n[e[r++]],n[e[r++]],n[e[r++]],n[e[r++]],n[e[r++]],n[e[r++]]].join("")}var bytesToUuid_1=bytesToUuid;function v4(e,t,r){var n=t&&r||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var o=(e=e||{}).random||(e.rng||rngBrowser)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t)for(var i=0;i<16;++i)t[n+i]=o[i];return t||bytesToUuid_1(o)}var v4_1=v4,version="1.2.2",BUILD="v1.2.2-0-gb428acc",processId=v4_1(),WEB_PLATFORM_TYPE=7,VERSION_NO=3,SUBVERSION=1,END_CALL_PREFIX="AgoraRTMLegacyEndcallCompatibleMessagePrefix";const AttributeOperationError={ATTRIBUTE_OPERATION_ERR_FAILURE:2,ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT:3,ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW:4,ATTRIBUTE_OPERATION_ERR_TOO_OFTEN:5,ATTRIBUTE_OPERATION_ERR_USER_NOT_FOUND:6,ATTRIBUTE_OPERATION_ERR_TIMEOUT:7,ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN:102},ChannelMessageError={CHANNEL_MESSAGE_ERR_FAILURE:1,CHANNEL_MESSAGE_ERR_TIMEOUT:2,CHANNEL_MESSAGE_ERR_TOO_OFTEN:3,CHANNEL_MESSAGE_ERR_INVALID_MESSAGE:4,CHANNEL_MESSAGE_ERR_NOT_IN_CHANNEL:5,CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN:102},CreateChannelError={CREATE_CHANNEL_ERR_INVALID_ARGUMENT:1},CreateInstanceError={CREATE_INSTANCE_ERR_INVALID_ARGUMENT:1},GetMembersError={GET_MEMBERS_ERR_FAILURE:1,GET_MEMBERS_ERR_REJECTED:2,GET_MEMBERS_ERR_TIMEOUT:3,GET_MEMBERS_ERR_TOO_OFTEN:4,GET_MEMBERS_ERR_NOT_IN_CHANNEL:5,GET_MEMBERS_ERR_USER_NOT_LOGGED_IN:102},InvitationApiCallError={INVITATION_API_CALL_ERR_INVALID_ARGUMENT:1,INVITATION_API_CALL_ERR_NOT_STARTED:2,INVITATION_API_CALL_ERR_ALREADY_END:3,INVITATION_API_CALL_ERR_ALREADY_ACCEPT:4,INVITATION_API_CALL_ERR_ALREADY_SENT:5},JoinChannelError={JOIN_CHANNEL_ERR_FAILURE:1,JOIN_CHANNEL_ERR_REJECTED:2,JOIN_CHANNEL_ERR_INVALID_ARGUMENT:3,JOIN_CHANNEL_TIMEOUT:4,JOIN_CHANNEL_ERR_EXCEED_LIMIT:5,JOIN_CHANNEL_ERR_ALREADY_JOINED:6,JOIN_CHANNEL_ERR_TOO_OFTEN:7,JOIN_CHANNEL_ERR_JOIN_SAME_CHANNEL_TOO_OFTEN:8,JOIN_CHANNEL_ERR_USER_NOT_LOGGED_IN:102,JOIN_CHANNEL_ERR_ABORTED_BY_LEAVE:201,JOIN_CHANNEL_ERR_ALREADY_JOINED_CHANNEL_OF_SAME_ID:202},LeaveChannelError={LEAVE_CHANNEL_ERR_FAILURE:1,LEAVE_CHANNEL_ERR_REJECTED:2,LEAVE_CHANNEL_ERR_NOT_IN_CHANNEL:3,LEAVE_CHANNEL_ERR_USER_NOT_LOGGED_IN:102},LoginError={LOGIN_ERR_UNKNOWN:1,LOGIN_ERR_REJECTED:2,LOGIN_ERR_INVALID_ARGUMENT:3,LOGIN_ERR_INVALID_APP_ID:4,LOGIN_ERR_INVALID_TOKEN:5,LOGIN_ERR_TOKEN_EXPIRED:6,LOGIN_ERR_NOT_AUTHORIZED:7,LOGIN_ERR_ALREADY_LOGIN:8,LOGIN_ERR_TIMEOUT:9,LOGIN_ERR_TOO_OFTEN:10,LOGIN_ERR_ABORTED_BY_LOGOUT:201},LogoutError={LOGOUT_ERR_USER_NOT_LOGGED_IN:102},PeerMessageError={PEER_MESSAGE_ERR_FAILURE:1,PEER_MESSAGE_ERR_TIMEOUT:2,PEER_MESSAGE_ERR_TOO_OFTEN:5,PEER_MESSAGE_ERR_INVALID_USERID:6,PEER_MESSAGE_ERR_INVALID_MESSAGE:7,PEER_MESSAGE_ERR_USER_NOT_LOGGED_IN:102},QueryPeersOnlineStatusError={QUERY_PEERS_ONLINE_STATUS_ERR_INVALID_ARGUMENT:2,QUERY_PEERS_ONLINE_STATUS_ERR_REJECTED:3,QUERY_PEERS_ONLINE_STATUS_ERR_TIMEOUT:4,QUERY_PEERS_ONLINE_STATUS_ERR_TOO_OFTEN:5,QUERY_PEERS_ONLINE_STATUS_ERR_USER_NOT_LOGGED_IN:102},RenewTokenError={RENEW_TOKEN_ERR_FAILURE:1,RENEW_TOKEN_ERR_INVALID_ARGUMENT:2,RENEW_TOKEN_ERR_REJECTED:3,RENEW_TOKEN_ERR_TOO_OFTEN:4,RENEW_TOKEN_ERR_TOKEN_EXPIRED:5,RENEW_TOKEN_ERR_INVALID_TOKEN:6,RENEW_TOKEN_ERR_USER_NOT_LOGGED_IN:102,RENEW_TOKEN_ERR_ABORTED_BY_LOGOUT:201},GetChannelMemberCountErrCode={GET_CHANNEL_MEMBER_COUNT_ERR_FAILURE:1,GET_CHANNEL_MEMBER_COUNT_ERR_INVALID_ARGUMENT:2,GET_CHANNEL_MEMBER_COUNT_ERR_TOO_OFTEN:3,GET_CHANNEL_MEMBER_COUNT_ERR_TIMEOUT:4,GET_CHANNEL_MEMBER_COUNT_ERR_EXCEED_LIMIT:5,GET_CHANNEL_MEMBER_COUNT_ERR_NOT_INITIALIZED:101,GET_CHANNEL_MEMBER_COUNT_ERR_USER_NOT_LOGGED_IN:102},PeerSubscriptionStatusError={PEER_SUBSCRIPTION_STATUS_ERR_FAILURE:1,PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT:2,PEER_SUBSCRIPTION_STATUS_ERR_REJECTED:3,PEER_SUBSCRIPTION_STATUS_ERR_TIMEOUT:4,PEER_SUBSCRIPTION_STATUS_ERR_TOO_OFTEN:5,PEER_SUBSCRIPTION_STATUS_ERR_OVERFLOW:6,PEER_SUBSCRIPTION_STATUS_ERR_USER_NOT_LOGGED_IN:102};var ATTRIBUTE_OPERATION_ERR_FAILURE=AttributeOperationError.ATTRIBUTE_OPERATION_ERR_FAILURE,ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT=AttributeOperationError.ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT,ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW=AttributeOperationError.ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW,ATTRIBUTE_OPERATION_ERR_USER_NOT_FOUND=AttributeOperationError.ATTRIBUTE_OPERATION_ERR_USER_NOT_FOUND,ATTRIBUTE_OPERATION_ERR_TIMEOUT=AttributeOperationError.ATTRIBUTE_OPERATION_ERR_TIMEOUT,ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN=AttributeOperationError.ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN,CHANNEL_MESSAGE_ERR_FAILURE=ChannelMessageError.CHANNEL_MESSAGE_ERR_FAILURE,CHANNEL_MESSAGE_ERR_TIMEOUT=ChannelMessageError.CHANNEL_MESSAGE_ERR_TIMEOUT,CHANNEL_MESSAGE_ERR_INVALID_MESSAGE=ChannelMessageError.CHANNEL_MESSAGE_ERR_INVALID_MESSAGE,CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN=ChannelMessageError.CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN,CREATE_CHANNEL_ERR_INVALID_ARGUMENT=CreateChannelError.CREATE_CHANNEL_ERR_INVALID_ARGUMENT,CREATE_INSTANCE_ERR_INVALID_ARGUMENT=CreateInstanceError.CREATE_INSTANCE_ERR_INVALID_ARGUMENT,GET_CHANNEL_MEMBER_COUNT_ERR_INVALID_ARGUMENT=GetChannelMemberCountErrCode.GET_CHANNEL_MEMBER_COUNT_ERR_INVALID_ARGUMENT,GET_CHANNEL_MEMBER_COUNT_ERR_TIMEOUT=GetChannelMemberCountErrCode.GET_CHANNEL_MEMBER_COUNT_ERR_TIMEOUT,GET_CHANNEL_MEMBER_COUNT_ERR_EXCEED_LIMIT=GetChannelMemberCountErrCode.GET_CHANNEL_MEMBER_COUNT_ERR_EXCEED_LIMIT,GET_CHANNEL_MEMBER_COUNT_ERR_USER_NOT_LOGGED_IN=GetChannelMemberCountErrCode.GET_CHANNEL_MEMBER_COUNT_ERR_USER_NOT_LOGGED_IN,GET_MEMBERS_ERR_FAILURE=GetMembersError.GET_MEMBERS_ERR_FAILURE,GET_MEMBERS_ERR_REJECTED=GetMembersError.GET_MEMBERS_ERR_REJECTED,GET_MEMBERS_ERR_NOT_IN_CHANNEL=GetMembersError.GET_MEMBERS_ERR_NOT_IN_CHANNEL,GET_MEMBERS_ERR_USER_NOT_LOGGED_IN=GetMembersError.GET_MEMBERS_ERR_USER_NOT_LOGGED_IN,INVITATION_API_CALL_ERR_INVALID_ARGUMENT=InvitationApiCallError.INVITATION_API_CALL_ERR_INVALID_ARGUMENT,INVITATION_API_CALL_ERR_NOT_STARTED=InvitationApiCallError.INVITATION_API_CALL_ERR_NOT_STARTED,INVITATION_API_CALL_ERR_ALREADY_END=InvitationApiCallError.INVITATION_API_CALL_ERR_ALREADY_END,INVITATION_API_CALL_ERR_ALREADY_ACCEPT=InvitationApiCallError.INVITATION_API_CALL_ERR_ALREADY_ACCEPT,INVITATION_API_CALL_ERR_ALREADY_SENT=InvitationApiCallError.INVITATION_API_CALL_ERR_ALREADY_SENT,JOIN_CHANNEL_ERR_FAILURE=JoinChannelError.JOIN_CHANNEL_ERR_FAILURE,JOIN_CHANNEL_ERR_INVALID_ARGUMENT=JoinChannelError.JOIN_CHANNEL_ERR_INVALID_ARGUMENT,JOIN_CHANNEL_TIMEOUT=JoinChannelError.JOIN_CHANNEL_TIMEOUT,JOIN_CHANNEL_ERR_EXCEED_LIMIT=JoinChannelError.JOIN_CHANNEL_ERR_EXCEED_LIMIT,JOIN_CHANNEL_ERR_ALREADY_JOINED=JoinChannelError.JOIN_CHANNEL_ERR_ALREADY_JOINED,JOIN_CHANNEL_ERR_USER_NOT_LOGGED_IN=JoinChannelError.JOIN_CHANNEL_ERR_USER_NOT_LOGGED_IN,JOIN_CHANNEL_ERR_ALREADY_JOINED_CHANNEL_OF_SAME_ID=JoinChannelError.JOIN_CHANNEL_ERR_ALREADY_JOINED_CHANNEL_OF_SAME_ID,LEAVE_CHANNEL_ERR_FAILURE=LeaveChannelError.LEAVE_CHANNEL_ERR_FAILURE,LEAVE_CHANNEL_ERR_REJECTED=LeaveChannelError.LEAVE_CHANNEL_ERR_REJECTED,LEAVE_CHANNEL_ERR_NOT_IN_CHANNEL=LeaveChannelError.LEAVE_CHANNEL_ERR_NOT_IN_CHANNEL,LEAVE_CHANNEL_ERR_USER_NOT_LOGGED_IN=LeaveChannelError.LEAVE_CHANNEL_ERR_USER_NOT_LOGGED_IN,LOGIN_ERR_UNKNOWN=LoginError.LOGIN_ERR_UNKNOWN,LOGIN_ERR_REJECTED=LoginError.LOGIN_ERR_REJECTED,LOGIN_ERR_INVALID_ARGUMENT=LoginError.LOGIN_ERR_INVALID_ARGUMENT,LOGIN_ERR_INVALID_APP_ID=LoginError.LOGIN_ERR_INVALID_APP_ID,LOGIN_ERR_INVALID_TOKEN=LoginError.LOGIN_ERR_INVALID_TOKEN,LOGIN_ERR_TOKEN_EXPIRED=LoginError.LOGIN_ERR_TOKEN_EXPIRED,LOGIN_ERR_ALREADY_LOGIN=LoginError.LOGIN_ERR_ALREADY_LOGIN,LOGIN_ERR_TIMEOUT=LoginError.LOGIN_ERR_TIMEOUT,LOGIN_ERR_TOO_OFTEN=LoginError.LOGIN_ERR_TOO_OFTEN,LOGOUT_ERR_USER_NOT_LOGGED_IN=LogoutError.LOGOUT_ERR_USER_NOT_LOGGED_IN,PEER_MESSAGE_ERR_FAILURE=PeerMessageError.PEER_MESSAGE_ERR_FAILURE,PEER_MESSAGE_ERR_TIMEOUT=PeerMessageError.PEER_MESSAGE_ERR_TIMEOUT,PEER_MESSAGE_ERR_INVALID_USERID=PeerMessageError.PEER_MESSAGE_ERR_INVALID_USERID,PEER_MESSAGE_ERR_INVALID_MESSAGE=PeerMessageError.PEER_MESSAGE_ERR_INVALID_MESSAGE,PEER_MESSAGE_ERR_USER_NOT_LOGGED_IN=PeerMessageError.PEER_MESSAGE_ERR_USER_NOT_LOGGED_IN,QUERY_PEERS_ONLINE_STATUS_ERR_INVALID_ARGUMENT=QueryPeersOnlineStatusError.QUERY_PEERS_ONLINE_STATUS_ERR_INVALID_ARGUMENT,QUERY_PEERS_ONLINE_STATUS_ERR_TIMEOUT=QueryPeersOnlineStatusError.QUERY_PEERS_ONLINE_STATUS_ERR_TIMEOUT,QUERY_PEERS_ONLINE_STATUS_ERR_USER_NOT_LOGGED_IN=QueryPeersOnlineStatusError.QUERY_PEERS_ONLINE_STATUS_ERR_USER_NOT_LOGGED_IN,RENEW_TOKEN_ERR_FAILURE=RenewTokenError.RENEW_TOKEN_ERR_FAILURE,RENEW_TOKEN_ERR_INVALID_ARGUMENT=RenewTokenError.RENEW_TOKEN_ERR_INVALID_ARGUMENT,RENEW_TOKEN_ERR_TOKEN_EXPIRED=RenewTokenError.RENEW_TOKEN_ERR_TOKEN_EXPIRED,RENEW_TOKEN_ERR_INVALID_TOKEN=RenewTokenError.RENEW_TOKEN_ERR_INVALID_TOKEN,RENEW_TOKEN_ERR_USER_NOT_LOGGED_IN=RenewTokenError.RENEW_TOKEN_ERR_USER_NOT_LOGGED_IN,PEER_SUBSCRIPTION_STATUS_ERR_FAILURE=PeerSubscriptionStatusError.PEER_SUBSCRIPTION_STATUS_ERR_FAILURE,PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT=PeerSubscriptionStatusError.PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT,PEER_SUBSCRIPTION_STATUS_ERR_TIMEOUT=PeerSubscriptionStatusError.PEER_SUBSCRIPTION_STATUS_ERR_TIMEOUT,PEER_SUBSCRIPTION_STATUS_ERR_OVERFLOW=PeerSubscriptionStatusError.PEER_SUBSCRIPTION_STATUS_ERR_OVERFLOW,PEER_SUBSCRIPTION_STATUS_ERR_USER_NOT_LOGGED_IN=PeerSubscriptionStatusError.PEER_SUBSCRIPTION_STATUS_ERR_USER_NOT_LOGGED_IN,runtime_1=createCommonjsModule(function(e){var t=function(e){var t,r=Object.prototype,n=r.hasOwnProperty,o="function"==typeof Symbol?Symbol:{},i=o.iterator||"@@iterator",s=o.asyncIterator||"@@asyncIterator",a=o.toStringTag||"@@toStringTag";function u(e,t,r,n){var o=t&&t.prototype instanceof h?t:h,i=Object.create(o.prototype),s=new R(n||[]);return i._invoke=function(e,t,r){var n=c;return function(o,i){if(n===f)throw new Error("Generator is already running");if(n===d){if("throw"===o)throw i;return A()}for(r.method=o,r.arg=i;;){var s=r.delegate;if(s){var a=S(s,r);if(a){if(a===g)continue;return a}}if("next"===r.method)r.sent=r._sent=r.arg;else if("throw"===r.method){if(n===c)throw n=d,r.arg;r.dispatchException(r.arg)}else"return"===r.method&&r.abrupt("return",r.arg);n=f;var u=l(e,t,r);if("normal"===u.type){if(n=r.done?d:p,u.arg===g)continue;return{value:u.arg,done:r.done}}"throw"===u.type&&(n=d,r.method="throw",r.arg=u.arg)}}}(e,r,s),i}function l(e,t,r){try{return{type:"normal",arg:e.call(t,r)}}catch(e){return{type:"throw",arg:e}}}e.wrap=u;var c="suspendedStart",p="suspendedYield",f="executing",d="completed",g={};function h(){}function b(){}function _(){}var y={};y[i]=function(){return this};var m=Object.getPrototypeOf,v=m&&m(m(T([])));v&&v!==r&&n.call(v,i)&&(y=v);var $=_.prototype=h.prototype=Object.create(y);function E(e){["next","throw","return"].forEach(function(t){e[t]=function(e){return this._invoke(t,e)}})}function I(e){var t;this._invoke=function(r,o){function i(){return new Promise(function(t,i){!function t(r,o,i,s){var a=l(e[r],e,o);if("throw"!==a.type){var u=a.arg,c=u.value;return c&&"object"===_typeof(c)&&n.call(c,"__await")?Promise.resolve(c.__await).then(function(e){t("next",e,i,s)},function(e){t("throw",e,i,s)}):Promise.resolve(c).then(function(e){u.value=e,i(u)},function(e){return t("throw",e,i,s)})}s(a.arg)}(r,o,t,i)})}return t=t?t.then(i,i):i()}}function S(e,r){var n=e.iterator[r.method];if(n===t){if(r.delegate=null,"throw"===r.method){if(e.iterator.return&&(r.method="return",r.arg=t,S(e,r),"throw"===r.method))return g;r.method="throw",r.arg=new TypeError("The iterator does not provide a 'throw' method")}return g}var o=l(n,e.iterator,r.arg);if("throw"===o.type)return r.method="throw",r.arg=o.arg,r.delegate=null,g;var i=o.arg;return i?i.done?(r[e.resultName]=i.value,r.next=e.nextLoc,"return"!==r.method&&(r.method="next",r.arg=t),r.delegate=null,g):i:(r.method="throw",r.arg=new TypeError("iterator result is not an object"),r.delegate=null,g)}function w(e){var t={tryLoc:e[0]};1 in e&&(t.catchLoc=e[1]),2 in e&&(t.finallyLoc=e[2],t.afterLoc=e[3]),this.tryEntries.push(t)}function O(e){var t=e.completion||{};t.type="normal",delete t.arg,e.completion=t}function R(e){this.tryEntries=[{tryLoc:"root"}],e.forEach(w,this),this.reset(!0)}function T(e){if(e){var r=e[i];if(r)return r.call(e);if("function"==typeof e.next)return e;if(!isNaN(e.length)){var o=-1,s=function r(){for(;++o<e.length;)if(n.call(e,o))return r.value=e[o],r.done=!1,r;return r.value=t,r.done=!0,r};return s.next=s}}return{next:A}}function A(){return{value:t,done:!0}}return b.prototype=$.constructor=_,_.constructor=b,_[a]=b.displayName="GeneratorFunction",e.isGeneratorFunction=function(e){var t="function"==typeof e&&e.constructor;return!!t&&(t===b||"GeneratorFunction"===(t.displayName||t.name))},e.mark=function(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,_):(e.__proto__=_,a in e||(e[a]="GeneratorFunction")),e.prototype=Object.create($),e},e.awrap=function(e){return{__await:e}},E(I.prototype),I.prototype[s]=function(){return this},e.AsyncIterator=I,e.async=function(t,r,n,o){var i=new I(u(t,r,n,o));return e.isGeneratorFunction(r)?i:i.next().then(function(e){return e.done?e.value:i.next()})},E($),$[a]="Generator",$[i]=function(){return this},$.toString=function(){return"[object Generator]"},e.keys=function(e){var t=[];for(var r in e)t.push(r);return t.reverse(),function r(){for(;t.length;){var n=t.pop();if(n in e)return r.value=n,r.done=!1,r}return r.done=!0,r}},e.values=T,R.prototype={constructor:R,reset:function(e){if(this.prev=0,this.next=0,this.sent=this._sent=t,this.done=!1,this.delegate=null,this.method="next",this.arg=t,this.tryEntries.forEach(O),!e)for(var r in this)"t"===r.charAt(0)&&n.call(this,r)&&!isNaN(+r.slice(1))&&(this[r]=t)},stop:function(){this.done=!0;var e=this.tryEntries[0].completion;if("throw"===e.type)throw e.arg;return this.rval},dispatchException:function(e){if(this.done)throw e;var r=this;function o(n,o){return a.type="throw",a.arg=e,r.next=n,o&&(r.method="next",r.arg=t),!!o}for(var i=this.tryEntries.length-1;i>=0;--i){var s=this.tryEntries[i],a=s.completion;if("root"===s.tryLoc)return o("end");if(s.tryLoc<=this.prev){var u=n.call(s,"catchLoc"),l=n.call(s,"finallyLoc");if(u&&l){if(this.prev<s.catchLoc)return o(s.catchLoc,!0);if(this.prev<s.finallyLoc)return o(s.finallyLoc)}else if(u){if(this.prev<s.catchLoc)return o(s.catchLoc,!0)}else{if(!l)throw new Error("try statement without catch or finally");if(this.prev<s.finallyLoc)return o(s.finallyLoc)}}}},abrupt:function(e,t){for(var r=this.tryEntries.length-1;r>=0;--r){var o=this.tryEntries[r];if(o.tryLoc<=this.prev&&n.call(o,"finallyLoc")&&this.prev<o.finallyLoc){var i=o;break}}i&&("break"===e||"continue"===e)&&i.tryLoc<=t&&t<=i.finallyLoc&&(i=null);var s=i?i.completion:{};return s.type=e,s.arg=t,i?(this.method="next",this.next=i.finallyLoc,g):this.complete(s)},complete:function(e,t){if("throw"===e.type)throw e.arg;return"break"===e.type||"continue"===e.type?this.next=e.arg:"return"===e.type?(this.rval=this.arg=e.arg,this.method="return",this.next="end"):"normal"===e.type&&t&&(this.next=t),g},finish:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.finallyLoc===e)return this.complete(r.completion,r.afterLoc),O(r),g}},catch:function(e){for(var t=this.tryEntries.length-1;t>=0;--t){var r=this.tryEntries[t];if(r.tryLoc===e){var n=r.completion;if("throw"===n.type){var o=n.arg;O(r)}return o}}throw new Error("illegal catch attempt")},delegateYield:function(e,r,n){return this.delegate={iterator:T(e),resultName:r,nextLoc:n},"next"===this.method&&(this.arg=t),g}},e}(e.exports);try{regeneratorRuntime=t}catch(e){Function("r","regeneratorRuntime = r")(t)}}),regenerator=runtime_1,setPrototypeOf=_setProto.set,_inheritIfRequired=function(e,t,r){var n,o=t.constructor;return o!==r&&"function"==typeof o&&(n=o.prototype)!==r.prototype&&_isObject(n)&&setPrototypeOf&&setPrototypeOf(e,n),e},dP$3=_objectDp.f,gOPN$2=_objectGopn.f,$RegExp=_global.RegExp,Base=$RegExp,proto$1=$RegExp.prototype,re1=/a/g,re2=/a/g,CORRECT_NEW=new $RegExp(re1)!==re1;if(_descriptors&&(!CORRECT_NEW||_fails(function(){return re2[_wks("match")]=!1,$RegExp(re1)!=re1||$RegExp(re2)==re2||"/a/i"!=$RegExp(re1,"i")}))){$RegExp=function(e,t){var r=this instanceof $RegExp,n=_isRegexp(e),o=void 0===t;return!r&&n&&e.constructor===$RegExp&&o?e:_inheritIfRequired(CORRECT_NEW?new Base(n&&!o?e.source:e,t):Base((n=e instanceof $RegExp)?e.source:e,n&&o?_flags.call(e):t),r?this:proto$1,$RegExp)};for(var proxy=function(e){e in $RegExp||dP$3($RegExp,e,{configurable:!0,get:function(){return Base[e]},set:function(t){Base[e]=t}})},keys=gOPN$2(Base),i$3=0;keys.length>i$3;)proxy(keys[i$3++]);proto$1.constructor=$RegExp,$RegExp.prototype=proto$1,_redefine(_global,"RegExp",$RegExp)}_setSpecies("RegExp");var freeGlobal="object"==_typeof(commonjsGlobal)&&commonjsGlobal&&commonjsGlobal.Object===Object&&commonjsGlobal,_freeGlobal=freeGlobal,freeSelf="object"==("undefined"==typeof self?"undefined":_typeof(self))&&self&&self.Object===Object&&self,root=_freeGlobal||freeSelf||Function("return this")(),_root=root,_Symbol2=_root.Symbol,_Symbol=_Symbol2,objectProto=Object.prototype,hasOwnProperty$1=objectProto.hasOwnProperty,nativeObjectToString=objectProto.toString,symToStringTag=_Symbol?_Symbol.toStringTag:void 0;function getRawTag(e){var t=hasOwnProperty$1.call(e,symToStringTag),r=e[symToStringTag];try{e[symToStringTag]=void 0;var n=!0}catch(e){}var o=nativeObjectToString.call(e);return n&&(t?e[symToStringTag]=r:delete e[symToStringTag]),o}var _getRawTag=getRawTag,objectProto$1=Object.prototype,nativeObjectToString$1=objectProto$1.toString;function objectToString(e){return nativeObjectToString$1.call(e)}var _objectToString=objectToString,nullTag="[object Null]",undefinedTag="[object Undefined]",symToStringTag$1=_Symbol?_Symbol.toStringTag:void 0;function baseGetTag(e){return null==e?void 0===e?undefinedTag:nullTag:symToStringTag$1&&symToStringTag$1 in Object(e)?_getRawTag(e):_objectToString(e)}var _baseGetTag=baseGetTag;function isObject(e){var t=_typeof(e);return null!=e&&("object"==t||"function"==t)}var isObject_1=isObject,asyncTag="[object AsyncFunction]",funcTag="[object Function]",genTag="[object GeneratorFunction]",proxyTag="[object Proxy]";function isFunction(e){if(!isObject_1(e))return!1;var t=_baseGetTag(e);return t==funcTag||t==genTag||t==asyncTag||t==proxyTag}var isFunction_1=isFunction,coreJsData=_root["__core-js_shared__"],_coreJsData=coreJsData,maskSrcKey=(uid=/[^.]+$/.exec(_coreJsData&&_coreJsData.keys&&_coreJsData.keys.IE_PROTO||""),uid?"Symbol(src)_1."+uid:""),uid;function isMasked(e){return!!maskSrcKey&&maskSrcKey in e}var _isMasked=isMasked,funcProto=Function.prototype,funcToString=funcProto.toString;function toSource(e){if(null!=e){try{return funcToString.call(e)}catch(e){}try{return e+""}catch(e){}}return""}var _toSource=toSource,reRegExpChar=/[\\^$.*+?()[\]{}|]/g,reIsHostCtor=/^\[object .+?Constructor\]$/,funcProto$1=Function.prototype,objectProto$2=Object.prototype,funcToString$1=funcProto$1.toString,hasOwnProperty$2=objectProto$2.hasOwnProperty,reIsNative=RegExp("^"+funcToString$1.call(hasOwnProperty$2).replace(reRegExpChar,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");function baseIsNative(e){return!(!isObject_1(e)||_isMasked(e))&&(isFunction_1(e)?reIsNative:reIsHostCtor).test(_toSource(e))}var _baseIsNative=baseIsNative;function getValue(e,t){return null==e?void 0:e[t]}var _getValue=getValue;function getNative(e,t){var r=_getValue(e,t);return _baseIsNative(r)?r:void 0}var _getNative=getNative,nativeCreate=_getNative(Object,"create"),_nativeCreate=nativeCreate;function hashClear(){this.__data__=_nativeCreate?_nativeCreate(null):{},this.size=0}var _hashClear=hashClear;function hashDelete(e){var t=this.has(e)&&delete this.__data__[e];return this.size-=t?1:0,t}var _hashDelete=hashDelete,HASH_UNDEFINED="__lodash_hash_undefined__",objectProto$3=Object.prototype,hasOwnProperty$3=objectProto$3.hasOwnProperty;function hashGet(e){var t=this.__data__;if(_nativeCreate){var r=t[e];return r===HASH_UNDEFINED?void 0:r}return hasOwnProperty$3.call(t,e)?t[e]:void 0}var _hashGet=hashGet,objectProto$4=Object.prototype,hasOwnProperty$4=objectProto$4.hasOwnProperty;function hashHas(e){var t=this.__data__;return _nativeCreate?void 0!==t[e]:hasOwnProperty$4.call(t,e)}var _hashHas=hashHas,HASH_UNDEFINED$1="__lodash_hash_undefined__";function hashSet(e,t){var r=this.__data__;return this.size+=this.has(e)?0:1,r[e]=_nativeCreate&&void 0===t?HASH_UNDEFINED$1:t,this}var _hashSet=hashSet;function Hash(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}Hash.prototype.clear=_hashClear,Hash.prototype.delete=_hashDelete,Hash.prototype.get=_hashGet,Hash.prototype.has=_hashHas,Hash.prototype.set=_hashSet;var _Hash=Hash;function listCacheClear(){this.__data__=[],this.size=0}var _listCacheClear=listCacheClear;function eq(e,t){return e===t||e!=e&&t!=t}var eq_1=eq;function assocIndexOf(e,t){for(var r=e.length;r--;)if(eq_1(e[r][0],t))return r;return-1}var _assocIndexOf=assocIndexOf,arrayProto=Array.prototype,splice=arrayProto.splice;function listCacheDelete(e){var t=this.__data__,r=_assocIndexOf(t,e);return!(r<0)&&(r==t.length-1?t.pop():splice.call(t,r,1),--this.size,!0)}var _listCacheDelete=listCacheDelete;function listCacheGet(e){var t=this.__data__,r=_assocIndexOf(t,e);return r<0?void 0:t[r][1]}var _listCacheGet=listCacheGet;function listCacheHas(e){return _assocIndexOf(this.__data__,e)>-1}var _listCacheHas=listCacheHas;function listCacheSet(e,t){var r=this.__data__,n=_assocIndexOf(r,e);return n<0?(++this.size,r.push([e,t])):r[n][1]=t,this}var _listCacheSet=listCacheSet;function ListCache(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}ListCache.prototype.clear=_listCacheClear,ListCache.prototype.delete=_listCacheDelete,ListCache.prototype.get=_listCacheGet,ListCache.prototype.has=_listCacheHas,ListCache.prototype.set=_listCacheSet;var _ListCache=ListCache,Map$1=_getNative(_root,"Map"),_Map=Map$1;function mapCacheClear(){this.size=0,this.__data__={hash:new _Hash,map:new(_Map||_ListCache),string:new _Hash}}var _mapCacheClear=mapCacheClear;function isKeyable(e){var t=_typeof(e);return"string"==t||"number"==t||"symbol"==t||"boolean"==t?"__proto__"!==e:null===e}var _isKeyable=isKeyable;function getMapData(e,t){var r=e.__data__;return _isKeyable(t)?r["string"==typeof t?"string":"hash"]:r.map}var _getMapData=getMapData;function mapCacheDelete(e){var t=_getMapData(this,e).delete(e);return this.size-=t?1:0,t}var _mapCacheDelete=mapCacheDelete;function mapCacheGet(e){return _getMapData(this,e).get(e)}var _mapCacheGet=mapCacheGet;function mapCacheHas(e){return _getMapData(this,e).has(e)}var _mapCacheHas=mapCacheHas;function mapCacheSet(e,t){var r=_getMapData(this,e),n=r.size;return r.set(e,t),this.size+=r.size==n?0:1,this}var _mapCacheSet=mapCacheSet;function MapCache(e){var t=-1,r=null==e?0:e.length;for(this.clear();++t<r;){var n=e[t];this.set(n[0],n[1])}}MapCache.prototype.clear=_mapCacheClear,MapCache.prototype.delete=_mapCacheDelete,MapCache.prototype.get=_mapCacheGet,MapCache.prototype.has=_mapCacheHas,MapCache.prototype.set=_mapCacheSet;var _MapCache=MapCache,HASH_UNDEFINED$2="__lodash_hash_undefined__";function setCacheAdd(e){return this.__data__.set(e,HASH_UNDEFINED$2),this}var _setCacheAdd=setCacheAdd;function setCacheHas(e){return this.__data__.has(e)}var _setCacheHas=setCacheHas;function SetCache(e){var t=-1,r=null==e?0:e.length;for(this.__data__=new _MapCache;++t<r;)this.add(e[t])}SetCache.prototype.add=SetCache.prototype.push=_setCacheAdd,SetCache.prototype.has=_setCacheHas;var _SetCache=SetCache;function baseFindIndex(e,t,r,n){for(var o=e.length,i=r+(n?1:-1);n?i--:++i<o;)if(t(e[i],i,e))return i;return-1}var _baseFindIndex=baseFindIndex;function baseIsNaN(e){return e!=e}var _baseIsNaN=baseIsNaN;function strictIndexOf(e,t,r){for(var n=r-1,o=e.length;++n<o;)if(e[n]===t)return n;return-1}var _strictIndexOf=strictIndexOf;function baseIndexOf(e,t,r){return t==t?_strictIndexOf(e,t,r):_baseFindIndex(e,_baseIsNaN,r)}var _baseIndexOf=baseIndexOf;function arrayIncludes(e,t){return!!(null==e?0:e.length)&&_baseIndexOf(e,t,0)>-1}var _arrayIncludes$1=arrayIncludes;function arrayIncludesWith(e,t,r){for(var n=-1,o=null==e?0:e.length;++n<o;)if(r(t,e[n]))return!0;return!1}var _arrayIncludesWith=arrayIncludesWith;function cacheHas(e,t){return e.has(t)}var _cacheHas=cacheHas,Set$1=_getNative(_root,"Set"),_Set=Set$1;function noop(){}var noop_1=noop;function setToArray(e){var t=-1,r=Array(e.size);return e.forEach(function(e){r[++t]=e}),r}var _setToArray=setToArray,INFINITY=1/0,createSet=_Set&&1/_setToArray(new _Set([,-0]))[1]==INFINITY?function(e){return new _Set(e)}:noop_1,_createSet=createSet,LARGE_ARRAY_SIZE=200;function baseUniq(e,t,r){var n=-1,o=_arrayIncludes$1,i=e.length,s=!0,a=[],u=a;if(r)s=!1,o=_arrayIncludesWith;else if(i>=LARGE_ARRAY_SIZE){var l=t?null:_createSet(e);if(l)return _setToArray(l);s=!1,o=_cacheHas,u=new _SetCache}else u=t?[]:a;e:for(;++n<i;){var c=e[n],p=t?t(c):c;if(c=r||0!==c?c:0,s&&p==p){for(var f=u.length;f--;)if(u[f]===p)continue e;t&&u.push(p),a.push(c)}else o(u,p,r)||(u!==a&&u.push(p),a.push(c))}return a}var _baseUniq=baseUniq;function uniq(e){return e&&e.length?_baseUniq(e):[]}var uniq_1=uniq;function fromPairs(e){for(var t=-1,r=null==e?0:e.length,n={};++t<r;){var o=e[t];n[o[0]]=o[1]}return n}var fromPairs_1=fromPairs;function arrayMap(e,t){for(var r=-1,n=null==e?0:e.length,o=Array(n);++r<n;)o[r]=t(e[r],r,e);return o}var _arrayMap=arrayMap;function stackClear(){this.__data__=new _ListCache,this.size=0}var _stackClear=stackClear;function stackDelete(e){var t=this.__data__,r=t.delete(e);return this.size=t.size,r}var _stackDelete=stackDelete;function stackGet(e){return this.__data__.get(e)}var _stackGet=stackGet;function stackHas(e){return this.__data__.has(e)}var _stackHas=stackHas,LARGE_ARRAY_SIZE$1=200;function stackSet(e,t){var r=this.__data__;if(r instanceof _ListCache){var n=r.__data__;if(!_Map||n.length<LARGE_ARRAY_SIZE$1-1)return n.push([e,t]),this.size=++r.size,this;r=this.__data__=new _MapCache(n)}return r.set(e,t),this.size=r.size,this}var _stackSet=stackSet;function Stack(e){var t=this.__data__=new _ListCache(e);this.size=t.size}Stack.prototype.clear=_stackClear,Stack.prototype.delete=_stackDelete,Stack.prototype.get=_stackGet,Stack.prototype.has=_stackHas,Stack.prototype.set=_stackSet;var _Stack=Stack;function arrayEach(e,t){for(var r=-1,n=null==e?0:e.length;++r<n&&!1!==t(e[r],r,e););return e}var _arrayEach=arrayEach,defineProperty$1=function(){try{var e=_getNative(Object,"defineProperty");return e({},"",{}),e}catch(e){}}(),_defineProperty$1=defineProperty$1;function baseAssignValue(e,t,r){"__proto__"==t&&_defineProperty$1?_defineProperty$1(e,t,{configurable:!0,enumerable:!0,value:r,writable:!0}):e[t]=r}var _baseAssignValue=baseAssignValue,objectProto$5=Object.prototype,hasOwnProperty$5=objectProto$5.hasOwnProperty;function assignValue(e,t,r){var n=e[t];hasOwnProperty$5.call(e,t)&&eq_1(n,r)&&(void 0!==r||t in e)||_baseAssignValue(e,t,r)}var _assignValue=assignValue;function copyObject(e,t,r,n){var o=!r;r||(r={});for(var i=-1,s=t.length;++i<s;){var a=t[i],u=n?n(r[a],e[a],a,r,e):void 0;void 0===u&&(u=e[a]),o?_baseAssignValue(r,a,u):_assignValue(r,a,u)}return r}var _copyObject=copyObject;function baseTimes(e,t){for(var r=-1,n=Array(e);++r<e;)n[r]=t(r);return n}var _baseTimes=baseTimes;function isObjectLike(e){return null!=e&&"object"==_typeof(e)}var isObjectLike_1=isObjectLike,argsTag="[object Arguments]";function baseIsArguments(e){return isObjectLike_1(e)&&_baseGetTag(e)==argsTag}var _baseIsArguments=baseIsArguments,objectProto$6=Object.prototype,hasOwnProperty$6=objectProto$6.hasOwnProperty,propertyIsEnumerable=objectProto$6.propertyIsEnumerable,isArguments=_baseIsArguments(function(){return arguments}())?_baseIsArguments:function(e){return isObjectLike_1(e)&&hasOwnProperty$6.call(e,"callee")&&!propertyIsEnumerable.call(e,"callee")},isArguments_1=isArguments,isArray=Array.isArray,isArray_1=isArray;function stubFalse(){return!1}var stubFalse_1=stubFalse,isBuffer_1=createCommonjsModule(function(e,t){var r=t&&!t.nodeType&&t,n=r&&e&&!e.nodeType&&e,o=n&&n.exports===r?_root.Buffer:void 0,i=(o?o.isBuffer:void 0)||stubFalse_1;e.exports=i}),MAX_SAFE_INTEGER=9007199254740991,reIsUint=/^(?:0|[1-9]\d*)$/;function isIndex(e,t){var r=_typeof(e);return!!(t=null==t?MAX_SAFE_INTEGER:t)&&("number"==r||"symbol"!=r&&reIsUint.test(e))&&e>-1&&e%1==0&&e<t}var _isIndex=isIndex,MAX_SAFE_INTEGER$1=9007199254740991;function isLength(e){return"number"==typeof e&&e>-1&&e%1==0&&e<=MAX_SAFE_INTEGER$1}var isLength_1=isLength,argsTag$1="[object Arguments]",arrayTag="[object Array]",boolTag="[object Boolean]",dateTag="[object Date]",errorTag="[object Error]",funcTag$1="[object Function]",mapTag="[object Map]",numberTag="[object Number]",objectTag="[object Object]",regexpTag="[object RegExp]",setTag="[object Set]",stringTag="[object String]",weakMapTag="[object WeakMap]",arrayBufferTag="[object ArrayBuffer]",dataViewTag="[object DataView]",float32Tag="[object Float32Array]",float64Tag="[object Float64Array]",int8Tag="[object Int8Array]",int16Tag="[object Int16Array]",int32Tag="[object Int32Array]",uint8Tag="[object Uint8Array]",uint8ClampedTag="[object Uint8ClampedArray]",uint16Tag="[object Uint16Array]",uint32Tag="[object Uint32Array]",typedArrayTags={};function baseIsTypedArray(e){return isObjectLike_1(e)&&isLength_1(e.length)&&!!typedArrayTags[_baseGetTag(e)]}typedArrayTags[float32Tag]=typedArrayTags[float64Tag]=typedArrayTags[int8Tag]=typedArrayTags[int16Tag]=typedArrayTags[int32Tag]=typedArrayTags[uint8Tag]=typedArrayTags[uint8ClampedTag]=typedArrayTags[uint16Tag]=typedArrayTags[uint32Tag]=!0,typedArrayTags[argsTag$1]=typedArrayTags[arrayTag]=typedArrayTags[arrayBufferTag]=typedArrayTags[boolTag]=typedArrayTags[dataViewTag]=typedArrayTags[dateTag]=typedArrayTags[errorTag]=typedArrayTags[funcTag$1]=typedArrayTags[mapTag]=typedArrayTags[numberTag]=typedArrayTags[objectTag]=typedArrayTags[regexpTag]=typedArrayTags[setTag]=typedArrayTags[stringTag]=typedArrayTags[weakMapTag]=!1;var _baseIsTypedArray=baseIsTypedArray;function baseUnary(e){return function(t){return e(t)}}var _baseUnary=baseUnary,_nodeUtil=createCommonjsModule(function(e,t){var r=t&&!t.nodeType&&t,n=r&&e&&!e.nodeType&&e,o=n&&n.exports===r&&_freeGlobal.process,i=function(){try{var e=n&&n.require&&n.require("util").types;return e||o&&o.binding&&o.binding("util")}catch(e){}}();e.exports=i}),nodeIsTypedArray=_nodeUtil&&_nodeUtil.isTypedArray,isTypedArray=nodeIsTypedArray?_baseUnary(nodeIsTypedArray):_baseIsTypedArray,isTypedArray_1=isTypedArray,objectProto$7=Object.prototype,hasOwnProperty$7=objectProto$7.hasOwnProperty;function arrayLikeKeys(e,t){var r=isArray_1(e),n=!r&&isArguments_1(e),o=!r&&!n&&isBuffer_1(e),i=!r&&!n&&!o&&isTypedArray_1(e),s=r||n||o||i,a=s?_baseTimes(e.length,String):[],u=a.length;for(var l in e)!t&&!hasOwnProperty$7.call(e,l)||s&&("length"==l||o&&("offset"==l||"parent"==l)||i&&("buffer"==l||"byteLength"==l||"byteOffset"==l)||_isIndex(l,u))||a.push(l);return a}var _arrayLikeKeys=arrayLikeKeys,objectProto$8=Object.prototype;function isPrototype(e){var t=e&&e.constructor;return e===("function"==typeof t&&t.prototype||objectProto$8)}var _isPrototype=isPrototype,_objectSap=function(e,t){var r=(_core.Object||{})[e]||Object[e],n={};n[e]=t(r),_export(_export.S+_export.F*_fails(function(){r(1)}),"Object",n)};function overArg(e,t){return function(r){return e(t(r))}}_objectSap("keys",function(){return function(e){return _objectKeys(_toObject(e))}});var _overArg=overArg,nativeKeys=_overArg(Object.keys,Object),_nativeKeys=nativeKeys,objectProto$9=Object.prototype,hasOwnProperty$8=objectProto$9.hasOwnProperty;function baseKeys(e){if(!_isPrototype(e))return _nativeKeys(e);var t=[];for(var r in Object(e))hasOwnProperty$8.call(e,r)&&"constructor"!=r&&t.push(r);return t}var _baseKeys=baseKeys;function isArrayLike(e){return null!=e&&isLength_1(e.length)&&!isFunction_1(e)}var isArrayLike_1=isArrayLike;function keys$1(e){return isArrayLike_1(e)?_arrayLikeKeys(e):_baseKeys(e)}var keys_1=keys$1;function baseAssign(e,t){return e&&_copyObject(t,keys_1(t),e)}var _baseAssign=baseAssign;function nativeKeysIn(e){var t=[];if(null!=e)for(var r in Object(e))t.push(r);return t}var _nativeKeysIn=nativeKeysIn,objectProto$a=Object.prototype,hasOwnProperty$9=objectProto$a.hasOwnProperty;function baseKeysIn(e){if(!isObject_1(e))return _nativeKeysIn(e);var t=_isPrototype(e),r=[];for(var n in e)("constructor"!=n||!t&&hasOwnProperty$9.call(e,n))&&r.push(n);return r}var _baseKeysIn=baseKeysIn;function keysIn$1(e){return isArrayLike_1(e)?_arrayLikeKeys(e,!0):_baseKeysIn(e)}var keysIn_1=keysIn$1;function baseAssignIn(e,t){return e&&_copyObject(t,keysIn_1(t),e)}var _baseAssignIn=baseAssignIn,_cloneBuffer=createCommonjsModule(function(e,t){var r=t&&!t.nodeType&&t,n=r&&e&&!e.nodeType&&e,o=n&&n.exports===r?_root.Buffer:void 0,i=o?o.allocUnsafe:void 0;e.exports=function(e,t){if(t)return e.slice();var r=e.length,n=i?i(r):new e.constructor(r);return e.copy(n),n}});function copyArray(e,t){var r=-1,n=e.length;for(t||(t=Array(n));++r<n;)t[r]=e[r];return t}var _copyArray=copyArray;function arrayFilter(e,t){for(var r=-1,n=null==e?0:e.length,o=0,i=[];++r<n;){var s=e[r];t(s,r,e)&&(i[o++]=s)}return i}var _arrayFilter=arrayFilter;function stubArray(){return[]}var stubArray_1=stubArray,objectProto$b=Object.prototype,propertyIsEnumerable$1=objectProto$b.propertyIsEnumerable,nativeGetSymbols=Object.getOwnPropertySymbols,getSymbols=nativeGetSymbols?function(e){return null==e?[]:(e=Object(e),_arrayFilter(nativeGetSymbols(e),function(t){return propertyIsEnumerable$1.call(e,t)}))}:stubArray_1,_getSymbols=getSymbols;function copySymbols(e,t){return _copyObject(e,_getSymbols(e),t)}var _copySymbols=copySymbols;function arrayPush(e,t){for(var r=-1,n=t.length,o=e.length;++r<n;)e[o+r]=t[r];return e}var _arrayPush=arrayPush,getPrototype=_overArg(Object.getPrototypeOf,Object),_getPrototype=getPrototype,nativeGetSymbols$1=Object.getOwnPropertySymbols,getSymbolsIn=nativeGetSymbols$1?function(e){for(var t=[];e;)_arrayPush(t,_getSymbols(e)),e=_getPrototype(e);return t}:stubArray_1,_getSymbolsIn=getSymbolsIn;function copySymbolsIn(e,t){return _copyObject(e,_getSymbolsIn(e),t)}var _copySymbolsIn=copySymbolsIn;function baseGetAllKeys(e,t,r){var n=t(e);return isArray_1(e)?n:_arrayPush(n,r(e))}var _baseGetAllKeys=baseGetAllKeys;function getAllKeys(e){return _baseGetAllKeys(e,keys_1,_getSymbols)}var _getAllKeys=getAllKeys;function getAllKeysIn(e){return _baseGetAllKeys(e,keysIn_1,_getSymbolsIn)}var _getAllKeysIn=getAllKeysIn,DataView$1=_getNative(_root,"DataView"),_DataView=DataView$1,Promise$2=_getNative(_root,"Promise"),_Promise=Promise$2,WeakMap=_getNative(_root,"WeakMap"),_WeakMap=WeakMap,mapTag$1="[object Map]",objectTag$1="[object Object]",promiseTag="[object Promise]",setTag$1="[object Set]",weakMapTag$1="[object WeakMap]",dataViewTag$1="[object DataView]",dataViewCtorString=_toSource(_DataView),mapCtorString=_toSource(_Map),promiseCtorString=_toSource(_Promise),setCtorString=_toSource(_Set),weakMapCtorString=_toSource(_WeakMap),getTag=_baseGetTag;(_DataView&&getTag(new _DataView(new ArrayBuffer(1)))!=dataViewTag$1||_Map&&getTag(new _Map)!=mapTag$1||_Promise&&getTag(_Promise.resolve())!=promiseTag||_Set&&getTag(new _Set)!=setTag$1||_WeakMap&&getTag(new _WeakMap)!=weakMapTag$1)&&(getTag=function(e){var t=_baseGetTag(e),r=t==objectTag$1?e.constructor:void 0,n=r?_toSource(r):"";if(n)switch(n){case dataViewCtorString:return dataViewTag$1;case mapCtorString:return mapTag$1;case promiseCtorString:return promiseTag;case setCtorString:return setTag$1;case weakMapCtorString:return weakMapTag$1}return t});var _getTag=getTag,objectProto$c=Object.prototype,hasOwnProperty$a=objectProto$c.hasOwnProperty;function initCloneArray(e){var t=e.length,r=new e.constructor(t);return t&&"string"==typeof e[0]&&hasOwnProperty$a.call(e,"index")&&(r.index=e.index,r.input=e.input),r}var _initCloneArray=initCloneArray,Uint8Array$1=_root.Uint8Array,_Uint8Array=Uint8Array$1;function cloneArrayBuffer(e){var t=new e.constructor(e.byteLength);return new _Uint8Array(t).set(new _Uint8Array(e)),t}var _cloneArrayBuffer=cloneArrayBuffer;function cloneDataView(e,t){var r=t?_cloneArrayBuffer(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.byteLength)}var _cloneDataView=cloneDataView,reFlags=/\w*$/;function cloneRegExp(e){var t=new e.constructor(e.source,reFlags.exec(e));return t.lastIndex=e.lastIndex,t}var _cloneRegExp=cloneRegExp,symbolProto=_Symbol?_Symbol.prototype:void 0,symbolValueOf=symbolProto?symbolProto.valueOf:void 0;function cloneSymbol(e){return symbolValueOf?Object(symbolValueOf.call(e)):{}}var _cloneSymbol=cloneSymbol;function cloneTypedArray(e,t){var r=t?_cloneArrayBuffer(e.buffer):e.buffer;return new e.constructor(r,e.byteOffset,e.length)}var _cloneTypedArray=cloneTypedArray,boolTag$1="[object Boolean]",dateTag$1="[object Date]",mapTag$2="[object Map]",numberTag$1="[object Number]",regexpTag$1="[object RegExp]",setTag$2="[object Set]",stringTag$1="[object String]",symbolTag="[object Symbol]",arrayBufferTag$1="[object ArrayBuffer]",dataViewTag$2="[object DataView]",float32Tag$1="[object Float32Array]",float64Tag$1="[object Float64Array]",int8Tag$1="[object Int8Array]",int16Tag$1="[object Int16Array]",int32Tag$1="[object Int32Array]",uint8Tag$1="[object Uint8Array]",uint8ClampedTag$1="[object Uint8ClampedArray]",uint16Tag$1="[object Uint16Array]",uint32Tag$1="[object Uint32Array]";function initCloneByTag(e,t,r){var n=e.constructor;switch(t){case arrayBufferTag$1:return _cloneArrayBuffer(e);case boolTag$1:case dateTag$1:return new n(+e);case dataViewTag$2:return _cloneDataView(e,r);case float32Tag$1:case float64Tag$1:case int8Tag$1:case int16Tag$1:case int32Tag$1:case uint8Tag$1:case uint8ClampedTag$1:case uint16Tag$1:case uint32Tag$1:return _cloneTypedArray(e,r);case mapTag$2:return new n;case numberTag$1:case stringTag$1:return new n(e);case regexpTag$1:return _cloneRegExp(e);case setTag$2:return new n;case symbolTag:return _cloneSymbol(e)}}var _initCloneByTag=initCloneByTag,objectCreate=Object.create,baseCreate=function(){function e(){}return function(t){if(!isObject_1(t))return{};if(objectCreate)return objectCreate(t);e.prototype=t;var r=new e;return e.prototype=void 0,r}}(),_baseCreate=baseCreate;function initCloneObject(e){return"function"!=typeof e.constructor||_isPrototype(e)?{}:_baseCreate(_getPrototype(e))}var _initCloneObject=initCloneObject,mapTag$3="[object Map]";function baseIsMap(e){return isObjectLike_1(e)&&_getTag(e)==mapTag$3}var _baseIsMap=baseIsMap,nodeIsMap=_nodeUtil&&_nodeUtil.isMap,isMap=nodeIsMap?_baseUnary(nodeIsMap):_baseIsMap,isMap_1=isMap,setTag$3="[object Set]";function baseIsSet(e){return isObjectLike_1(e)&&_getTag(e)==setTag$3}var _baseIsSet=baseIsSet,nodeIsSet=_nodeUtil&&_nodeUtil.isSet,isSet=nodeIsSet?_baseUnary(nodeIsSet):_baseIsSet,isSet_1=isSet,CLONE_DEEP_FLAG=1,CLONE_FLAT_FLAG=2,CLONE_SYMBOLS_FLAG=4,argsTag$2="[object Arguments]",arrayTag$1="[object Array]",boolTag$2="[object Boolean]",dateTag$2="[object Date]",errorTag$1="[object Error]",funcTag$2="[object Function]",genTag$1="[object GeneratorFunction]",mapTag$4="[object Map]",numberTag$2="[object Number]",objectTag$2="[object Object]",regexpTag$2="[object RegExp]",setTag$4="[object Set]",stringTag$2="[object String]",symbolTag$1="[object Symbol]",weakMapTag$2="[object WeakMap]",arrayBufferTag$2="[object ArrayBuffer]",dataViewTag$3="[object DataView]",float32Tag$2="[object Float32Array]",float64Tag$2="[object Float64Array]",int8Tag$2="[object Int8Array]",int16Tag$2="[object Int16Array]",int32Tag$2="[object Int32Array]",uint8Tag$2="[object Uint8Array]",uint8ClampedTag$2="[object Uint8ClampedArray]",uint16Tag$2="[object Uint16Array]",uint32Tag$2="[object Uint32Array]",cloneableTags={};function baseClone(e,t,r,n,o,i){var s,a=t&CLONE_DEEP_FLAG,u=t&CLONE_FLAT_FLAG,l=t&CLONE_SYMBOLS_FLAG;if(r&&(s=o?r(e,n,o,i):r(e)),void 0!==s)return s;if(!isObject_1(e))return e;var c=isArray_1(e);if(c){if(s=_initCloneArray(e),!a)return _copyArray(e,s)}else{var p=_getTag(e),f=p==funcTag$2||p==genTag$1;if(isBuffer_1(e))return _cloneBuffer(e,a);if(p==objectTag$2||p==argsTag$2||f&&!o){if(s=u||f?{}:_initCloneObject(e),!a)return u?_copySymbolsIn(e,_baseAssignIn(s,e)):_copySymbols(e,_baseAssign(s,e))}else{if(!cloneableTags[p])return o?e:{};s=_initCloneByTag(e,p,a)}}i||(i=new _Stack);var d=i.get(e);if(d)return d;i.set(e,s),isSet_1(e)?e.forEach(function(n){s.add(baseClone(n,t,r,n,e,i))}):isMap_1(e)&&e.forEach(function(n,o){s.set(o,baseClone(n,t,r,o,e,i))});var g=l?u?_getAllKeysIn:_getAllKeys:u?keysIn:keys_1,h=c?void 0:g(e);return _arrayEach(h||e,function(n,o){h&&(n=e[o=n]),_assignValue(s,o,baseClone(n,t,r,o,e,i))}),s}cloneableTags[argsTag$2]=cloneableTags[arrayTag$1]=cloneableTags[arrayBufferTag$2]=cloneableTags[dataViewTag$3]=cloneableTags[boolTag$2]=cloneableTags[dateTag$2]=cloneableTags[float32Tag$2]=cloneableTags[float64Tag$2]=cloneableTags[int8Tag$2]=cloneableTags[int16Tag$2]=cloneableTags[int32Tag$2]=cloneableTags[mapTag$4]=cloneableTags[numberTag$2]=cloneableTags[objectTag$2]=cloneableTags[regexpTag$2]=cloneableTags[setTag$4]=cloneableTags[stringTag$2]=cloneableTags[symbolTag$1]=cloneableTags[uint8Tag$2]=cloneableTags[uint8ClampedTag$2]=cloneableTags[uint16Tag$2]=cloneableTags[uint32Tag$2]=!0,cloneableTags[errorTag$1]=cloneableTags[funcTag$2]=cloneableTags[weakMapTag$2]=!1;var _baseClone=baseClone,symbolTag$2="[object Symbol]";function isSymbol$1(e){return"symbol"==_typeof(e)||isObjectLike_1(e)&&_baseGetTag(e)==symbolTag$2}var isSymbol_1=isSymbol$1,reIsDeepProp=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,reIsPlainProp=/^\w*$/;function isKey(e,t){if(isArray_1(e))return!1;var r=_typeof(e);return!("number"!=r&&"symbol"!=r&&"boolean"!=r&&null!=e&&!isSymbol_1(e))||(reIsPlainProp.test(e)||!reIsDeepProp.test(e)||null!=t&&e in Object(t))}var _isKey=isKey,FUNC_ERROR_TEXT="Expected a function";function memoize(e,t){if("function"!=typeof e||null!=t&&"function"!=typeof t)throw new TypeError(FUNC_ERROR_TEXT);var r=function r(){var n=arguments,o=t?t.apply(this,n):n[0],i=r.cache;if(i.has(o))return i.get(o);var s=e.apply(this,n);return r.cache=i.set(o,s)||i,s};return r.cache=new(memoize.Cache||_MapCache),r}memoize.Cache=_MapCache;var memoize_1=memoize,MAX_MEMOIZE_SIZE=500;function memoizeCapped(e){var t=memoize_1(e,function(e){return r.size===MAX_MEMOIZE_SIZE&&r.clear(),e}),r=t.cache;return t}var _memoizeCapped=memoizeCapped,rePropName=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,reEscapeChar=/\\(\\)?/g,stringToPath=_memoizeCapped(function(e){var t=[];return 46===e.charCodeAt(0)&&t.push(""),e.replace(rePropName,function(e,r,n,o){t.push(n?o.replace(reEscapeChar,"$1"):r||e)}),t}),_stringToPath=stringToPath,INFINITY$1=1/0,symbolProto$1=_Symbol?_Symbol.prototype:void 0,symbolToString=symbolProto$1?symbolProto$1.toString:void 0;function baseToString(e){if("string"==typeof e)return e;if(isArray_1(e))return _arrayMap(e,baseToString)+"";if(isSymbol_1(e))return symbolToString?symbolToString.call(e):"";var t=e+"";return"0"==t&&1/e==-INFINITY$1?"-0":t}var _baseToString=baseToString;function toString$2(e){return null==e?"":_baseToString(e)}var toString_1=toString$2;function castPath(e,t){return isArray_1(e)?e:_isKey(e,t)?[e]:_stringToPath(toString_1(e))}var _castPath=castPath;function last(e){var t=null==e?0:e.length;return t?e[t-1]:void 0}var last_1=last,INFINITY$2=1/0;function toKey(e){if("string"==typeof e||isSymbol_1(e))return e;var t=e+"";return"0"==t&&1/e==-INFINITY$2?"-0":t}var _toKey=toKey;function baseGet(e,t){for(var r=0,n=(t=_castPath(t,e)).length;null!=e&&r<n;)e=e[_toKey(t[r++])];return r&&r==n?e:void 0}var _baseGet=baseGet;function baseSlice(e,t,r){var n=-1,o=e.length;t<0&&(t=-t>o?0:o+t),(r=r>o?o:r)<0&&(r+=o),o=t>r?0:r-t>>>0,t>>>=0;for(var i=Array(o);++n<o;)i[n]=e[n+t];return i}var _baseSlice=baseSlice;function parent(e,t){return t.length<2?e:_baseGet(e,_baseSlice(t,0,-1))}var _parent=parent;function baseUnset(e,t){return t=_castPath(t,e),null==(e=_parent(e,t))||delete e[_toKey(last_1(t))]}var _baseUnset=baseUnset,objectTag$3="[object Object]",funcProto$2=Function.prototype,objectProto$d=Object.prototype,funcToString$2=funcProto$2.toString,hasOwnProperty$b=objectProto$d.hasOwnProperty,objectCtorString=funcToString$2.call(Object);function isPlainObject(e){if(!isObjectLike_1(e)||_baseGetTag(e)!=objectTag$3)return!1;var t=_getPrototype(e);if(null===t)return!0;var r=hasOwnProperty$b.call(t,"constructor")&&t.constructor;return"function"==typeof r&&r instanceof r&&funcToString$2.call(r)==objectCtorString}var isPlainObject_1=isPlainObject;function customOmitClone(e){return isPlainObject_1(e)?void 0:e}var _customOmitClone=customOmitClone,spreadableSymbol=_Symbol?_Symbol.isConcatSpreadable:void 0;function isFlattenable(e){return isArray_1(e)||isArguments_1(e)||!!(spreadableSymbol&&e&&e[spreadableSymbol])}var _isFlattenable=isFlattenable;function baseFlatten(e,t,r,n,o){var i=-1,s=e.length;for(r||(r=_isFlattenable),o||(o=[]);++i<s;){var a=e[i];t>0&&r(a)?t>1?baseFlatten(a,t-1,r,n,o):_arrayPush(o,a):n||(o[o.length]=a)}return o}var _baseFlatten=baseFlatten;function flatten(e){return(null==e?0:e.length)?_baseFlatten(e,1):[]}var flatten_1=flatten;function apply(e,t,r){switch(r.length){case 0:return e.call(t);case 1:return e.call(t,r[0]);case 2:return e.call(t,r[0],r[1]);case 3:return e.call(t,r[0],r[1],r[2])}return e.apply(t,r)}var _apply=apply,nativeMax=Math.max;function overRest(e,t,r){return t=nativeMax(void 0===t?e.length-1:t,0),function(){for(var n=arguments,o=-1,i=nativeMax(n.length-t,0),s=Array(i);++o<i;)s[o]=n[t+o];o=-1;for(var a=Array(t+1);++o<t;)a[o]=n[o];return a[t]=r(s),_apply(e,this,a)}}var _overRest=overRest;function constant(e){return function(){return e}}var constant_1=constant;function identity(e){return e}var identity_1=identity,baseSetToString=_defineProperty$1?function(e,t){return _defineProperty$1(e,"toString",{configurable:!0,enumerable:!1,value:constant_1(t),writable:!0})}:identity_1,_baseSetToString=baseSetToString,HOT_COUNT=800,HOT_SPAN=16,nativeNow=Date.now;function shortOut(e){var t=0,r=0;return function(){var n=nativeNow(),o=HOT_SPAN-(n-r);if(r=n,o>0){if(++t>=HOT_COUNT)return arguments[0]}else t=0;return e.apply(void 0,arguments)}}var _shortOut=shortOut,setToString=_shortOut(_baseSetToString),_setToString=setToString;function flatRest(e){return _setToString(_overRest(e,void 0,flatten_1),e+"")}var _flatRest=flatRest,CLONE_DEEP_FLAG$1=1,CLONE_FLAT_FLAG$1=2,CLONE_SYMBOLS_FLAG$1=4,omit=_flatRest(function(e,t){var r={};if(null==e)return r;var n=!1;t=_arrayMap(t,function(t){return t=_castPath(t,e),n||(n=t.length>1),t}),_copyObject(e,_getAllKeysIn(e),r),n&&(r=_baseClone(r,CLONE_DEEP_FLAG$1|CLONE_FLAT_FLAG$1|CLONE_SYMBOLS_FLAG$1,_customOmitClone));for(var o=t.length;o--;)_baseUnset(r,t[o]);return r}),omit_1=omit;function arrayAggregator(e,t,r,n){for(var o=-1,i=null==e?0:e.length;++o<i;){var s=e[o];t(n,s,r(s),e)}return n}var _arrayAggregator=arrayAggregator;function createBaseFor(e){return function(t,r,n){for(var o=-1,i=Object(t),s=n(t),a=s.length;a--;){var u=s[e?a:++o];if(!1===r(i[u],u,i))break}return t}}var _createBaseFor=createBaseFor,baseFor=_createBaseFor(),_baseFor=baseFor;function baseForOwn(e,t){return e&&_baseFor(e,t,keys_1)}var _baseForOwn=baseForOwn;function createBaseEach(e,t){return function(r,n){if(null==r)return r;if(!isArrayLike_1(r))return e(r,n);for(var o=r.length,i=t?o:-1,s=Object(r);(t?i--:++i<o)&&!1!==n(s[i],i,s););return r}}var _createBaseEach=createBaseEach,baseEach=_createBaseEach(_baseForOwn),_baseEach=baseEach;function baseAggregator(e,t,r,n){return _baseEach(e,function(e,o,i){t(n,e,r(e),i)}),n}var _baseAggregator=baseAggregator;function arraySome(e,t){for(var r=-1,n=null==e?0:e.length;++r<n;)if(t(e[r],r,e))return!0;return!1}var _arraySome=arraySome,COMPARE_PARTIAL_FLAG=1,COMPARE_UNORDERED_FLAG=2;function equalArrays(e,t,r,n,o,i){var s=r&COMPARE_PARTIAL_FLAG,a=e.length,u=t.length;if(a!=u&&!(s&&u>a))return!1;var l=i.get(e);if(l&&i.get(t))return l==t;var c=-1,p=!0,f=r&COMPARE_UNORDERED_FLAG?new _SetCache:void 0;for(i.set(e,t),i.set(t,e);++c<a;){var d=e[c],g=t[c];if(n)var h=s?n(g,d,c,t,e,i):n(d,g,c,e,t,i);if(void 0!==h){if(h)continue;p=!1;break}if(f){if(!_arraySome(t,function(e,t){if(!_cacheHas(f,t)&&(d===e||o(d,e,r,n,i)))return f.push(t)})){p=!1;break}}else if(d!==g&&!o(d,g,r,n,i)){p=!1;break}}return i.delete(e),i.delete(t),p}var _equalArrays=equalArrays;function mapToArray(e){var t=-1,r=Array(e.size);return e.forEach(function(e,n){r[++t]=[n,e]}),r}var _mapToArray=mapToArray,COMPARE_PARTIAL_FLAG$1=1,COMPARE_UNORDERED_FLAG$1=2,boolTag$3="[object Boolean]",dateTag$3="[object Date]",errorTag$2="[object Error]",mapTag$5="[object Map]",numberTag$3="[object Number]",regexpTag$3="[object RegExp]",setTag$5="[object Set]",stringTag$3="[object String]",symbolTag$3="[object Symbol]",arrayBufferTag$3="[object ArrayBuffer]",dataViewTag$4="[object DataView]",symbolProto$2=_Symbol?_Symbol.prototype:void 0,symbolValueOf$1=symbolProto$2?symbolProto$2.valueOf:void 0;function equalByTag(e,t,r,n,o,i,s){switch(r){case dataViewTag$4:if(e.byteLength!=t.byteLength||e.byteOffset!=t.byteOffset)return!1;e=e.buffer,t=t.buffer;case arrayBufferTag$3:return!(e.byteLength!=t.byteLength||!i(new _Uint8Array(e),new _Uint8Array(t)));case boolTag$3:case dateTag$3:case numberTag$3:return eq_1(+e,+t);case errorTag$2:return e.name==t.name&&e.message==t.message;case regexpTag$3:case stringTag$3:return e==t+"";case mapTag$5:var a=_mapToArray;case setTag$5:var u=n&COMPARE_PARTIAL_FLAG$1;if(a||(a=_setToArray),e.size!=t.size&&!u)return!1;var l=s.get(e);if(l)return l==t;n|=COMPARE_UNORDERED_FLAG$1,s.set(e,t);var c=_equalArrays(a(e),a(t),n,o,i,s);return s.delete(e),c;case symbolTag$3:if(symbolValueOf$1)return symbolValueOf$1.call(e)==symbolValueOf$1.call(t)}return!1}var _equalByTag=equalByTag,COMPARE_PARTIAL_FLAG$2=1,objectProto$e=Object.prototype,hasOwnProperty$c=objectProto$e.hasOwnProperty;function equalObjects(e,t,r,n,o,i){var s=r&COMPARE_PARTIAL_FLAG$2,a=_getAllKeys(e),u=a.length;if(u!=_getAllKeys(t).length&&!s)return!1;for(var l=u;l--;){var c=a[l];if(!(s?c in t:hasOwnProperty$c.call(t,c)))return!1}var p=i.get(e);if(p&&i.get(t))return p==t;var f=!0;i.set(e,t),i.set(t,e);for(var d=s;++l<u;){var g=e[c=a[l]],h=t[c];if(n)var b=s?n(h,g,c,t,e,i):n(g,h,c,e,t,i);if(!(void 0===b?g===h||o(g,h,r,n,i):b)){f=!1;break}d||(d="constructor"==c)}if(f&&!d){var _=e.constructor,y=t.constructor;_!=y&&"constructor"in e&&"constructor"in t&&!("function"==typeof _&&_ instanceof _&&"function"==typeof y&&y instanceof y)&&(f=!1)}return i.delete(e),i.delete(t),f}var _equalObjects=equalObjects,COMPARE_PARTIAL_FLAG$3=1,argsTag$3="[object Arguments]",arrayTag$2="[object Array]",objectTag$4="[object Object]",objectProto$f=Object.prototype,hasOwnProperty$d=objectProto$f.hasOwnProperty;function baseIsEqualDeep(e,t,r,n,o,i){var s=isArray_1(e),a=isArray_1(t),u=s?arrayTag$2:_getTag(e),l=a?arrayTag$2:_getTag(t),c=(u=u==argsTag$3?objectTag$4:u)==objectTag$4,p=(l=l==argsTag$3?objectTag$4:l)==objectTag$4,f=u==l;if(f&&isBuffer_1(e)){if(!isBuffer_1(t))return!1;s=!0,c=!1}if(f&&!c)return i||(i=new _Stack),s||isTypedArray_1(e)?_equalArrays(e,t,r,n,o,i):_equalByTag(e,t,u,r,n,o,i);if(!(r&COMPARE_PARTIAL_FLAG$3)){var d=c&&hasOwnProperty$d.call(e,"__wrapped__"),g=p&&hasOwnProperty$d.call(t,"__wrapped__");if(d||g){var h=d?e.value():e,b=g?t.value():t;return i||(i=new _Stack),o(h,b,r,n,i)}}return!!f&&(i||(i=new _Stack),_equalObjects(e,t,r,n,o,i))}var _baseIsEqualDeep=baseIsEqualDeep;function baseIsEqual(e,t,r,n,o){return e===t||(null==e||null==t||!isObjectLike_1(e)&&!isObjectLike_1(t)?e!=e&&t!=t:_baseIsEqualDeep(e,t,r,n,baseIsEqual,o))}var _baseIsEqual=baseIsEqual,COMPARE_PARTIAL_FLAG$4=1,COMPARE_UNORDERED_FLAG$2=2;function baseIsMatch(e,t,r,n){var o=r.length,i=o,s=!n;if(null==e)return!i;for(e=Object(e);o--;){var a=r[o];if(s&&a[2]?a[1]!==e[a[0]]:!(a[0]in e))return!1}for(;++o<i;){var u=(a=r[o])[0],l=e[u],c=a[1];if(s&&a[2]){if(void 0===l&&!(u in e))return!1}else{var p=new _Stack;if(n)var f=n(l,c,u,e,t,p);if(!(void 0===f?_baseIsEqual(c,l,COMPARE_PARTIAL_FLAG$4|COMPARE_UNORDERED_FLAG$2,n,p):f))return!1}}return!0}var _baseIsMatch=baseIsMatch;function isStrictComparable(e){return e==e&&!isObject_1(e)}var _isStrictComparable=isStrictComparable;function getMatchData(e){for(var t=keys_1(e),r=t.length;r--;){var n=t[r],o=e[n];t[r]=[n,o,_isStrictComparable(o)]}return t}var _getMatchData=getMatchData;function matchesStrictComparable(e,t){return function(r){return null!=r&&(r[e]===t&&(void 0!==t||e in Object(r)))}}var _matchesStrictComparable=matchesStrictComparable;function baseMatches(e){var t=_getMatchData(e);return 1==t.length&&t[0][2]?_matchesStrictComparable(t[0][0],t[0][1]):function(r){return r===e||_baseIsMatch(r,e,t)}}var _baseMatches=baseMatches;function get$1(e,t,r){var n=null==e?void 0:_baseGet(e,t);return void 0===n?r:n}var get_1=get$1;function baseHasIn(e,t){return null!=e&&t in Object(e)}var _baseHasIn=baseHasIn;function hasPath(e,t,r){for(var n=-1,o=(t=_castPath(t,e)).length,i=!1;++n<o;){var s=_toKey(t[n]);if(!(i=null!=e&&r(e,s)))break;e=e[s]}return i||++n!=o?i:!!(o=null==e?0:e.length)&&isLength_1(o)&&_isIndex(s,o)&&(isArray_1(e)||isArguments_1(e))}var _hasPath=hasPath;function hasIn(e,t){return null!=e&&_hasPath(e,t,_baseHasIn)}var hasIn_1=hasIn,COMPARE_PARTIAL_FLAG$5=1,COMPARE_UNORDERED_FLAG$3=2;function baseMatchesProperty(e,t){return _isKey(e)&&_isStrictComparable(t)?_matchesStrictComparable(_toKey(e),t):function(r){var n=get_1(r,e);return void 0===n&&n===t?hasIn_1(r,e):_baseIsEqual(t,n,COMPARE_PARTIAL_FLAG$5|COMPARE_UNORDERED_FLAG$3)}}var _baseMatchesProperty=baseMatchesProperty;function baseProperty(e){return function(t){return null==t?void 0:t[e]}}var _baseProperty=baseProperty;function basePropertyDeep(e){return function(t){return _baseGet(t,e)}}var _basePropertyDeep=basePropertyDeep;function property(e){return _isKey(e)?_baseProperty(_toKey(e)):_basePropertyDeep(e)}var property_1=property;function baseIteratee(e){return"function"==typeof e?e:null==e?identity_1:"object"==_typeof(e)?isArray_1(e)?_baseMatchesProperty(e[0],e[1]):_baseMatches(e):property_1(e)}var _baseIteratee=baseIteratee;function createAggregator(e,t){return function(r,n){var o=isArray_1(r)?_arrayAggregator:_baseAggregator,i=t?t():{};return o(r,e,_baseIteratee(n),i)}}var _createAggregator=createAggregator,keyBy=_createAggregator(function(e,t,r){_baseAssignValue(e,r,t)}),keyBy_1=keyBy;function mapValues(e,t){var r={};return t=_baseIteratee(t),_baseForOwn(e,function(e,n,o){_baseAssignValue(r,n,t(e,n,o))}),r}var mapValues_1=mapValues,$at=_stringAt(!0);_iterDefine(String,"String",function(e){this._t=String(e),this._i=0},function(){var e,t=this._t,r=this._i;return r>=t.length?{value:void 0,done:!0}:(e=$at(t,r),this._i+=e.length,{value:e,done:!1})});var _validateCollection=function(e,t){if(!_isObject(e)||e._t!==t)throw TypeError("Incompatible receiver, "+t+" required!");return e},dP$4=_objectDp.f,fastKey=_meta.fastKey,SIZE=_descriptors?"_s":"size",getEntry=function(e,t){var r,n=fastKey(t);if("F"!==n)return e._i[n];for(r=e._f;r;r=r.n)if(r.k==t)return r},_collectionStrong={getConstructor:function(e,t,r,n){var o=e(function(e,i){_anInstance(e,o,t,"_i"),e._t=t,e._i=_objectCreate(null),e._f=void 0,e._l=void 0,e[SIZE]=0,null!=i&&_forOf(i,r,e[n],e)});return _redefineAll(o.prototype,{clear:function(){for(var e=_validateCollection(this,t),r=e._i,n=e._f;n;n=n.n)n.r=!0,n.p&&(n.p=n.p.n=void 0),delete r[n.i];e._f=e._l=void 0,e[SIZE]=0},delete:function(e){var r=_validateCollection(this,t),n=getEntry(r,e);if(n){var o=n.n,i=n.p;delete r._i[n.i],n.r=!0,i&&(i.n=o),o&&(o.p=i),r._f==n&&(r._f=o),r._l==n&&(r._l=i),r[SIZE]--}return!!n},forEach:function(e){_validateCollection(this,t);for(var r,n=_ctx(e,arguments.length>1?arguments[1]:void 0,3);r=r?r.n:this._f;)for(n(r.v,r.k,this);r&&r.r;)r=r.p},has:function(e){return!!getEntry(_validateCollection(this,t),e)}}),_descriptors&&dP$4(o.prototype,"size",{get:function(){return _validateCollection(this,t)[SIZE]}}),o},def:function(e,t,r){var n,o,i=getEntry(e,t);return i?i.v=r:(e._l=i={i:o=fastKey(t,!0),k:t,v:r,p:n=e._l,n:void 0,r:!1},e._f||(e._f=i),n&&(n.n=i),e[SIZE]++,"F"!==o&&(e._i[o]=i)),e},getEntry:getEntry,setStrong:function(e,t,r){_iterDefine(e,t,function(e,r){this._t=_validateCollection(e,t),this._k=r,this._l=void 0},function(){for(var e=this._k,t=this._l;t&&t.r;)t=t.p;return this._t&&(this._l=t=t?t.n:this._t._f)?_iterStep(0,"keys"==e?t.k:"values"==e?t.v:[t.k,t.v]):(this._t=void 0,_iterStep(1))},r?"entries":"values",!r,!0),_setSpecies(t)}},_collection=function(e,t,r,n,o,i){var s=_global[e],a=s,u=o?"set":"add",l=a&&a.prototype,c={},p=function(e){var t=l[e];_redefine(l,e,"delete"==e?function(e){return!(i&&!_isObject(e))&&t.call(this,0===e?0:e)}:"has"==e?function(e){return!(i&&!_isObject(e))&&t.call(this,0===e?0:e)}:"get"==e?function(e){return i&&!_isObject(e)?void 0:t.call(this,0===e?0:e)}:"add"==e?function(e){return t.call(this,0===e?0:e),this}:function(e,r){return t.call(this,0===e?0:e,r),this})};if("function"==typeof a&&(i||l.forEach&&!_fails(function(){(new a).entries().next()}))){var f=new a,d=f[u](i?{}:-0,1)!=f,g=_fails(function(){f.has(1)}),h=_iterDetect(function(e){new a(e)}),b=!i&&_fails(function(){for(var e=new a,t=5;t--;)e[u](t,t);return!e.has(-0)});h||((a=t(function(t,r){_anInstance(t,a,e);var n=_inheritIfRequired(new s,t,a);return null!=r&&_forOf(r,o,n[u],n),n})).prototype=l,l.constructor=a),(g||b)&&(p("delete"),p("has"),o&&p("get")),(b||d)&&p(u),i&&l.clear&&delete l.clear}else a=n.getConstructor(t,e,o,u),_redefineAll(a.prototype,r),_meta.NEED=!0;return _setToStringTag(a,e),c[e]=a,_export(_export.G+_export.W+_export.F*(a!=s),c),i||n.setStrong(a,e,o),a},MAP="Map",es6_map=_collection(MAP,function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{get:function(e){var t=_collectionStrong.getEntry(_validateCollection(this,MAP),e);return t&&t.v},set:function(e,t){return _collectionStrong.def(_validateCollection(this,MAP),0===e?0:e,t)}},_collectionStrong,!0),$assign=Object.assign,_objectAssign=!$assign||_fails(function(){var e={},t={},r=Symbol(),n="abcdefghijklmnopqrst";return e[r]=7,n.split("").forEach(function(e){t[e]=e}),7!=$assign({},e)[r]||Object.keys($assign({},t)).join("")!=n})?function(e,t){for(var r=_toObject(e),n=arguments.length,o=1,i=_objectGops.f,s=_objectPie.f;n>o;)for(var a,u=_iobject(arguments[o++]),l=i?_objectKeys(u).concat(i(u)):_objectKeys(u),c=l.length,p=0;c>p;)a=l[p++],_descriptors&&!s.call(u,a)||(r[a]=u[a]);return r}:$assign,_SIZEOF;_export(_export.S+_export.F,"Object",{assign:_objectAssign});var EVENT_ALL="*",EVENT_ENABLE="enable",EVENT_DISABLE="disable",SEMAPHORE=Symbol(),NO_OP=function(){},Type;!function(e){e[e.U8=0]="U8",e[e.U8C=1]="U8C",e[e.I8=2]="I8",e[e.U16=3]="U16",e[e.I16=4]="I16",e[e.U32=5]="U32",e[e.I32=6]="I32",e[e.F32=7]="F32",e[e.F64=8]="F64"}(Type||(Type={}));var SIZEOF=(_SIZEOF={},_defineProperty(_SIZEOF,0,1),_defineProperty(_SIZEOF,1,1),_defineProperty(_SIZEOF,2,1),_defineProperty(_SIZEOF,3,2),_defineProperty(_SIZEOF,4,2),_defineProperty(_SIZEOF,5,4),_defineProperty(_SIZEOF,6,4),_defineProperty(_SIZEOF,7,4),_defineProperty(_SIZEOF,8,8),_SIZEOF),LogLevel;!function(e){e[e.FINE=0]="FINE",e[e.DEBUG=1]="DEBUG",e[e.INFO=2]="INFO",e[e.WARN=3]="WARN",e[e.SEVERE=4]="SEVERE",e[e.NONE=5]="NONE"}(LogLevel||(LogLevel={}));var assert="undefined"==typeof process||"1"===process.env.UMBRELLA_ASSERTS?function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"assertion failed";if("function"==typeof e&&!e()||!e)throw new Error("function"==typeof t?t():t)}:NO_OP,meta=_meta.onFreeze;_objectSap("freeze",function(e){return function(t){return e&&_isObject(t)?e(meta(t)):t}});var NULL_LOGGER=Object.freeze({level:LogLevel.NONE,fine:function(){},debug:function(){},info:function(){},warn:function(){},severe:function(){}}),Reflect$1=_global.Reflect,_ownKeys=Reflect$1&&Reflect$1.ownKeys||function(e){var t=_objectGopn.f(_anObject(e)),r=_objectGops.f;return r?t.concat(r(e)):t};_export(_export.S,"Reflect",{ownKeys:_ownKeys});var mixin=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=Reflect.ownKeys(e),n=Reflect.ownKeys(t),o=Symbol("isa");function i(t){var n=r,i=Array.isArray(n),s=0;for(n=i?n:n[Symbol.iterator]();;){var a;if(i){if(s>=n.length)break;a=n[s++]}else{if((s=n.next()).done)break;a=s.value}var u=a,l=Object.getOwnPropertyDescriptor(t.prototype,u);!l||l.configurable?Object.defineProperty(t.prototype,u,{value:e[u],writable:!0}):console.log("not patching: ".concat(t.name,".").concat(u.toString()))}return Object.defineProperty(t.prototype,o,{value:!0}),t}var s=n,a=Array.isArray(s),u=0;for(s=a?s:s[Symbol.iterator]();;){var l;if(a){if(u>=s.length)break;l=s[u++]}else{if((u=s.next()).done)break;l=u.value}var c=l;Object.defineProperty(i,c,{value:t[c],enumerable:t.propertyIsEnumerable(c)})}return Object.defineProperty(i,Symbol.hasInstance,{value:function(e){return!!e[o]}}),i},IllegalArgumentError=function(e){function t(e){return _classCallCheck(this,t),_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,"illegal argument(s)"+(void 0!==e?": "+e:"")))}return _inherits(t,_wrapNativeSuper(Error)),t}(),illegalArgs=function(e){throw new IllegalArgumentError(e)},IllegalArityError=function(e){function t(e){return _classCallCheck(this,t),_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,"illegal arity: ".concat(e)))}return _inherits(t,_wrapNativeSuper(Error)),t}(),IllegalStateError=function(e){function t(e){return _classCallCheck(this,t),_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,"illegal state"+(void 0!==e?": "+e:"")))}return _inherits(t,_wrapNativeSuper(Error)),t}(),UnsupportedOperationError=function(e){function t(e){return _classCallCheck(this,t),_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,"unsupported operation"+(void 0!==e?": "+e:"")))}return _inherits(t,_wrapNativeSuper(Error)),t}(),meta$1=_meta.onFreeze;_objectSap("seal",function(e){return function(t){return e&&_isObject(t)?e(meta$1(t)):t}});var IEnableMixin=mixin({_enabled:!0,isEnabled:function(){return this._enabled},enable:function(){this._enabled=!0,this.notify&&this.notify({id:EVENT_ENABLE,target:this})},disable:function(){this._enabled=!1,this.notify&&this.notify({id:EVENT_DISABLE,target:this})},toggle:function(){return this._enabled?this.disable():this.enable(),this._enabled}}),inotify_dispatch=function(e,t){if(e)for(var r,n=0,o=e.length;n<o;n++)if((r=e[n])[0].call(r[1],t),t.canceled)return},INotifyMixin=mixin({addListener:function(e,t,r){var n=(this._listeners=this._listeners||{})[e];return n||(n=this._listeners[e]=[]),-1===this.__listener(n,t,r)&&(n.push([t,r]),!0)},removeListener:function(e,t,r){if(!this._listeners)return!1;var n=this._listeners[e];if(n){var o=this.__listener(n,t,r);if(-1!==o)return n.splice(o,1),!0}return!1},notify:function(e){this._listeners&&(void 0===e.target&&(e.target=this),inotify_dispatch(this._listeners[e.id],e),inotify_dispatch(this._listeners[EVENT_ALL],e))},__listener:function(e,t,r){for(var n=e.length;--n>=0;){var o=e[n];if(o[0]===t&&o[1]===r)break}return n}}),IWatchMixin=mixin({addWatch:function(e,t){return this._watches=this._watches||{},!this._watches[e]&&(this._watches[e]=t,!0)},removeWatch:function(e){if(this._watches)return!!this._watches[e]&&(delete this._watches[e],!0)},notifyWatches:function(e,t){if(this._watches){var r=this._watches;for(var n in r)r[n](n,e,t)}}}),isArrayLike$1=function(e){return null!=e&&"function"!=typeof e&&void 0!==e.length},SET="Set",es6_set=_collection(SET,function(e){return function(){return e(this,arguments.length>0?arguments[0]:void 0)}},{add:function(e){return _collectionStrong.def(_validateCollection(this,SET),e=0===e?0:e,e)}},_collectionStrong);_typedArray("Float64",8,function(e){return function(t,r,n){return e(this,t,r,n)}}),_typedArray("Int32",4,function(e){return function(t,r,n){return e(this,t,r,n)}}),_typedArray("Int16",2,function(e){return function(t,r,n){return e(this,t,r,n)}}),_typedArray("Uint16",2,function(e){return function(t,r,n){return e(this,t,r,n)}}),_typedArray("Int8",1,function(e){return function(t,r,n){return e(this,t,r,n)}}),_typedArray("Uint8",1,function(e){return function(t,r,n){return e(this,t,r,n)}},!0),_typedArray("Uint32",4,function(e){return function(t,r,n){return e(this,t,r,n)}}),_typedArray("Float32",4,function(e){return function(t,r,n){return e(this,t,r,n)}});var compare=function(e,t){return e===t?0:null==e?null==t?0:-1:null==t?null==e?0:1:"function"==typeof e.compare?e.compare(t):"function"==typeof t.compare?-t.compare(e):e<t?-1:e>t?1:0},OBJP=Object.getPrototypeOf({}),FN="function",STR="string",equiv=function(e,t){var r;return e===t||(null==e?e==t:_typeof(e.equiv)===FN?e.equiv(t):null==t?e==t:_typeof(t.equiv)===FN?t.equiv(e):_typeof(e)!==STR&&_typeof(t)!==STR&&(null!=(r=Object.getPrototypeOf(e))&&r!==OBJP||null!=(r=Object.getPrototypeOf(t))&&r!==OBJP?_typeof(e)!==FN&&void 0!==e.length&&_typeof(t)!==FN&&void 0!==t.length?equivArrayLike(e,t):e instanceof Set&&t instanceof Set?equivSet(e,t):e instanceof Map&&t instanceof Map?equivMap(e,t):e instanceof Date&&t instanceof Date?e.getTime()===t.getTime():e instanceof RegExp&&t instanceof RegExp?e.toString()===t.toString():e!=e&&t!=t:equivObject(e,t)))},equivArrayLike=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:equiv,n=e.length;if(n===t.length)for(;--n>=0&&r(e[n],t[n]););return n<0},equivSet=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:equiv;return e.size===t.size&&r(_toConsumableArray(e.keys()).sort(),_toConsumableArray(t.keys()).sort())},equivMap=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:equiv;return e.size===t.size&&r(_toConsumableArray(e).sort(),_toConsumableArray(t).sort())},equivObject=function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:equiv;if(Object.keys(e).length!==Object.keys(t).length)return!1;for(var n in e)if(!t.hasOwnProperty(n)||!r(e[n],t[n]))return!1;return!0},Reduced=function(){function e(t){_classCallCheck(this,e),this.value=t}return _createClass(e,[{key:"deref",value:function(){return this.value}}]),e}(),isReduced=function(e){return e instanceof Reduced},unreduced=function(e){return e instanceof Reduced?e.deref():e},_marked2=regenerator.mark(iterator1);function iterator1(e,t){var r,n,o,i,s,a;return regenerator.wrap(function(u){for(;;)switch(u.prev=u.next){case 0:r=e([NO_OP,NO_OP,function(e,t){return t}])[2],n=t,o=Array.isArray(n),i=0,n=o?n:n[Symbol.iterator]();case 2:if(!o){u.next=8;break}if(!(i>=n.length)){u.next=5;break}return u.abrupt("break",25);case 5:s=n[i++],u.next=12;break;case 8:if(!(i=n.next()).done){u.next=11;break}return u.abrupt("break",25);case 11:s=i.value;case 12:if(a=r(SEMAPHORE,s),!isReduced(a)){u.next=20;break}if((a=unreduced(a.deref()))===SEMAPHORE){u.next=19;break}return u.next=19,a;case 19:return u.abrupt("return");case 20:if(a===SEMAPHORE){u.next=23;break}return u.next=23,a;case 23:u.next=2;break;case 25:case"end":return u.stop()}},_marked2)}var compR=function(e,t){return[e[0],e[1],t]};function map(e,t){return t?iterator1(map(e),t):function(t){var r=t[2];return compR(t,function(t,n){return r(t,e(n))})}}function partial(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];var o=r[0],i=r[1],s=r[2],a=r[3],u=r[4],l=r[5],c=r[6],p=r[7];switch(r.length){case 1:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o].concat(r))};case 2:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i].concat(r))};case 3:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i,s].concat(r))};case 4:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i,s,a].concat(r))};case 5:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i,s,a,u].concat(r))};case 6:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i,s,a,u,l].concat(r))};case 7:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i,s,a,u,l,c].concat(r))};case 8:return function(){for(var t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];return e.apply(void 0,[o,i,s,a,u,l,c,p].concat(r))};default:illegalArgs()}}var foo=partial(function(e,t){return e+t},"a"),INV_MAX=1/4294967295,ARandom=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:"float",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.int()*INV_MAX*e}},{key:"norm",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return this.int()*INV_MAX*e*2-e}},{key:"minmax",value:function(e,t){return this.float()*(t-e)+e}},{key:"gaussian",value:function(){for(var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:10,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-.5,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1,n=0,o=e;o-- >0;)n+=this.float(r);return n/e+t}}]),e}(),random=Math.random,SystemRandom=function(e){function t(){return _classCallCheck(this,t),_possibleConstructorReturn(this,_getPrototypeOf(t).apply(this,arguments))}return _inherits(t,ARandom),_createClass(t,[{key:"int",value:function(){return 4294967295*random()>>>0}},{key:"float",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1;return random()*e}}]),t}(),SYSTEM=new SystemRandom;_export(_export.P,"Array",{fill:_arrayFill}),_addToUnscopables("fill");var DCons=function(){function e(t){_classCallCheck(this,e),this._length=0,t&&this.into(t)}return _createClass(e,[{key:"copy",value:function(){return new e(this)}},{key:"empty",value:function(){return new e}},{key:"clear",value:function(){this.release()}},{key:"release",value:function(){for(var e,t=this.head;t;)e=t.next,delete t.value,delete t.prev,delete t.next,t=e;return delete this.head,delete this.tail,this._length=0,!0}},{key:"compare",value:function(e){var t=this._length;if(t<e._length)return-1;if(t>e._length)return 1;if(0===t)return 0;for(var r=this.head,n=e.head,o=0;r&&0==o;)o=compare(r.value,n.value),r=r.next,n=n.next;return o}},{key:"equiv",value:function(t){if((t instanceof e||isArrayLike$1(t))&&this._length===t.length){if(0===this._length)return!0;var r=this.head,n=t,o=Array.isArray(n),i=0;for(n=o?n:n[Symbol.iterator]();;){var s;if(o){if(i>=n.length)break;s=n[i++]}else{if((i=n.next()).done)break;s=i.value}var a=s;if(!equiv(r.value,a))return!1;r=r.next}return!0}return!1}},{key:Symbol.iterator,value:regenerator.mark(function e(){var t;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=this.head;case 1:if(!t){e.next=7;break}return e.next=4,t.value;case 4:t=t.next,e.next=1;break;case 7:case"end":return e.stop()}},e,this)})},{key:"cycle",value:regenerator.mark(function e(){return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.delegateYield(this,"t0",2);case 2:e.next=0;break;case 4:case"end":return e.stop()}},e,this)})},{key:"$reduce",value:function(e,t){for(var r=this.head;r&&!isReduced(t);)t=e(t,r.value),r=r.next;return t}},{key:"drop",value:function(){var e=this.head;if(e)return this.head=e.next,this.head?delete this.head.prev:delete this.tail,this._length--,e.value}},{key:"cons",value:function(e){var t={value:e,next:this.head};return this.head?this.head.prev=t:this.tail=t,this.head=t,this._length++,this}},{key:"insertBefore",value:function(e,t){e||illegalArgs("cell is undefined");var r={value:t,next:e,prev:e.prev};return e.prev?e.prev.next=r:this.head=r,e.prev=r,this._length++,this}},{key:"insertAfter",value:function(e,t){e||illegalArgs("cell is undefined");var r={value:t,next:e.next,prev:e};return e.next?e.next.prev=r:this.tail=r,e.next=r,this._length++,this}},{key:"insertBeforeNth",value:function(e,t){return e<0&&(e+=this._length),e<=0?this.cons(t):(this.ensureIndex(e),this.insertBefore(this.nthCellUnsafe(e),t))}},{key:"insertAfterNth",value:function(e,t){return e<0&&(e+=this._length),e>=this._length-1?this.push(t):(this.ensureIndex(e),this.insertAfter(this.nthCellUnsafe(e),t))}},{key:"insertSorted",value:function(e,t){t=t||compare;for(var r=this.head;r;){if(t(e,r.value)<=0)return this.insertBefore(r,e);r=r.next}return this.push(e)}},{key:"find",value:function(e){for(var t=this.head;t;){if(t.value===e)return t;t=t.next}}},{key:"findWith",value:function(e){for(var t=this.head;t;){if(e(t.value))return t;t=t.next}}},{key:"concat",value:function(){for(var e=this.copy(),t=arguments.length,r=new Array(t),n=0;n<t;n++)r[n]=arguments[n];for(var o=0,i=r;o<i.length;o++){var s=i[o];e.into(s)}return e}},{key:"into",value:function(e){var t=e,r=Array.isArray(t),n=0;for(t=r?t:t[Symbol.iterator]();;){var o;if(r){if(n>=t.length)break;o=t[n++]}else{if((n=t.next()).done)break;o=n.value}var i=o;this.push(i)}}},{key:"slice",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.length,n=t<0?t+this._length:t,o=r<0?r+this._length:r;(n<0||o<0)&&illegalArgs("invalid indices: ${from} / ${to}");for(var i=new e,s=this.nthCell(n);s&&++n<=o;)i.push(s.value),s=s.next;return i}},{key:"splice",value:function(t){var r,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,o=arguments.length>2?arguments[2]:void 0;"number"==typeof t?(t<0&&(t+=this._length),this.ensureIndex(t),r=this.nthCellUnsafe(t)):r=t;var i=new e;if(n>0)for(;r&&n-- >0;)this.remove(r),i.push(r.value),r=r.next;else r&&(r=r.next);if(o)if(r){var s=o,a=Array.isArray(s),u=0;for(s=a?s:s[Symbol.iterator]();;){var l;if(a){if(u>=s.length)break;l=s[u++]}else{if((u=s.next()).done)break;l=u.value}var c=l;this.insertBefore(r,c)}}else{var p=o,f=Array.isArray(p),d=0;for(p=f?p:p[Symbol.iterator]();;){var g;if(f){if(d>=p.length)break;g=p[d++]}else{if((d=p.next()).done)break;g=d.value}var h=g;this.push(h)}}return i}},{key:"remove",value:function(e){return e.prev?e.prev.next=e.next:this.head=e.next,e.next?e.next.prev=e.prev:this.tail=e.prev,this._length--,this}},{key:"swap",value:function(e,t){if(e!==t){var r=e.value;e.value=t.value,t.value=r}return this}},{key:"push",value:function(e){if(this.tail){var t={value:e,prev:this.tail};return this.tail.next=t,this.tail=t,this._length++,this}return this.cons(e)}},{key:"pop",value:function(){var e=this.tail;if(e)return this.tail=e.prev,this.tail?delete this.tail.next:delete this.head,this._length--,e.value}},{key:"first",value:function(){return this.head&&this.head.value}},{key:"peek",value:function(){return this.tail&&this.tail.value}},{key:"setHead",value:function(e){return this.head?(this.head.value=e,this):this.cons(e)}},{key:"setTail",value:function(e){return this.tail?(this.tail.value=e,this):this.push(e)}},{key:"setNth",value:function(e,t){var r=this.nthCell(e);return!r&&illegalArgs("index out of bounds: ".concat(e)),r.value=t,this}},{key:"nth",value:function(e,t){var r=this.nthCell(e);return r?r.value:t}},{key:"nthCell",value:function(e){if(e<0&&(e+=this._length),!(e<0||e>=this._length))return this.nthCellUnsafe(e)}},{key:"rotateLeft",value:function(){switch(this._length){case 0:case 1:return this;case 2:return this.swap(this.head,this.tail);default:return this.push(this.drop())}}},{key:"rotateRight",value:function(){switch(this._length){case 0:case 1:return this;case 2:return this.swap(this.head,this.tail);default:var e=this.peek();return this.pop(),this.cons(e)}}},{key:"map",value:function(t){for(var r=new e,n=this.head;n;)r.push(t(n.value)),n=n.next;return r}},{key:"filter",value:function(t){for(var r=new e,n=this.head;n;)t(n.value)&&r.push(n.value),n=n.next;return r}},{key:"reduce",value:function(e,t){for(var r=t,n=this.head;n;)r=e(r,n.value),n=n.next;return r}},{key:"shuffle",value:function(){for(var e=this._length,t=this.tail;e>1;){var r=Math.floor(Math.random()*e);this.swap(this.nthCell(r),t),t=t.prev,e--}return this}},{key:"reverse",value:function(){for(var e=this.head,t=this.tail,r=(this._length>>>1)+(1&this._length);e&&t&&r>0;){var n=e.value;e.value=t.value,t.value=n,e=e.next,t=t.prev,r--}return this}},{key:"asHead",value:function(e){return e===this.head?this:(this.remove(e),this.head.prev=e,e.next=this.head,e.prev=void 0,this.head=e,this._length++,this)}},{key:"asTail",value:function(e){return e===this.tail?this:(this.remove(e),this.tail.next=e,e.prev=this.tail,e.next=void 0,this.tail=e,this._length++,this)}},{key:"toString",value:function(){for(var e=[],t=this.head;t;)e.push(null!=t.value?String(t.value):void 0===t.value?"undefined":"null"),t=t.next;return e.join(", ")}},{key:"toJSON",value:function(){return _toConsumableArray(this)}},{key:"ensureIndex",value:function(e){assert(e>=0&&e<this._length,"index out of range: ".concat(e))}},{key:"nthCellUnsafe",value:function(e){var t,r;for(e<=this._length>>1?(t=this.head,r="next"):(t=this.tail,r="prev",e=this._length-e-1);e-- >0&&t;)t=t[r];return t}},{key:"length",get:function(){return this._length}}]),e}(),LRUCache=function(){function e(t,r){_classCallCheck(this,e);var n=Object.assign({maxlen:1/0,maxsize:1/0,map:function(){return new Map},ksize:function(){return 0},vsize:function(){return 0}},r);this.map=n.map(),this.items=new DCons,this._size=0,this.opts=n,t&&this.into(t)}return _createClass(e,[{key:Symbol.iterator,value:function(){return this.entries()}},{key:"entries",value:function(){return map(function(e){return[e.k,e]},this.items)}},{key:"keys",value:function(){return map(function(e){return e.k},this.items)}},{key:"values",value:function(){return map(function(e){return e.v},this.items)}},{key:"copy",value:function(){var e=this.empty();e.items=this.items.copy();for(var t=e.items.head;t;)e.map.set(t.value.k,t),t=t.next;return e}},{key:"empty",value:function(){return new e(null,this.opts)}},{key:"release",value:function(){this._size=0,this.map.clear();var e=this.opts.release;if(e){for(var t;t=this.items.drop();)e(t.k,t.v);return!0}return this.items.release()}},{key:"has",value:function(e){return this.map.has(e)}},{key:"get",value:function(e,t){var r=this.map.get(e);return r?this.resetEntry(r):t}},{key:"set",value:function(e,t){var r=this.opts.ksize(e)+this.opts.vsize(t),n=this.map.get(e);return n&&(this._size-=n.value.s),this._size+=r,this.ensureSize()&&(n?(n.value.v=t,n.value.s=r,this.items.asTail(n)):(this.items.push({k:e,v:t,s:r}),this.map.set(e,this.items.tail))),t}},{key:"into",value:function(e){var t=e,r=Array.isArray(t),n=0;for(t=r?t:t[Symbol.iterator]();;){var o;if(r){if(n>=t.length)break;o=t[n++]}else{if((n=t.next()).done)break;o=n.value}var i=o;this.set(i[0],i[1])}return this}},{key:"getSet",value:function(e,t){var r=this,n=this.map.get(e);return n?Promise.resolve(this.resetEntry(n)):t().then(function(t){return r.set(e,t)})}},{key:"delete",value:function(e){var t=this.map.get(e);return!!t&&(this.removeEntry(t),!0)}},{key:"resetEntry",value:function(e){return this.items.asTail(e),e.value.v}},{key:"ensureSize",value:function(){for(var e=this.opts.release,t=this.opts.maxsize,r=this.opts.maxlen;this._size>t||this.length>=r;){var n=this.items.drop();if(!n)return!1;this.map.delete(n.k),e&&e(n.k,n.v),this._size-=n.s}return!0}},{key:"removeEntry",value:function(e){var t=e.value;this.map.delete(t.k),this.items.remove(e),this.opts.release&&this.opts.release(t.k,t.v),this._size-=t.s}},{key:"length",get:function(){return this.items.length}},{key:"size",get:function(){return this._size}}]),e}(),TLRUCache=function(e){function t(e,r){return _classCallCheck(this,t),r=Object.assign({ttl:36e5},r),_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,e,r))}return _inherits(t,LRUCache),_createClass(t,[{key:"empty",value:function(){return new t(null,this.opts)}},{key:"has",value:function(e){return void 0!==this.get(e)}},{key:"get",value:function(e,t){var r=this.map.get(e);if(r){if(r.value.t>=Date.now())return this.resetEntry(r);this.removeEntry(r)}return t}},{key:"set",value:function(e,t){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.opts.ttl,n=this.opts.ksize(e)+this.opts.vsize(t),o=this.map.get(e);if(o&&(this._size-=o.value.s),this._size+=n,this.ensureSize()){var i=Date.now()+r;o?(o.value.v=t,o.value.s=n,o.value.t=i,this.items.asTail(o)):(this.items.push({k:e,v:t,s:n,t:i}),this.map.set(e,this.items.tail))}return t}},{key:"getSet",value:function(e,t){var r=this,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:this.opts.ttl,o=this.get(e);return o?Promise.resolve(o):t().then(function(t){return r.set(e,t,n)})}},{key:"prune",value:function(){for(var e=Date.now(),t=this.items.head;t;)t.value.t<e&&this.removeEntry(t),t=t.next}},{key:"ensureSize",value:function(){for(var e=this.opts.maxsize,r=this.opts.maxlen,n=Date.now(),o=this.items.head;o&&(this._size>e||this.length>=r);)o.value.t<n&&this.removeEntry(o),o=o.next;return _get(_getPrototypeOf(t.prototype),"ensureSize",this).call(this)}}]),t}(),_stringWs="\t\n\v\f\r   ᠎             　\u2028\u2029\ufeff",space="["+_stringWs+"]",non="​",ltrim=RegExp("^"+space+space+"*"),rtrim=RegExp(space+space+"*$"),exporter=function(e,t,r){var n={},o=_fails(function(){return!!_stringWs[e]()||non[e]()!=non}),i=n[e]=o?t(trim):_stringWs[e];r&&(n[r]=i),_export(_export.P+_export.F*o,"String",n)},trim=exporter.trim=function(e,t){return e=String(_defined(e)),1&t&&(e=e.replace(ltrim,"")),2&t&&(e=e.replace(rtrim,"")),e},_stringTrim=exporter,gOPN$3=_objectGopn.f,gOPD$2=_objectGopd.f,dP$5=_objectDp.f,$trim=_stringTrim.trim,NUMBER="Number",$Number=_global[NUMBER],Base$1=$Number,proto$2=$Number.prototype,BROKEN_COF=_cof(_objectCreate(proto$2))==NUMBER,TRIM="trim"in String.prototype,toNumber=function(e){var t=_toPrimitive(e,!1);if("string"==typeof t&&t.length>2){var r,n,o,i=(t=TRIM?t.trim():$trim(t,3)).charCodeAt(0);if(43===i||45===i){if(88===(r=t.charCodeAt(2))||120===r)return NaN}else if(48===i){switch(t.charCodeAt(1)){case 66:case 98:n=2,o=49;break;case 79:case 111:n=8,o=55;break;default:return+t}for(var s,a=t.slice(2),u=0,l=a.length;u<l;u++)if((s=a.charCodeAt(u))<48||s>o)return NaN;return parseInt(a,n)}}return+t};if(!$Number(" 0o1")||!$Number("0b1")||$Number("+0x1")){$Number=function(e){var t=arguments.length<1?0:e,r=this;return r instanceof $Number&&(BROKEN_COF?_fails(function(){proto$2.valueOf.call(r)}):_cof(r)!=NUMBER)?_inheritIfRequired(new Base$1(toNumber(t)),r,$Number):toNumber(t)};for(var keys$2=_descriptors?gOPN$3(Base$1):"MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger".split(","),j$1=0,key$1;keys$2.length>j$1;j$1++)_has(Base$1,key$1=keys$2[j$1])&&!_has($Number,key$1)&&dP$5($Number,key$1,gOPD$2(Base$1,key$1));$Number.prototype=proto$2,proto$2.constructor=$Number,_redefine(_global,NUMBER,$Number)}_export(_export.S,"Number",{isNaN:function(e){return e!=e}});var rApply=(_global.Reflect||{}).apply,fApply=Function.apply;_export(_export.S+_export.F*!_fails(function(){rApply(function(){})}),"Reflect",{apply:function(e,t,r){var n=_aFunction(e),o=_anObject(r);return rApply?rApply(n,t,o):fApply.call(n,t,o)}});var R="object"===("undefined"==typeof Reflect?"undefined":_typeof(Reflect))?Reflect:null,ReflectApply=R&&"function"==typeof R.apply?R.apply:function(e,t,r){return Function.prototype.apply.call(e,t,r)},ReflectOwnKeys;function ProcessEmitWarning(e){console&&console.warn&&console.warn(e)}ReflectOwnKeys=R&&"function"==typeof R.ownKeys?R.ownKeys:Object.getOwnPropertySymbols?function(e){return Object.getOwnPropertyNames(e).concat(Object.getOwnPropertySymbols(e))}:function(e){return Object.getOwnPropertyNames(e)};var NumberIsNaN=Number.isNaN||function(e){return e!=e};function EventEmitter(){EventEmitter.init.call(this)}var events=EventEmitter;EventEmitter.EventEmitter=EventEmitter,EventEmitter.prototype._events=void 0,EventEmitter.prototype._eventsCount=0,EventEmitter.prototype._maxListeners=void 0;var defaultMaxListeners=10;function $getMaxListeners(e){return void 0===e._maxListeners?EventEmitter.defaultMaxListeners:e._maxListeners}function _addListener(e,t,r,n){var o,i,s;if("function"!=typeof r)throw new TypeError('The "listener" argument must be of type Function. Received type '+_typeof(r));if(void 0===(i=e._events)?(i=e._events=Object.create(null),e._eventsCount=0):(void 0!==i.newListener&&(e.emit("newListener",t,r.listener?r.listener:r),i=e._events),s=i[t]),void 0===s)s=i[t]=r,++e._eventsCount;else if("function"==typeof s?s=i[t]=n?[r,s]:[s,r]:n?s.unshift(r):s.push(r),(o=$getMaxListeners(e))>0&&s.length>o&&!s.warned){s.warned=!0;var a=new Error("Possible EventEmitter memory leak detected. "+s.length+" "+String(t)+" listeners added. Use emitter.setMaxListeners() to increase limit");a.name="MaxListenersExceededWarning",a.emitter=e,a.type=t,a.count=s.length,ProcessEmitWarning(a)}return e}function onceWrapper(){for(var e=[],t=0;t<arguments.length;t++)e.push(arguments[t]);this.fired||(this.target.removeListener(this.type,this.wrapFn),this.fired=!0,ReflectApply(this.listener,this.target,e))}function _onceWrap(e,t,r){var n={fired:!1,wrapFn:void 0,target:e,type:t,listener:r},o=onceWrapper.bind(n);return o.listener=r,n.wrapFn=o,o}function _listeners(e,t,r){var n=e._events;if(void 0===n)return[];var o=n[t];return void 0===o?[]:"function"==typeof o?r?[o.listener||o]:[o]:r?unwrapListeners(o):arrayClone(o,o.length)}function listenerCount(e){var t=this._events;if(void 0!==t){var r=t[e];if("function"==typeof r)return 1;if(void 0!==r)return r.length}return 0}function arrayClone(e,t){for(var r=new Array(t),n=0;n<t;++n)r[n]=e[n];return r}function spliceOne(e,t){for(;t+1<e.length;t++)e[t]=e[t+1];e.pop()}function unwrapListeners(e){for(var t=new Array(e.length),r=0;r<t.length;++r)t[r]=e[r].listener||e[r];return t}function getType(e){return Object.prototype.toString.call(e).slice(8,-1)}function isPlainObject$1(e){return"Object"===getType(e)&&(e.constructor===Object&&Object.getPrototypeOf(e)===Object.prototype)}function isNil(e){return null==e}Object.defineProperty(EventEmitter,"defaultMaxListeners",{enumerable:!0,get:function(){return defaultMaxListeners},set:function(e){if("number"!=typeof e||e<0||NumberIsNaN(e))throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received '+e+".");defaultMaxListeners=e}}),EventEmitter.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},EventEmitter.prototype.setMaxListeners=function(e){if("number"!=typeof e||e<0||NumberIsNaN(e))throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received '+e+".");return this._maxListeners=e,this},EventEmitter.prototype.getMaxListeners=function(){return $getMaxListeners(this)},EventEmitter.prototype.emit=function(e){for(var t=[],r=1;r<arguments.length;r++)t.push(arguments[r]);var n="error"===e,o=this._events;if(void 0!==o)n=n&&void 0===o.error;else if(!n)return!1;if(n){var i;if(t.length>0&&(i=t[0]),i instanceof Error)throw i;var s=new Error("Unhandled error."+(i?" ("+i.message+")":""));throw s.context=i,s}var a=o[e];if(void 0===a)return!1;if("function"==typeof a)ReflectApply(a,this,t);else{var u=a.length,l=arrayClone(a,u);for(r=0;r<u;++r)ReflectApply(l[r],this,t)}return!0},EventEmitter.prototype.addListener=function(e,t){return _addListener(this,e,t,!1)},EventEmitter.prototype.on=EventEmitter.prototype.addListener,EventEmitter.prototype.prependListener=function(e,t){return _addListener(this,e,t,!0)},EventEmitter.prototype.once=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+_typeof(t));return this.on(e,_onceWrap(this,e,t)),this},EventEmitter.prototype.prependOnceListener=function(e,t){if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+_typeof(t));return this.prependListener(e,_onceWrap(this,e,t)),this},EventEmitter.prototype.removeListener=function(e,t){var r,n,o,i,s;if("function"!=typeof t)throw new TypeError('The "listener" argument must be of type Function. Received type '+_typeof(t));if(void 0===(n=this._events))return this;if(void 0===(r=n[e]))return this;if(r===t||r.listener===t)0==--this._eventsCount?this._events=Object.create(null):(delete n[e],n.removeListener&&this.emit("removeListener",e,r.listener||t));else if("function"!=typeof r){for(o=-1,i=r.length-1;i>=0;i--)if(r[i]===t||r[i].listener===t){s=r[i].listener,o=i;break}if(o<0)return this;0===o?r.shift():spliceOne(r,o),1===r.length&&(n[e]=r[0]),void 0!==n.removeListener&&this.emit("removeListener",e,s||t)}return this},EventEmitter.prototype.off=EventEmitter.prototype.removeListener,EventEmitter.prototype.removeAllListeners=function(e){var t,r,n;if(void 0===(r=this._events))return this;if(void 0===r.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==r[e]&&(0==--this._eventsCount?this._events=Object.create(null):delete r[e]),this;if(0===arguments.length){var o,i=Object.keys(r);for(n=0;n<i.length;++n)"removeListener"!==(o=i[n])&&this.removeAllListeners(o);return this.removeAllListeners("removeListener"),this._events=Object.create(null),this._eventsCount=0,this}if("function"==typeof(t=r[e]))this.removeListener(e,t);else if(void 0!==t)for(n=t.length-1;n>=0;n--)this.removeListener(e,t[n]);return this},EventEmitter.prototype.listeners=function(e){return _listeners(this,e,!0)},EventEmitter.prototype.rawListeners=function(e){return _listeners(this,e,!1)},EventEmitter.listenerCount=function(e,t){return"function"==typeof e.listenerCount?e.listenerCount(t):listenerCount.call(e,t)},EventEmitter.prototype.listenerCount=listenerCount,EventEmitter.prototype.eventNames=function(){return this._eventsCount>0?ReflectOwnKeys(this._events):[]};var isNil_1=isNil,quot=/"/g,createHTML=function(e,t,r,n){var o=String(_defined(e)),i="<"+t;return""!==r&&(i+=" "+r+'="'+String(n).replace(quot,"&quot;")+'"'),i+">"+o+"</"+t+">"},_stringHtml=function(e,t){var r={};r[e]=t(createHTML),_export(_export.P+_export.F*_fails(function(){var t=""[e]('"');return t!==t.toLowerCase()||t.split('"').length>3}),"String",r)};_stringHtml("sub",function(e){return function(){return e(this,"sub","","")}});var long_1=Long,wasm=null;try{wasm=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function Long(e,t,r){this.low=0|e,this.high=0|t,this.unsigned=!!r}function isLong(e){return!0===(e&&e.__isLong__)}Long.prototype.__isLong__,Object.defineProperty(Long.prototype,"__isLong__",{value:!0}),Long.isLong=isLong;var INT_CACHE={},UINT_CACHE={};function fromInt(e,t){var r,n,o;return t?(o=0<=(e>>>=0)&&e<256)&&(n=UINT_CACHE[e])?n:(r=fromBits(e,(0|e)<0?-1:0,!0),o&&(UINT_CACHE[e]=r),r):(o=-128<=(e|=0)&&e<128)&&(n=INT_CACHE[e])?n:(r=fromBits(e,e<0?-1:0,!1),o&&(INT_CACHE[e]=r),r)}function fromNumber(e,t){if(isNaN(e))return t?UZERO:ZERO;if(t){if(e<0)return UZERO;if(e>=TWO_PWR_64_DBL)return MAX_UNSIGNED_VALUE}else{if(e<=-TWO_PWR_63_DBL)return MIN_VALUE;if(e+1>=TWO_PWR_63_DBL)return MAX_VALUE}return e<0?fromNumber(-e,t).neg():fromBits(e%TWO_PWR_32_DBL|0,e/TWO_PWR_32_DBL|0,t)}function fromBits(e,t,r){return new Long(e,t,r)}Long.fromInt=fromInt,Long.fromNumber=fromNumber,Long.fromBits=fromBits;var pow_dbl=Math.pow;function fromString(e,t,r){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return ZERO;if("number"==typeof t?(r=t,t=!1):t=!!t,(r=r||10)<2||36<r)throw RangeError("radix");var n;if((n=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===n)return fromString(e.substring(1),t,r).neg();for(var o=fromNumber(pow_dbl(r,8)),i=ZERO,s=0;s<e.length;s+=8){var a=Math.min(8,e.length-s),u=parseInt(e.substring(s,s+a),r);if(a<8){var l=fromNumber(pow_dbl(r,a));i=i.mul(l).add(fromNumber(u))}else i=(i=i.mul(o)).add(fromNumber(u))}return i.unsigned=t,i}function fromValue(e,t){return"number"==typeof e?fromNumber(e,t):"string"==typeof e?fromString(e,t):fromBits(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}Long.fromString=fromString,Long.fromValue=fromValue;var TWO_PWR_16_DBL=65536,TWO_PWR_24_DBL=1<<24,TWO_PWR_32_DBL=TWO_PWR_16_DBL*TWO_PWR_16_DBL,TWO_PWR_64_DBL=TWO_PWR_32_DBL*TWO_PWR_32_DBL,TWO_PWR_63_DBL=TWO_PWR_64_DBL/2,TWO_PWR_24=fromInt(TWO_PWR_24_DBL),ZERO=fromInt(0);Long.ZERO=ZERO;var UZERO=fromInt(0,!0);Long.UZERO=UZERO;var ONE=fromInt(1);Long.ONE=ONE;var UONE=fromInt(1,!0);Long.UONE=UONE;var NEG_ONE=fromInt(-1);Long.NEG_ONE=NEG_ONE;var MAX_VALUE=fromBits(-1,2147483647,!1);Long.MAX_VALUE=MAX_VALUE;var MAX_UNSIGNED_VALUE=fromBits(-1,-1,!0);Long.MAX_UNSIGNED_VALUE=MAX_UNSIGNED_VALUE;var MIN_VALUE=fromBits(0,-2147483648,!1);Long.MIN_VALUE=MIN_VALUE;var LongPrototype=Long.prototype;LongPrototype.toInt=function(){return this.unsigned?this.low>>>0:this.low},LongPrototype.toNumber=function(){return this.unsigned?(this.high>>>0)*TWO_PWR_32_DBL+(this.low>>>0):this.high*TWO_PWR_32_DBL+(this.low>>>0)},LongPrototype.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(MIN_VALUE)){var t=fromNumber(e),r=this.div(t),n=r.mul(t).sub(this);return r.toString(e)+n.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var o=fromNumber(pow_dbl(e,6),this.unsigned),i=this,s="";;){var a=i.div(o),u=(i.sub(a.mul(o)).toInt()>>>0).toString(e);if((i=a).isZero())return u+s;for(;u.length<6;)u="0"+u;s=""+u+s}},LongPrototype.getHighBits=function(){return this.high},LongPrototype.getHighBitsUnsigned=function(){return this.high>>>0},LongPrototype.getLowBits=function(){return this.low},LongPrototype.getLowBitsUnsigned=function(){return this.low>>>0},LongPrototype.getNumBitsAbs=function(){if(this.isNegative())return this.eq(MIN_VALUE)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},LongPrototype.isZero=function(){return 0===this.high&&0===this.low},LongPrototype.eqz=LongPrototype.isZero,LongPrototype.isNegative=function(){return!this.unsigned&&this.high<0},LongPrototype.isPositive=function(){return this.unsigned||this.high>=0},LongPrototype.isOdd=function(){return 1==(1&this.low)},LongPrototype.isEven=function(){return 0==(1&this.low)},LongPrototype.equals=function(e){return isLong(e)||(e=fromValue(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&(this.high===e.high&&this.low===e.low)},LongPrototype.eq=LongPrototype.equals,LongPrototype.notEquals=function(e){return!this.eq(e)},LongPrototype.neq=LongPrototype.notEquals,LongPrototype.ne=LongPrototype.notEquals,LongPrototype.lessThan=function(e){return this.comp(e)<0},LongPrototype.lt=LongPrototype.lessThan,LongPrototype.lessThanOrEqual=function(e){return this.comp(e)<=0},LongPrototype.lte=LongPrototype.lessThanOrEqual,LongPrototype.le=LongPrototype.lessThanOrEqual,LongPrototype.greaterThan=function(e){return this.comp(e)>0},LongPrototype.gt=LongPrototype.greaterThan,LongPrototype.greaterThanOrEqual=function(e){return this.comp(e)>=0},LongPrototype.gte=LongPrototype.greaterThanOrEqual,LongPrototype.ge=LongPrototype.greaterThanOrEqual,LongPrototype.compare=function(e){if(isLong(e)||(e=fromValue(e)),this.eq(e))return 0;var t=this.isNegative(),r=e.isNegative();return t&&!r?-1:!t&&r?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},LongPrototype.comp=LongPrototype.compare,LongPrototype.negate=function(){return!this.unsigned&&this.eq(MIN_VALUE)?MIN_VALUE:this.not().add(ONE)},LongPrototype.neg=LongPrototype.negate,LongPrototype.add=function(e){isLong(e)||(e=fromValue(e));var t=this.high>>>16,r=65535&this.high,n=this.low>>>16,o=65535&this.low,i=e.high>>>16,s=65535&e.high,a=e.low>>>16,u=0,l=0,c=0,p=0;return c+=(p+=o+(65535&e.low))>>>16,l+=(c+=n+a)>>>16,u+=(l+=r+s)>>>16,u+=t+i,fromBits((c&=65535)<<16|(p&=65535),(u&=65535)<<16|(l&=65535),this.unsigned)},LongPrototype.subtract=function(e){return isLong(e)||(e=fromValue(e)),this.add(e.neg())},LongPrototype.sub=LongPrototype.subtract,LongPrototype.multiply=function(e){if(this.isZero())return ZERO;if(isLong(e)||(e=fromValue(e)),wasm)return fromBits(wasm.mul(this.low,this.high,e.low,e.high),wasm.get_high(),this.unsigned);if(e.isZero())return ZERO;if(this.eq(MIN_VALUE))return e.isOdd()?MIN_VALUE:ZERO;if(e.eq(MIN_VALUE))return this.isOdd()?MIN_VALUE:ZERO;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(TWO_PWR_24)&&e.lt(TWO_PWR_24))return fromNumber(this.toNumber()*e.toNumber(),this.unsigned);var t=this.high>>>16,r=65535&this.high,n=this.low>>>16,o=65535&this.low,i=e.high>>>16,s=65535&e.high,a=e.low>>>16,u=65535&e.low,l=0,c=0,p=0,f=0;return p+=(f+=o*u)>>>16,c+=(p+=n*u)>>>16,p&=65535,c+=(p+=o*a)>>>16,l+=(c+=r*u)>>>16,c&=65535,l+=(c+=n*a)>>>16,c&=65535,l+=(c+=o*s)>>>16,l+=t*u+r*a+n*s+o*i,fromBits((p&=65535)<<16|(f&=65535),(l&=65535)<<16|(c&=65535),this.unsigned)},LongPrototype.mul=LongPrototype.multiply,LongPrototype.divide=function(e){if(isLong(e)||(e=fromValue(e)),e.isZero())throw Error("division by zero");var t,r,n;if(wasm)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?fromBits((this.unsigned?wasm.div_u:wasm.div_s)(this.low,this.high,e.low,e.high),wasm.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?UZERO:ZERO;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return UZERO;if(e.gt(this.shru(1)))return UONE;n=UZERO}else{if(this.eq(MIN_VALUE))return e.eq(ONE)||e.eq(NEG_ONE)?MIN_VALUE:e.eq(MIN_VALUE)?ONE:(t=this.shr(1).div(e).shl(1)).eq(ZERO)?e.isNegative()?ONE:NEG_ONE:(r=this.sub(e.mul(t)),n=t.add(r.div(e)));if(e.eq(MIN_VALUE))return this.unsigned?UZERO:ZERO;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();n=ZERO}for(r=this;r.gte(e);){t=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var o=Math.ceil(Math.log(t)/Math.LN2),i=o<=48?1:pow_dbl(2,o-48),s=fromNumber(t),a=s.mul(e);a.isNegative()||a.gt(r);)a=(s=fromNumber(t-=i,this.unsigned)).mul(e);s.isZero()&&(s=ONE),n=n.add(s),r=r.sub(a)}return n},LongPrototype.div=LongPrototype.divide,LongPrototype.modulo=function(e){return isLong(e)||(e=fromValue(e)),wasm?fromBits((this.unsigned?wasm.rem_u:wasm.rem_s)(this.low,this.high,e.low,e.high),wasm.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},LongPrototype.mod=LongPrototype.modulo,LongPrototype.rem=LongPrototype.modulo,LongPrototype.not=function(){return fromBits(~this.low,~this.high,this.unsigned)},LongPrototype.and=function(e){return isLong(e)||(e=fromValue(e)),fromBits(this.low&e.low,this.high&e.high,this.unsigned)},LongPrototype.or=function(e){return isLong(e)||(e=fromValue(e)),fromBits(this.low|e.low,this.high|e.high,this.unsigned)},LongPrototype.xor=function(e){return isLong(e)||(e=fromValue(e)),fromBits(this.low^e.low,this.high^e.high,this.unsigned)},LongPrototype.shiftLeft=function(e){return isLong(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?fromBits(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):fromBits(0,this.low<<e-32,this.unsigned)},LongPrototype.shl=LongPrototype.shiftLeft,LongPrototype.shiftRight=function(e){return isLong(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?fromBits(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):fromBits(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},LongPrototype.shr=LongPrototype.shiftRight,LongPrototype.shiftRightUnsigned=function(e){if(isLong(e)&&(e=e.toInt()),0===(e&=63))return this;var t=this.high;return e<32?fromBits(this.low>>>e|t<<32-e,t>>>e,this.unsigned):fromBits(32===e?t:t>>>e-32,0,this.unsigned)},LongPrototype.shru=LongPrototype.shiftRightUnsigned,LongPrototype.shr_u=LongPrototype.shiftRightUnsigned,LongPrototype.toSigned=function(){return this.unsigned?fromBits(this.low,this.high,!1):this},LongPrototype.toUnsigned=function(){return this.unsigned?this:fromBits(this.low,this.high,!0)},LongPrototype.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},LongPrototype.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},LongPrototype.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},Long.fromBytes=function(e,t,r){return r?Long.fromBytesLE(e,t):Long.fromBytesBE(e,t)},Long.fromBytesLE=function(e,t){return new Long(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},Long.fromBytesBE=function(e,t){return new Long(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};var _extendStatics=function(e,t){return(_extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(e,t)};function __extends(e,t){function r(){this.constructor=e}_extendStatics(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r)}function isFunction$1(e){return"function"==typeof e}var _enable_super_gross_mode_that_will_cause_bad_things=!1,config={Promise:void 0,set useDeprecatedSynchronousErrorHandling(e){e&&(new Error).stack;_enable_super_gross_mode_that_will_cause_bad_things=e},get useDeprecatedSynchronousErrorHandling(){return _enable_super_gross_mode_that_will_cause_bad_things}};function hostReportError(e){setTimeout(function(){throw e},0)}var empty$1={closed:!0,next:function(e){},error:function(e){if(config.useDeprecatedSynchronousErrorHandling)throw e;hostReportError(e)},complete:function(){}},isArray$1=Array.isArray||function(e){return e&&"number"==typeof e.length};function isObject$1(e){return null!==e&&"object"===_typeof(e)}function UnsubscriptionErrorImpl(e){return Error.call(this),this.message=e?e.length+" errors occurred during unsubscription:\n"+e.map(function(e,t){return t+1+") "+e.toString()}).join("\n  "):"",this.name="UnsubscriptionError",this.errors=e,this}UnsubscriptionErrorImpl.prototype=Object.create(Error.prototype);var UnsubscriptionError=UnsubscriptionErrorImpl,Subscription=function(){function e(e){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,e&&(this._unsubscribe=e)}var t;return e.prototype.unsubscribe=function(){var t;if(!this.closed){var r=this._parentOrParents,n=this._unsubscribe,o=this._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,r instanceof e)r.remove(this);else if(null!==r)for(var i=0;i<r.length;++i){r[i].remove(this)}if(isFunction$1(n))try{n.call(this)}catch(e){t=e instanceof UnsubscriptionError?flattenUnsubscriptionErrors(e.errors):[e]}if(isArray$1(o)){i=-1;for(var s=o.length;++i<s;){var a=o[i];if(isObject$1(a))try{a.unsubscribe()}catch(e){t=t||[],e instanceof UnsubscriptionError?t=t.concat(flattenUnsubscriptionErrors(e.errors)):t.push(e)}}}if(t)throw new UnsubscriptionError(t)}},e.prototype.add=function(t){var r=t;if(!t)return e.EMPTY;switch(_typeof(t)){case"function":r=new e(t);case"object":if(r===this||r.closed||"function"!=typeof r.unsubscribe)return r;if(this.closed)return r.unsubscribe(),r;if(!(r instanceof e)){var n=r;(r=new e)._subscriptions=[n]}break;default:throw new Error("unrecognized teardown "+t+" added to Subscription.")}var o=r._parentOrParents;if(null===o)r._parentOrParents=this;else if(o instanceof e){if(o===this)return r;r._parentOrParents=[o,this]}else{if(-1!==o.indexOf(this))return r;o.push(this)}var i=this._subscriptions;return null===i?this._subscriptions=[r]:i.push(r),r},e.prototype.remove=function(e){var t=this._subscriptions;if(t){var r=t.indexOf(e);-1!==r&&t.splice(r,1)}},e.EMPTY=((t=new e).closed=!0,t),e}();function flattenUnsubscriptionErrors(e){return e.reduce(function(e,t){return e.concat(t instanceof UnsubscriptionError?t.errors:t)},[])}var rxSubscriber="function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random(),Subscriber=function(e){function t(r,n,o){var i=e.call(this)||this;switch(i.syncErrorValue=null,i.syncErrorThrown=!1,i.syncErrorThrowable=!1,i.isStopped=!1,arguments.length){case 0:i.destination=empty$1;break;case 1:if(!r){i.destination=empty$1;break}if("object"===_typeof(r)){r instanceof t?(i.syncErrorThrowable=r.syncErrorThrowable,i.destination=r,r.add(i)):(i.syncErrorThrowable=!0,i.destination=new SafeSubscriber(i,r));break}default:i.syncErrorThrowable=!0,i.destination=new SafeSubscriber(i,r,n,o)}return i}return __extends(t,e),t.prototype[rxSubscriber]=function(){return this},t.create=function(e,r,n){var o=new t(e,r,n);return o.syncErrorThrowable=!1,o},t.prototype.next=function(e){this.isStopped||this._next(e)},t.prototype.error=function(e){this.isStopped||(this.isStopped=!0,this._error(e))},t.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},t.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,e.prototype.unsubscribe.call(this))},t.prototype._next=function(e){this.destination.next(e)},t.prototype._error=function(e){this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},t.prototype._unsubscribeAndRecycle=function(){var e=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=e,this},t}(Subscription),SafeSubscriber=function(e){function t(t,r,n,o){var i,s=e.call(this)||this;s._parentSubscriber=t;var a=s;return isFunction$1(r)?i=r:r&&(i=r.next,n=r.error,o=r.complete,r!==empty$1&&(isFunction$1((a=Object.create(r)).unsubscribe)&&s.add(a.unsubscribe.bind(a)),a.unsubscribe=s.unsubscribe.bind(s))),s._context=a,s._next=i,s._error=n,s._complete=o,s}return __extends(t,e),t.prototype.next=function(e){if(!this.isStopped&&this._next){var t=this._parentSubscriber;config.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?this.__tryOrSetError(t,this._next,e)&&this.unsubscribe():this.__tryOrUnsub(this._next,e)}},t.prototype.error=function(e){if(!this.isStopped){var t=this._parentSubscriber,r=config.useDeprecatedSynchronousErrorHandling;if(this._error)r&&t.syncErrorThrowable?(this.__tryOrSetError(t,this._error,e),this.unsubscribe()):(this.__tryOrUnsub(this._error,e),this.unsubscribe());else if(t.syncErrorThrowable)r?(t.syncErrorValue=e,t.syncErrorThrown=!0):hostReportError(e),this.unsubscribe();else{if(this.unsubscribe(),r)throw e;hostReportError(e)}}},t.prototype.complete=function(){var e=this;if(!this.isStopped){var t=this._parentSubscriber;if(this._complete){var r=function(){return e._complete.call(e._context)};config.useDeprecatedSynchronousErrorHandling&&t.syncErrorThrowable?(this.__tryOrSetError(t,r),this.unsubscribe()):(this.__tryOrUnsub(r),this.unsubscribe())}else this.unsubscribe()}},t.prototype.__tryOrUnsub=function(e,t){try{e.call(this._context,t)}catch(e){if(this.unsubscribe(),config.useDeprecatedSynchronousErrorHandling)throw e;hostReportError(e)}},t.prototype.__tryOrSetError=function(e,t,r){if(!config.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{t.call(this._context,r)}catch(t){return config.useDeprecatedSynchronousErrorHandling?(e.syncErrorValue=t,e.syncErrorThrown=!0,!0):(hostReportError(t),!0)}return!1},t.prototype._unsubscribe=function(){var e=this._parentSubscriber;this._context=null,this._parentSubscriber=null,e.unsubscribe()},t}(Subscriber),OuterSubscriber=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.notifyNext=function(e,t,r,n,o){this.destination.next(t)},t.prototype.notifyError=function(e,t){this.destination.error(e)},t.prototype.notifyComplete=function(e){this.destination.complete()},t}(Subscriber),InnerSubscriber=function(e){function t(t,r,n){var o=e.call(this)||this;return o.parent=t,o.outerValue=r,o.outerIndex=n,o.index=0,o}return __extends(t,e),t.prototype._next=function(e){this.parent.notifyNext(this.outerValue,e,this.outerIndex,this.index++,this)},t.prototype._error=function(e){this.parent.notifyError(e,this),this.unsubscribe()},t.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},t}(Subscriber),subscribeToArray=function(e){return function(t){for(var r=0,n=e.length;r<n&&!t.closed;r++)t.next(e[r]);t.complete()}},subscribeToPromise=function(e){return function(t){return e.then(function(e){t.closed||(t.next(e),t.complete())},function(e){return t.error(e)}).then(null,hostReportError),t}};function getSymbolIterator(){return"function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}var iterator=getSymbolIterator(),subscribeToIterable=function(e){return function(t){for(var r=e[iterator]();;){var n=r.next();if(n.done){t.complete();break}if(t.next(n.value),t.closed)break}return"function"==typeof r.return&&t.add(function(){r.return&&r.return()}),t}},observable="function"==typeof Symbol&&Symbol.observable||"@@observable",subscribeToObservable=function(e){return function(t){var r=e[observable]();if("function"!=typeof r.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return r.subscribe(t)}},isArrayLike$2=function(e){return e&&"number"==typeof e.length&&"function"!=typeof e};function isPromise(e){return!!e&&"function"!=typeof e.subscribe&&"function"==typeof e.then}var subscribeTo=function(e){if(e&&"function"==typeof e[observable])return subscribeToObservable(e);if(isArrayLike$2(e))return subscribeToArray(e);if(isPromise(e))return subscribeToPromise(e);if(e&&"function"==typeof e[iterator])return subscribeToIterable(e);var t=isObject$1(e)?"an invalid object":"'"+e+"'";throw new TypeError("You provided "+t+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.")};function canReportError(e){for(;e;){var t=e,r=t.closed,n=t.destination,o=t.isStopped;if(r||o)return!1;e=n&&n instanceof Subscriber?n:null}return!0}function toSubscriber(e,t,r){if(e){if(e instanceof Subscriber)return e;if(e[rxSubscriber])return e[rxSubscriber]()}return e||t||r?new Subscriber(e,t,r):new Subscriber(empty$1)}function noop$1(){}function pipe(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return pipeFromArray(e)}function pipeFromArray(e){return e?1===e.length?e[0]:function(t){return e.reduce(function(e,t){return t(e)},t)}:noop$1}var Observable=function(){function e(e){this._isScalar=!1,e&&(this._subscribe=e)}return e.prototype.lift=function(t){var r=new e;return r.source=this,r.operator=t,r},e.prototype.subscribe=function(e,t,r){var n=this.operator,o=toSubscriber(e,t,r);if(n?o.add(n.call(o,this.source)):o.add(this.source||config.useDeprecatedSynchronousErrorHandling&&!o.syncErrorThrowable?this._subscribe(o):this._trySubscribe(o)),config.useDeprecatedSynchronousErrorHandling&&o.syncErrorThrowable&&(o.syncErrorThrowable=!1,o.syncErrorThrown))throw o.syncErrorValue;return o},e.prototype._trySubscribe=function(e){try{return this._subscribe(e)}catch(t){config.useDeprecatedSynchronousErrorHandling&&(e.syncErrorThrown=!0,e.syncErrorValue=t),canReportError(e)?e.error(t):console.warn(t)}},e.prototype.forEach=function(e,t){var r=this;return new(t=getPromiseCtor(t))(function(t,n){var o;o=r.subscribe(function(t){try{e(t)}catch(e){n(e),o&&o.unsubscribe()}},n,t)})},e.prototype._subscribe=function(e){var t=this.source;return t&&t.subscribe(e)},e.prototype[observable]=function(){return this},e.prototype.pipe=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return 0===e.length?this:pipeFromArray(e)(this)},e.prototype.toPromise=function(e){var t=this;return new(e=getPromiseCtor(e))(function(e,r){var n;t.subscribe(function(e){return n=e},function(e){return r(e)},function(){return e(n)})})},e.create=function(t){return new e(t)},e}();function getPromiseCtor(e){if(e||(e=Promise),!e)throw new Error("no Promise impl found");return e}function subscribeToResult(e,t,r,n,o){if(void 0===o&&(o=new InnerSubscriber(e,r,n)),!o.closed)return t instanceof Observable?t.subscribe(o):subscribeTo(t)(o)}var Action=function(e){function t(t,r){return e.call(this)||this}return __extends(t,e),t.prototype.schedule=function(e,t){return this},t}(Subscription),AsyncAction=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.scheduler=t,n.work=r,n.pending=!1,n}return __extends(t,e),t.prototype.schedule=function(e,t){if(void 0===t&&(t=0),this.closed)return this;this.state=e;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,t)),this.pending=!0,this.delay=t,this.id=this.id||this.requestAsyncId(n,this.id,t),this},t.prototype.requestAsyncId=function(e,t,r){return void 0===r&&(r=0),setInterval(e.flush.bind(e,this),r)},t.prototype.recycleAsyncId=function(e,t,r){if(void 0===r&&(r=0),null!==r&&this.delay===r&&!1===this.pending)return t;clearInterval(t)},t.prototype.execute=function(e,t){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var r=this._execute(e,t);if(r)return r;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},t.prototype._execute=function(e,t){var r=!1,n=void 0;try{this.work(e)}catch(e){r=!0,n=!!e&&e||new Error(e)}if(r)return this.unsubscribe(),n},t.prototype._unsubscribe=function(){var e=this.id,t=this.scheduler,r=t.actions,n=r.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==n&&r.splice(n,1),null!=e&&(this.id=this.recycleAsyncId(t,e,null)),this.delay=null},t}(Action),Scheduler=function(){function e(t,r){void 0===r&&(r=e.now),this.SchedulerAction=t,this.now=r}return e.prototype.schedule=function(e,t,r){return void 0===t&&(t=0),new this.SchedulerAction(this,e).schedule(r,t)},e.now=function(){return Date.now()},e}(),AsyncScheduler=function(e){function t(r,n){void 0===n&&(n=Scheduler.now);var o=e.call(this,r,function(){return t.delegate&&t.delegate!==o?t.delegate.now():n()})||this;return o.actions=[],o.active=!1,o.scheduled=void 0,o}return __extends(t,e),t.prototype.schedule=function(r,n,o){return void 0===n&&(n=0),t.delegate&&t.delegate!==this?t.delegate.schedule(r,n,o):e.prototype.schedule.call(this,r,n,o)},t.prototype.flush=function(e){var t=this.actions;if(this.active)t.push(e);else{var r;this.active=!0;do{if(r=e.execute(e.state,e.delay))break}while(e=t.shift());if(this.active=!1,r){for(;e=t.shift();)e.unsubscribe();throw r}}},t}(Scheduler),async=new AsyncScheduler(AsyncAction);function isNumeric(e){return!isArray$1(e)&&e-parseFloat(e)+1>=0}function isScheduler(e){return e&&"function"==typeof e.schedule}function timer(e,t,r){void 0===e&&(e=0);var n=-1;return isNumeric(t)?n=Number(t)<1?1:Number(t):isScheduler(t)&&(r=t),isScheduler(r)||(r=async),new Observable(function(t){var o=isNumeric(e)?e:+e-r.now();return r.schedule(dispatch,o,{index:0,period:n,subscriber:t})})}function dispatch(e){var t=e.index,r=e.period,n=e.subscriber;if(n.next(t),!n.closed){if(-1===r)return n.complete();e.index=t+1,this.schedule(e,r)}}function catchError(e){return function(t){var r=new CatchOperator(e),n=t.lift(r);return r.caught=n}}var CatchOperator=function(){function e(e){this.selector=e}return e.prototype.call=function(e,t){return t.subscribe(new CatchSubscriber(e,this.selector,this.caught))},e}(),CatchSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.selector=r,o.caught=n,o}return __extends(t,e),t.prototype.error=function(t){if(!this.isStopped){var r=void 0;try{r=this.selector(t,this.caught)}catch(t){return void e.prototype.error.call(this,t)}this._unsubscribeAndRecycle();var n=new InnerSubscriber(this,void 0,void 0);this.add(n),subscribeToResult(this,r,void 0,void 0,n)}},t}(OuterSubscriber);function scheduleArray(e,t){return new Observable(function(r){var n=new Subscription,o=0;return n.add(t.schedule(function(){o!==e.length?(r.next(e[o++]),r.closed||n.add(this.schedule())):r.complete()})),n})}function fromArray(e,t){return t?scheduleArray(e,t):new Observable(subscribeToArray(e))}var NONE={};function combineLatest(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=null,n=null;return isScheduler(e[e.length-1])&&(n=e.pop()),"function"==typeof e[e.length-1]&&(r=e.pop()),1===e.length&&isArray$1(e[0])&&(e=e[0]),fromArray(e,n).lift(new CombineLatestOperator(r))}var CombineLatestOperator=function(){function e(e){this.resultSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new CombineLatestSubscriber(e,this.resultSelector))},e}(),CombineLatestSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.resultSelector=r,n.active=0,n.values=[],n.observables=[],n}return __extends(t,e),t.prototype._next=function(e){this.values.push(NONE),this.observables.push(e)},t.prototype._complete=function(){var e=this.observables,t=e.length;if(0===t)this.destination.complete();else{this.active=t,this.toRespond=t;for(var r=0;r<t;r++){var n=e[r];this.add(subscribeToResult(this,n,n,r))}}},t.prototype.notifyComplete=function(e){0==(this.active-=1)&&this.destination.complete()},t.prototype.notifyNext=function(e,t,r,n,o){var i=this.values,s=i[r],a=this.toRespond?s===NONE?--this.toRespond:this.toRespond:0;i[r]=t,0===a&&(this.resultSelector?this._tryResultSelector(i):this.destination.next(i.slice()))},t.prototype._tryResultSelector=function(e){var t;try{t=this.resultSelector.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(OuterSubscriber);function scheduleObservable(e,t){return new Observable(function(r){var n=new Subscription;return n.add(t.schedule(function(){var o=e[observable]();n.add(o.subscribe({next:function(e){n.add(t.schedule(function(){return r.next(e)}))},error:function(e){n.add(t.schedule(function(){return r.error(e)}))},complete:function(){n.add(t.schedule(function(){return r.complete()}))}}))})),n})}function schedulePromise(e,t){return new Observable(function(r){var n=new Subscription;return n.add(t.schedule(function(){return e.then(function(e){n.add(t.schedule(function(){r.next(e),n.add(t.schedule(function(){return r.complete()}))}))},function(e){n.add(t.schedule(function(){return r.error(e)}))})})),n})}function scheduleIterable(e,t){if(!e)throw new Error("Iterable cannot be null");return new Observable(function(r){var n,o=new Subscription;return o.add(function(){n&&"function"==typeof n.return&&n.return()}),o.add(t.schedule(function(){n=e[iterator](),o.add(t.schedule(function(){if(!r.closed){var e,t;try{var o=n.next();e=o.value,t=o.done}catch(e){return void r.error(e)}t?r.complete():(r.next(e),this.schedule())}}))})),o})}function isInteropObservable(e){return e&&"function"==typeof e[observable]}function isIterable(e){return e&&"function"==typeof e[iterator]}function scheduled(e,t){if(null!=e){if(isInteropObservable(e))return scheduleObservable(e,t);if(isPromise(e))return schedulePromise(e,t);if(isArrayLike$2(e))return scheduleArray(e,t);if(isIterable(e)||"string"==typeof e)return scheduleIterable(e,t)}throw new TypeError((null!==e&&_typeof(e)||e)+" is not observable")}function from(e,t){return t?scheduled(e,t):e instanceof Observable?e:new Observable(subscribeTo(e))}function of(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=e[e.length-1];return isScheduler(r)?(e.pop(),scheduleArray(e,r)):fromArray(e)}function map$1(e,t){return function(r){if("function"!=typeof e)throw new TypeError("argument is not a function. Are you looking for `mapTo()`?");return r.lift(new MapOperator(e,t))}}var MapOperator=function(){function e(e,t){this.project=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new MapSubscriber(e,this.project,this.thisArg))},e}(),MapSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.project=r,o.count=0,o.thisArg=n||o,o}return __extends(t,e),t.prototype._next=function(e){var t;try{t=this.project.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(Subscriber);function mergeMap(e,t,r){return void 0===r&&(r=Number.POSITIVE_INFINITY),"function"==typeof t?function(n){return n.pipe(mergeMap(function(r,n){return from(e(r,n)).pipe(map$1(function(e,o){return t(r,e,n,o)}))},r))}:("number"==typeof t&&(r=t),function(t){return t.lift(new MergeMapOperator(e,r))})}var MergeMapOperator=function(){function e(e,t){void 0===t&&(t=Number.POSITIVE_INFINITY),this.project=e,this.concurrent=t}return e.prototype.call=function(e,t){return t.subscribe(new MergeMapSubscriber(e,this.project,this.concurrent))},e}(),MergeMapSubscriber=function(e){function t(t,r,n){void 0===n&&(n=Number.POSITIVE_INFINITY);var o=e.call(this,t)||this;return o.project=r,o.concurrent=n,o.hasCompleted=!1,o.buffer=[],o.active=0,o.index=0,o}return __extends(t,e),t.prototype._next=function(e){this.active<this.concurrent?this._tryNext(e):this.buffer.push(e)},t.prototype._tryNext=function(e){var t,r=this.index++;try{t=this.project(e,r)}catch(e){return void this.destination.error(e)}this.active++,this._innerSub(t,e,r)},t.prototype._innerSub=function(e,t,r){var n=new InnerSubscriber(this,void 0,void 0);this.destination.add(n),subscribeToResult(this,e,t,r,n)},t.prototype._complete=function(){this.hasCompleted=!0,0===this.active&&0===this.buffer.length&&this.destination.complete(),this.unsubscribe()},t.prototype.notifyNext=function(e,t,r,n,o){this.destination.next(t)},t.prototype.notifyComplete=function(e){var t=this.buffer;this.remove(e),this.active--,t.length>0?this._next(t.shift()):0===this.active&&this.hasCompleted&&this.destination.complete()},t}(OuterSubscriber);function identity$1(e){return e}function mergeAll(e){return void 0===e&&(e=Number.POSITIVE_INFINITY),mergeMap(identity$1,e)}function concatAll(){return mergeAll(1)}function concat(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return concatAll()(of.apply(void 0,e))}function concatMap(e,t){return mergeMap(e,t,1)}function defaultIfEmpty(e){return void 0===e&&(e=null),function(t){return t.lift(new DefaultIfEmptyOperator(e))}}var DefaultIfEmptyOperator=function(){function e(e){this.defaultValue=e}return e.prototype.call=function(e,t){return t.subscribe(new DefaultIfEmptySubscriber(e,this.defaultValue))},e}(),DefaultIfEmptySubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.defaultValue=r,n.isEmpty=!0,n}return __extends(t,e),t.prototype._next=function(e){this.isEmpty=!1,this.destination.next(e)},t.prototype._complete=function(){this.isEmpty&&this.destination.next(this.defaultValue),this.destination.complete()},t}(Subscriber);function isDate(e){return e instanceof Date&&!isNaN(+e)}var EMPTY=new Observable(function(e){return e.complete()}),NotificationKind;function empty$2(e){return e?emptyScheduled(e):EMPTY}function emptyScheduled(e){return new Observable(function(t){return e.schedule(function(){return t.complete()})})}function throwError(e,t){return new Observable(t?function(r){return t.schedule(dispatch$1,0,{error:e,subscriber:r})}:function(t){return t.error(e)})}function dispatch$1(e){var t=e.error;e.subscriber.error(t)}NotificationKind||(NotificationKind={});var Notification=function(){function e(e,t,r){this.kind=e,this.value=t,this.error=r,this.hasValue="N"===e}return e.prototype.observe=function(e){switch(this.kind){case"N":return e.next&&e.next(this.value);case"E":return e.error&&e.error(this.error);case"C":return e.complete&&e.complete()}},e.prototype.do=function(e,t,r){switch(this.kind){case"N":return e&&e(this.value);case"E":return t&&t(this.error);case"C":return r&&r()}},e.prototype.accept=function(e,t,r){return e&&"function"==typeof e.next?this.observe(e):this.do(e,t,r)},e.prototype.toObservable=function(){switch(this.kind){case"N":return of(this.value);case"E":return throwError(this.error);case"C":return empty$2()}throw new Error("unexpected notification kind value")},e.createNext=function(t){return void 0!==t?new e("N",t):e.undefinedValueNotification},e.createError=function(t){return new e("E",void 0,t)},e.createComplete=function(){return e.completeNotification},e.completeNotification=new e("C"),e.undefinedValueNotification=new e("N",void 0),e}();function delay(e,t){void 0===t&&(t=async);var r=isDate(e)?+e-t.now():Math.abs(e);return function(e){return e.lift(new DelayOperator(r,t))}}var DelayOperator=function(){function e(e,t){this.delay=e,this.scheduler=t}return e.prototype.call=function(e,t){return t.subscribe(new DelaySubscriber(e,this.delay,this.scheduler))},e}(),DelaySubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.delay=r,o.scheduler=n,o.queue=[],o.active=!1,o.errored=!1,o}return __extends(t,e),t.dispatch=function(e){for(var t=e.source,r=t.queue,n=e.scheduler,o=e.destination;r.length>0&&r[0].time-n.now()<=0;)r.shift().notification.observe(o);if(r.length>0){var i=Math.max(0,r[0].time-n.now());this.schedule(e,i)}else this.unsubscribe(),t.active=!1},t.prototype._schedule=function(e){this.active=!0,this.destination.add(e.schedule(t.dispatch,this.delay,{source:this,destination:this.destination,scheduler:e}))},t.prototype.scheduleNotification=function(e){if(!0!==this.errored){var t=this.scheduler,r=new DelayMessage(t.now()+this.delay,e);this.queue.push(r),!1===this.active&&this._schedule(t)}},t.prototype._next=function(e){this.scheduleNotification(Notification.createNext(e))},t.prototype._error=function(e){this.errored=!0,this.queue=[],this.destination.error(e),this.unsubscribe()},t.prototype._complete=function(){this.scheduleNotification(Notification.createComplete()),this.unsubscribe()},t}(Subscriber),DelayMessage=function(){return function(e,t){this.time=e,this.notification=t}}();function distinct(e,t){return function(r){return r.lift(new DistinctOperator(e,t))}}var DistinctOperator=function(){function e(e,t){this.keySelector=e,this.flushes=t}return e.prototype.call=function(e,t){return t.subscribe(new DistinctSubscriber(e,this.keySelector,this.flushes))},e}(),DistinctSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.keySelector=r,o.values=new Set,n&&o.add(subscribeToResult(o,n)),o}return __extends(t,e),t.prototype.notifyNext=function(e,t,r,n,o){this.values.clear()},t.prototype.notifyError=function(e,t){this._error(e)},t.prototype._next=function(e){this.keySelector?this._useKeySelector(e):this._finalizeNext(e,e)},t.prototype._useKeySelector=function(e){var t,r=this.destination;try{t=this.keySelector(e)}catch(e){return void r.error(e)}this._finalizeNext(t,e)},t.prototype._finalizeNext=function(e,t){var r=this.values;r.has(e)||(r.add(e),this.destination.next(t))},t}(OuterSubscriber);function ArgumentOutOfRangeErrorImpl(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}ArgumentOutOfRangeErrorImpl.prototype=Object.create(Error.prototype);var ArgumentOutOfRangeError=ArgumentOutOfRangeErrorImpl;function filter(e,t){return function(r){return r.lift(new FilterOperator(e,t))}}var FilterOperator=function(){function e(e,t){this.predicate=e,this.thisArg=t}return e.prototype.call=function(e,t){return t.subscribe(new FilterSubscriber(e,this.predicate,this.thisArg))},e}(),FilterSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.predicate=r,o.thisArg=n,o.count=0,o}return __extends(t,e),t.prototype._next=function(e){var t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}t&&this.destination.next(e)},t}(Subscriber);function EmptyErrorImpl(){return Error.call(this),this.message="no elements in sequence",this.name="EmptyError",this}EmptyErrorImpl.prototype=Object.create(Error.prototype);var EmptyError=EmptyErrorImpl;function throwIfEmpty(e){return void 0===e&&(e=defaultErrorFactory),function(t){return t.lift(new ThrowIfEmptyOperator(e))}}var ThrowIfEmptyOperator=function(){function e(e){this.errorFactory=e}return e.prototype.call=function(e,t){return t.subscribe(new ThrowIfEmptySubscriber(e,this.errorFactory))},e}(),ThrowIfEmptySubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.errorFactory=r,n.hasValue=!1,n}return __extends(t,e),t.prototype._next=function(e){this.hasValue=!0,this.destination.next(e)},t.prototype._complete=function(){if(this.hasValue)return this.destination.complete();var e=void 0;try{e=this.errorFactory()}catch(t){e=t}this.destination.error(e)},t}(Subscriber);function defaultErrorFactory(){return new EmptyError}function take(e){return function(t){return 0===e?empty$2():t.lift(new TakeOperator(e))}}var TakeOperator=function(){function e(e){if(this.total=e,this.total<0)throw new ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return t.subscribe(new TakeSubscriber(e,this.total))},e}(),TakeSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.total=r,n.count=0,n}return __extends(t,e),t.prototype._next=function(e){var t=this.total,r=++this.count;r<=t&&(this.destination.next(e),r===t&&(this.destination.complete(),this.unsubscribe()))},t}(Subscriber);function finalize(e){return function(t){return t.lift(new FinallyOperator(e))}}var FinallyOperator=function(){function e(e){this.callback=e}return e.prototype.call=function(e,t){return t.subscribe(new FinallySubscriber(e,this.callback))},e}(),FinallySubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.add(new Subscription(r)),n}return __extends(t,e),t}(Subscriber);function first(e,t){var r=arguments.length>=2;return function(n){return n.pipe(e?filter(function(t,r){return e(t,r,n)}):identity$1,take(1),r?defaultIfEmpty(t):throwIfEmpty(function(){return new EmptyError}))}}function ObjectUnsubscribedErrorImpl(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}ObjectUnsubscribedErrorImpl.prototype=Object.create(Error.prototype);var ObjectUnsubscribedError=ObjectUnsubscribedErrorImpl,SubjectSubscription=function(e){function t(t,r){var n=e.call(this)||this;return n.subject=t,n.subscriber=r,n.closed=!1,n}return __extends(t,e),t.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var e=this.subject,t=e.observers;if(this.subject=null,t&&0!==t.length&&!e.isStopped&&!e.closed){var r=t.indexOf(this.subscriber);-1!==r&&t.splice(r,1)}}},t}(Subscription),SubjectSubscriber=function(e){function t(t){var r=e.call(this,t)||this;return r.destination=t,r}return __extends(t,e),t}(Subscriber),Subject=function(e){function t(){var t=e.call(this)||this;return t.observers=[],t.closed=!1,t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return __extends(t,e),t.prototype[rxSubscriber]=function(){return new SubjectSubscriber(this)},t.prototype.lift=function(e){var t=new AnonymousSubject(this,this);return t.operator=e,t},t.prototype.next=function(e){if(this.closed)throw new ObjectUnsubscribedError;if(!this.isStopped)for(var t=this.observers,r=t.length,n=t.slice(),o=0;o<r;o++)n[o].next(e)},t.prototype.error=function(e){if(this.closed)throw new ObjectUnsubscribedError;this.hasError=!0,this.thrownError=e,this.isStopped=!0;for(var t=this.observers,r=t.length,n=t.slice(),o=0;o<r;o++)n[o].error(e);this.observers.length=0},t.prototype.complete=function(){if(this.closed)throw new ObjectUnsubscribedError;this.isStopped=!0;for(var e=this.observers,t=e.length,r=e.slice(),n=0;n<t;n++)r[n].complete();this.observers.length=0},t.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},t.prototype._trySubscribe=function(t){if(this.closed)throw new ObjectUnsubscribedError;return e.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(e){if(this.closed)throw new ObjectUnsubscribedError;return this.hasError?(e.error(this.thrownError),Subscription.EMPTY):this.isStopped?(e.complete(),Subscription.EMPTY):(this.observers.push(e),new SubjectSubscription(this,e))},t.prototype.asObservable=function(){var e=new Observable;return e.source=this,e},t.create=function(e,t){return new AnonymousSubject(e,t)},t}(Observable),AnonymousSubject=function(e){function t(t,r){var n=e.call(this)||this;return n.destination=t,n.source=r,n}return __extends(t,e),t.prototype.next=function(e){var t=this.destination;t&&t.next&&t.next(e)},t.prototype.error=function(e){var t=this.destination;t&&t.error&&this.destination.error(e)},t.prototype.complete=function(){var e=this.destination;e&&e.complete&&this.destination.complete()},t.prototype._subscribe=function(e){return this.source?this.source.subscribe(e):Subscription.EMPTY},t}(Subject),GroupedObservable=function(e){function t(t,r,n){var o=e.call(this)||this;return o.key=t,o.groupSubject=r,o.refCountSubscription=n,o}return __extends(t,e),t.prototype._subscribe=function(e){var t=new Subscription,r=this.refCountSubscription,n=this.groupSubject;return r&&!r.closed&&t.add(new InnerRefCountSubscription(r)),t.add(n.subscribe(e)),t},t}(Observable),InnerRefCountSubscription=function(e){function t(t){var r=e.call(this)||this;return r.parent=t,t.count++,r}return __extends(t,e),t.prototype.unsubscribe=function(){var t=this.parent;t.closed||this.closed||(e.prototype.unsubscribe.call(this),t.count-=1,0===t.count&&t.attemptedToUnsubscribe&&t.unsubscribe())},t}(Subscription);function ignoreElements(){return function(e){return e.lift(new IgnoreElementsOperator)}}var IgnoreElementsOperator=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new IgnoreElementsSubscriber(e))},e}(),IgnoreElementsSubscriber=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype._next=function(e){},t}(Subscriber);function takeLast(e){return function(t){return 0===e?empty$2():t.lift(new TakeLastOperator(e))}}var TakeLastOperator=function(){function e(e){if(this.total=e,this.total<0)throw new ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return t.subscribe(new TakeLastSubscriber(e,this.total))},e}(),TakeLastSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.total=r,n.ring=new Array,n.count=0,n}return __extends(t,e),t.prototype._next=function(e){var t=this.ring,r=this.total,n=this.count++;t.length<r?t.push(e):t[n%r]=e},t.prototype._complete=function(){var e=this.destination,t=this.count;if(t>0)for(var r=this.count>=this.total?this.total:this.count,n=this.ring,o=0;o<r;o++){var i=t++%r;e.next(n[i])}e.complete()},t}(Subscriber);function mapTo(e){return function(t){return t.lift(new MapToOperator(e))}}var MapToOperator=function(){function e(e){this.value=e}return e.prototype.call=function(e,t){return t.subscribe(new MapToSubscriber(e,this.value))},e}(),MapToSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.value=r,n}return __extends(t,e),t.prototype._next=function(e){this.destination.next(this.value)},t}(Subscriber);function scan(e,t){var r=!1;return arguments.length>=2&&(r=!0),function(n){return n.lift(new ScanOperator(e,t,r))}}var ScanOperator=function(){function e(e,t,r){void 0===r&&(r=!1),this.accumulator=e,this.seed=t,this.hasSeed=r}return e.prototype.call=function(e,t){return t.subscribe(new ScanSubscriber(e,this.accumulator,this.seed,this.hasSeed))},e}(),ScanSubscriber=function(e){function t(t,r,n,o){var i=e.call(this,t)||this;return i.accumulator=r,i._seed=n,i.hasSeed=o,i.index=0,i}return __extends(t,e),Object.defineProperty(t.prototype,"seed",{get:function(){return this._seed},set:function(e){this.hasSeed=!0,this._seed=e},enumerable:!0,configurable:!0}),t.prototype._next=function(e){if(this.hasSeed)return this._tryNext(e);this.seed=e,this.destination.next(e)},t.prototype._tryNext=function(e){var t,r=this.index++;try{t=this.accumulator(this.seed,e,r)}catch(e){this.destination.error(e)}this.seed=t,this.destination.next(t)},t}(Subscriber);function reduce(e,t){return arguments.length>=2?function(r){return pipe(scan(e,t),takeLast(1),defaultIfEmpty(t))(r)}:function(t){return pipe(scan(function(t,r,n){return e(t,r,n+1)}),takeLast(1))(t)}}function merge(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=Number.POSITIVE_INFINITY,n=null,o=e[e.length-1];return isScheduler(o)?(n=e.pop(),e.length>1&&"number"==typeof e[e.length-1]&&(r=e.pop())):"number"==typeof o&&(r=e.pop()),null===n&&1===e.length&&e[0]instanceof Observable?e[0]:mergeAll(r)(fromArray(e,n))}function refCount(){return function(e){return e.lift(new RefCountOperator(e))}}var RefCountOperator=function(){function e(e){this.connectable=e}return e.prototype.call=function(e,t){var r=this.connectable;r._refCount++;var n=new RefCountSubscriber(e,r),o=t.subscribe(n);return n.closed||(n.connection=r.connect()),o},e}(),RefCountSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.connectable=r,n}return __extends(t,e),t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._refCount;if(t<=0)this.connection=null;else if(e._refCount=t-1,t>1)this.connection=null;else{var r=this.connection,n=e._connection;this.connection=null,!n||r&&n!==r||n.unsubscribe()}}else this.connection=null},t}(Subscriber),ConnectableObservable=function(e){function t(t,r){var n=e.call(this)||this;return n.source=t,n.subjectFactory=r,n._refCount=0,n._isComplete=!1,n}return __extends(t,e),t.prototype._subscribe=function(e){return this.getSubject().subscribe(e)},t.prototype.getSubject=function(){var e=this._subject;return e&&!e.isStopped||(this._subject=this.subjectFactory()),this._subject},t.prototype.connect=function(){var e=this._connection;return e||(this._isComplete=!1,(e=this._connection=new Subscription).add(this.source.subscribe(new ConnectableSubscriber(this.getSubject(),this))),e.closed&&(this._connection=null,e=Subscription.EMPTY)),e},t.prototype.refCount=function(){return refCount()(this)},t}(Observable),connectableProto=ConnectableObservable.prototype,connectableObservableDescriptor={operator:{value:null},_refCount:{value:0,writable:!0},_subject:{value:null,writable:!0},_connection:{value:null,writable:!0},_subscribe:{value:connectableProto._subscribe},_isComplete:{value:connectableProto._isComplete,writable:!0},getSubject:{value:connectableProto.getSubject},connect:{value:connectableProto.connect},refCount:{value:connectableProto.refCount}},ConnectableSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.connectable=r,n}return __extends(t,e),t.prototype._error=function(t){this._unsubscribe(),e.prototype._error.call(this,t)},t.prototype._complete=function(){this.connectable._isComplete=!0,this._unsubscribe(),e.prototype._complete.call(this)},t.prototype._unsubscribe=function(){var e=this.connectable;if(e){this.connectable=null;var t=e._connection;e._refCount=0,e._subject=null,e._connection=null,t&&t.unsubscribe()}},t}(SubjectSubscriber);function multicast(e,t){return function(r){var n;if(n="function"==typeof e?e:function(){return e},"function"==typeof t)return r.lift(new MulticastOperator(n,t));var o=Object.create(r,connectableObservableDescriptor);return o.source=r,o.subjectFactory=n,o}}var MulticastOperator=function(){function e(e,t){this.subjectFactory=e,this.selector=t}return e.prototype.call=function(e,t){var r=this.selector,n=this.subjectFactory(),o=r(n).subscribe(e);return o.add(t.subscribe(n)),o},e}();function observeOn(e,t){return void 0===t&&(t=0),function(r){return r.lift(new ObserveOnOperator(e,t))}}var ObserveOnOperator=function(){function e(e,t){void 0===t&&(t=0),this.scheduler=e,this.delay=t}return e.prototype.call=function(e,t){return t.subscribe(new ObserveOnSubscriber(e,this.scheduler,this.delay))},e}(),ObserveOnSubscriber=function(e){function t(t,r,n){void 0===n&&(n=0);var o=e.call(this,t)||this;return o.scheduler=r,o.delay=n,o}return __extends(t,e),t.dispatch=function(e){var t=e.notification,r=e.destination;t.observe(r),this.unsubscribe()},t.prototype.scheduleMessage=function(e){this.destination.add(this.scheduler.schedule(t.dispatch,this.delay,new ObserveOnMessage(e,this.destination)))},t.prototype._next=function(e){this.scheduleMessage(Notification.createNext(e))},t.prototype._error=function(e){this.scheduleMessage(Notification.createError(e)),this.unsubscribe()},t.prototype._complete=function(){this.scheduleMessage(Notification.createComplete()),this.unsubscribe()},t}(Subscriber),ObserveOnMessage=function(){return function(e,t){this.notification=e,this.destination=t}}();function not(e,t){function r(){return!r.pred.apply(r.thisArg,arguments)}return r.pred=e,r.thisArg=t,r}var BehaviorSubject=function(e){function t(t){var r=e.call(this)||this;return r._value=t,r}return __extends(t,e),Object.defineProperty(t.prototype,"value",{get:function(){return this.getValue()},enumerable:!0,configurable:!0}),t.prototype._subscribe=function(t){var r=e.prototype._subscribe.call(this,t);return r&&!r.closed&&t.next(this._value),r},t.prototype.getValue=function(){if(this.hasError)throw this.thrownError;if(this.closed)throw new ObjectUnsubscribedError;return this._value},t.prototype.next=function(t){e.prototype.next.call(this,this._value=t)},t}(Subject),AsyncSubject=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.value=null,t.hasNext=!1,t.hasCompleted=!1,t}return __extends(t,e),t.prototype._subscribe=function(t){return this.hasError?(t.error(this.thrownError),Subscription.EMPTY):this.hasCompleted&&this.hasNext?(t.next(this.value),t.complete(),Subscription.EMPTY):e.prototype._subscribe.call(this,t)},t.prototype.next=function(e){this.hasCompleted||(this.value=e,this.hasNext=!0)},t.prototype.error=function(t){this.hasCompleted||e.prototype.error.call(this,t)},t.prototype.complete=function(){this.hasCompleted=!0,this.hasNext&&e.prototype.next.call(this,this.value),e.prototype.complete.call(this)},t}(Subject),QueueAction=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.scheduler=t,n.work=r,n}return __extends(t,e),t.prototype.schedule=function(t,r){return void 0===r&&(r=0),r>0?e.prototype.schedule.call(this,t,r):(this.delay=r,this.state=t,this.scheduler.flush(this),this)},t.prototype.execute=function(t,r){return r>0||this.closed?e.prototype.execute.call(this,t,r):this._execute(t,r)},t.prototype.requestAsyncId=function(t,r,n){return void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0?e.prototype.requestAsyncId.call(this,t,r,n):t.flush(this)},t}(AsyncAction),QueueScheduler=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t}(AsyncScheduler),queue$1=new QueueScheduler(QueueAction),ReplaySubject=function(e){function t(t,r,n){void 0===t&&(t=Number.POSITIVE_INFINITY),void 0===r&&(r=Number.POSITIVE_INFINITY);var o=e.call(this)||this;return o.scheduler=n,o._events=[],o._infiniteTimeWindow=!1,o._bufferSize=t<1?1:t,o._windowTime=r<1?1:r,r===Number.POSITIVE_INFINITY?(o._infiniteTimeWindow=!0,o.next=o.nextInfiniteTimeWindow):o.next=o.nextTimeWindow,o}return __extends(t,e),t.prototype.nextInfiniteTimeWindow=function(t){var r=this._events;r.push(t),r.length>this._bufferSize&&r.shift(),e.prototype.next.call(this,t)},t.prototype.nextTimeWindow=function(t){this._events.push(new ReplayEvent(this._getNow(),t)),this._trimBufferThenGetEvents(),e.prototype.next.call(this,t)},t.prototype._subscribe=function(e){var t,r=this._infiniteTimeWindow,n=r?this._events:this._trimBufferThenGetEvents(),o=this.scheduler,i=n.length;if(this.closed)throw new ObjectUnsubscribedError;if(this.isStopped||this.hasError?t=Subscription.EMPTY:(this.observers.push(e),t=new SubjectSubscription(this,e)),o&&e.add(e=new ObserveOnSubscriber(e,o)),r)for(var s=0;s<i&&!e.closed;s++)e.next(n[s]);else for(s=0;s<i&&!e.closed;s++)e.next(n[s].value);return this.hasError?e.error(this.thrownError):this.isStopped&&e.complete(),t},t.prototype._getNow=function(){return(this.scheduler||queue$1).now()},t.prototype._trimBufferThenGetEvents=function(){for(var e=this._getNow(),t=this._bufferSize,r=this._windowTime,n=this._events,o=n.length,i=0;i<o&&!(e-n[i].time<r);)i++;return o>t&&(i=Math.max(i,o-t)),i>0&&n.splice(0,i),n},t}(Subject),ReplayEvent=function(){return function(e,t){this.time=e,this.value=t}}();function race(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(1===e.length){if(!isArray$1(e[0]))return e[0];e=e[0]}return fromArray(e,void 0).lift(new RaceOperator)}var RaceOperator=function(){function e(){}return e.prototype.call=function(e,t){return t.subscribe(new RaceSubscriber(e))},e}(),RaceSubscriber=function(e){function t(t){var r=e.call(this,t)||this;return r.hasFirst=!1,r.observables=[],r.subscriptions=[],r}return __extends(t,e),t.prototype._next=function(e){this.observables.push(e)},t.prototype._complete=function(){var e=this.observables,t=e.length;if(0===t)this.destination.complete();else{for(var r=0;r<t&&!this.hasFirst;r++){var n=e[r],o=subscribeToResult(this,n,n,r);this.subscriptions&&this.subscriptions.push(o),this.add(o)}this.observables=null}},t.prototype.notifyNext=function(e,t,r,n,o){if(!this.hasFirst){this.hasFirst=!0;for(var i=0;i<this.subscriptions.length;i++)if(i!==r){var s=this.subscriptions[i];s.unsubscribe(),this.remove(s)}this.subscriptions=null}this.destination.next(t)},t}(OuterSubscriber);function retryWhen(e){return function(t){return t.lift(new RetryWhenOperator(e,t))}}var RetryWhenOperator=function(){function e(e,t){this.notifier=e,this.source=t}return e.prototype.call=function(e,t){return t.subscribe(new RetryWhenSubscriber(e,this.notifier,this.source))},e}(),RetryWhenSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.notifier=r,o.source=n,o}return __extends(t,e),t.prototype.error=function(t){if(!this.isStopped){var r=this.errors,n=this.retries,o=this.retriesSubscription;if(n)this.errors=null,this.retriesSubscription=null;else{r=new Subject;try{n=(0,this.notifier)(r)}catch(t){return e.prototype.error.call(this,t)}o=subscribeToResult(this,n)}this._unsubscribeAndRecycle(),this.errors=r,this.retries=n,this.retriesSubscription=o,r.next(t)}},t.prototype._unsubscribe=function(){var e=this.errors,t=this.retriesSubscription;e&&(e.unsubscribe(),this.errors=null),t&&(t.unsubscribe(),this.retriesSubscription=null),this.retries=null},t.prototype.notifyNext=function(e,t,r,n,o){var i=this._unsubscribe;this._unsubscribe=null,this._unsubscribeAndRecycle(),this._unsubscribe=i,this.source.subscribe(this)},t}(OuterSubscriber);function shareSubjectFactory(){return new Subject}function share(){return function(e){return refCount()(multicast(shareSubjectFactory)(e))}}function shareReplay(e,t,r){var n;return n=e&&"object"===_typeof(e)?e:{bufferSize:e,windowTime:t,refCount:!1,scheduler:r},function(e){return e.lift(shareReplayOperator(n))}}function shareReplayOperator(e){var t,r,n=e.bufferSize,o=void 0===n?Number.POSITIVE_INFINITY:n,i=e.windowTime,s=void 0===i?Number.POSITIVE_INFINITY:i,a=e.refCount,u=e.scheduler,l=0,c=!1,p=!1;return function(e){l++,t&&!c||(c=!1,t=new ReplaySubject(o,s,u),r=e.subscribe({next:function(e){t.next(e)},error:function(e){c=!0,t.error(e)},complete:function(){p=!0,t.complete()}}));var n=t.subscribe(this);this.add(function(){l--,n.unsubscribe(),r&&!p&&a&&0===l&&(r.unsubscribe(),r=void 0,t=void 0)})}}function skipLast(e){return function(t){return t.lift(new SkipLastOperator(e))}}var SkipLastOperator=function(){function e(e){if(this._skipCount=e,this._skipCount<0)throw new ArgumentOutOfRangeError}return e.prototype.call=function(e,t){return 0===this._skipCount?t.subscribe(new Subscriber(e)):t.subscribe(new SkipLastSubscriber(e,this._skipCount))},e}(),SkipLastSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n._skipCount=r,n._count=0,n._ring=new Array(r),n}return __extends(t,e),t.prototype._next=function(e){var t=this._skipCount,r=this._count++;if(r<t)this._ring[r]=e;else{var n=r%t,o=this._ring,i=o[n];o[n]=e,this.destination.next(i)}},t}(Subscriber),nextHandle=1,tasksByHandle={};function runIfPresent(e){var t=tasksByHandle[e];t&&t()}var Immediate={setImmediate:function(e){var t=nextHandle++;return tasksByHandle[t]=e,Promise.resolve().then(function(){return runIfPresent(t)}),t},clearImmediate:function(e){delete tasksByHandle[e]}},AsapAction=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.scheduler=t,n.work=r,n}return __extends(t,e),t.prototype.requestAsyncId=function(t,r,n){return void 0===n&&(n=0),null!==n&&n>0?e.prototype.requestAsyncId.call(this,t,r,n):(t.actions.push(this),t.scheduled||(t.scheduled=Immediate.setImmediate(t.flush.bind(t,null))))},t.prototype.recycleAsyncId=function(t,r,n){if(void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,r,n);0===t.actions.length&&(Immediate.clearImmediate(r),t.scheduled=void 0)},t}(AsyncAction),AsapScheduler=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.flush=function(e){this.active=!0,this.scheduled=void 0;var t,r=this.actions,n=-1,o=r.length;e=e||r.shift();do{if(t=e.execute(e.state,e.delay))break}while(++n<o&&(e=r.shift()));if(this.active=!1,t){for(;++n<o&&(e=r.shift());)e.unsubscribe();throw t}},t}(AsyncScheduler),asap=new AsapScheduler(AsapAction),SubscribeOnObservable=function(e){function t(t,r,n){void 0===r&&(r=0),void 0===n&&(n=asap);var o=e.call(this)||this;return o.source=t,o.delayTime=r,o.scheduler=n,(!isNumeric(r)||r<0)&&(o.delayTime=0),n&&"function"==typeof n.schedule||(o.scheduler=asap),o}return __extends(t,e),t.create=function(e,r,n){return void 0===r&&(r=0),void 0===n&&(n=asap),new t(e,r,n)},t.dispatch=function(e){var t=e.source,r=e.subscriber;return this.add(t.subscribe(r))},t.prototype._subscribe=function(e){var r=this.delayTime,n=this.source;return this.scheduler.schedule(t.dispatch,r,{source:n,subscriber:e})},t}(Observable);function subscribeOn(e,t){return void 0===t&&(t=0),function(r){return r.lift(new SubscribeOnOperator(e,t))}}var SubscribeOnOperator=function(){function e(e,t){this.scheduler=e,this.delay=t}return e.prototype.call=function(e,t){return new SubscribeOnObservable(t,this.delay,this.scheduler).subscribe(e)},e}();function switchMap(e,t){return"function"==typeof t?function(r){return r.pipe(switchMap(function(r,n){return from(e(r,n)).pipe(map$1(function(e,o){return t(r,e,n,o)}))}))}:function(t){return t.lift(new SwitchMapOperator(e))}}var SwitchMapOperator=function(){function e(e){this.project=e}return e.prototype.call=function(e,t){return t.subscribe(new SwitchMapSubscriber(e,this.project))},e}(),SwitchMapSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.project=r,n.index=0,n}return __extends(t,e),t.prototype._next=function(e){var t,r=this.index++;try{t=this.project(e,r)}catch(e){return void this.destination.error(e)}this._innerSub(t,e,r)},t.prototype._innerSub=function(e,t,r){var n=this.innerSubscription;n&&n.unsubscribe();var o=new InnerSubscriber(this,void 0,void 0);this.destination.add(o),this.innerSubscription=subscribeToResult(this,e,t,r,o)},t.prototype._complete=function(){var t=this.innerSubscription;t&&!t.closed||e.prototype._complete.call(this),this.unsubscribe()},t.prototype._unsubscribe=function(){this.innerSubscription=null},t.prototype.notifyComplete=function(t){this.destination.remove(t),this.innerSubscription=null,this.isStopped&&e.prototype._complete.call(this)},t.prototype.notifyNext=function(e,t,r,n,o){this.destination.next(t)},t}(OuterSubscriber);function switchAll(){return switchMap(identity$1)}function takeUntil(e){return function(t){return t.lift(new TakeUntilOperator(e))}}var TakeUntilOperator=function(){function e(e){this.notifier=e}return e.prototype.call=function(e,t){var r=new TakeUntilSubscriber(e),n=subscribeToResult(r,this.notifier);return n&&!r.seenValue?(r.add(n),t.subscribe(r)):r},e}(),TakeUntilSubscriber=function(e){function t(t){var r=e.call(this,t)||this;return r.seenValue=!1,r}return __extends(t,e),t.prototype.notifyNext=function(e,t,r,n,o){this.seenValue=!0,this.complete()},t.prototype.notifyComplete=function(){},t}(OuterSubscriber);function tap(e,t,r){return function(n){return n.lift(new DoOperator(e,t,r))}}var DoOperator=function(){function e(e,t,r){this.nextOrObserver=e,this.error=t,this.complete=r}return e.prototype.call=function(e,t){return t.subscribe(new TapSubscriber(e,this.nextOrObserver,this.error,this.complete))},e}(),TapSubscriber=function(e){function t(t,r,n,o){var i=e.call(this,t)||this;return i._tapNext=noop$1,i._tapError=noop$1,i._tapComplete=noop$1,i._tapError=n||noop$1,i._tapComplete=o||noop$1,isFunction$1(r)?(i._context=i,i._tapNext=r):r&&(i._context=r,i._tapNext=r.next||noop$1,i._tapError=r.error||noop$1,i._tapComplete=r.complete||noop$1),i}return __extends(t,e),t.prototype._next=function(e){try{this._tapNext.call(this._context,e)}catch(e){return void this.destination.error(e)}this.destination.next(e)},t.prototype._error=function(e){try{this._tapError.call(this._context,e)}catch(e){return void this.destination.error(e)}this.destination.error(e)},t.prototype._complete=function(){try{this._tapComplete.call(this._context)}catch(e){return void this.destination.error(e)}return this.destination.complete()},t}(Subscriber);function defer$1(e){return new Observable(function(t){var r;try{r=e()}catch(e){return void t.error(e)}return(r?from(r):empty$2()).subscribe(t)})}function TimeoutErrorImpl(){return Error.call(this),this.message="Timeout has occurred",this.name="TimeoutError",this}TimeoutErrorImpl.prototype=Object.create(Error.prototype);var TimeoutError=TimeoutErrorImpl;function timeoutWith(e,t,r){return void 0===r&&(r=async),function(n){var o=isDate(e),i=o?+e-r.now():Math.abs(e);return n.lift(new TimeoutWithOperator(i,o,t,r))}}var TimeoutWithOperator=function(){function e(e,t,r,n){this.waitFor=e,this.absoluteTimeout=t,this.withObservable=r,this.scheduler=n}return e.prototype.call=function(e,t){return t.subscribe(new TimeoutWithSubscriber(e,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler))},e}(),TimeoutWithSubscriber=function(e){function t(t,r,n,o,i){var s=e.call(this,t)||this;return s.absoluteTimeout=r,s.waitFor=n,s.withObservable=o,s.scheduler=i,s.action=null,s.scheduleTimeout(),s}return __extends(t,e),t.dispatchTimeout=function(e){var t=e.withObservable;e._unsubscribeAndRecycle(),e.add(subscribeToResult(e,t))},t.prototype.scheduleTimeout=function(){var e=this.action;e?this.action=e.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(t.dispatchTimeout,this.waitFor,this))},t.prototype._next=function(t){this.absoluteTimeout||this.scheduleTimeout(),e.prototype._next.call(this,t)},t.prototype._unsubscribe=function(){this.action=null,this.scheduler=null,this.withObservable=null},t}(OuterSubscriber);function timeout(e,t){return void 0===t&&(t=async),timeoutWith(e,throwError(new TimeoutError),t)}function withLatestFrom(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return function(t){var r;"function"==typeof e[e.length-1]&&(r=e.pop());var n=e;return t.lift(new WithLatestFromOperator(n,r))}}var WithLatestFromOperator=function(){function e(e,t){this.observables=e,this.project=t}return e.prototype.call=function(e,t){return t.subscribe(new WithLatestFromSubscriber(e,this.observables,this.project))},e}(),WithLatestFromSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;o.observables=r,o.project=n,o.toRespond=[];var i=r.length;o.values=new Array(i);for(var s=0;s<i;s++)o.toRespond.push(s);for(s=0;s<i;s++){var a=r[s];o.add(subscribeToResult(o,a,a,s))}return o}return __extends(t,e),t.prototype.notifyNext=function(e,t,r,n,o){this.values[r]=t;var i=this.toRespond;if(i.length>0){var s=i.indexOf(r);-1!==s&&i.splice(s,1)}},t.prototype.notifyComplete=function(){},t.prototype._next=function(e){if(0===this.toRespond.length){var t=[e].concat(this.values);this.project?this._tryProject(t):this.destination.next(t)}},t.prototype._tryProject=function(e){var t;try{t=this.project.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(OuterSubscriber);function zip(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=e[e.length-1];return"function"==typeof r&&e.pop(),fromArray(e,void 0).lift(new ZipOperator(r))}var ZipOperator=function(){function e(e){this.resultSelector=e}return e.prototype.call=function(e,t){return t.subscribe(new ZipSubscriber(e,this.resultSelector))},e}(),ZipSubscriber=function(e){function t(t,r,n){void 0===n&&(n=Object.create(null));var o=e.call(this,t)||this;return o.iterators=[],o.active=0,o.resultSelector="function"==typeof r?r:null,o.values=n,o}return __extends(t,e),t.prototype._next=function(e){var t=this.iterators;isArray$1(e)?t.push(new StaticArrayIterator(e)):"function"==typeof e[iterator]?t.push(new StaticIterator(e[iterator]())):t.push(new ZipBufferIterator(this.destination,this,e))},t.prototype._complete=function(){var e=this.iterators,t=e.length;if(this.unsubscribe(),0!==t){this.active=t;for(var r=0;r<t;r++){var n=e[r];if(n.stillUnsubscribed)this.destination.add(n.subscribe(n,r));else this.active--}}else this.destination.complete()},t.prototype.notifyInactive=function(){this.active--,0===this.active&&this.destination.complete()},t.prototype.checkIterators=function(){for(var e=this.iterators,t=e.length,r=this.destination,n=0;n<t;n++){if("function"==typeof(s=e[n]).hasValue&&!s.hasValue())return}var o=!1,i=[];for(n=0;n<t;n++){var s,a=(s=e[n]).next();if(s.hasCompleted()&&(o=!0),a.done)return void r.complete();i.push(a.value)}this.resultSelector?this._tryresultSelector(i):r.next(i),o&&r.complete()},t.prototype._tryresultSelector=function(e){var t;try{t=this.resultSelector.apply(this,e)}catch(e){return void this.destination.error(e)}this.destination.next(t)},t}(Subscriber),StaticIterator=function(){function e(e){this.iterator=e,this.nextResult=e.next()}return e.prototype.hasValue=function(){return!0},e.prototype.next=function(){var e=this.nextResult;return this.nextResult=this.iterator.next(),e},e.prototype.hasCompleted=function(){var e=this.nextResult;return e&&e.done},e}(),StaticArrayIterator=function(){function e(e){this.array=e,this.index=0,this.length=0,this.length=e.length}return e.prototype[iterator]=function(){return this},e.prototype.next=function(e){var t=this.index++,r=this.array;return t<this.length?{value:r[t],done:!1}:{value:null,done:!0}},e.prototype.hasValue=function(){return this.array.length>this.index},e.prototype.hasCompleted=function(){return this.array.length===this.index},e}(),ZipBufferIterator=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.parent=r,o.observable=n,o.stillUnsubscribed=!0,o.buffer=[],o.isComplete=!1,o}return __extends(t,e),t.prototype[iterator]=function(){return this},t.prototype.next=function(){var e=this.buffer;return 0===e.length&&this.isComplete?{value:null,done:!0}:{value:e.shift(),done:!1}},t.prototype.hasValue=function(){return this.buffer.length>0},t.prototype.hasCompleted=function(){return 0===this.buffer.length&&this.isComplete},t.prototype.notifyComplete=function(){this.buffer.length>0?(this.isComplete=!0,this.parent.notifyInactive()):this.destination.complete()},t.prototype.notifyNext=function(e,t,r,n,o){this.buffer.push(t),this.parent.checkIterators()},t.prototype.subscribe=function(e,t){return subscribeToResult(this,this.observable,this,t)},t}(OuterSubscriber);function baseSome(e,t){var r;return _baseEach(e,function(e,n,o){return!(r=t(e,n,o))}),!!r}var _baseSome=baseSome;function isIterateeCall(e,t,r){if(!isObject_1(r))return!1;var n=_typeof(t);return!!("number"==n?isArrayLike_1(r)&&_isIndex(t,r.length):"string"==n&&t in r)&&eq_1(r[t],e)}var _isIterateeCall=isIterateeCall;function some(e,t,r){var n=isArray_1(e)?_arraySome:_baseSome;return r&&_isIterateeCall(e,t,r)&&(t=void 0),n(e,_baseIteratee(t))}var some_1=some;function baseMap(e,t){var r=-1,n=isArrayLike_1(e)?Array(e.length):[];return _baseEach(e,function(e,o,i){n[++r]=t(e,o,i)}),n}var _baseMap=baseMap;function baseSortBy(e,t){var r=e.length;for(e.sort(t);r--;)e[r]=e[r].value;return e}var _baseSortBy=baseSortBy;function compareAscending(e,t){if(e!==t){var r=void 0!==e,n=null===e,o=e==e,i=isSymbol_1(e),s=void 0!==t,a=null===t,u=t==t,l=isSymbol_1(t);if(!a&&!l&&!i&&e>t||i&&s&&u&&!a&&!l||n&&s&&u||!r&&u||!o)return 1;if(!n&&!i&&!l&&e<t||l&&r&&o&&!n&&!i||a&&r&&o||!s&&o||!u)return-1}return 0}var _compareAscending=compareAscending;function compareMultiple(e,t,r){for(var n=-1,o=e.criteria,i=t.criteria,s=o.length,a=r.length;++n<s;){var u=_compareAscending(o[n],i[n]);if(u)return n>=a?u:u*("desc"==r[n]?-1:1)}return e.index-t.index}var _compareMultiple=compareMultiple;function baseOrderBy(e,t,r){var n=-1;t=_arrayMap(t.length?t:[identity_1],_baseUnary(_baseIteratee));var o=_baseMap(e,function(e,r,o){return{criteria:_arrayMap(t,function(t){return t(e)}),index:++n,value:e}});return _baseSortBy(o,function(e,t){return _compareMultiple(e,t,r)})}var _baseOrderBy=baseOrderBy;function baseRest(e,t){return _setToString(_overRest(e,t,identity_1),e+"")}var _baseRest=baseRest,sortBy=_baseRest(function(e,t){if(null==e)return[];var r=t.length;return r>1&&_isIterateeCall(e,t[0],t[1])?t=[]:r>2&&_isIterateeCall(t[0],t[1],t[2])&&(t=[t[0]]),_baseOrderBy(e,_baseFlatten(t,1),[])}),sortBy_1=sortBy,AnimationFrameAction=function(e){function t(t,r){var n=e.call(this,t,r)||this;return n.scheduler=t,n.work=r,n}return __extends(t,e),t.prototype.requestAsyncId=function(t,r,n){return void 0===n&&(n=0),null!==n&&n>0?e.prototype.requestAsyncId.call(this,t,r,n):(t.actions.push(this),t.scheduled||(t.scheduled=requestAnimationFrame(function(){return t.flush(null)})))},t.prototype.recycleAsyncId=function(t,r,n){if(void 0===n&&(n=0),null!==n&&n>0||null===n&&this.delay>0)return e.prototype.recycleAsyncId.call(this,t,r,n);0===t.actions.length&&(cancelAnimationFrame(r),t.scheduled=void 0)},t}(AsyncAction),AnimationFrameScheduler=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.flush=function(e){this.active=!0,this.scheduled=void 0;var t,r=this.actions,n=-1,o=r.length;e=e||r.shift();do{if(t=e.execute(e.state,e.delay))break}while(++n<o&&(e=r.shift()));if(this.active=!1,t){for(;++n<o&&(e=r.shift());)e.unsubscribe();throw t}},t}(AsyncScheduler),animationFrame=new AnimationFrameScheduler(AnimationFrameAction),VirtualTimeScheduler=function(e){function t(t,r){void 0===t&&(t=VirtualAction),void 0===r&&(r=Number.POSITIVE_INFINITY);var n=e.call(this,t,function(){return n.frame})||this;return n.maxFrames=r,n.frame=0,n.index=-1,n}return __extends(t,e),t.prototype.flush=function(){for(var e,t,r=this.actions,n=this.maxFrames;(t=r[0])&&t.delay<=n&&(r.shift(),this.frame=t.delay,!(e=t.execute(t.state,t.delay))););if(e){for(;t=r.shift();)t.unsubscribe();throw e}},t.frameTimeFactor=10,t}(AsyncScheduler),VirtualAction=function(e){function t(t,r,n){void 0===n&&(n=t.index+=1);var o=e.call(this,t,r)||this;return o.scheduler=t,o.work=r,o.index=n,o.active=!0,o.index=t.index=n,o}return __extends(t,e),t.prototype.schedule=function(r,n){if(void 0===n&&(n=0),!this.id)return e.prototype.schedule.call(this,r,n);this.active=!1;var o=new t(this.scheduler,this.work);return this.add(o),o.schedule(r,n)},t.prototype.requestAsyncId=function(e,r,n){void 0===n&&(n=0),this.delay=e.frame+n;var o=e.actions;return o.push(this),o.sort(t.sortActions),!0},t.prototype.recycleAsyncId=function(e,t,r){},t.prototype._execute=function(t,r){if(!0===this.active)return e.prototype._execute.call(this,t,r)},t.sortActions=function(e,t){return e.delay===t.delay?e.index===t.index?0:e.index>t.index?1:-1:e.delay>t.delay?1:-1},t}(AsyncAction);function isObservable(e){return!!e&&(e instanceof Observable||"function"==typeof e.lift&&"function"==typeof e.subscribe)}function bindCallback(e,t,r){if(t){if(!isScheduler(t))return function(){for(var n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];return bindCallback(e,r).apply(void 0,n).pipe(map$1(function(e){return isArray$1(e)?t.apply(void 0,e):t(e)}))};r=t}return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var o,i=this,s={context:i,subject:o,callbackFunc:e,scheduler:r};return new Observable(function(n){if(r){var a={args:t,subscriber:n,params:s};return r.schedule(dispatch$2,0,a)}if(!o){o=new AsyncSubject;try{e.apply(i,t.concat([function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];o.next(e.length<=1?e[0]:e),o.complete()}]))}catch(e){canReportError(o)?o.error(e):console.warn(e)}}return o.subscribe(n)})}}function dispatch$2(e){var t=this,r=e.args,n=e.subscriber,o=e.params,i=o.callbackFunc,s=o.context,a=o.scheduler,u=o.subject;if(!u){u=o.subject=new AsyncSubject;try{i.apply(s,r.concat([function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var n=e.length<=1?e[0]:e;t.add(a.schedule(dispatchNext,0,{value:n,subject:u}))}]))}catch(e){u.error(e)}}this.add(u.subscribe(n))}function dispatchNext(e){var t=e.value,r=e.subject;r.next(t),r.complete()}function bindNodeCallback(e,t,r){if(t){if(!isScheduler(t))return function(){for(var n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];return bindNodeCallback(e,r).apply(void 0,n).pipe(map$1(function(e){return isArray$1(e)?t.apply(void 0,e):t(e)}))};r=t}return function(){for(var t=[],n=0;n<arguments.length;n++)t[n]=arguments[n];var o={subject:void 0,args:t,callbackFunc:e,scheduler:r,context:this};return new Observable(function(n){var i=o.context,s=o.subject;if(r)return r.schedule(dispatch$3,0,{params:o,subscriber:n,context:i});if(!s){s=o.subject=new AsyncSubject;try{e.apply(i,t.concat([function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];var r=e.shift();r?s.error(r):(s.next(e.length<=1?e[0]:e),s.complete())}]))}catch(e){canReportError(s)?s.error(e):console.warn(e)}}return s.subscribe(n)})}}function dispatch$3(e){var t=this,r=e.params,n=e.subscriber,o=e.context,i=r.callbackFunc,s=r.args,a=r.scheduler,u=r.subject;if(!u){u=r.subject=new AsyncSubject;try{i.apply(o,s.concat([function(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var n=e.shift();if(n)t.add(a.schedule(dispatchError,0,{err:n,subject:u}));else{var o=e.length<=1?e[0]:e;t.add(a.schedule(dispatchNext$1,0,{value:o,subject:u}))}}]))}catch(e){this.add(a.schedule(dispatchError,0,{err:e,subject:u}))}}this.add(u.subscribe(n))}function dispatchNext$1(e){var t=e.value,r=e.subject;r.next(t),r.complete()}function dispatchError(e){var t=e.err;e.subject.error(t)}function forkJoin(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(1===e.length){var r=e[0];if(isArray$1(r))return forkJoinInternal(r,null);if(isObject$1(r)&&Object.getPrototypeOf(r)===Object.prototype){var n=Object.keys(r);return forkJoinInternal(n.map(function(e){return r[e]}),n)}}if("function"==typeof e[e.length-1]){var o=e.pop();return forkJoinInternal(e=1===e.length&&isArray$1(e[0])?e[0]:e,null).pipe(map$1(function(e){return o.apply(void 0,e)}))}return forkJoinInternal(e,null)}function forkJoinInternal(e,t){return new Observable(function(r){var n=e.length;if(0!==n)for(var o=new Array(n),i=0,s=0,a=function(a){var u=from(e[a]),l=!1;r.add(u.subscribe({next:function(e){l||(l=!0,s++),o[a]=e},error:function(e){return r.error(e)},complete:function(){++i!==n&&l||(s===n&&r.next(t?t.reduce(function(e,t,r){return e[t]=o[r],e},{}):o),r.complete())}}))},u=0;u<n;u++)a(u);else r.complete()})}function fromEvent(e,t,r,n){return isFunction$1(r)&&(n=r,r=void 0),n?fromEvent(e,t,r).pipe(map$1(function(e){return isArray$1(e)?n.apply(void 0,e):n(e)})):new Observable(function(n){setupSubscription(e,t,function(e){arguments.length>1?n.next(Array.prototype.slice.call(arguments)):n.next(e)},n,r)})}function setupSubscription(e,t,r,n,o){var i;if(isEventTarget(e)){var s=e;e.addEventListener(t,r,o),i=function(){return s.removeEventListener(t,r,o)}}else if(isJQueryStyleEventEmitter(e)){var a=e;e.on(t,r),i=function(){return a.off(t,r)}}else if(isNodeStyleEventEmitter(e)){var u=e;e.addListener(t,r),i=function(){return u.removeListener(t,r)}}else{if(!e||!e.length)throw new TypeError("Invalid event target");for(var l=0,c=e.length;l<c;l++)setupSubscription(e[l],t,r,n,o)}n.add(i)}function isNodeStyleEventEmitter(e){return e&&"function"==typeof e.addListener&&"function"==typeof e.removeListener}function isJQueryStyleEventEmitter(e){return e&&"function"==typeof e.on&&"function"==typeof e.off}function isEventTarget(e){return e&&"function"==typeof e.addEventListener&&"function"==typeof e.removeEventListener}function fromEventPattern(e,t,r){return r?fromEventPattern(e,t).pipe(map$1(function(e){return isArray$1(e)?r.apply(void 0,e):r(e)})):new Observable(function(r){var n,o=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return r.next(1===e.length?e[0]:e)};try{n=e(o)}catch(e){return void r.error(e)}if(isFunction$1(t))return function(){return t(o,n)}})}function generate(e,t,r,n,o){var i,s;if(1==arguments.length){var a=e;s=a.initialState,t=a.condition,r=a.iterate,i=a.resultSelector||identity$1,o=a.scheduler}else void 0===n||isScheduler(n)?(s=e,i=identity$1,o=n):(s=e,i=n);return new Observable(function(e){var n=s;if(o)return o.schedule(dispatch$4,0,{subscriber:e,iterate:r,condition:t,resultSelector:i,state:n});for(;;){if(t){var a=void 0;try{a=t(n)}catch(t){return void e.error(t)}if(!a){e.complete();break}}var u=void 0;try{u=i(n)}catch(t){return void e.error(t)}if(e.next(u),e.closed)break;try{n=r(n)}catch(t){return void e.error(t)}}})}function dispatch$4(e){var t=e.subscriber,r=e.condition;if(!t.closed){if(e.needIterate)try{e.state=e.iterate(e.state)}catch(e){return void t.error(e)}else e.needIterate=!0;if(r){var n=void 0;try{n=r(e.state)}catch(e){return void t.error(e)}if(!n)return void t.complete();if(t.closed)return}var o;try{o=e.resultSelector(e.state)}catch(e){return void t.error(e)}if(!t.closed&&(t.next(o),!t.closed))return this.schedule(e)}}function iif(e,t,r){return void 0===t&&(t=EMPTY),void 0===r&&(r=EMPTY),defer$1(function(){return e()?t:r})}function interval(e,t){return void 0===e&&(e=0),void 0===t&&(t=async),(!isNumeric(e)||e<0)&&(e=0),t&&"function"==typeof t.schedule||(t=async),new Observable(function(r){return r.add(t.schedule(dispatch$5,e,{subscriber:r,counter:0,period:e})),r})}function dispatch$5(e){var t=e.subscriber,r=e.counter,n=e.period;t.next(r),this.schedule({subscriber:t,counter:r+1,period:n},n)}var NEVER=new Observable(noop$1);function never(){return NEVER}function onErrorResumeNext(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];if(0===e.length)return EMPTY;var r=e[0],n=e.slice(1);return 1===e.length&&isArray$1(r)?onErrorResumeNext.apply(void 0,r):new Observable(function(e){var t=function(){return e.add(onErrorResumeNext.apply(void 0,n).subscribe(e))};return from(r).subscribe({next:function(t){e.next(t)},error:t,complete:t})})}function pairs(e,t){return new Observable(t?function(r){var n=Object.keys(e),o=new Subscription;return o.add(t.schedule(dispatch$6,0,{keys:n,index:0,subscriber:r,subscription:o,obj:e})),o}:function(t){for(var r=Object.keys(e),n=0;n<r.length&&!t.closed;n++){var o=r[n];e.hasOwnProperty(o)&&t.next([o,e[o]])}t.complete()})}function dispatch$6(e){var t=e.keys,r=e.index,n=e.subscriber,o=e.subscription,i=e.obj;if(!n.closed)if(r<t.length){var s=t[r];n.next([s,i[s]]),o.add(this.schedule({keys:t,index:r+1,subscriber:n,subscription:o,obj:i}))}else n.complete()}function partition(e,t,r){return[filter(t,r)(new Observable(subscribeTo(e))),filter(not(t,r))(new Observable(subscribeTo(e)))]}function range(e,t,r){return void 0===e&&(e=0),new Observable(function(n){void 0===t&&(t=e,e=0);var o=0,i=e;if(r)return r.schedule(dispatch$7,0,{index:o,count:t,start:e,subscriber:n});for(;;){if(o++>=t){n.complete();break}if(n.next(i++),n.closed)break}})}function dispatch$7(e){var t=e.start,r=e.index,n=e.count,o=e.subscriber;r>=n?o.complete():(o.next(t),o.closed||(e.index=r+1,e.start=t+1,this.schedule(e)))}function using(e,t){return new Observable(function(r){var n,o;try{n=e()}catch(e){return void r.error(e)}try{o=t(n)}catch(e){return void r.error(e)}var i=(o?from(o):EMPTY).subscribe(r);return function(){i.unsubscribe(),n&&n.unsubscribe()}})}var _esm5=Object.freeze({Observable:Observable,ConnectableObservable:ConnectableObservable,GroupedObservable:GroupedObservable,observable:observable,Subject:Subject,BehaviorSubject:BehaviorSubject,ReplaySubject:ReplaySubject,AsyncSubject:AsyncSubject,asapScheduler:asap,asyncScheduler:async,queueScheduler:queue$1,animationFrameScheduler:animationFrame,VirtualTimeScheduler:VirtualTimeScheduler,VirtualAction:VirtualAction,Scheduler:Scheduler,Subscription:Subscription,Subscriber:Subscriber,Notification:Notification,get NotificationKind(){return NotificationKind},pipe:pipe,noop:noop$1,identity:identity$1,isObservable:isObservable,ArgumentOutOfRangeError:ArgumentOutOfRangeError,EmptyError:EmptyError,ObjectUnsubscribedError:ObjectUnsubscribedError,UnsubscriptionError:UnsubscriptionError,TimeoutError:TimeoutError,bindCallback:bindCallback,bindNodeCallback:bindNodeCallback,combineLatest:combineLatest,concat:concat,defer:defer$1,empty:empty$2,forkJoin:forkJoin,from:from,fromEvent:fromEvent,fromEventPattern:fromEventPattern,generate:generate,iif:iif,interval:interval,merge:merge,never:never,of:of,onErrorResumeNext:onErrorResumeNext,pairs:pairs,partition:partition,race:race,range:range,throwError:throwError,timer:timer,using:using,zip:zip,scheduled:scheduled,EMPTY:EMPTY,NEVER:NEVER,config:config}),lib_es5=createCommonjsModule(function(e,t){Object.defineProperty(t,"__esModule",{value:!0});var r=[],n=function(e,t){return new WebSocket(e,t)};t.normalClosureMessage="Normal closure",t.default=function(e,o){var i=void 0===o?{protocols:r,makeWebSocket:n}:o,s=i.protocols,a=void 0===s?r:s,u=i.makeWebSocket,l=void 0===u?n:u;return new _esm5.Observable(function(r){var n,o=new _esm5.Subject,i=function(e){if(n){p();var t=new Error("Web socket message factory function called more than once");throw r.error(t),t}return n=e.subscribe(function(e){s.send(e)}),o},s=l(e,a),u=!1,c=!1,p=function(){u=!1};return s.onopen=function(){u=!0,c?s.close():r.next(i)},s.onmessage=function(e){o.next(e.data)},s.onerror=function(e){p(),r.error(new Error(e.message))},s.onclose=function(e){u&&(p(),c?(r.complete(),o.complete()):r.error(new Error(1e3===e.code?t.normalClosureMessage:e.reason)))},function(){c=!0,n&&n.unsubscribe(),u&&(p(),s.close())}})}});unwrapExports(lib_es5);var lib_es5_1=lib_es5.normalClosureMessage;function assignMergeValue(e,t,r){(void 0===r||eq_1(e[t],r))&&(void 0!==r||t in e)||_baseAssignValue(e,t,r)}var _assignMergeValue=assignMergeValue;function isArrayLikeObject(e){return isObjectLike_1(e)&&isArrayLike_1(e)}var isArrayLikeObject_1=isArrayLikeObject;function safeGet(e,t){if(("constructor"!==t||"function"!=typeof e[t])&&"__proto__"!=t)return e[t]}var _safeGet=safeGet;function toPlainObject(e){return _copyObject(e,keysIn_1(e))}var toPlainObject_1=toPlainObject;function baseMergeDeep(e,t,r,n,o,i,s){var a=_safeGet(e,r),u=_safeGet(t,r),l=s.get(u);if(l)_assignMergeValue(e,r,l);else{var c=i?i(a,u,r+"",e,t,s):void 0,p=void 0===c;if(p){var f=isArray_1(u),d=!f&&isBuffer_1(u),g=!f&&!d&&isTypedArray_1(u);c=u,f||d||g?isArray_1(a)?c=a:isArrayLikeObject_1(a)?c=_copyArray(a):d?(p=!1,c=_cloneBuffer(u,!0)):g?(p=!1,c=_cloneTypedArray(u,!0)):c=[]:isPlainObject_1(u)||isArguments_1(u)?(c=a,isArguments_1(a)?c=toPlainObject_1(a):isObject_1(a)&&!isFunction_1(a)||(c=_initCloneObject(u))):p=!1}p&&(s.set(u,c),o(c,u,n,i,s),s.delete(u)),_assignMergeValue(e,r,c)}}var _baseMergeDeep=baseMergeDeep;function baseMerge(e,t,r,n,o){e!==t&&_baseFor(t,function(i,s){if(o||(o=new _Stack),isObject_1(i))_baseMergeDeep(e,t,s,r,baseMerge,n,o);else{var a=n?n(_safeGet(e,s),i,s+"",e,t,o):void 0;void 0===a&&(a=i),_assignMergeValue(e,s,a)}},keysIn_1)}var _baseMerge=baseMerge;function createAssigner(e){return _baseRest(function(t,r){var n=-1,o=r.length,i=o>1?r[o-1]:void 0,s=o>2?r[2]:void 0;for(i=e.length>3&&"function"==typeof i?(o--,i):void 0,s&&_isIterateeCall(r[0],r[1],s)&&(i=o<3?void 0:i,o=1),t=Object(t);++n<o;){var a=r[n];a&&e(t,a,n,i)}return t})}var _createAssigner=createAssigner,mergeWith=_createAssigner(function(e,t,r,n){_baseMerge(e,t,r,n)}),mergeWith_1=mergeWith,__extends$1=window&&window.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),BucketBySubscriber=function(e){function t(t,r,n,o){var i=e.call(this,t)||this;i.count=r,i.hashSelector=n,i.subjectSelector=o,i.index=0;for(var s=i.buckets=new Array(r),a=0;a<r;++a)s[a]=o();return t.next(s.map(function(e){return e.asObservable()})),i}return __extends$1(t,e),t.prototype._next=function(e){var t=this.buckets,r=this.closed,n=this.count,o=this.hashSelector;if(!r){var i;try{var s=o(e,this.index++);i=Math.abs(Math.floor(s))%n}catch(e){return void this.error(e)}t[i].next(e)}},t.prototype._error=function(e){var t=this.buckets,r=this.closed,n=this.destination;r||(t.forEach(function(t){return t.error(e)}),n.error(e))},t.prototype._complete=function(){var e=this.buckets,t=this.closed,r=this.destination;t||(e.forEach(function(e){return e.complete()}),r.complete())},t}(Subscriber),__extends$2=window&&window.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),DeferFinalizeSubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.callback=r,n.kind="U",n.subscription=void 0,n}return __extends$2(t,e),t.prototype.complete=function(){var t=this;this.kind="C",this.defer(function(){return e.prototype.complete.call(t)})},t.prototype.error=function(t){var r=this;this.kind="E",this.defer(function(){return e.prototype.error.call(r,t)})},t.prototype.unsubscribe=function(){var t=this;this.defer(function(){return e.prototype.unsubscribe.call(t)})},t.prototype.defer=function(e){if(this.subscription)this.subscription.add(e);else{var t=new Subscription;this.subscription=t,t.add(e),from(this.callback(this.kind)).pipe(finalize(function(){return t.unsubscribe()})).subscribe()}},t}(Subscriber),__extends$3=window&&window.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),InexorablySubscriber=function(e){function t(t,r){var n=e.call(this,t)||this;return n.add(new Subscription(function(){return r(n.notification)})),n}return __extends$3(t,e),t.prototype.complete=function(){this.notification=new Notification("C"),e.prototype.complete.call(this)},t.prototype.error=function(t){this.notification=new Notification("E",void 0,t),e.prototype.error.call(this,t)},t}(Subscriber);function rateLimit(e){for(var t=[],r=1;r<arguments.length;r++)t[r-1]=arguments[r];var n=1,o=asap;1===t.length?"number"==typeof t[0]?n=t[0]:o=t[0]:2===t.length&&(n=t[0],o=t[1]);var i=n||1;return function(t){return t.pipe(scan(function(t,r){var n=o.now(),s=n-e;if((t=t.filter(function(e){return e.until>s})).length>=i){var a=t[0],u=t[t.length-1],l=a.until+e*Math.floor(t.length/i);t.push({delay:u.until<n?l-n:l-u.until,until:l,value:r})}else t.push({delay:0,until:n,value:r});return t},[]),map$1(function(e){return e[e.length-1]}),concatMap(function(e){var t=of(e.value);return e.delay?t.pipe(delay(e.delay,o)):t}))}}var __extends$4=window&&window.__extends||function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)t.hasOwnProperty(r)&&(e[r]=t[r])})(t,r)};return function(t,r){function n(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(n.prototype=r.prototype,new n)}}(),UnsubscribeOnSubscriber=function(e){function t(t,r,n){var o=e.call(this,t)||this;return o.scheduler=r,o.delay=n,o}return __extends$4(t,e),t.prototype.unsubscribe=function(){var t=this,r=this.delay;this.scheduler.schedule(function(){return e.prototype.unsubscribe.call(t)},r)},t}(Subscriber),defaultProtocols=[],defaultWebsocketFactory=function(e,t){return new WebSocket(e,t)},normalClosureMessage="Normal closure";function makeWebSocketObservable(e,t){var r=void 0===t?{protocols:defaultProtocols,makeWebSocket:defaultWebsocketFactory}:t,n=r.protocols,o=void 0===n?defaultProtocols:n,i=r.makeWebSocket,s=void 0===i?defaultWebsocketFactory:i;return new Observable(function(t){var r,n=new Subject,i=function(e){if(r){c();var o=new Error("Web socket message factory function called more than once");throw t.error(o),o}return r=e.subscribe(function(e){a.send(e)}),n},a=s(e,o),u=!1,l=!1,c=function(){u=!1};return a.onopen=function(){u=!0,l?a.close():t.next(i)},a.onmessage=function(e){n.next(e.data)},a.onerror=function(e){c(),t.error(new Error(e.message))},a.onclose=function(e){u&&(c(),l?(t.complete(),n.complete()):t.error(new Error(1e3===e.code?normalClosureMessage:e.reason)))},function(){l=!0,r&&r.unsubscribe(),u&&(c(),a.close())}})}_export(_export.P+_export.F*_fails(function(){return null!==new Date(NaN).toJSON()||1!==Date.prototype.toJSON.call({toISOString:function(){return 1}})}),"Date",{toJSON:function(e){var t=_toObject(this),r=_toPrimitive(t);return"number"!=typeof r||isFinite(r)?t.toISOString():null}});var floor$2=Math.floor,_isInteger=function(e){return!_isObject(e)&&isFinite(e)&&floor$2(e)===e};_export(_export.S,"Number",{isInteger:_isInteger});var aspromise=asPromise;function asPromise(e,t){for(var r=new Array(arguments.length-1),n=0,o=2,i=!0;o<arguments.length;)r[n++]=arguments[o++];return new Promise(function(o,s){r[n]=function(e){if(i)if(i=!1,e)s(e);else{for(var t=new Array(arguments.length-1),r=0;r<t.length;)t[r++]=arguments[r];o.apply(null,t)}};try{e.apply(t||null,r)}catch(e){i&&(i=!1,s(e))}})}var base64_1=createCommonjsModule(function(e,t){var r=t;r.length=function(e){var t=e.length;if(!t)return 0;for(var r=0;--t%4>1&&"="===e.charAt(t);)++r;return Math.ceil(3*e.length)/4-r};for(var n=new Array(64),o=new Array(123),i=0;i<64;)o[n[i]=i<26?i+65:i<52?i+71:i<62?i-4:i-59|43]=i++;r.encode=function(e,t,r){for(var o,i=null,s=[],a=0,u=0;t<r;){var l=e[t++];switch(u){case 0:s[a++]=n[l>>2],o=(3&l)<<4,u=1;break;case 1:s[a++]=n[o|l>>4],o=(15&l)<<2,u=2;break;case 2:s[a++]=n[o|l>>6],s[a++]=n[63&l],u=0}a>8191&&((i||(i=[])).push(String.fromCharCode.apply(String,s)),a=0)}return u&&(s[a++]=n[o],s[a++]=61,1===u&&(s[a++]=61)),i?(a&&i.push(String.fromCharCode.apply(String,s.slice(0,a))),i.join("")):String.fromCharCode.apply(String,s.slice(0,a))};r.decode=function(e,t,r){for(var n,i=r,s=0,a=0;a<e.length;){var u=e.charCodeAt(a++);if(61===u&&s>1)break;if(void 0===(u=o[u]))throw Error("invalid encoding");switch(s){case 0:n=u,s=1;break;case 1:t[r++]=n<<2|(48&u)>>4,n=u,s=2;break;case 2:t[r++]=(15&n)<<4|(60&u)>>2,n=u,s=3;break;case 3:t[r++]=(3&n)<<6|u,s=0}}if(1===s)throw Error("invalid encoding");return r-i},r.test=function(e){return/^(?:[A-Za-z0-9+\/]{4})*(?:[A-Za-z0-9+\/]{2}==|[A-Za-z0-9+\/]{3}=)?$/.test(e)}}),eventemitter=EventEmitter$1;function EventEmitter$1(){this._listeners={}}EventEmitter$1.prototype.on=function(e,t,r){return(this._listeners[e]||(this._listeners[e]=[])).push({fn:t,ctx:r||this}),this},EventEmitter$1.prototype.off=function(e,t){if(void 0===e)this._listeners={};else if(void 0===t)this._listeners[e]=[];else for(var r=this._listeners[e],n=0;n<r.length;)r[n].fn===t?r.splice(n,1):++n;return this},EventEmitter$1.prototype.emit=function(e){var t=this._listeners[e];if(t){for(var r=[],n=1;n<arguments.length;)r.push(arguments[n++]);for(n=0;n<t.length;)t[n].fn.apply(t[n++].ctx,r)}return this};var float_1=factory(factory);function factory(e){return"undefined"!=typeof Float32Array?function(){var t=new Float32Array([-0]),r=new Uint8Array(t.buffer),n=128===r[3];function o(e,n,o){t[0]=e,n[o]=r[0],n[o+1]=r[1],n[o+2]=r[2],n[o+3]=r[3]}function i(e,n,o){t[0]=e,n[o]=r[3],n[o+1]=r[2],n[o+2]=r[1],n[o+3]=r[0]}function s(e,n){return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r[3]=e[n+3],t[0]}function a(e,n){return r[3]=e[n],r[2]=e[n+1],r[1]=e[n+2],r[0]=e[n+3],t[0]}e.writeFloatLE=n?o:i,e.writeFloatBE=n?i:o,e.readFloatLE=n?s:a,e.readFloatBE=n?a:s}():function(){function t(e,t,r,n){var o=t<0?1:0;if(o&&(t=-t),0===t)e(1/t>0?0:2147483648,r,n);else if(isNaN(t))e(2143289344,r,n);else if(t>3.4028234663852886e38)e((o<<31|2139095040)>>>0,r,n);else if(t<1.1754943508222875e-38)e((o<<31|Math.round(t/1.401298464324817e-45))>>>0,r,n);else{var i=Math.floor(Math.log(t)/Math.LN2);e((o<<31|i+127<<23|8388607&Math.round(t*Math.pow(2,-i)*8388608))>>>0,r,n)}}function r(e,t,r){var n=e(t,r),o=2*(n>>31)+1,i=n>>>23&255,s=8388607&n;return 255===i?s?NaN:o*(1/0):0===i?1.401298464324817e-45*o*s:o*Math.pow(2,i-150)*(s+8388608)}e.writeFloatLE=t.bind(null,writeUintLE),e.writeFloatBE=t.bind(null,writeUintBE),e.readFloatLE=r.bind(null,readUintLE),e.readFloatBE=r.bind(null,readUintBE)}(),"undefined"!=typeof Float64Array?function(){var t=new Float64Array([-0]),r=new Uint8Array(t.buffer),n=128===r[7];function o(e,n,o){t[0]=e,n[o]=r[0],n[o+1]=r[1],n[o+2]=r[2],n[o+3]=r[3],n[o+4]=r[4],n[o+5]=r[5],n[o+6]=r[6],n[o+7]=r[7]}function i(e,n,o){t[0]=e,n[o]=r[7],n[o+1]=r[6],n[o+2]=r[5],n[o+3]=r[4],n[o+4]=r[3],n[o+5]=r[2],n[o+6]=r[1],n[o+7]=r[0]}function s(e,n){return r[0]=e[n],r[1]=e[n+1],r[2]=e[n+2],r[3]=e[n+3],r[4]=e[n+4],r[5]=e[n+5],r[6]=e[n+6],r[7]=e[n+7],t[0]}function a(e,n){return r[7]=e[n],r[6]=e[n+1],r[5]=e[n+2],r[4]=e[n+3],r[3]=e[n+4],r[2]=e[n+5],r[1]=e[n+6],r[0]=e[n+7],t[0]}e.writeDoubleLE=n?o:i,e.writeDoubleBE=n?i:o,e.readDoubleLE=n?s:a,e.readDoubleBE=n?a:s}():function(){function t(e,t,r,n,o,i){var s=n<0?1:0;if(s&&(n=-n),0===n)e(0,o,i+t),e(1/n>0?0:2147483648,o,i+r);else if(isNaN(n))e(0,o,i+t),e(2146959360,o,i+r);else if(n>1.7976931348623157e308)e(0,o,i+t),e((s<<31|2146435072)>>>0,o,i+r);else{var a;if(n<2.2250738585072014e-308)e((a=n/5e-324)>>>0,o,i+t),e((s<<31|a/4294967296)>>>0,o,i+r);else{var u=Math.floor(Math.log(n)/Math.LN2);1024===u&&(u=1023),e(4503599627370496*(a=n*Math.pow(2,-u))>>>0,o,i+t),e((s<<31|u+1023<<20|1048576*a&1048575)>>>0,o,i+r)}}}function r(e,t,r,n,o){var i=e(n,o+t),s=e(n,o+r),a=2*(s>>31)+1,u=s>>>20&2047,l=4294967296*(1048575&s)+i;return 2047===u?l?NaN:a*(1/0):0===u?5e-324*a*l:a*Math.pow(2,u-1075)*(l+4503599627370496)}e.writeDoubleLE=t.bind(null,writeUintLE,0,4),e.writeDoubleBE=t.bind(null,writeUintBE,4,0),e.readDoubleLE=r.bind(null,readUintLE,0,4),e.readDoubleBE=r.bind(null,readUintBE,4,0)}(),e}function writeUintLE(e,t,r){t[r]=255&e,t[r+1]=e>>>8&255,t[r+2]=e>>>16&255,t[r+3]=e>>>24}function writeUintBE(e,t,r){t[r]=e>>>24,t[r+1]=e>>>16&255,t[r+2]=e>>>8&255,t[r+3]=255&e}function readUintLE(e,t){return(e[t]|e[t+1]<<8|e[t+2]<<16|e[t+3]<<24)>>>0}function readUintBE(e,t){return(e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3])>>>0}var inquire_1=inquire;function inquire(moduleName){try{var mod=eval("quire".replace(/^/,"re"))(moduleName);if(mod&&(mod.length||Object.keys(mod).length))return mod}catch(e){}return null}var utf8_1=createCommonjsModule(function(e,t){var r=t;r.length=function(e){for(var t=0,r=0,n=0;n<e.length;++n)(r=e.charCodeAt(n))<128?t+=1:r<2048?t+=2:55296==(64512&r)&&56320==(64512&e.charCodeAt(n+1))?(++n,t+=4):t+=3;return t},r.read=function(e,t,r){if(r-t<1)return"";for(var n,o=null,i=[],s=0;t<r;)(n=e[t++])<128?i[s++]=n:n>191&&n<224?i[s++]=(31&n)<<6|63&e[t++]:n>239&&n<365?(n=((7&n)<<18|(63&e[t++])<<12|(63&e[t++])<<6|63&e[t++])-65536,i[s++]=55296+(n>>10),i[s++]=56320+(1023&n)):i[s++]=(15&n)<<12|(63&e[t++])<<6|63&e[t++],s>8191&&((o||(o=[])).push(String.fromCharCode.apply(String,i)),s=0);return o?(s&&o.push(String.fromCharCode.apply(String,i.slice(0,s))),o.join("")):String.fromCharCode.apply(String,i.slice(0,s))},r.write=function(e,t,r){for(var n,o,i=r,s=0;s<e.length;++s)(n=e.charCodeAt(s))<128?t[r++]=n:n<2048?(t[r++]=n>>6|192,t[r++]=63&n|128):55296==(64512&n)&&56320==(64512&(o=e.charCodeAt(s+1)))?(n=65536+((1023&n)<<10)+(1023&o),++s,t[r++]=n>>18|240,t[r++]=n>>12&63|128,t[r++]=n>>6&63|128,t[r++]=63&n|128):(t[r++]=n>>12|224,t[r++]=n>>6&63|128,t[r++]=63&n|128);return r-i}}),pool_1=pool;function pool(e,t,r){var n=r||8192,o=n>>>1,i=null,s=n;return function(r){if(r<1||r>o)return e(r);s+r>n&&(i=e(n),s=0);var a=t.call(i,s,s+=r);return 7&s&&(s=1+(7|s)),a}}var longbits=LongBits;function LongBits(e,t){this.lo=e>>>0,this.hi=t>>>0}var zero=LongBits.zero=new LongBits(0,0);zero.toNumber=function(){return 0},zero.zzEncode=zero.zzDecode=function(){return this},zero.length=function(){return 1};var zeroHash=LongBits.zeroHash="\0\0\0\0\0\0\0\0";LongBits.fromNumber=function(e){if(0===e)return zero;var t=e<0;t&&(e=-e);var r=e>>>0,n=(e-r)/4294967296>>>0;return t&&(n=~n>>>0,r=~r>>>0,++r>4294967295&&(r=0,++n>4294967295&&(n=0))),new LongBits(r,n)},LongBits.from=function(e){if("number"==typeof e)return LongBits.fromNumber(e);if(minimal.isString(e)){if(!minimal.Long)return LongBits.fromNumber(parseInt(e,10));e=minimal.Long.fromString(e)}return e.low||e.high?new LongBits(e.low>>>0,e.high>>>0):zero},LongBits.prototype.toNumber=function(e){if(!e&&this.hi>>>31){var t=1+~this.lo>>>0,r=~this.hi>>>0;return t||(r=r+1>>>0),-(t+4294967296*r)}return this.lo+4294967296*this.hi},LongBits.prototype.toLong=function(e){return minimal.Long?new minimal.Long(0|this.lo,0|this.hi,Boolean(e)):{low:0|this.lo,high:0|this.hi,unsigned:Boolean(e)}};var charCodeAt=String.prototype.charCodeAt;LongBits.fromHash=function(e){return e===zeroHash?zero:new LongBits((charCodeAt.call(e,0)|charCodeAt.call(e,1)<<8|charCodeAt.call(e,2)<<16|charCodeAt.call(e,3)<<24)>>>0,(charCodeAt.call(e,4)|charCodeAt.call(e,5)<<8|charCodeAt.call(e,6)<<16|charCodeAt.call(e,7)<<24)>>>0)},LongBits.prototype.toHash=function(){return String.fromCharCode(255&this.lo,this.lo>>>8&255,this.lo>>>16&255,this.lo>>>24,255&this.hi,this.hi>>>8&255,this.hi>>>16&255,this.hi>>>24)},LongBits.prototype.zzEncode=function(){var e=this.hi>>31;return this.hi=((this.hi<<1|this.lo>>>31)^e)>>>0,this.lo=(this.lo<<1^e)>>>0,this},LongBits.prototype.zzDecode=function(){var e=-(1&this.lo);return this.lo=((this.lo>>>1|this.hi<<31)^e)>>>0,this.hi=(this.hi>>>1^e)>>>0,this},LongBits.prototype.length=function(){var e=this.lo,t=(this.lo>>>28|this.hi<<4)>>>0,r=this.hi>>>24;return 0===r?0===t?e<16384?e<128?1:2:e<2097152?3:4:t<16384?t<128?5:6:t<2097152?7:8:r<128?9:10};var minimal=createCommonjsModule(function(e,t){var r=t;function n(e,t,r){for(var n=Object.keys(t),o=0;o<n.length;++o)void 0!==e[n[o]]&&r||(e[n[o]]=t[n[o]]);return e}function o(e){function t(e,r){if(!(this instanceof t))return new t(e,r);Object.defineProperty(this,"message",{get:function(){return e}}),Error.captureStackTrace?Error.captureStackTrace(this,t):Object.defineProperty(this,"stack",{value:(new Error).stack||""}),r&&n(this,r)}return(t.prototype=Object.create(Error.prototype)).constructor=t,Object.defineProperty(t.prototype,"name",{get:function(){return e}}),t.prototype.toString=function(){return this.name+": "+this.message},t}r.asPromise=aspromise,r.base64=base64_1,r.EventEmitter=eventemitter,r.float=float_1,r.inquire=inquire_1,r.utf8=utf8_1,r.pool=pool_1,r.LongBits=longbits,r.global="undefined"!=typeof window&&window||void 0!==commonjsGlobal&&commonjsGlobal||"undefined"!=typeof self&&self||commonjsGlobal,r.emptyArray=Object.freeze?Object.freeze([]):[],r.emptyObject=Object.freeze?Object.freeze({}):{},r.isNode=Boolean(r.global.process&&r.global.process.versions&&r.global.process.versions.node),r.isInteger=Number.isInteger||function(e){return"number"==typeof e&&isFinite(e)&&Math.floor(e)===e},r.isString=function(e){return"string"==typeof e||e instanceof String},r.isObject=function(e){return e&&"object"===_typeof(e)},r.isset=r.isSet=function(e,t){var r=e[t];return!(null==r||!e.hasOwnProperty(t))&&("object"!==_typeof(r)||(Array.isArray(r)?r.length:Object.keys(r).length)>0)},r.Buffer=function(){try{var e=r.inquire("buffer").Buffer;return e.prototype.utf8Write?e:null}catch(e){return null}}(),r._Buffer_from=null,r._Buffer_allocUnsafe=null,r.newBuffer=function(e){return"number"==typeof e?r.Buffer?r._Buffer_allocUnsafe(e):new r.Array(e):r.Buffer?r._Buffer_from(e):"undefined"==typeof Uint8Array?e:new Uint8Array(e)},r.Array="undefined"!=typeof Uint8Array?Uint8Array:Array,r.Long=r.global.dcodeIO&&r.global.dcodeIO.Long||r.global.Long||r.inquire("long"),r.key2Re=/^true|false|0|1$/,r.key32Re=/^-?(?:0|[1-9][0-9]*)$/,r.key64Re=/^(?:[\\x00-\\xff]{8}|-?(?:0|[1-9][0-9]*))$/,r.longToHash=function(e){return e?r.LongBits.from(e).toHash():r.LongBits.zeroHash},r.longFromHash=function(e,t){var n=r.LongBits.fromHash(e);return r.Long?r.Long.fromBits(n.lo,n.hi,t):n.toNumber(Boolean(t))},r.merge=n,r.lcFirst=function(e){return e.charAt(0).toLowerCase()+e.substring(1)},r.newError=o,r.ProtocolError=o("ProtocolError"),r.oneOfGetter=function(e){for(var t={},r=0;r<e.length;++r)t[e[r]]=1;return function(){for(var e=Object.keys(this),r=e.length-1;r>-1;--r)if(1===t[e[r]]&&void 0!==this[e[r]]&&null!==this[e[r]])return e[r]}},r.oneOfSetter=function(e){return function(t){for(var r=0;r<e.length;++r)e[r]!==t&&delete this[e[r]]}},r.toJSONOptions={longs:String,enums:String,bytes:String,json:!0},r._configure=function(){var e=r.Buffer;e?(r._Buffer_from=e.from!==Uint8Array.from&&e.from||function(t,r){return new e(t,r)},r._Buffer_allocUnsafe=e.allocUnsafe||function(t){return new e(t)}):r._Buffer_from=r._Buffer_allocUnsafe=null}}),writer=Writer,BufferWriter,LongBits$1=minimal.LongBits,base64=minimal.base64,utf8=minimal.utf8;function Op(e,t,r){this.fn=e,this.len=t,this.next=void 0,this.val=r}function noop$2(){}function State(e){this.head=e.head,this.tail=e.tail,this.len=e.len,this.next=e.states}function Writer(){this.len=0,this.head=new Op(noop$2,0,0),this.tail=this.head,this.states=null}function writeByte(e,t,r){t[r]=255&e}function writeVarint32(e,t,r){for(;e>127;)t[r++]=127&e|128,e>>>=7;t[r]=e}function VarintOp(e,t){this.len=e,this.next=void 0,this.val=t}function writeVarint64(e,t,r){for(;e.hi;)t[r++]=127&e.lo|128,e.lo=(e.lo>>>7|e.hi<<25)>>>0,e.hi>>>=7;for(;e.lo>127;)t[r++]=127&e.lo|128,e.lo=e.lo>>>7;t[r++]=e.lo}function writeFixed32(e,t,r){t[r]=255&e,t[r+1]=e>>>8&255,t[r+2]=e>>>16&255,t[r+3]=e>>>24}Writer.create=minimal.Buffer?function(){return(Writer.create=function(){return new BufferWriter})()}:function(){return new Writer},Writer.alloc=function(e){return new minimal.Array(e)},minimal.Array!==Array&&(Writer.alloc=minimal.pool(Writer.alloc,minimal.Array.prototype.subarray)),Writer.prototype._push=function(e,t,r){return this.tail=this.tail.next=new Op(e,t,r),this.len+=t,this},VarintOp.prototype=Object.create(Op.prototype),VarintOp.prototype.fn=writeVarint32,Writer.prototype.uint32=function(e){return this.len+=(this.tail=this.tail.next=new VarintOp((e>>>=0)<128?1:e<16384?2:e<2097152?3:e<268435456?4:5,e)).len,this},Writer.prototype.int32=function(e){return e<0?this._push(writeVarint64,10,LongBits$1.fromNumber(e)):this.uint32(e)},Writer.prototype.sint32=function(e){return this.uint32((e<<1^e>>31)>>>0)},Writer.prototype.uint64=function(e){var t=LongBits$1.from(e);return this._push(writeVarint64,t.length(),t)},Writer.prototype.int64=Writer.prototype.uint64,Writer.prototype.sint64=function(e){var t=LongBits$1.from(e).zzEncode();return this._push(writeVarint64,t.length(),t)},Writer.prototype.bool=function(e){return this._push(writeByte,1,e?1:0)},Writer.prototype.fixed32=function(e){return this._push(writeFixed32,4,e>>>0)},Writer.prototype.sfixed32=Writer.prototype.fixed32,Writer.prototype.fixed64=function(e){var t=LongBits$1.from(e);return this._push(writeFixed32,4,t.lo)._push(writeFixed32,4,t.hi)},Writer.prototype.sfixed64=Writer.prototype.fixed64,Writer.prototype.float=function(e){return this._push(minimal.float.writeFloatLE,4,e)},Writer.prototype.double=function(e){return this._push(minimal.float.writeDoubleLE,8,e)};var writeBytes=minimal.Array.prototype.set?function(e,t,r){t.set(e,r)}:function(e,t,r){for(var n=0;n<e.length;++n)t[r+n]=e[n]};Writer.prototype.bytes=function(e){var t=e.length>>>0;if(!t)return this._push(writeByte,1,0);if(minimal.isString(e)){var r=Writer.alloc(t=base64.length(e));base64.decode(e,r,0),e=r}return this.uint32(t)._push(writeBytes,t,e)},Writer.prototype.string=function(e){var t=utf8.length(e);return t?this.uint32(t)._push(utf8.write,t,e):this._push(writeByte,1,0)},Writer.prototype.fork=function(){return this.states=new State(this),this.head=this.tail=new Op(noop$2,0,0),this.len=0,this},Writer.prototype.reset=function(){return this.states?(this.head=this.states.head,this.tail=this.states.tail,this.len=this.states.len,this.states=this.states.next):(this.head=this.tail=new Op(noop$2,0,0),this.len=0),this},Writer.prototype.ldelim=function(){var e=this.head,t=this.tail,r=this.len;return this.reset().uint32(r),r&&(this.tail.next=e.next,this.tail=t,this.len+=r),this},Writer.prototype.finish=function(){for(var e=this.head.next,t=this.constructor.alloc(this.len),r=0;e;)e.fn(e.val,t,r),r+=e.len,e=e.next;return t},Writer._configure=function(e){BufferWriter=e};var writer_buffer=BufferWriter$1;(BufferWriter$1.prototype=Object.create(writer.prototype)).constructor=BufferWriter$1;var Buffer=minimal.Buffer;function BufferWriter$1(){writer.call(this)}BufferWriter$1.alloc=function(e){return(BufferWriter$1.alloc=minimal._Buffer_allocUnsafe)(e)};var writeBytesBuffer=Buffer&&Buffer.prototype instanceof Uint8Array&&"set"===Buffer.prototype.set.name?function(e,t,r){t.set(e,r)}:function(e,t,r){if(e.copy)e.copy(t,r,0,e.length);else for(var n=0;n<e.length;)t[r++]=e[n++]};function writeStringBuffer(e,t,r){e.length<40?minimal.utf8.write(e,t,r):t.utf8Write(e,r)}BufferWriter$1.prototype.bytes=function(e){minimal.isString(e)&&(e=minimal._Buffer_from(e,"base64"));var t=e.length>>>0;return this.uint32(t),t&&this._push(writeBytesBuffer,t,e),this},BufferWriter$1.prototype.string=function(e){var t=Buffer.byteLength(e);return this.uint32(t),t&&this._push(writeStringBuffer,t,e),this};var reader=Reader,BufferReader,LongBits$2=minimal.LongBits,utf8$1=minimal.utf8;function indexOutOfRange(e,t){return RangeError("index out of range: "+e.pos+" + "+(t||1)+" > "+e.len)}function Reader(e){this.buf=e,this.pos=0,this.len=e.length}var create_array="undefined"!=typeof Uint8Array?function(e){if(e instanceof Uint8Array||Array.isArray(e))return new Reader(e);throw Error("illegal buffer")}:function(e){if(Array.isArray(e))return new Reader(e);throw Error("illegal buffer")},value;function readLongVarint(){var e=new LongBits$2(0,0),t=0;if(!(this.len-this.pos>4)){for(;t<3;++t){if(this.pos>=this.len)throw indexOutOfRange(this);if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e}return e.lo=(e.lo|(127&this.buf[this.pos++])<<7*t)>>>0,e}for(;t<4;++t)if(e.lo=(e.lo|(127&this.buf[this.pos])<<7*t)>>>0,this.buf[this.pos++]<128)return e;if(e.lo=(e.lo|(127&this.buf[this.pos])<<28)>>>0,e.hi=(e.hi|(127&this.buf[this.pos])>>4)>>>0,this.buf[this.pos++]<128)return e;if(t=0,this.len-this.pos>4){for(;t<5;++t)if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}else for(;t<5;++t){if(this.pos>=this.len)throw indexOutOfRange(this);if(e.hi=(e.hi|(127&this.buf[this.pos])<<7*t+3)>>>0,this.buf[this.pos++]<128)return e}throw Error("invalid varint encoding")}function readFixed32_end(e,t){return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0}function readFixed64(){if(this.pos+8>this.len)throw indexOutOfRange(this,8);return new LongBits$2(readFixed32_end(this.buf,this.pos+=4),readFixed32_end(this.buf,this.pos+=4))}Reader.create=minimal.Buffer?function(e){return(Reader.create=function(e){return minimal.Buffer.isBuffer(e)?new BufferReader(e):create_array(e)})(e)}:create_array,Reader.prototype._slice=minimal.Array.prototype.subarray||minimal.Array.prototype.slice,Reader.prototype.uint32=(value=4294967295,function(){if(value=(127&this.buf[this.pos])>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(127&this.buf[this.pos])<<7)>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(127&this.buf[this.pos])<<14)>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(127&this.buf[this.pos])<<21)>>>0,this.buf[this.pos++]<128)return value;if(value=(value|(15&this.buf[this.pos])<<28)>>>0,this.buf[this.pos++]<128)return value;if((this.pos+=5)>this.len)throw this.pos=this.len,indexOutOfRange(this,10);return value}),Reader.prototype.int32=function(){return 0|this.uint32()},Reader.prototype.sint32=function(){var e=this.uint32();return e>>>1^-(1&e)|0},Reader.prototype.bool=function(){return 0!==this.uint32()},Reader.prototype.fixed32=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return readFixed32_end(this.buf,this.pos+=4)},Reader.prototype.sfixed32=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);return 0|readFixed32_end(this.buf,this.pos+=4)},Reader.prototype.float=function(){if(this.pos+4>this.len)throw indexOutOfRange(this,4);var e=minimal.float.readFloatLE(this.buf,this.pos);return this.pos+=4,e},Reader.prototype.double=function(){if(this.pos+8>this.len)throw indexOutOfRange(this,4);var e=minimal.float.readDoubleLE(this.buf,this.pos);return this.pos+=8,e},Reader.prototype.bytes=function(){var e=this.uint32(),t=this.pos,r=this.pos+e;if(r>this.len)throw indexOutOfRange(this,e);return this.pos+=e,Array.isArray(this.buf)?this.buf.slice(t,r):t===r?new this.buf.constructor(0):this._slice.call(this.buf,t,r)},Reader.prototype.string=function(){var e=this.bytes();return utf8$1.read(e,0,e.length)},Reader.prototype.skip=function(e){if("number"==typeof e){if(this.pos+e>this.len)throw indexOutOfRange(this,e);this.pos+=e}else do{if(this.pos>=this.len)throw indexOutOfRange(this)}while(128&this.buf[this.pos++]);return this},Reader.prototype.skipType=function(e){switch(e){case 0:this.skip();break;case 1:this.skip(8);break;case 2:this.skip(this.uint32());break;case 3:for(;4!=(e=7&this.uint32());)this.skipType(e);break;case 5:this.skip(4);break;default:throw Error("invalid wire type "+e+" at offset "+this.pos)}return this},Reader._configure=function(e){BufferReader=e;var t=minimal.Long?"toLong":"toNumber";minimal.merge(Reader.prototype,{int64:function(){return readLongVarint.call(this)[t](!1)},uint64:function(){return readLongVarint.call(this)[t](!0)},sint64:function(){return readLongVarint.call(this).zzDecode()[t](!1)},fixed64:function(){return readFixed64.call(this)[t](!0)},sfixed64:function(){return readFixed64.call(this)[t](!1)}})};var reader_buffer=BufferReader$1;function BufferReader$1(e){reader.call(this,e)}(BufferReader$1.prototype=Object.create(reader.prototype)).constructor=BufferReader$1,minimal.Buffer&&(BufferReader$1.prototype._slice=minimal.Buffer.prototype.slice),BufferReader$1.prototype.string=function(){var e=this.uint32();return this.buf.utf8Slice(this.pos,this.pos=Math.min(this.pos+e,this.len))};var service=Service;function Service(e,t,r){if("function"!=typeof e)throw TypeError("rpcImpl must be a function");minimal.EventEmitter.call(this),this.rpcImpl=e,this.requestDelimited=Boolean(t),this.responseDelimited=Boolean(r)}(Service.prototype=Object.create(minimal.EventEmitter.prototype)).constructor=Service,Service.prototype.rpcCall=function e(t,r,n,o,i){if(!o)throw TypeError("request must be specified");var s=this;if(!i)return minimal.asPromise(e,s,t,r,n,o);if(s.rpcImpl)try{return s.rpcImpl(t,r[s.requestDelimited?"encodeDelimited":"encode"](o).finish(),function(e,r){if(e)return s.emit("error",e,t),i(e);if(null!==r){if(!(r instanceof n))try{r=n[s.responseDelimited?"decodeDelimited":"decode"](r)}catch(e){return s.emit("error",e,t),i(e)}return s.emit("data",r,t),i(null,r)}s.end(!0)})}catch(e){return s.emit("error",e,t),void setTimeout(function(){i(e)},0)}else setTimeout(function(){i(Error("already ended"))},0)},Service.prototype.end=function(e){return this.rpcImpl&&(e||this.rpcImpl(null,null,null),this.rpcImpl=null,this.emit("end").off()),this};var rpc_1=createCommonjsModule(function(e,t){t.Service=service}),roots={},indexMinimal=createCommonjsModule(function(e,t){var r=t;function n(){r.Reader._configure(r.BufferReader),r.util._configure()}r.build="minimal",r.Writer=writer,r.BufferWriter=writer_buffer,r.Reader=reader,r.BufferReader=reader_buffer,r.util=minimal,r.rpc=rpc_1,r.roots=roots,r.configure=n,r.Writer._configure(r.BufferWriter),n()}),indexMinimal_1=indexMinimal.build,indexMinimal_2=indexMinimal.Writer,indexMinimal_3=indexMinimal.BufferWriter,indexMinimal_4=indexMinimal.Reader,indexMinimal_5=indexMinimal.BufferReader,indexMinimal_6=indexMinimal.util,indexMinimal_7=indexMinimal.rpc,indexMinimal_8=indexMinimal.roots,indexMinimal_9=indexMinimal.configure;indexMinimal_6.Long=long_1,indexMinimal_9();var $Reader=indexMinimal_4,$Writer=indexMinimal_2,$util=indexMinimal_6,$root=indexMinimal_8.default||(indexMinimal_8.default={});$root.URI=function(){var e={},t=Object.create(e);return t[e[0]="Unknown"]=0,t[e[1]="PingUri"]=1,t[e[2]="PongUri"]=2,t[e[11]="UserJoinUri"]=11,t[e[12]="UserRespUri"]=12,t[e[21]="UserQuitUri"]=21,t[e[22]="UserDropUri"]=22,t[e[31]="GroupEnterUri"]=31,t[e[32]="GroupLeaveUri"]=32,t[e[33]="GroupReplyUri"]=33,t[e[36]="GroupEnterNoticeUri"]=36,t[e[37]="GroupLeaveNoticeUri"]=37,t[e[38]="GroupEventNoticeUri"]=38,t[e[39]="GroupCountNoticeUri"]=39,t[e[41]="UserStatusListUri"]=41,t[e[42]="UserStatusResultUri"]=42,t[e[51]="GroupStatusListUri"]=51,t[e[52]="GroupStatusResultUri"]=52,t[e[55]="GroupAllUsersListUri"]=55,t[e[56]="GroupAllUsersResultUri"]=56,t[e[100]="MessageUri"]=100,t[e[101]="AckUri"]=101,t[e[201]="UserJoinNoticeUri"]=201,t[e[202]="UserQuitNoticeUri"]=202,t[e[203]="UserWaitNoticeUri"]=203,t[e[301]="UserAttributeGetUri"]=301,t[e[302]="UserAttributeRetUri"]=302,t[e[303]="UserAttributeSetUri"]=303,t[e[304]="UserAttributeModUri"]=304,t[e[305]="UserAttributeDelUri"]=305,t[e[307]="UserAttributeRspUri"]=307,t[e[308]="UserAttributeErrUri"]=308,t[e[311]="UserAttributeKeysGetUri"]=311,t[e[312]="UserAttributeKeysRetUri"]=312,t[e[351]="GroupAttributeGetUri"]=351,t[e[352]="GroupAttributeRetUri"]=352,t[e[353]="GroupAttributeSetUri"]=353,t[e[354]="GroupAttributeModUri"]=354,t[e[355]="GroupAttributeDelUri"]=355,t[e[356]="GroupAttributeAltUri"]=356,t[e[357]="GroupAttributeRspUri"]=357,t[e[358]="GroupAttributeErrUri"]=358,t[e[361]="GroupAttributeKeysGetUri"]=361,t[e[362]="GroupAttributeKeysRetUri"]=362,t[e[401]="SubscribeUserStatusUri"]=401,t[e[402]="UnsubscribeUserStatusUri"]=402,t[e[499]="SubscribeResponseUri"]=499,t}();var Wrapper$1=$root.Wrapper=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.uri=0,e.prototype.data=$util.newBuffer([]),e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.uri&&e.hasOwnProperty("uri")&&t.uint32(8).int32(e.uri),null!=e.data&&e.hasOwnProperty("data")&&t.uint32(18).bytes(e.data),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.Wrapper;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.uri=e.int32();break;case 2:n.data=e.bytes();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.uri&&e.hasOwnProperty("uri"))switch(e.uri){default:return"uri: enum value expected";case 0:case 1:case 2:case 11:case 12:case 21:case 22:case 31:case 32:case 33:case 36:case 37:case 38:case 39:case 41:case 42:case 51:case 52:case 55:case 56:case 100:case 101:case 201:case 202:case 203:case 301:case 302:case 303:case 304:case 305:case 307:case 308:case 311:case 312:case 351:case 352:case 353:case 354:case 355:case 356:case 357:case 358:case 361:case 362:case 401:case 402:case 499:}return null!=e.data&&e.hasOwnProperty("data")&&!(e.data&&"number"==typeof e.data.length||$util.isString(e.data))?"data: buffer expected":null},e.fromObject=function(e){if(e instanceof $root.Wrapper)return e;var t=new $root.Wrapper;switch(e.uri){case"Unknown":case 0:t.uri=0;break;case"PingUri":case 1:t.uri=1;break;case"PongUri":case 2:t.uri=2;break;case"UserJoinUri":case 11:t.uri=11;break;case"UserRespUri":case 12:t.uri=12;break;case"UserQuitUri":case 21:t.uri=21;break;case"UserDropUri":case 22:t.uri=22;break;case"GroupEnterUri":case 31:t.uri=31;break;case"GroupLeaveUri":case 32:t.uri=32;break;case"GroupReplyUri":case 33:t.uri=33;break;case"GroupEnterNoticeUri":case 36:t.uri=36;break;case"GroupLeaveNoticeUri":case 37:t.uri=37;break;case"GroupEventNoticeUri":case 38:t.uri=38;break;case"GroupCountNoticeUri":case 39:t.uri=39;break;case"UserStatusListUri":case 41:t.uri=41;break;case"UserStatusResultUri":case 42:t.uri=42;break;case"GroupStatusListUri":case 51:t.uri=51;break;case"GroupStatusResultUri":case 52:t.uri=52;break;case"GroupAllUsersListUri":case 55:t.uri=55;break;case"GroupAllUsersResultUri":case 56:t.uri=56;break;case"MessageUri":case 100:t.uri=100;break;case"AckUri":case 101:t.uri=101;break;case"UserJoinNoticeUri":case 201:t.uri=201;break;case"UserQuitNoticeUri":case 202:t.uri=202;break;case"UserWaitNoticeUri":case 203:t.uri=203;break;case"UserAttributeGetUri":case 301:t.uri=301;break;case"UserAttributeRetUri":case 302:t.uri=302;break;case"UserAttributeSetUri":case 303:t.uri=303;break;case"UserAttributeModUri":case 304:t.uri=304;break;case"UserAttributeDelUri":case 305:t.uri=305;break;case"UserAttributeRspUri":case 307:t.uri=307;break;case"UserAttributeErrUri":case 308:t.uri=308;break;case"UserAttributeKeysGetUri":case 311:t.uri=311;break;case"UserAttributeKeysRetUri":case 312:t.uri=312;break;case"GroupAttributeGetUri":case 351:t.uri=351;break;case"GroupAttributeRetUri":case 352:t.uri=352;break;case"GroupAttributeSetUri":case 353:t.uri=353;break;case"GroupAttributeModUri":case 354:t.uri=354;break;case"GroupAttributeDelUri":case 355:t.uri=355;break;case"GroupAttributeAltUri":case 356:t.uri=356;break;case"GroupAttributeRspUri":case 357:t.uri=357;break;case"GroupAttributeErrUri":case 358:t.uri=358;break;case"GroupAttributeKeysGetUri":case 361:t.uri=361;break;case"GroupAttributeKeysRetUri":case 362:t.uri=362;break;case"SubscribeUserStatusUri":case 401:t.uri=401;break;case"UnsubscribeUserStatusUri":case 402:t.uri=402;break;case"SubscribeResponseUri":case 499:t.uri=499}return null!=e.data&&("string"==typeof e.data?$util.base64.decode(e.data,t.data=$util.newBuffer($util.base64.length(e.data)),0):e.data.length&&(t.data=e.data)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.uri=t.enums===String?"Unknown":0,t.bytes===String?r.data="":(r.data=[],t.bytes!==Array&&(r.data=$util.newBuffer(r.data)))),null!=e.uri&&e.hasOwnProperty("uri")&&(r.uri=t.enums===String?$root.URI[e.uri]:e.uri),null!=e.data&&e.hasOwnProperty("data")&&(r.data=t.bytes===String?$util.base64.encode(e.data,0,e.data.length):t.bytes===Array?Array.prototype.slice.call(e.data):e.data),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Ping=$root.Ping=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.ms=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.ms&&e.hasOwnProperty("ms")&&t.uint32(16).uint64(e.ms),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.Ping;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.ms=e.uint64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.ms&&e.hasOwnProperty("ms")&&!($util.isInteger(e.ms)||e.ms&&$util.isInteger(e.ms.low)&&$util.isInteger(e.ms.high))?"ms: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.Ping)return e;var t=new $root.Ping;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.ms&&($util.Long?(t.ms=$util.Long.fromValue(e.ms)).unsigned=!0:"string"==typeof e.ms?t.ms=parseInt(e.ms,10):"number"==typeof e.ms?t.ms=e.ms:"object"===_typeof(e.ms)&&(t.ms=new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.ms=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.ms=t.longs===String?"0":0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.ms&&e.hasOwnProperty("ms")&&("number"==typeof e.ms?r.ms=t.longs===String?String(e.ms):e.ms:r.ms=t.longs===String?$util.Long.prototype.toString.call(e.ms):t.longs===Number?new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0):e.ms),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Pong=$root.Pong=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.ms=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.ms&&e.hasOwnProperty("ms")&&t.uint32(16).uint64(e.ms),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.Pong;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.ms=e.uint64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.ms&&e.hasOwnProperty("ms")&&!($util.isInteger(e.ms)||e.ms&&$util.isInteger(e.ms.low)&&$util.isInteger(e.ms.high))?"ms: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.Pong)return e;var t=new $root.Pong;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.ms&&($util.Long?(t.ms=$util.Long.fromValue(e.ms)).unsigned=!0:"string"==typeof e.ms?t.ms=parseInt(e.ms,10):"number"==typeof e.ms?t.ms=e.ms:"object"===_typeof(e.ms)&&(t.ms=new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.ms=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.ms=t.longs===String?"0":0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.ms&&e.hasOwnProperty("ms")&&("number"==typeof e.ms?r.ms=t.longs===String?String(e.ms):e.ms:r.ms=t.longs===String?$util.Long.prototype.toString.call(e.ms):t.longs===Number?new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0):e.ms),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserJoin=$root.UserJoin=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.opt=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.ticket="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.opt&&e.hasOwnProperty("opt")&&t.uint32(16).uint64(e.opt),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(24).uint64(e.instance),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(34).string(e.account),null!=e.ticket&&e.hasOwnProperty("ticket")&&t.uint32(42).string(e.ticket),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserJoin;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.opt=e.uint64();break;case 3:n.instance=e.uint64();break;case 4:n.account=e.string();break;case 5:n.ticket=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.opt&&e.hasOwnProperty("opt")&&!($util.isInteger(e.opt)||e.opt&&$util.isInteger(e.opt.low)&&$util.isInteger(e.opt.high))?"opt: integer|Long expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null!=e.ticket&&e.hasOwnProperty("ticket")&&!$util.isString(e.ticket)?"ticket: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserJoin)return e;var t=new $root.UserJoin;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.opt&&($util.Long?(t.opt=$util.Long.fromValue(e.opt)).unsigned=!0:"string"==typeof e.opt?t.opt=parseInt(e.opt,10):"number"==typeof e.opt?t.opt=e.opt:"object"===_typeof(e.opt)&&(t.opt=new $util.LongBits(e.opt.low>>>0,e.opt.high>>>0).toNumber(!0))),null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),null!=e.ticket&&(t.ticket=String(e.ticket)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.opt=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.opt=t.longs===String?"0":0;if($util.Long){var i=new $util.Long(0,0,!0);r.instance=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.instance=t.longs===String?"0":0;r.account="",r.ticket=""}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.opt&&e.hasOwnProperty("opt")&&("number"==typeof e.opt?r.opt=t.longs===String?String(e.opt):e.opt:r.opt=t.longs===String?$util.Long.prototype.toString.call(e.opt):t.longs===Number?new $util.LongBits(e.opt.low>>>0,e.opt.high>>>0).toNumber(!0):e.opt),null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),null!=e.ticket&&e.hasOwnProperty("ticket")&&(r.ticket=e.ticket),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserResp=$root.UserResp=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(24).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserResp;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;case 3:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.UserResp)return e;var t=new $root.UserResp;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account="",r.code=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserQuit=$root.UserQuit=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.encode=function(e,t){return t||(t=$Writer.create()),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserQuit;e.pos<r;){var o=e.uint32();e.skipType(7&o)}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null},e.fromObject=function(e){return e instanceof $root.UserQuit?e:new $root.UserQuit},e.toObject=function(){return{}},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserDrop=$root.UserDrop=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(8).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserDrop;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.UserDrop)return e;var t=new $root.UserDrop;return null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.code=0),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupEnter=$root.GroupEnter=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupEnter;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null},e.fromObject=function(e){if(e instanceof $root.GroupEnter)return e;var t=new $root.GroupEnter;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account=""}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupLeave=$root.GroupLeave=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.account="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(10).string(e.account),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupLeave;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.account=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null},e.fromObject=function(e){if(e instanceof $root.GroupLeave)return e;var t=new $root.GroupLeave;return null!=e.account&&(t.account=String(e.account)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.account=""),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupReply=$root.GroupReply=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(24).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupReply;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;case 3:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupReply)return e;var t=new $root.GroupReply;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account="",r.code=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupLeaveNotice=$root.GroupLeaveNotice=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.user="",e.prototype.group="",e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.size=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.user&&e.hasOwnProperty("user")&&t.uint32(18).string(e.user),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(26).string(e.group),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(32).uint64(e.instance),null!=e.size&&e.hasOwnProperty("size")&&t.uint32(40).uint32(e.size),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupLeaveNotice;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.user=e.string();break;case 3:n.group=e.string();break;case 4:n.instance=e.uint64();break;case 5:n.size=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.user&&e.hasOwnProperty("user")&&!$util.isString(e.user)?"user: string expected":null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group)?"group: string expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.size&&e.hasOwnProperty("size")&&!$util.isInteger(e.size)?"size: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupLeaveNotice)return e;var t=new $root.GroupLeaveNotice;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.user&&(t.user=String(e.user)),null!=e.group&&(t.group=String(e.group)),null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.size&&(t.size=e.size>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(r.user="",r.group="",$util.Long){var o=new $util.Long(0,0,!0);r.instance=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.instance=t.longs===String?"0":0;r.size=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.user&&e.hasOwnProperty("user")&&(r.user=e.user),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.size&&e.hasOwnProperty("size")&&(r.size=e.size),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupEnterNotice=$root.GroupEnterNotice=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.user="",e.prototype.group="",e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.size=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.user&&e.hasOwnProperty("user")&&t.uint32(18).string(e.user),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(26).string(e.group),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(32).uint64(e.instance),null!=e.size&&e.hasOwnProperty("size")&&t.uint32(40).uint32(e.size),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupEnterNotice;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.user=e.string();break;case 3:n.group=e.string();break;case 4:n.instance=e.uint64();break;case 5:n.size=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.user&&e.hasOwnProperty("user")&&!$util.isString(e.user)?"user: string expected":null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group)?"group: string expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.size&&e.hasOwnProperty("size")&&!$util.isInteger(e.size)?"size: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupEnterNotice)return e;var t=new $root.GroupEnterNotice;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.user&&(t.user=String(e.user)),null!=e.group&&(t.group=String(e.group)),null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.size&&(t.size=e.size>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(r.user="",r.group="",$util.Long){var o=new $util.Long(0,0,!0);r.instance=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.instance=t.longs===String?"0":0;r.size=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.user&&e.hasOwnProperty("user")&&(r.user=e.user),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.size&&e.hasOwnProperty("size")&&(r.size=e.size),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Message=$root.Message=function(){function e(e){if(this.MiscMap={},e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.dialogue=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.sequence=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.options=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.src="",e.prototype.dst="",e.prototype.payload=$util.newBuffer([]),e.prototype.MiscMap=$util.emptyObject,e.prototype.ms=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(8).uint64(e.instance),null!=e.dialogue&&e.hasOwnProperty("dialogue")&&t.uint32(16).uint64(e.dialogue),null!=e.sequence&&e.hasOwnProperty("sequence")&&t.uint32(24).uint64(e.sequence),null!=e.options&&e.hasOwnProperty("options")&&t.uint32(32).uint64(e.options),null!=e.src&&e.hasOwnProperty("src")&&t.uint32(42).string(e.src),null!=e.dst&&e.hasOwnProperty("dst")&&t.uint32(50).string(e.dst),null!=e.payload&&e.hasOwnProperty("payload")&&t.uint32(58).bytes(e.payload),null!=e.MiscMap&&e.hasOwnProperty("MiscMap"))for(var r=Object.keys(e.MiscMap),n=0;n<r.length;++n)t.uint32(66).fork().uint32(10).string(r[n]).uint32(18).string(e.MiscMap[r[n]]).ldelim();return null!=e.ms&&e.hasOwnProperty("ms")&&t.uint32(72).uint64(e.ms),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r,n=void 0===t?e.len:e.pos+t,o=new $root.Message;e.pos<n;){var i=e.uint32();switch(i>>>3){case 1:o.instance=e.uint64();break;case 2:o.dialogue=e.uint64();break;case 3:o.sequence=e.uint64();break;case 4:o.options=e.uint64();break;case 5:o.src=e.string();break;case 6:o.dst=e.string();break;case 7:o.payload=e.bytes();break;case 8:e.skip().pos++,o.MiscMap===$util.emptyObject&&(o.MiscMap={}),r=e.string(),e.pos++,o.MiscMap[r]=e.string();break;case 9:o.ms=e.uint64();break;default:e.skipType(7&i)}}return o},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high)))return"instance: integer|Long expected";if(null!=e.dialogue&&e.hasOwnProperty("dialogue")&&!($util.isInteger(e.dialogue)||e.dialogue&&$util.isInteger(e.dialogue.low)&&$util.isInteger(e.dialogue.high)))return"dialogue: integer|Long expected";if(null!=e.sequence&&e.hasOwnProperty("sequence")&&!($util.isInteger(e.sequence)||e.sequence&&$util.isInteger(e.sequence.low)&&$util.isInteger(e.sequence.high)))return"sequence: integer|Long expected";if(null!=e.options&&e.hasOwnProperty("options")&&!($util.isInteger(e.options)||e.options&&$util.isInteger(e.options.low)&&$util.isInteger(e.options.high)))return"options: integer|Long expected";if(null!=e.src&&e.hasOwnProperty("src")&&!$util.isString(e.src))return"src: string expected";if(null!=e.dst&&e.hasOwnProperty("dst")&&!$util.isString(e.dst))return"dst: string expected";if(null!=e.payload&&e.hasOwnProperty("payload")&&!(e.payload&&"number"==typeof e.payload.length||$util.isString(e.payload)))return"payload: buffer expected";if(null!=e.MiscMap&&e.hasOwnProperty("MiscMap")){if(!$util.isObject(e.MiscMap))return"MiscMap: object expected";for(var t=Object.keys(e.MiscMap),r=0;r<t.length;++r)if(!$util.isString(e.MiscMap[t[r]]))return"MiscMap: string{k:string} expected"}return null!=e.ms&&e.hasOwnProperty("ms")&&!($util.isInteger(e.ms)||e.ms&&$util.isInteger(e.ms.low)&&$util.isInteger(e.ms.high))?"ms: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.Message)return e;var t=new $root.Message;if(null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.dialogue&&($util.Long?(t.dialogue=$util.Long.fromValue(e.dialogue)).unsigned=!0:"string"==typeof e.dialogue?t.dialogue=parseInt(e.dialogue,10):"number"==typeof e.dialogue?t.dialogue=e.dialogue:"object"===_typeof(e.dialogue)&&(t.dialogue=new $util.LongBits(e.dialogue.low>>>0,e.dialogue.high>>>0).toNumber(!0))),null!=e.sequence&&($util.Long?(t.sequence=$util.Long.fromValue(e.sequence)).unsigned=!0:"string"==typeof e.sequence?t.sequence=parseInt(e.sequence,10):"number"==typeof e.sequence?t.sequence=e.sequence:"object"===_typeof(e.sequence)&&(t.sequence=new $util.LongBits(e.sequence.low>>>0,e.sequence.high>>>0).toNumber(!0))),null!=e.options&&($util.Long?(t.options=$util.Long.fromValue(e.options)).unsigned=!0:"string"==typeof e.options?t.options=parseInt(e.options,10):"number"==typeof e.options?t.options=e.options:"object"===_typeof(e.options)&&(t.options=new $util.LongBits(e.options.low>>>0,e.options.high>>>0).toNumber(!0))),null!=e.src&&(t.src=String(e.src)),null!=e.dst&&(t.dst=String(e.dst)),null!=e.payload&&("string"==typeof e.payload?$util.base64.decode(e.payload,t.payload=$util.newBuffer($util.base64.length(e.payload)),0):e.payload.length&&(t.payload=e.payload)),e.MiscMap){if("object"!==_typeof(e.MiscMap))throw TypeError(".Message.MiscMap: object expected");t.MiscMap={};for(var r=Object.keys(e.MiscMap),n=0;n<r.length;++n)t.MiscMap[r[n]]=String(e.MiscMap[r[n]])}return null!=e.ms&&($util.Long?(t.ms=$util.Long.fromValue(e.ms)).unsigned=!0:"string"==typeof e.ms?t.ms=parseInt(e.ms,10):"number"==typeof e.ms?t.ms=e.ms:"object"===_typeof(e.ms)&&(t.ms=new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r,n={};if((t.objects||t.defaults)&&(n.MiscMap={}),t.defaults){if($util.Long){var o=new $util.Long(0,0,!0);n.instance=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else n.instance=t.longs===String?"0":0;if($util.Long){var i=new $util.Long(0,0,!0);n.dialogue=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else n.dialogue=t.longs===String?"0":0;if($util.Long){var s=new $util.Long(0,0,!0);n.sequence=t.longs===String?s.toString():t.longs===Number?s.toNumber():s}else n.sequence=t.longs===String?"0":0;if($util.Long){var a=new $util.Long(0,0,!0);n.options=t.longs===String?a.toString():t.longs===Number?a.toNumber():a}else n.options=t.longs===String?"0":0;if(n.src="",n.dst="",t.bytes===String?n.payload="":(n.payload=[],t.bytes!==Array&&(n.payload=$util.newBuffer(n.payload))),$util.Long){var u=new $util.Long(0,0,!0);n.ms=t.longs===String?u.toString():t.longs===Number?u.toNumber():u}else n.ms=t.longs===String?"0":0}if(null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?n.instance=t.longs===String?String(e.instance):e.instance:n.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.dialogue&&e.hasOwnProperty("dialogue")&&("number"==typeof e.dialogue?n.dialogue=t.longs===String?String(e.dialogue):e.dialogue:n.dialogue=t.longs===String?$util.Long.prototype.toString.call(e.dialogue):t.longs===Number?new $util.LongBits(e.dialogue.low>>>0,e.dialogue.high>>>0).toNumber(!0):e.dialogue),null!=e.sequence&&e.hasOwnProperty("sequence")&&("number"==typeof e.sequence?n.sequence=t.longs===String?String(e.sequence):e.sequence:n.sequence=t.longs===String?$util.Long.prototype.toString.call(e.sequence):t.longs===Number?new $util.LongBits(e.sequence.low>>>0,e.sequence.high>>>0).toNumber(!0):e.sequence),null!=e.options&&e.hasOwnProperty("options")&&("number"==typeof e.options?n.options=t.longs===String?String(e.options):e.options:n.options=t.longs===String?$util.Long.prototype.toString.call(e.options):t.longs===Number?new $util.LongBits(e.options.low>>>0,e.options.high>>>0).toNumber(!0):e.options),null!=e.src&&e.hasOwnProperty("src")&&(n.src=e.src),null!=e.dst&&e.hasOwnProperty("dst")&&(n.dst=e.dst),null!=e.payload&&e.hasOwnProperty("payload")&&(n.payload=t.bytes===String?$util.base64.encode(e.payload,0,e.payload.length):t.bytes===Array?Array.prototype.slice.call(e.payload):e.payload),e.MiscMap&&(r=Object.keys(e.MiscMap)).length){n.MiscMap={};for(var l=0;l<r.length;++l)n.MiscMap[r[l]]=e.MiscMap[r[l]]}return null!=e.ms&&e.hasOwnProperty("ms")&&("number"==typeof e.ms?n.ms=t.longs===String?String(e.ms):e.ms:n.ms=t.longs===String?$util.Long.prototype.toString.call(e.ms):t.longs===Number?new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0):e.ms),n},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Ack=$root.Ack=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.dialogue=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.sequence=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(8).uint64(e.instance),null!=e.dialogue&&e.hasOwnProperty("dialogue")&&t.uint32(16).uint64(e.dialogue),null!=e.sequence&&e.hasOwnProperty("sequence")&&t.uint32(24).uint64(e.sequence),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(32).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.Ack;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.instance=e.uint64();break;case 2:n.dialogue=e.uint64();break;case 3:n.sequence=e.uint64();break;case 4:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.dialogue&&e.hasOwnProperty("dialogue")&&!($util.isInteger(e.dialogue)||e.dialogue&&$util.isInteger(e.dialogue.low)&&$util.isInteger(e.dialogue.high))?"dialogue: integer|Long expected":null!=e.sequence&&e.hasOwnProperty("sequence")&&!($util.isInteger(e.sequence)||e.sequence&&$util.isInteger(e.sequence.low)&&$util.isInteger(e.sequence.high))?"sequence: integer|Long expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.Ack)return e;var t=new $root.Ack;return null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.dialogue&&($util.Long?(t.dialogue=$util.Long.fromValue(e.dialogue)).unsigned=!0:"string"==typeof e.dialogue?t.dialogue=parseInt(e.dialogue,10):"number"==typeof e.dialogue?t.dialogue=e.dialogue:"object"===_typeof(e.dialogue)&&(t.dialogue=new $util.LongBits(e.dialogue.low>>>0,e.dialogue.high>>>0).toNumber(!0))),null!=e.sequence&&($util.Long?(t.sequence=$util.Long.fromValue(e.sequence)).unsigned=!0:"string"==typeof e.sequence?t.sequence=parseInt(e.sequence,10):"number"==typeof e.sequence?t.sequence=e.sequence:"object"===_typeof(e.sequence)&&(t.sequence=new $util.LongBits(e.sequence.low>>>0,e.sequence.high>>>0).toNumber(!0))),null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.instance=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.instance=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.dialogue=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.dialogue=t.longs===String?"0":0;if($util.Long){var i=new $util.Long(0,0,!0);r.sequence=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.sequence=t.longs===String?"0":0;r.code=0}return null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.dialogue&&e.hasOwnProperty("dialogue")&&("number"==typeof e.dialogue?r.dialogue=t.longs===String?String(e.dialogue):e.dialogue:r.dialogue=t.longs===String?$util.Long.prototype.toString.call(e.dialogue):t.longs===Number?new $util.LongBits(e.dialogue.low>>>0,e.dialogue.high>>>0).toNumber(!0):e.dialogue),null!=e.sequence&&e.hasOwnProperty("sequence")&&("number"==typeof e.sequence?r.sequence=t.longs===String?String(e.sequence):e.sequence:r.sequence=t.longs===String?$util.Long.prototype.toString.call(e.sequence):t.longs===Number?new $util.LongBits(e.sequence.low>>>0,e.sequence.high>>>0).toNumber(!0):e.sequence),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAllUsersList=$root.GroupAllUsersList=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.pageSize=0,e.prototype.pageNumber=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.pageSize&&e.hasOwnProperty("pageSize")&&t.uint32(24).uint32(e.pageSize),null!=e.pageNumber&&e.hasOwnProperty("pageNumber")&&t.uint32(32).uint32(e.pageNumber),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAllUsersList;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.pageSize=e.uint32();break;case 4:n.pageNumber=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group)?"group: string expected":null!=e.pageSize&&e.hasOwnProperty("pageSize")&&!$util.isInteger(e.pageSize)?"pageSize: integer expected":null!=e.pageNumber&&e.hasOwnProperty("pageNumber")&&!$util.isInteger(e.pageNumber)?"pageNumber: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAllUsersList)return e;var t=new $root.GroupAllUsersList;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.pageSize&&(t.pageSize=e.pageSize>>>0),null!=e.pageNumber&&(t.pageNumber=e.pageNumber>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group="",r.pageSize=0,r.pageNumber=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.pageSize&&e.hasOwnProperty("pageSize")&&(r.pageSize=e.pageSize),null!=e.pageNumber&&e.hasOwnProperty("pageNumber")&&(r.pageNumber=e.pageNumber),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAllUsersResult=$root.GroupAllUsersResult=function(){function e(e){if(this.memberInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.totalSize=0,e.prototype.pageSize=0,e.prototype.pageNumber=0,e.prototype.memberInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.totalSize&&e.hasOwnProperty("totalSize")&&t.uint32(24).uint32(e.totalSize),null!=e.pageSize&&e.hasOwnProperty("pageSize")&&t.uint32(32).uint32(e.pageSize),null!=e.pageNumber&&e.hasOwnProperty("pageNumber")&&t.uint32(40).uint32(e.pageNumber),null!=e.memberInfos&&e.memberInfos.length)for(var r=0;r<e.memberInfos.length;++r)$root.GroupAllUsersResult.MemberInfo.encode(e.memberInfos[r],t.uint32(50).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAllUsersResult;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.totalSize=e.uint32();break;case 4:n.pageSize=e.uint32();break;case 5:n.pageNumber=e.uint32();break;case 6:n.memberInfos&&n.memberInfos.length||(n.memberInfos=[]),n.memberInfos.push($root.GroupAllUsersResult.MemberInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group))return"group: string expected";if(null!=e.totalSize&&e.hasOwnProperty("totalSize")&&!$util.isInteger(e.totalSize))return"totalSize: integer expected";if(null!=e.pageSize&&e.hasOwnProperty("pageSize")&&!$util.isInteger(e.pageSize))return"pageSize: integer expected";if(null!=e.pageNumber&&e.hasOwnProperty("pageNumber")&&!$util.isInteger(e.pageNumber))return"pageNumber: integer expected";if(null!=e.memberInfos&&e.hasOwnProperty("memberInfos")){if(!Array.isArray(e.memberInfos))return"memberInfos: array expected";for(var t=0;t<e.memberInfos.length;++t){var r=$root.GroupAllUsersResult.MemberInfo.verify(e.memberInfos[t]);if(r)return"memberInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.GroupAllUsersResult)return e;var t=new $root.GroupAllUsersResult;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.totalSize&&(t.totalSize=e.totalSize>>>0),null!=e.pageSize&&(t.pageSize=e.pageSize>>>0),null!=e.pageNumber&&(t.pageNumber=e.pageNumber>>>0),e.memberInfos){if(!Array.isArray(e.memberInfos))throw TypeError(".GroupAllUsersResult.memberInfos: array expected");t.memberInfos=[];for(var r=0;r<e.memberInfos.length;++r){if("object"!==_typeof(e.memberInfos[r]))throw TypeError(".GroupAllUsersResult.memberInfos: object expected");t.memberInfos[r]=$root.GroupAllUsersResult.MemberInfo.fromObject(e.memberInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.memberInfos=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group="",r.totalSize=0,r.pageSize=0,r.pageNumber=0}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.totalSize&&e.hasOwnProperty("totalSize")&&(r.totalSize=e.totalSize),null!=e.pageSize&&e.hasOwnProperty("pageSize")&&(r.pageSize=e.pageSize),null!=e.pageNumber&&e.hasOwnProperty("pageNumber")&&(r.pageNumber=e.pageNumber),e.memberInfos&&e.memberInfos.length){r.memberInfos=[];for(var o=0;o<e.memberInfos.length;++o)r.memberInfos[o]=$root.GroupAllUsersResult.MemberInfo.toObject(e.memberInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.MemberInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.account="",e.prototype.ts=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(10).string(e.account),null!=e.ts&&e.hasOwnProperty("ts")&&t.uint32(16).uint32(e.ts),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAllUsersResult.MemberInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.account=e.string();break;case 2:n.ts=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null!=e.ts&&e.hasOwnProperty("ts")&&!$util.isInteger(e.ts)?"ts: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAllUsersResult.MemberInfo)return e;var t=new $root.GroupAllUsersResult.MemberInfo;return null!=e.account&&(t.account=String(e.account)),null!=e.ts&&(t.ts=e.ts>>>0),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.account="",r.ts=0),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),null!=e.ts&&e.hasOwnProperty("ts")&&(r.ts=e.ts),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),UserStatusList=$root.UserStatusList=function(){function e(e){if(this.users=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.users=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.users&&e.users.length)for(var r=0;r<e.users.length;++r)t.uint32(18).string(e.users[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserStatusList;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.users&&n.users.length||(n.users=[]),n.users.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.users&&e.hasOwnProperty("users")){if(!Array.isArray(e.users))return"users: array expected";for(var t=0;t<e.users.length;++t)if(!$util.isString(e.users[t]))return"users: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.UserStatusList)return e;var t=new $root.UserStatusList;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.users){if(!Array.isArray(e.users))throw TypeError(".UserStatusList.users: array expected");t.users=[];for(var r=0;r<e.users.length;++r)t.users[r]=String(e.users[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.users=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.users&&e.users.length){r.users=[];for(var o=0;o<e.users.length;++o)r.users[o]=e.users[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserStatusResult=$root.UserStatusResult=function(){function e(e){if(this.userInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.userInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.userInfos&&e.userInfos.length)for(var r=0;r<e.userInfos.length;++r)$root.UserStatusResult.UserStatusInfo.encode(e.userInfos[r],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserStatusResult;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.userInfos&&n.userInfos.length||(n.userInfos=[]),n.userInfos.push($root.UserStatusResult.UserStatusInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.userInfos&&e.hasOwnProperty("userInfos")){if(!Array.isArray(e.userInfos))return"userInfos: array expected";for(var t=0;t<e.userInfos.length;++t){var r=$root.UserStatusResult.UserStatusInfo.verify(e.userInfos[t]);if(r)return"userInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.UserStatusResult)return e;var t=new $root.UserStatusResult;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.userInfos){if(!Array.isArray(e.userInfos))throw TypeError(".UserStatusResult.userInfos: array expected");t.userInfos=[];for(var r=0;r<e.userInfos.length;++r){if("object"!==_typeof(e.userInfos[r]))throw TypeError(".UserStatusResult.userInfos: object expected");t.userInfos[r]=$root.UserStatusResult.UserStatusInfo.fromObject(e.userInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.userInfos=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.userInfos&&e.userInfos.length){r.userInfos=[];for(var o=0;o<e.userInfos.length;++o)r.userInfos[o]=$root.UserStatusResult.UserStatusInfo.toObject(e.userInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.UserStatusInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.account="",e.prototype.ts=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(10).string(e.account),null!=e.ts&&e.hasOwnProperty("ts")&&t.uint32(16).uint32(e.ts),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserStatusResult.UserStatusInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.account=e.string();break;case 2:n.ts=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null!=e.ts&&e.hasOwnProperty("ts")&&!$util.isInteger(e.ts)?"ts: integer expected":null},e.fromObject=function(e){if(e instanceof $root.UserStatusResult.UserStatusInfo)return e;var t=new $root.UserStatusResult.UserStatusInfo;return null!=e.account&&(t.account=String(e.account)),null!=e.ts&&(t.ts=e.ts>>>0),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.account="",r.ts=0),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),null!=e.ts&&e.hasOwnProperty("ts")&&(r.ts=e.ts),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),UserAttributeGet=$root.UserAttributeGet=function(){function e(e){if(this.attributes=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.attributes=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),null!=e.attributes&&e.attributes.length)for(var r=0;r<e.attributes.length;++r)t.uint32(26).string(e.attributes[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeGet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;case 3:n.attributes&&n.attributes.length||(n.attributes=[]),n.attributes.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account))return"account: string expected";if(null!=e.attributes&&e.hasOwnProperty("attributes")){if(!Array.isArray(e.attributes))return"attributes: array expected";for(var t=0;t<e.attributes.length;++t)if(!$util.isString(e.attributes[t]))return"attributes: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.UserAttributeGet)return e;var t=new $root.UserAttributeGet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),e.attributes){if(!Array.isArray(e.attributes))throw TypeError(".UserAttributeGet.attributes: array expected");t.attributes=[];for(var r=0;r<e.attributes.length;++r)t.attributes[r]=String(e.attributes[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributes=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account=""}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),e.attributes&&e.attributes.length){r.attributes=[];for(var o=0;o<e.attributes.length;++o)r.attributes[o]=e.attributes[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserAttributeRet=$root.UserAttributeRet=function(){function e(e){if(this.attributeInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.attributeInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.attributeInfos&&e.attributeInfos.length)for(var r=0;r<e.attributeInfos.length;++r)$root.UserAttributeRet.AttributeInfo.encode(e.attributeInfos[r],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeRet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.attributeInfos&&n.attributeInfos.length||(n.attributeInfos=[]),n.attributeInfos.push($root.UserAttributeRet.AttributeInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.attributeInfos&&e.hasOwnProperty("attributeInfos")){if(!Array.isArray(e.attributeInfos))return"attributeInfos: array expected";for(var t=0;t<e.attributeInfos.length;++t){var r=$root.UserAttributeRet.AttributeInfo.verify(e.attributeInfos[t]);if(r)return"attributeInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.UserAttributeRet)return e;var t=new $root.UserAttributeRet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.attributeInfos){if(!Array.isArray(e.attributeInfos))throw TypeError(".UserAttributeRet.attributeInfos: array expected");t.attributeInfos=[];for(var r=0;r<e.attributeInfos.length;++r){if("object"!==_typeof(e.attributeInfos[r]))throw TypeError(".UserAttributeRet.attributeInfos: object expected");t.attributeInfos[r]=$root.UserAttributeRet.AttributeInfo.fromObject(e.attributeInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeInfos=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.attributeInfos&&e.attributeInfos.length){r.attributeInfos=[];for(var o=0;o<e.attributeInfos.length;++o)r.attributeInfos[o]=$root.UserAttributeRet.AttributeInfo.toObject(e.attributeInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeRet.AttributeInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserAttributeRet.AttributeInfo)return e;var t=new $root.UserAttributeRet.AttributeInfo;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.key="",r.value=""),null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),UserAttributeSet=$root.UserAttributeSet=function(){function e(e){if(this.attributeInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.attributeInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),null!=e.attributeInfos&&e.attributeInfos.length)for(var r=0;r<e.attributeInfos.length;++r)$root.UserAttributeSet.AttributeInfo.encode(e.attributeInfos[r],t.uint32(26).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeSet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;case 3:n.attributeInfos&&n.attributeInfos.length||(n.attributeInfos=[]),n.attributeInfos.push($root.UserAttributeSet.AttributeInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account))return"account: string expected";if(null!=e.attributeInfos&&e.hasOwnProperty("attributeInfos")){if(!Array.isArray(e.attributeInfos))return"attributeInfos: array expected";for(var t=0;t<e.attributeInfos.length;++t){var r=$root.UserAttributeSet.AttributeInfo.verify(e.attributeInfos[t]);if(r)return"attributeInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.UserAttributeSet)return e;var t=new $root.UserAttributeSet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),e.attributeInfos){if(!Array.isArray(e.attributeInfos))throw TypeError(".UserAttributeSet.attributeInfos: array expected");t.attributeInfos=[];for(var r=0;r<e.attributeInfos.length;++r){if("object"!==_typeof(e.attributeInfos[r]))throw TypeError(".UserAttributeSet.attributeInfos: object expected");t.attributeInfos[r]=$root.UserAttributeSet.AttributeInfo.fromObject(e.attributeInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeInfos=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account=""}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),e.attributeInfos&&e.attributeInfos.length){r.attributeInfos=[];for(var o=0;o<e.attributeInfos.length;++o)r.attributeInfos[o]=$root.UserAttributeSet.AttributeInfo.toObject(e.attributeInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeSet.AttributeInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserAttributeSet.AttributeInfo)return e;var t=new $root.UserAttributeSet.AttributeInfo;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.key="",r.value=""),null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),UserAttributeMod=$root.UserAttributeMod=function(){function e(e){if(this.attributeInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.attributeInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),null!=e.attributeInfos&&e.attributeInfos.length)for(var r=0;r<e.attributeInfos.length;++r)$root.UserAttributeMod.AttributeInfo.encode(e.attributeInfos[r],t.uint32(26).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeMod;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;case 3:n.attributeInfos&&n.attributeInfos.length||(n.attributeInfos=[]),n.attributeInfos.push($root.UserAttributeMod.AttributeInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account))return"account: string expected";if(null!=e.attributeInfos&&e.hasOwnProperty("attributeInfos")){if(!Array.isArray(e.attributeInfos))return"attributeInfos: array expected";for(var t=0;t<e.attributeInfos.length;++t){var r=$root.UserAttributeMod.AttributeInfo.verify(e.attributeInfos[t]);if(r)return"attributeInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.UserAttributeMod)return e;var t=new $root.UserAttributeMod;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),e.attributeInfos){if(!Array.isArray(e.attributeInfos))throw TypeError(".UserAttributeMod.attributeInfos: array expected");t.attributeInfos=[];for(var r=0;r<e.attributeInfos.length;++r){if("object"!==_typeof(e.attributeInfos[r]))throw TypeError(".UserAttributeMod.attributeInfos: object expected");t.attributeInfos[r]=$root.UserAttributeMod.AttributeInfo.fromObject(e.attributeInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeInfos=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account=""}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),e.attributeInfos&&e.attributeInfos.length){r.attributeInfos=[];for(var o=0;o<e.attributeInfos.length;++o)r.attributeInfos[o]=$root.UserAttributeMod.AttributeInfo.toObject(e.attributeInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeMod.AttributeInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserAttributeMod.AttributeInfo)return e;var t=new $root.UserAttributeMod.AttributeInfo;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.key="",r.value=""),null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),UserAttributeDel=$root.UserAttributeDel=function(){function e(e){if(this.attributes=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.prototype.attributes=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),null!=e.attributes&&e.attributes.length)for(var r=0;r<e.attributes.length;++r)t.uint32(26).string(e.attributes[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeDel;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;case 3:n.attributes&&n.attributes.length||(n.attributes=[]),n.attributes.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account))return"account: string expected";if(null!=e.attributes&&e.hasOwnProperty("attributes")){if(!Array.isArray(e.attributes))return"attributes: array expected";for(var t=0;t<e.attributes.length;++t)if(!$util.isString(e.attributes[t]))return"attributes: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.UserAttributeDel)return e;var t=new $root.UserAttributeDel;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),e.attributes){if(!Array.isArray(e.attributes))throw TypeError(".UserAttributeDel.attributes: array expected");t.attributes=[];for(var r=0;r<e.attributes.length;++r)t.attributes[r]=String(e.attributes[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributes=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account=""}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),e.attributes&&e.attributes.length){r.attributes=[];for(var o=0;o<e.attributes.length;++o)r.attributes[o]=e.attributes[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserAttributeErr=$root.UserAttributeErr=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(16).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeErr;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.UserAttributeErr)return e;var t=new $root.UserAttributeErr;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.code=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserAttributeKeysGet=$root.UserAttributeKeysGet=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.account="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(18).string(e.account),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeKeysGet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.account=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserAttributeKeysGet)return e;var t=new $root.UserAttributeKeysGet;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.account&&(t.account=String(e.account)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.account=""}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserAttributeKeysRet=$root.UserAttributeKeysRet=function(){function e(e){if(this.keys=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.keys=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.keys&&e.keys.length)for(var r=0;r<e.keys.length;++r)t.uint32(18).string(e.keys[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeKeysRet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.keys&&n.keys.length||(n.keys=[]),n.keys.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.keys&&e.hasOwnProperty("keys")){if(!Array.isArray(e.keys))return"keys: array expected";for(var t=0;t<e.keys.length;++t)if(!$util.isString(e.keys[t]))return"keys: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.UserAttributeKeysRet)return e;var t=new $root.UserAttributeKeysRet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.keys){if(!Array.isArray(e.keys))throw TypeError(".UserAttributeKeysRet.keys: array expected");t.keys=[];for(var r=0;r<e.keys.length;++r)t.keys[r]=String(e.keys[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.keys=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.keys&&e.keys.length){r.keys=[];for(var o=0;o<e.keys.length;++o)r.keys[o]=e.keys[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserAttributeRsp=$root.UserAttributeRsp=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserAttributeRsp;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.UserAttributeRsp)return e;var t=new $root.UserAttributeRsp;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupStatusList=$root.GroupStatusList=function(){function e(e){if(this.groups=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.groups=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.groups&&e.groups.length)for(var r=0;r<e.groups.length;++r)t.uint32(18).string(e.groups[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupStatusList;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.groups&&n.groups.length||(n.groups=[]),n.groups.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.groups&&e.hasOwnProperty("groups")){if(!Array.isArray(e.groups))return"groups: array expected";for(var t=0;t<e.groups.length;++t)if(!$util.isString(e.groups[t]))return"groups: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.GroupStatusList)return e;var t=new $root.GroupStatusList;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.groups){if(!Array.isArray(e.groups))throw TypeError(".GroupStatusList.groups: array expected");t.groups=[];for(var r=0;r<e.groups.length;++r)t.groups[r]=String(e.groups[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.groups=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.groups&&e.groups.length){r.groups=[];for(var o=0;o<e.groups.length;++o)r.groups[o]=e.groups[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupStatusResult=$root.GroupStatusResult=function(){function e(e){if(this.groupInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.groupInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.groupInfos&&e.groupInfos.length)for(var r=0;r<e.groupInfos.length;++r)$root.GroupStatusResult.GroupInfo.encode(e.groupInfos[r],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupStatusResult;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.groupInfos&&n.groupInfos.length||(n.groupInfos=[]),n.groupInfos.push($root.GroupStatusResult.GroupInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.groupInfos&&e.hasOwnProperty("groupInfos")){if(!Array.isArray(e.groupInfos))return"groupInfos: array expected";for(var t=0;t<e.groupInfos.length;++t){var r=$root.GroupStatusResult.GroupInfo.verify(e.groupInfos[t]);if(r)return"groupInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.GroupStatusResult)return e;var t=new $root.GroupStatusResult;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.groupInfos){if(!Array.isArray(e.groupInfos))throw TypeError(".GroupStatusResult.groupInfos: array expected");t.groupInfos=[];for(var r=0;r<e.groupInfos.length;++r){if("object"!==_typeof(e.groupInfos[r]))throw TypeError(".GroupStatusResult.groupInfos: object expected");t.groupInfos[r]=$root.GroupStatusResult.GroupInfo.fromObject(e.groupInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.groupInfos=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.groupInfos&&e.groupInfos.length){r.groupInfos=[];for(var o=0;o<e.groupInfos.length;++o)r.groupInfos[o]=$root.GroupStatusResult.GroupInfo.toObject(e.groupInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.GroupInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.group="",e.prototype.memberCount=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(10).string(e.group),null!=e.memberCount&&e.hasOwnProperty("memberCount")&&t.uint32(16).uint32(e.memberCount),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupStatusResult.GroupInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.group=e.string();break;case 2:n.memberCount=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group)?"group: string expected":null!=e.memberCount&&e.hasOwnProperty("memberCount")&&!$util.isInteger(e.memberCount)?"memberCount: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupStatusResult.GroupInfo)return e;var t=new $root.GroupStatusResult.GroupInfo;return null!=e.group&&(t.group=String(e.group)),null!=e.memberCount&&(t.memberCount=e.memberCount>>>0),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.group="",r.memberCount=0),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.memberCount&&e.hasOwnProperty("memberCount")&&(r.memberCount=e.memberCount),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),GroupCountNotice=$root.GroupCountNotice=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.size=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(8).uint64(e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(16).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(26).string(e.group),null!=e.size&&e.hasOwnProperty("size")&&t.uint32(32).uint32(e.size),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupCountNotice;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.instance=e.uint64();break;case 2:n.seq=e.uint64();break;case 3:n.group=e.string();break;case 4:n.size=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group)?"group: string expected":null!=e.size&&e.hasOwnProperty("size")&&!$util.isInteger(e.size)?"size: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupCountNotice)return e;var t=new $root.GroupCountNotice;return null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.size&&(t.size=e.size>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.instance=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.instance=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.seq=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.seq=t.longs===String?"0":0;r.group="",r.size=0}return null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.size&&e.hasOwnProperty("size")&&(r.size=e.size),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAttributeGet=$root.GroupAttributeGet=function(){function e(e){if(this.attributes=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.attributes=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.attributes&&e.attributes.length)for(var r=0;r<e.attributes.length;++r)t.uint32(26).string(e.attributes[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeGet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.attributes&&n.attributes.length||(n.attributes=[]),n.attributes.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group))return"group: string expected";if(null!=e.attributes&&e.hasOwnProperty("attributes")){if(!Array.isArray(e.attributes))return"attributes: array expected";for(var t=0;t<e.attributes.length;++t)if(!$util.isString(e.attributes[t]))return"attributes: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeGet)return e;var t=new $root.GroupAttributeGet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),e.attributes){if(!Array.isArray(e.attributes))throw TypeError(".GroupAttributeGet.attributes: array expected");t.attributes=[];for(var r=0;r<e.attributes.length;++r)t.attributes[r]=String(e.attributes[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributes=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group=""}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),e.attributes&&e.attributes.length){r.attributes=[];for(var o=0;o<e.attributes.length;++o)r.attributes[o]=e.attributes[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAttributeRet=$root.GroupAttributeRet=function(){function e(e){if(this.attributeMaps=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.attributeMaps=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.attributeMaps&&e.attributeMaps.length)for(var r=0;r<e.attributeMaps.length;++r)$root.GroupAttributeRet.AttributeMap.encode(e.attributeMaps[r],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeRet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.attributeMaps&&n.attributeMaps.length||(n.attributeMaps=[]),n.attributeMaps.push($root.GroupAttributeRet.AttributeMap.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.attributeMaps&&e.hasOwnProperty("attributeMaps")){if(!Array.isArray(e.attributeMaps))return"attributeMaps: array expected";for(var t=0;t<e.attributeMaps.length;++t){var r=$root.GroupAttributeRet.AttributeMap.verify(e.attributeMaps[t]);if(r)return"attributeMaps."+r}}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeRet)return e;var t=new $root.GroupAttributeRet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.attributeMaps){if(!Array.isArray(e.attributeMaps))throw TypeError(".GroupAttributeRet.attributeMaps: array expected");t.attributeMaps=[];for(var r=0;r<e.attributeMaps.length;++r){if("object"!==_typeof(e.attributeMaps[r]))throw TypeError(".GroupAttributeRet.attributeMaps: object expected");t.attributeMaps[r]=$root.GroupAttributeRet.AttributeMap.fromObject(e.attributeMaps[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeMaps=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.attributeMaps&&e.attributeMaps.length){r.attributeMaps=[];for(var o=0;o<e.attributeMaps.length;++o)r.attributeMaps[o]=$root.GroupAttributeRet.AttributeMap.toObject(e.attributeMaps[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeMap=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.prototype.origin="",e.prototype.ms=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),null!=e.origin&&e.hasOwnProperty("origin")&&t.uint32(26).string(e.origin),null!=e.ms&&e.hasOwnProperty("ms")&&t.uint32(32).uint64(e.ms),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeRet.AttributeMap;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;case 3:n.origin=e.string();break;case 4:n.ms=e.uint64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null!=e.origin&&e.hasOwnProperty("origin")&&!$util.isString(e.origin)?"origin: string expected":null!=e.ms&&e.hasOwnProperty("ms")&&!($util.isInteger(e.ms)||e.ms&&$util.isInteger(e.ms.low)&&$util.isInteger(e.ms.high))?"ms: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeRet.AttributeMap)return e;var t=new $root.GroupAttributeRet.AttributeMap;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),null!=e.origin&&(t.origin=String(e.origin)),null!=e.ms&&($util.Long?(t.ms=$util.Long.fromValue(e.ms)).unsigned=!0:"string"==typeof e.ms?t.ms=parseInt(e.ms,10):"number"==typeof e.ms?t.ms=e.ms:"object"===_typeof(e.ms)&&(t.ms=new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults)if(r.key="",r.value="",r.origin="",$util.Long){var n=new $util.Long(0,0,!0);r.ms=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.ms=t.longs===String?"0":0;return null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),null!=e.origin&&e.hasOwnProperty("origin")&&(r.origin=e.origin),null!=e.ms&&e.hasOwnProperty("ms")&&("number"==typeof e.ms?r.ms=t.longs===String?String(e.ms):e.ms:r.ms=t.longs===String?$util.Long.prototype.toString.call(e.ms):t.longs===Number?new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0):e.ms),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),GroupAttributeSet=$root.GroupAttributeSet=function(){function e(e){if(this.attributeInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.broadcast=!1,e.prototype.attributeInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.broadcast&&e.hasOwnProperty("broadcast")&&t.uint32(24).bool(e.broadcast),null!=e.attributeInfos&&e.attributeInfos.length)for(var r=0;r<e.attributeInfos.length;++r)$root.GroupAttributeSet.AttributeInfo.encode(e.attributeInfos[r],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeSet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.broadcast=e.bool();break;case 4:n.attributeInfos&&n.attributeInfos.length||(n.attributeInfos=[]),n.attributeInfos.push($root.GroupAttributeSet.AttributeInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group))return"group: string expected";if(null!=e.broadcast&&e.hasOwnProperty("broadcast")&&"boolean"!=typeof e.broadcast)return"broadcast: boolean expected";if(null!=e.attributeInfos&&e.hasOwnProperty("attributeInfos")){if(!Array.isArray(e.attributeInfos))return"attributeInfos: array expected";for(var t=0;t<e.attributeInfos.length;++t){var r=$root.GroupAttributeSet.AttributeInfo.verify(e.attributeInfos[t]);if(r)return"attributeInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeSet)return e;var t=new $root.GroupAttributeSet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.broadcast&&(t.broadcast=Boolean(e.broadcast)),e.attributeInfos){if(!Array.isArray(e.attributeInfos))throw TypeError(".GroupAttributeSet.attributeInfos: array expected");t.attributeInfos=[];for(var r=0;r<e.attributeInfos.length;++r){if("object"!==_typeof(e.attributeInfos[r]))throw TypeError(".GroupAttributeSet.attributeInfos: object expected");t.attributeInfos[r]=$root.GroupAttributeSet.AttributeInfo.fromObject(e.attributeInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeInfos=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group="",r.broadcast=!1}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.broadcast&&e.hasOwnProperty("broadcast")&&(r.broadcast=e.broadcast),e.attributeInfos&&e.attributeInfos.length){r.attributeInfos=[];for(var o=0;o<e.attributeInfos.length;++o)r.attributeInfos[o]=$root.GroupAttributeSet.AttributeInfo.toObject(e.attributeInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeSet.AttributeInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeSet.AttributeInfo)return e;var t=new $root.GroupAttributeSet.AttributeInfo;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.key="",r.value=""),null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),GroupAttributeMod=$root.GroupAttributeMod=function(){function e(e){if(this.attributeInfos=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.broadcast=!1,e.prototype.attributeInfos=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.broadcast&&e.hasOwnProperty("broadcast")&&t.uint32(24).bool(e.broadcast),null!=e.attributeInfos&&e.attributeInfos.length)for(var r=0;r<e.attributeInfos.length;++r)$root.GroupAttributeMod.AttributeInfo.encode(e.attributeInfos[r],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeMod;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.broadcast=e.bool();break;case 4:n.attributeInfos&&n.attributeInfos.length||(n.attributeInfos=[]),n.attributeInfos.push($root.GroupAttributeMod.AttributeInfo.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group))return"group: string expected";if(null!=e.broadcast&&e.hasOwnProperty("broadcast")&&"boolean"!=typeof e.broadcast)return"broadcast: boolean expected";if(null!=e.attributeInfos&&e.hasOwnProperty("attributeInfos")){if(!Array.isArray(e.attributeInfos))return"attributeInfos: array expected";for(var t=0;t<e.attributeInfos.length;++t){var r=$root.GroupAttributeMod.AttributeInfo.verify(e.attributeInfos[t]);if(r)return"attributeInfos."+r}}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeMod)return e;var t=new $root.GroupAttributeMod;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.broadcast&&(t.broadcast=Boolean(e.broadcast)),e.attributeInfos){if(!Array.isArray(e.attributeInfos))throw TypeError(".GroupAttributeMod.attributeInfos: array expected");t.attributeInfos=[];for(var r=0;r<e.attributeInfos.length;++r){if("object"!==_typeof(e.attributeInfos[r]))throw TypeError(".GroupAttributeMod.attributeInfos: object expected");t.attributeInfos[r]=$root.GroupAttributeMod.AttributeInfo.fromObject(e.attributeInfos[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeInfos=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group="",r.broadcast=!1}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.broadcast&&e.hasOwnProperty("broadcast")&&(r.broadcast=e.broadcast),e.attributeInfos&&e.attributeInfos.length){r.attributeInfos=[];for(var o=0;o<e.attributeInfos.length;++o)r.attributeInfos[o]=$root.GroupAttributeMod.AttributeInfo.toObject(e.attributeInfos[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeInfo=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeMod.AttributeInfo;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeMod.AttributeInfo)return e;var t=new $root.GroupAttributeMod.AttributeInfo;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.key="",r.value=""),null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),GroupAttributeDel=$root.GroupAttributeDel=function(){function e(e){if(this.attributes=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.broadcast=!1,e.prototype.attributes=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.broadcast&&e.hasOwnProperty("broadcast")&&t.uint32(24).bool(e.broadcast),null!=e.attributes&&e.attributes.length)for(var r=0;r<e.attributes.length;++r)t.uint32(34).string(e.attributes[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeDel;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.broadcast=e.bool();break;case 4:n.attributes&&n.attributes.length||(n.attributes=[]),n.attributes.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group))return"group: string expected";if(null!=e.broadcast&&e.hasOwnProperty("broadcast")&&"boolean"!=typeof e.broadcast)return"broadcast: boolean expected";if(null!=e.attributes&&e.hasOwnProperty("attributes")){if(!Array.isArray(e.attributes))return"attributes: array expected";for(var t=0;t<e.attributes.length;++t)if(!$util.isString(e.attributes[t]))return"attributes: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeDel)return e;var t=new $root.GroupAttributeDel;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.broadcast&&(t.broadcast=Boolean(e.broadcast)),e.attributes){if(!Array.isArray(e.attributes))throw TypeError(".GroupAttributeDel.attributes: array expected");t.attributes=[];for(var r=0;r<e.attributes.length;++r)t.attributes[r]=String(e.attributes[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributes=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group="",r.broadcast=!1}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.broadcast&&e.hasOwnProperty("broadcast")&&(r.broadcast=e.broadcast),e.attributes&&e.attributes.length){r.attributes=[];for(var o=0;o<e.attributes.length;++o)r.attributes[o]=e.attributes[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAttributeAlt=$root.GroupAttributeAlt=function(){function e(e){if(this.attributeMaps=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.attributeMaps=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(24).uint64(e.instance),null!=e.attributeMaps&&e.attributeMaps.length)for(var r=0;r<e.attributeMaps.length;++r)$root.GroupAttributeAlt.AttributeMap.encode(e.attributeMaps[r],t.uint32(34).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeAlt;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;case 3:n.instance=e.uint64();break;case 4:n.attributeMaps&&n.attributeMaps.length||(n.attributeMaps=[]),n.attributeMaps.push($root.GroupAttributeAlt.AttributeMap.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group))return"group: string expected";if(null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high)))return"instance: integer|Long expected";if(null!=e.attributeMaps&&e.hasOwnProperty("attributeMaps")){if(!Array.isArray(e.attributeMaps))return"attributeMaps: array expected";for(var t=0;t<e.attributeMaps.length;++t){var r=$root.GroupAttributeAlt.AttributeMap.verify(e.attributeMaps[t]);if(r)return"attributeMaps."+r}}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeAlt)return e;var t=new $root.GroupAttributeAlt;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),e.attributeMaps){if(!Array.isArray(e.attributeMaps))throw TypeError(".GroupAttributeAlt.attributeMaps: array expected");t.attributeMaps=[];for(var r=0;r<e.attributeMaps.length;++r){if("object"!==_typeof(e.attributeMaps[r]))throw TypeError(".GroupAttributeAlt.attributeMaps: object expected");t.attributeMaps[r]=$root.GroupAttributeAlt.AttributeMap.fromObject(e.attributeMaps[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.attributeMaps=[]),t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(r.group="",$util.Long){var o=new $util.Long(0,0,!0);r.instance=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.instance=t.longs===String?"0":0}if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),e.attributeMaps&&e.attributeMaps.length){r.attributeMaps=[];for(var i=0;i<e.attributeMaps.length;++i)r.attributeMaps[i]=$root.GroupAttributeAlt.AttributeMap.toObject(e.attributeMaps[i],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.AttributeMap=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.key="",e.prototype.value="",e.prototype.origin="",e.prototype.ms=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.key&&e.hasOwnProperty("key")&&t.uint32(10).string(e.key),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(18).string(e.value),null!=e.origin&&e.hasOwnProperty("origin")&&t.uint32(26).string(e.origin),null!=e.ms&&e.hasOwnProperty("ms")&&t.uint32(32).uint64(e.ms),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeAlt.AttributeMap;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.key=e.string();break;case 2:n.value=e.string();break;case 3:n.origin=e.string();break;case 4:n.ms=e.uint64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.key&&e.hasOwnProperty("key")&&!$util.isString(e.key)?"key: string expected":null!=e.value&&e.hasOwnProperty("value")&&!$util.isString(e.value)?"value: string expected":null!=e.origin&&e.hasOwnProperty("origin")&&!$util.isString(e.origin)?"origin: string expected":null!=e.ms&&e.hasOwnProperty("ms")&&!($util.isInteger(e.ms)||e.ms&&$util.isInteger(e.ms.low)&&$util.isInteger(e.ms.high))?"ms: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeAlt.AttributeMap)return e;var t=new $root.GroupAttributeAlt.AttributeMap;return null!=e.key&&(t.key=String(e.key)),null!=e.value&&(t.value=String(e.value)),null!=e.origin&&(t.origin=String(e.origin)),null!=e.ms&&($util.Long?(t.ms=$util.Long.fromValue(e.ms)).unsigned=!0:"string"==typeof e.ms?t.ms=parseInt(e.ms,10):"number"==typeof e.ms?t.ms=e.ms:"object"===_typeof(e.ms)&&(t.ms=new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults)if(r.key="",r.value="",r.origin="",$util.Long){var n=new $util.Long(0,0,!0);r.ms=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.ms=t.longs===String?"0":0;return null!=e.key&&e.hasOwnProperty("key")&&(r.key=e.key),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),null!=e.origin&&e.hasOwnProperty("origin")&&(r.origin=e.origin),null!=e.ms&&e.hasOwnProperty("ms")&&("number"==typeof e.ms?r.ms=t.longs===String?String(e.ms):e.ms:r.ms=t.longs===String?$util.Long.prototype.toString.call(e.ms):t.longs===Number?new $util.LongBits(e.ms.low>>>0,e.ms.high>>>0).toNumber(!0):e.ms),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),GroupAttributeRsp=$root.GroupAttributeRsp=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeRsp;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeRsp)return e;var t=new $root.GroupAttributeRsp;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAttributeErr=$root.GroupAttributeErr=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(16).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeErr;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeErr)return e;var t=new $root.GroupAttributeErr;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.code=0}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAttributeKeysGet=$root.GroupAttributeKeysGet=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.group="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.group&&e.hasOwnProperty("group")&&t.uint32(18).string(e.group),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeKeysGet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.group=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.group&&e.hasOwnProperty("group")&&!$util.isString(e.group)?"group: string expected":null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeKeysGet)return e;var t=new $root.GroupAttributeKeysGet;return null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.group&&(t.group=String(e.group)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;r.group=""}return null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.group&&e.hasOwnProperty("group")&&(r.group=e.group),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),GroupAttributeKeysRet=$root.GroupAttributeKeysRet=function(){function e(e){if(this.keys=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.keys=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.keys&&e.keys.length)for(var r=0;r<e.keys.length;++r)t.uint32(18).string(e.keys[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.GroupAttributeKeysRet;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.keys&&n.keys.length||(n.keys=[]),n.keys.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.keys&&e.hasOwnProperty("keys")){if(!Array.isArray(e.keys))return"keys: array expected";for(var t=0;t<e.keys.length;++t)if(!$util.isString(e.keys[t]))return"keys: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.GroupAttributeKeysRet)return e;var t=new $root.GroupAttributeKeysRet;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.keys){if(!Array.isArray(e.keys))throw TypeError(".GroupAttributeKeysRet.keys: array expected");t.keys=[];for(var r=0;r<e.keys.length;++r)t.keys[r]=String(e.keys[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.keys=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.keys&&e.keys.length){r.keys=[];for(var o=0;o<e.keys.length;++o)r.keys[o]=e.keys[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),SubscribeUserStatus=$root.SubscribeUserStatus=function(){function e(e){if(this.users=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.users=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.users&&e.users.length)for(var r=0;r<e.users.length;++r)t.uint32(18).string(e.users[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.SubscribeUserStatus;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.users&&n.users.length||(n.users=[]),n.users.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.users&&e.hasOwnProperty("users")){if(!Array.isArray(e.users))return"users: array expected";for(var t=0;t<e.users.length;++t)if(!$util.isString(e.users[t]))return"users: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.SubscribeUserStatus)return e;var t=new $root.SubscribeUserStatus;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.users){if(!Array.isArray(e.users))throw TypeError(".SubscribeUserStatus.users: array expected");t.users=[];for(var r=0;r<e.users.length;++r)t.users[r]=String(e.users[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.users=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.users&&e.users.length){r.users=[];for(var o=0;o<e.users.length;++o)r.users[o]=e.users[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UnsubscribeUserStatus=$root.UnsubscribeUserStatus=function(){function e(e){if(this.users=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.users=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.users&&e.users.length)for(var r=0;r<e.users.length;++r)t.uint32(18).string(e.users[r]);return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UnsubscribeUserStatus;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.users&&n.users.length||(n.users=[]),n.users.push(e.string());break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.users&&e.hasOwnProperty("users")){if(!Array.isArray(e.users))return"users: array expected";for(var t=0;t<e.users.length;++t)if(!$util.isString(e.users[t]))return"users: string[] expected"}return null},e.fromObject=function(e){if(e instanceof $root.UnsubscribeUserStatus)return e;var t=new $root.UnsubscribeUserStatus;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.users){if(!Array.isArray(e.users))throw TypeError(".UnsubscribeUserStatus.users: array expected");t.users=[];for(var r=0;r<e.users.length;++r)t.users[r]=String(e.users[r])}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.users=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.users&&e.users.length){r.users=[];for(var o=0;o<e.users.length;++o)r.users[o]=e.users[o]}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserJoinNotice=$root.UserJoinNotice=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.user="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(8).uint64(e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(16).uint64(e.seq),null!=e.user&&e.hasOwnProperty("user")&&t.uint32(26).string(e.user),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserJoinNotice;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.instance=e.uint64();break;case 2:n.seq=e.uint64();break;case 3:n.user=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.user&&e.hasOwnProperty("user")&&!$util.isString(e.user)?"user: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserJoinNotice)return e;var t=new $root.UserJoinNotice;return null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.user&&(t.user=String(e.user)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.instance=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.instance=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.seq=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.seq=t.longs===String?"0":0;r.user=""}return null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.user&&e.hasOwnProperty("user")&&(r.user=e.user),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserQuitNotice=$root.UserQuitNotice=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.user="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(8).uint64(e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(16).uint64(e.seq),null!=e.user&&e.hasOwnProperty("user")&&t.uint32(26).string(e.user),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserQuitNotice;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.instance=e.uint64();break;case 2:n.seq=e.uint64();break;case 3:n.user=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.user&&e.hasOwnProperty("user")&&!$util.isString(e.user)?"user: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserQuitNotice)return e;var t=new $root.UserQuitNotice;return null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.user&&(t.user=String(e.user)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.instance=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.instance=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.seq=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.seq=t.longs===String?"0":0;r.user=""}return null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.user&&e.hasOwnProperty("user")&&(r.user=e.user),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),UserWaitNotice=$root.UserWaitNotice=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.instance=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.user="",e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.instance&&e.hasOwnProperty("instance")&&t.uint32(8).uint64(e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(16).uint64(e.seq),null!=e.user&&e.hasOwnProperty("user")&&t.uint32(26).string(e.user),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.UserWaitNotice;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.instance=e.uint64();break;case 2:n.seq=e.uint64();break;case 3:n.user=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.instance&&e.hasOwnProperty("instance")&&!($util.isInteger(e.instance)||e.instance&&$util.isInteger(e.instance.low)&&$util.isInteger(e.instance.high))?"instance: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.user&&e.hasOwnProperty("user")&&!$util.isString(e.user)?"user: string expected":null},e.fromObject=function(e){if(e instanceof $root.UserWaitNotice)return e;var t=new $root.UserWaitNotice;return null!=e.instance&&($util.Long?(t.instance=$util.Long.fromValue(e.instance)).unsigned=!0:"string"==typeof e.instance?t.instance=parseInt(e.instance,10):"number"==typeof e.instance?t.instance=e.instance:"object"===_typeof(e.instance)&&(t.instance=new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0))),null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),null!=e.user&&(t.user=String(e.user)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util.Long){var n=new $util.Long(0,0,!0);r.instance=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.instance=t.longs===String?"0":0;if($util.Long){var o=new $util.Long(0,0,!0);r.seq=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.seq=t.longs===String?"0":0;r.user=""}return null!=e.instance&&e.hasOwnProperty("instance")&&("number"==typeof e.instance?r.instance=t.longs===String?String(e.instance):e.instance:r.instance=t.longs===String?$util.Long.prototype.toString.call(e.instance):t.longs===Number?new $util.LongBits(e.instance.low>>>0,e.instance.high>>>0).toNumber(!0):e.instance),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),null!=e.user&&e.hasOwnProperty("user")&&(r.user=e.user),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),SubscribeResponse=$root.SubscribeResponse=function(){function e(e){if(this.errors=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.seq=$util.Long?$util.Long.fromBits(0,0,!0):0,e.prototype.errors=$util.emptyArray,e.encode=function(e,t){if(t||(t=$Writer.create()),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(8).uint64(e.seq),null!=e.errors&&e.errors.length)for(var r=0;r<e.errors.length;++r)$root.SubscribeResponse.SubscribeErrorsType.encode(e.errors[r],t.uint32(18).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.SubscribeResponse;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.seq=e.uint64();break;case 2:n.errors&&n.errors.length||(n.errors=[]),n.errors.push($root.SubscribeResponse.SubscribeErrorsType.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.seq&&e.hasOwnProperty("seq")&&!($util.isInteger(e.seq)||e.seq&&$util.isInteger(e.seq.low)&&$util.isInteger(e.seq.high)))return"seq: integer|Long expected";if(null!=e.errors&&e.hasOwnProperty("errors")){if(!Array.isArray(e.errors))return"errors: array expected";for(var t=0;t<e.errors.length;++t){var r=$root.SubscribeResponse.SubscribeErrorsType.verify(e.errors[t]);if(r)return"errors."+r}}return null},e.fromObject=function(e){if(e instanceof $root.SubscribeResponse)return e;var t=new $root.SubscribeResponse;if(null!=e.seq&&($util.Long?(t.seq=$util.Long.fromValue(e.seq)).unsigned=!0:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0))),e.errors){if(!Array.isArray(e.errors))throw TypeError(".SubscribeResponse.errors: array expected");t.errors=[];for(var r=0;r<e.errors.length;++r){if("object"!==_typeof(e.errors[r]))throw TypeError(".SubscribeResponse.errors: object expected");t.errors[r]=$root.SubscribeResponse.SubscribeErrorsType.fromObject(e.errors[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.errors=[]),t.defaults)if($util.Long){var n=new $util.Long(0,0,!0);r.seq=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.seq=t.longs===String?"0":0;if(null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util.Long.prototype.toString.call(e.seq):t.longs===Number?new $util.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber(!0):e.seq),e.errors&&e.errors.length){r.errors=[];for(var o=0;o<e.errors.length;++o)r.errors[o]=$root.SubscribeResponse.SubscribeErrorsType.toObject(e.errors[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.SubscribeErrorsType=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.account="",e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer.create()),null!=e.account&&e.hasOwnProperty("account")&&t.uint32(10).string(e.account),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(16).uint32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader||(e=$Reader.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root.SubscribeResponse.SubscribeErrorsType;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.account=e.string();break;case 2:n.code=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader||(e=new $Reader(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.account&&e.hasOwnProperty("account")&&!$util.isString(e.account)?"account: string expected":null!=e.code&&e.hasOwnProperty("code")&&!$util.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root.SubscribeResponse.SubscribeErrorsType)return e;var t=new $root.SubscribeResponse.SubscribeErrorsType;return null!=e.account&&(t.account=String(e.account)),null!=e.code&&(t.code=e.code>>>0),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.account="",r.code=0),null!=e.account&&e.hasOwnProperty("account")&&(r.account=e.account),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),ProtoPackets=Object.freeze({Wrapper:Wrapper$1,Ping:Ping,Pong:Pong,UserJoin:UserJoin,UserResp:UserResp,UserQuit:UserQuit,UserDrop:UserDrop,GroupEnter:GroupEnter,GroupLeave:GroupLeave,GroupReply:GroupReply,GroupLeaveNotice:GroupLeaveNotice,GroupEnterNotice:GroupEnterNotice,Message:Message,Ack:Ack,GroupAllUsersList:GroupAllUsersList,GroupAllUsersResult:GroupAllUsersResult,UserStatusList:UserStatusList,UserStatusResult:UserStatusResult,UserAttributeGet:UserAttributeGet,UserAttributeRet:UserAttributeRet,UserAttributeSet:UserAttributeSet,UserAttributeMod:UserAttributeMod,UserAttributeDel:UserAttributeDel,UserAttributeErr:UserAttributeErr,UserAttributeKeysGet:UserAttributeKeysGet,UserAttributeKeysRet:UserAttributeKeysRet,UserAttributeRsp:UserAttributeRsp,GroupStatusList:GroupStatusList,GroupStatusResult:GroupStatusResult,GroupCountNotice:GroupCountNotice,GroupAttributeGet:GroupAttributeGet,GroupAttributeRet:GroupAttributeRet,GroupAttributeSet:GroupAttributeSet,GroupAttributeMod:GroupAttributeMod,GroupAttributeDel:GroupAttributeDel,GroupAttributeAlt:GroupAttributeAlt,GroupAttributeRsp:GroupAttributeRsp,GroupAttributeErr:GroupAttributeErr,GroupAttributeKeysGet:GroupAttributeKeysGet,GroupAttributeKeysRet:GroupAttributeKeysRet,SubscribeUserStatus:SubscribeUserStatus,UnsubscribeUserStatus:UnsubscribeUserStatus,UserJoinNotice:UserJoinNotice,UserQuitNotice:UserQuitNotice,UserWaitNotice:UserWaitNotice,SubscribeResponse:SubscribeResponse,default:$root}),now=function(){return _root.Date.now()},now_1=now,NAN=NaN,reTrim=/^\s+|\s+$/g,reIsBadHex=/^[-+]0x[0-9a-f]+$/i,reIsBinary=/^0b[01]+$/i,reIsOctal=/^0o[0-7]+$/i,freeParseInt=parseInt;function toNumber$1(e){if("number"==typeof e)return e;if(isSymbol_1(e))return NAN;if(isObject_1(e)){var t="function"==typeof e.valueOf?e.valueOf():e;e=isObject_1(t)?t+"":t}if("string"!=typeof e)return 0===e?e:+e;e=e.replace(reTrim,"");var r=reIsBinary.test(e);return r||reIsOctal.test(e)?freeParseInt(e.slice(2),r?2:8):reIsBadHex.test(e)?NAN:+e}var toNumber_1=toNumber$1,FUNC_ERROR_TEXT$1="Expected a function",nativeMax$1=Math.max,nativeMin=Math.min;function debounce(e,t,r){var n,o,i,s,a,u,l=0,c=!1,p=!1,f=!0;if("function"!=typeof e)throw new TypeError(FUNC_ERROR_TEXT$1);function d(t){var r=n,i=o;return n=o=void 0,l=t,s=e.apply(i,r)}function g(e){var r=e-u;return void 0===u||r>=t||r<0||p&&e-l>=i}function h(){var e=now_1();if(g(e))return b(e);a=setTimeout(h,function(e){var r=t-(e-u);return p?nativeMin(r,i-(e-l)):r}(e))}function b(e){return a=void 0,f&&n?d(e):(n=o=void 0,s)}function _(){var e=now_1(),r=g(e);if(n=arguments,o=this,u=e,r){if(void 0===a)return function(e){return l=e,a=setTimeout(h,t),c?d(e):s}(u);if(p)return clearTimeout(a),a=setTimeout(h,t),d(u)}return void 0===a&&(a=setTimeout(h,t)),s}return t=toNumber_1(t)||0,isObject_1(r)&&(c=!!r.leading,i=(p="maxWait"in r)?nativeMax$1(toNumber_1(r.maxWait)||0,t):i,f="trailing"in r?!!r.trailing:f),_.cancel=function(){void 0!==a&&clearTimeout(a),l=0,n=u=o=a=void 0},_.flush=function(){return void 0===a?s:b(now_1())},_}var debounce_1=debounce;_fixReWks("match",1,function(e,t,r,n){return[function(r){var n=e(this),o=null==r?void 0:r[t];return void 0!==o?o.call(r,n):new RegExp(r)[t](String(n))},function(e){var t=n(r,e,this);if(t.done)return t.value;var o=_anObject(e),i=String(this);if(!o.global)return _regexpExecAbstract(o,i);var s=o.unicode;o.lastIndex=0;for(var a,u=[],l=0;null!==(a=_regexpExecAbstract(o,i));){var c=String(a[0]);u[l]=c,""===c&&(o.lastIndex=_advanceStringIndex(i,_toLength(o.lastIndex),s)),l++}return 0===l?null:u}]}),_export(_export.S,"Object",{getOwnPropertyDescriptors:function(e){for(var t,r,n=_toIobject(e),o=_objectGopd.f,i=_ownKeys(n),s={},a=0;i.length>a;)void 0!==(r=o(n,t=i[a++]))&&_createProperty(s,t,r);return s}});var isBufferBrowser=function(e){return e&&"object"===_typeof(e)&&"function"==typeof e.copy&&"function"==typeof e.fill&&"function"==typeof e.readUInt8},inherits_browser=createCommonjsModule(function(e){"function"==typeof Object.create?e.exports=function(e,t){e.super_=t,e.prototype=Object.create(t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}})}:e.exports=function(e,t){e.super_=t;var r=function(){};r.prototype=t.prototype,e.prototype=new r,e.prototype.constructor=e}}),util=createCommonjsModule(function(e,t){var r=Object.getOwnPropertyDescriptors||function(e){for(var t=Object.keys(e),r={},n=0;n<t.length;n++)r[t[n]]=Object.getOwnPropertyDescriptor(e,t[n]);return r},n=/%[sdj%]/g;t.format=function(e){if(!b(e)){for(var t=[],r=0;r<arguments.length;r++)t.push(s(arguments[r]));return t.join(" ")}r=1;for(var o=arguments,i=o.length,a=String(e).replace(n,function(e){if("%%"===e)return"%";if(r>=i)return e;switch(e){case"%s":return String(o[r++]);case"%d":return Number(o[r++]);case"%j":try{return JSON.stringify(o[r++])}catch(e){return"[Circular]"}default:return e}}),u=o[r];r<i;u=o[++r])g(u)||!m(u)?a+=" "+u:a+=" "+s(u);return a},t.deprecate=function(e,r){if("undefined"!=typeof process&&!0===process.noDeprecation)return e;if("undefined"==typeof process)return function(){return t.deprecate(e,r).apply(this,arguments)};var n=!1;return function(){if(!n){if(process.throwDeprecation)throw new Error(r);process.traceDeprecation?console.trace(r):console.error(r),n=!0}return e.apply(this,arguments)}};var o,i={};function s(e,r){var n={seen:[],stylize:u};return arguments.length>=3&&(n.depth=arguments[2]),arguments.length>=4&&(n.colors=arguments[3]),d(r)?n.showHidden=r:r&&t._extend(n,r),_(n.showHidden)&&(n.showHidden=!1),_(n.depth)&&(n.depth=2),_(n.colors)&&(n.colors=!1),_(n.customInspect)&&(n.customInspect=!0),n.colors&&(n.stylize=a),l(n,e,n.depth)}function a(e,t){var r=s.styles[t];return r?"["+s.colors[r][0]+"m"+e+"["+s.colors[r][1]+"m":e}function u(e,t){return e}function l(e,r,n){if(e.customInspect&&r&&E(r.inspect)&&r.inspect!==t.inspect&&(!r.constructor||r.constructor.prototype!==r)){var o=r.inspect(n,e);return b(o)||(o=l(e,o,n)),o}var i=function(e,t){if(_(t))return e.stylize("undefined","undefined");if(b(t)){var r="'"+JSON.stringify(t).replace(/^"|"$/g,"").replace(/'/g,"\\'").replace(/\\"/g,'"')+"'";return e.stylize(r,"string")}if(h(t))return e.stylize(""+t,"number");if(d(t))return e.stylize(""+t,"boolean");if(g(t))return e.stylize("null","null")}(e,r);if(i)return i;var s=Object.keys(r),a=function(e){var t={};return e.forEach(function(e,r){t[e]=!0}),t}(s);if(e.showHidden&&(s=Object.getOwnPropertyNames(r)),$(r)&&(s.indexOf("message")>=0||s.indexOf("description")>=0))return c(r);if(0===s.length){if(E(r)){var u=r.name?": "+r.name:"";return e.stylize("[Function"+u+"]","special")}if(y(r))return e.stylize(RegExp.prototype.toString.call(r),"regexp");if(v(r))return e.stylize(Date.prototype.toString.call(r),"date");if($(r))return c(r)}var m,I="",S=!1,w=["{","}"];(f(r)&&(S=!0,w=["[","]"]),E(r))&&(I=" [Function"+(r.name?": "+r.name:"")+"]");return y(r)&&(I=" "+RegExp.prototype.toString.call(r)),v(r)&&(I=" "+Date.prototype.toUTCString.call(r)),$(r)&&(I=" "+c(r)),0!==s.length||S&&0!=r.length?n<0?y(r)?e.stylize(RegExp.prototype.toString.call(r),"regexp"):e.stylize("[Object]","special"):(e.seen.push(r),m=S?function(e,t,r,n,o){for(var i=[],s=0,a=t.length;s<a;++s)O(t,String(s))?i.push(p(e,t,r,n,String(s),!0)):i.push("");return o.forEach(function(o){o.match(/^\d+$/)||i.push(p(e,t,r,n,o,!0))}),i}(e,r,n,a,s):s.map(function(t){return p(e,r,n,a,t,S)}),e.seen.pop(),function(e,t,r){if(e.reduce(function(e,t){return t.indexOf("\n"),e+t.replace(/\u001b\[\d\d?m/g,"").length+1},0)>60)return r[0]+(""===t?"":t+"\n ")+" "+e.join(",\n  ")+" "+r[1];return r[0]+t+" "+e.join(", ")+" "+r[1]}(m,I,w)):w[0]+I+w[1]}function c(e){return"["+Error.prototype.toString.call(e)+"]"}function p(e,t,r,n,o,i){var s,a,u;if((u=Object.getOwnPropertyDescriptor(t,o)||{value:t[o]}).get?a=u.set?e.stylize("[Getter/Setter]","special"):e.stylize("[Getter]","special"):u.set&&(a=e.stylize("[Setter]","special")),O(n,o)||(s="["+o+"]"),a||(e.seen.indexOf(u.value)<0?(a=g(r)?l(e,u.value,null):l(e,u.value,r-1)).indexOf("\n")>-1&&(a=i?a.split("\n").map(function(e){return"  "+e}).join("\n").substr(2):"\n"+a.split("\n").map(function(e){return"   "+e}).join("\n")):a=e.stylize("[Circular]","special")),_(s)){if(i&&o.match(/^\d+$/))return a;(s=JSON.stringify(""+o)).match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/)?(s=s.substr(1,s.length-2),s=e.stylize(s,"name")):(s=s.replace(/'/g,"\\'").replace(/\\"/g,'"').replace(/(^"|"$)/g,"'"),s=e.stylize(s,"string"))}return s+": "+a}function f(e){return Array.isArray(e)}function d(e){return"boolean"==typeof e}function g(e){return null===e}function h(e){return"number"==typeof e}function b(e){return"string"==typeof e}function _(e){return void 0===e}function y(e){return m(e)&&"[object RegExp]"===I(e)}function m(e){return"object"===_typeof(e)&&null!==e}function v(e){return m(e)&&"[object Date]"===I(e)}function $(e){return m(e)&&("[object Error]"===I(e)||e instanceof Error)}function E(e){return"function"==typeof e}function I(e){return Object.prototype.toString.call(e)}function S(e){return e<10?"0"+e.toString(10):e.toString(10)}t.debuglog=function(e){if(_(o)&&(o=process.env.NODE_DEBUG||""),e=e.toUpperCase(),!i[e])if(new RegExp("\\b"+e+"\\b","i").test(o)){var r=process.pid;i[e]=function(){var n=t.format.apply(t,arguments);console.error("%s %d: %s",e,r,n)}}else i[e]=function(){};return i[e]},t.inspect=s,s.colors={bold:[1,22],italic:[3,23],underline:[4,24],inverse:[7,27],white:[37,39],grey:[90,39],black:[30,39],blue:[34,39],cyan:[36,39],green:[32,39],magenta:[35,39],red:[31,39],yellow:[33,39]},s.styles={special:"cyan",number:"yellow",boolean:"yellow",undefined:"grey",null:"bold",string:"green",date:"magenta",regexp:"red"},t.isArray=f,t.isBoolean=d,t.isNull=g,t.isNullOrUndefined=function(e){return null==e},t.isNumber=h,t.isString=b,t.isSymbol=function(e){return"symbol"===_typeof(e)},t.isUndefined=_,t.isRegExp=y,t.isObject=m,t.isDate=v,t.isError=$,t.isFunction=E,t.isPrimitive=function(e){return null===e||"boolean"==typeof e||"number"==typeof e||"string"==typeof e||"symbol"===_typeof(e)||void 0===e},t.isBuffer=isBufferBrowser;var w=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];function O(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.log=function(){var e,r;console.log("%s - %s",(e=new Date,r=[S(e.getHours()),S(e.getMinutes()),S(e.getSeconds())].join(":"),[e.getDate(),w[e.getMonth()],r].join(" ")),t.format.apply(t,arguments))},t.inherits=inherits_browser,t._extend=function(e,t){if(!t||!m(t))return e;for(var r=Object.keys(t),n=r.length;n--;)e[r[n]]=t[r[n]];return e};var R="undefined"!=typeof Symbol?Symbol("util.promisify.custom"):void 0;function T(e,t){if(!e){var r=new Error("Promise was rejected with a falsy value");r.reason=e,e=r}return t(e)}t.promisify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');if(R&&e[R]){var t;if("function"!=typeof(t=e[R]))throw new TypeError('The "util.promisify.custom" argument must be of type Function');return Object.defineProperty(t,R,{value:t,enumerable:!1,writable:!1,configurable:!0}),t}function t(){for(var t,r,n=new Promise(function(e,n){t=e,r=n}),o=[],i=0;i<arguments.length;i++)o.push(arguments[i]);o.push(function(e,n){e?r(e):t(n)});try{e.apply(this,o)}catch(e){r(e)}return n}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),R&&Object.defineProperty(t,R,{value:t,enumerable:!1,writable:!1,configurable:!0}),Object.defineProperties(t,r(e))},t.promisify.custom=R,t.callbackify=function(e){if("function"!=typeof e)throw new TypeError('The "original" argument must be of type Function');function t(){for(var t=[],r=0;r<arguments.length;r++)t.push(arguments[r]);var n=t.pop();if("function"!=typeof n)throw new TypeError("The last argument must be of type Function");var o=this,i=function(){return n.apply(o,arguments)};e.apply(this,t).then(function(e){process.nextTick(i,null,e)},function(e){process.nextTick(T,e,i)})}return Object.setPrototypeOf(t,Object.getPrototypeOf(e)),Object.defineProperties(t,r(e)),t}}),util_1=util.format,util_2=util.deprecate,util_3=util.debuglog,util_4=util.inspect,util_5=util.isArray,util_6=util.isBoolean,util_7=util.isNull,util_8=util.isNullOrUndefined,util_9=util.isNumber,util_10=util.isString,util_11=util.isSymbol,util_12=util.isUndefined,util_13=util.isRegExp,util_14=util.isObject,util_15=util.isDate,util_16=util.isError,util_17=util.isFunction,util_18=util.isPrimitive,util_19=util.isBuffer,util_20=util.log,util_21=util.inherits,util_22=util._extend,util_23=util.promisify,util_24=util.callbackify;function asyncGeneratorStep$1(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$1(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$1(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$1(i,n,o,s,a,"throw",e)}s(void 0)})}}function _toConsumableArray$1(e){return _arrayWithoutHoles$1(e)||_iterableToArray$1(e)||_nonIterableSpread$1()}function _nonIterableSpread$1(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$1(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$1(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}var UINT32_MAX=4294967295;function getRandomInt(e,t){var r=Math.ceil(e),n=Math.floor(t);return Math.floor(Math.random()*(n-r+1))+e}function getRandomUInt64(){var e=getRandomInt(0,UINT32_MAX),t=getRandomInt(1,UINT32_MAX);return new long_1(e,t,!0)}function getSid(e){return e.toString().padEnd(32,"0")}function assertNever(e,t){return new TypeError("Unexpected ".concat(e,": ").concat(t))}function calIpDistance(e,t){var r=e.split(".").map(function(e){return Number(e)}),n=t.split(".").map(function(e){return Number(e)});return Math.sqrt(1e3*Math.pow(r[0]-n[0],2)+100*Math.pow(r[1]-n[1],2)+10*Math.pow(r[2]-n[2],2)+1*Math.pow(r[3]-n[3],2))}function longToStringIfNeeded(e){return e.lessThanOrEqual(Number.MAX_SAFE_INTEGER)?e.toNumber():e.toString()}var prefixSeqMap=new Map;function uniquePrefixedId(e,t){var r="".concat(e).concat(t||""),n=prefixSeqMap.get(r)||1;return prefixSeqMap.set(r,n+1),"".concat(e).concat(n)}var getUTCTimestamp=function(){var e=new Date;return"".concat(e.toISOString().split("T")[1].replace(/\..+/,""),".").concat(e.getMilliseconds())},getKeys=Object.keys,getEntries=Object.entries.bind(Object);function isLongNum(e){return"number"==typeof e||long_1.isLong(e)}var getName=function(e){return Object.keys(e)[0]},addPeriodIfNeeded=function(e){return"string"==typeof e?e.endsWith(".")?e:"".concat(e,"."):e};function genErrorMessage(e,t){return("number"==typeof e?"Error Code ".concat(e,". "):"string"==typeof e?"[".concat(e,"] "):"")+("string"==typeof t&&t?addPeriodIfNeeded(t):Array.isArray(t)&&"string"==typeof t[0]&&t[0]?addPeriodIfNeeded(util_1.apply(void 0,[t[0]].concat(_toConsumableArray$1(t.slice(1))))):"")}function delay$1(e){return _delay.apply(this,arguments)}function _delay(){return(_delay=_asyncToGenerator$1(regenerator.mark(function e(t){return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.abrupt("return",new Promise(function(e){setTimeout(function(){e()},t)}));case 1:case"end":return e.stop()}},e)}))).apply(this,arguments)}function post(e){return _post.apply(this,arguments)}function _post(){return(_post=_asyncToGenerator$1(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.url,n=t.body,o=t.headers,i=t.timeout,s=void 0===i?1e4:i,a=t.signal,(u=new XMLHttpRequest).timeout=s,u.open("POST",r,!0),u.setRequestHeader("Content-type","application/json; charset=utf-8"),o)for(l in o)"withCredentials"===l?u.withCredentials=!0:u.setRequestHeader(l,o[l]);return e.abrupt("return",new Promise(function(e,t){a.onabort=function(){u.abort()},u.onload=function(){e(u.responseText)},u.onerror=function(e){t(e)},u.onabort=function(){t(new DOMException("The request aborted.","AbortError"))},u.send(JSON.stringify(n))}));case 7:case"end":return e.stop()}},e)}))).apply(this,arguments)}var isProd=!0;function _typeof$1(e){return(_typeof$1="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck$1(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$1(e,t){return!t||"object"!==_typeof$1(t)&&"function"!=typeof t?_assertThisInitialized$1(e):t}function _assertThisInitialized$1(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _inherits$1(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$1(e,t)}function _wrapNativeSuper$1(e){var t="function"==typeof Map?new Map:void 0;return(_wrapNativeSuper$1=function(e){if(null===e||!_isNativeFunction$1(e))return e;if("function"!=typeof e)throw new TypeError("Super expression must either be null or a function");if(void 0!==t){if(t.has(e))return t.get(e);t.set(e,r)}function r(){return _construct$1(e,arguments,_getPrototypeOf$1(this).constructor)}return r.prototype=Object.create(e.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),_setPrototypeOf$1(r,e)})(e)}function isNativeReflectConstruct$1(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(e){return!1}}function _construct$1(e,t,r){return(_construct$1=isNativeReflectConstruct$1()?Reflect.construct:function(e,t,r){var n=[null];n.push.apply(n,t);var o=new(Function.bind.apply(e,n));return r&&_setPrototypeOf$1(o,r.prototype),o}).apply(null,arguments)}function _isNativeFunction$1(e){return-1!==Function.toString.call(e).indexOf("[native code]")}function _setPrototypeOf$1(e,t){return(_setPrototypeOf$1=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _getPrototypeOf$1(e){return(_getPrototypeOf$1=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}var RtmBaseError=function(e){function t(e,r,n){var o;return _classCallCheck$1(this,t),(o=_possibleConstructorReturn$1(this,_getPrototypeOf$1(t).call(this,genErrorMessage(r,e)))).code=r,n&&console.error(n),o}return _inherits$1(t,_wrapNativeSuper$1(Error)),t}(),RtmInternalError=function(e){function t(e,r){var n;return _classCallCheck$1(this,t),(n=_possibleConstructorReturn$1(this,_getPrototypeOf$1(t).call(this,genErrorMessage(r,e)))).code=r,n.name="RtmInternalError",n}return _inherits$1(t,_wrapNativeSuper$1(Error)),t}(),genError=function(){return function(e){function t(e){_classCallCheck$1(this,t);var r=Object.keys(e);return _possibleConstructorReturn$1(this,_getPrototypeOf$1(t).call(this,e[r[0]],r[0]))}return _inherits$1(t,RtmInternalError),t}()},CommonError=genError(),RtmTimeoutError=function(e){function t(e,r,n){var o;return _classCallCheck$1(this,t),(o=_possibleConstructorReturn$1(this,_getPrototypeOf$1(t).call(this,genErrorMessage(r,e)))).code=r,o.name="RtmTimeoutError",n&&console.error(n),o}return _inherits$1(t,RtmBaseError),t}(),RtmInvalidArgumentError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmInvalidArgumentError",r}return _inherits$1(t,RtmBaseError),t}(),RtmInvalidStatusError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmInvalidStatusError",r}return _inherits$1(t,RtmBaseError),t}(),RtmLimitExceededError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmLimitExceededError",r}return _inherits$1(t,RtmBaseError),t}(),RtmInvokeTooOftenError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmInvokeTooOftenError",r}return _inherits$1(t,RtmBaseError),t}(),RtmUnavailableError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmUnavailableError",r.serverCode=void 0,r}return _inherits$1(t,RtmBaseError),t}(),RtmUnauthenticatedError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmUnauthenticatedError",r.serverCode=void 0,r}return _inherits$1(t,RtmBaseError),t}(),RtmUnknownError=function(e){function t(){var e,r;_classCallCheck$1(this,t);for(var n=arguments.length,o=new Array(n),i=0;i<n;i++)o[i]=arguments[i];return(r=_possibleConstructorReturn$1(this,(e=_getPrototypeOf$1(t)).call.apply(e,[this].concat(o)))).name="RtmUnknownError",r}return _inherits$1(t,RtmBaseError),t}(),isTimeout=function(e){return e instanceof RtmTimeoutError||e instanceof TimeoutError},isRtmError=function(e){return e instanceof RtmBaseError||e instanceof RtmTimeoutError},invalidArgumentMessage="The %s in the arguments is invalid",genTimeoutMessage=function(e,t,r){return['Executing "%s.%s" timed out after %ds',e,t,r/1e3]},merge$1=_createAssigner(function(e,t,r){_baseMerge(e,t,r)}),merge_1=merge$1,s=1e3,m=60*s,h=60*m,d=24*h,w=7*d,y=365.25*d,ms=function(e,t){t=t||{};var r=_typeof(e);if("string"===r&&e.length>0)return parse(e);if("number"===r&&!1===isNaN(e))return t.long?fmtLong(e):fmtShort(e);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(e))};function parse(e){if(!((e=String(e)).length>100)){var t=/^((?:\d+)?\-?\d?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(e);if(t){var r=parseFloat(t[1]);switch((t[2]||"ms").toLowerCase()){case"years":case"year":case"yrs":case"yr":case"y":return r*y;case"weeks":case"week":case"w":return r*w;case"days":case"day":case"d":return r*d;case"hours":case"hour":case"hrs":case"hr":case"h":return r*h;case"minutes":case"minute":case"mins":case"min":case"m":return r*m;case"seconds":case"second":case"secs":case"sec":case"s":return r*s;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return r;default:return}}}}function fmtShort(e){var t=Math.abs(e);return t>=d?Math.round(e/d)+"d":t>=h?Math.round(e/h)+"h":t>=m?Math.round(e/m)+"m":t>=s?Math.round(e/s)+"s":e+"ms"}function fmtLong(e){var t=Math.abs(e);return t>=d?plural(e,t,d,"day"):t>=h?plural(e,t,h,"hour"):t>=m?plural(e,t,m,"minute"):t>=s?plural(e,t,s,"second"):e+" ms"}function plural(e,t,r,n){var o=t>=1.5*r;return Math.round(e/r)+" "+n+(o?"s":"")}function setup(e){function t(e){for(var t=0,n=0;n<e.length;n++)t=(t<<5)-t+e.charCodeAt(n),t|=0;return r.colors[Math.abs(t)%r.colors.length]}function r(e){var i;function s(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];if(s.enabled){var o=s,a=Number(new Date),u=a-(i||a);o.diff=u,o.prev=i,o.curr=a,i=a,t[0]=r.coerce(t[0]),"string"!=typeof t[0]&&t.unshift("%O");var l=0;t[0]=t[0].replace(/%([a-zA-Z%])/g,function(e,n){if("%%"===e)return e;l++;var i=r.formatters[n];if("function"==typeof i){var s=t[l];e=i.call(o,s),t.splice(l,1),l--}return e}),r.formatArgs.call(o,t),(o.log||r.log).apply(o,t)}}return s.namespace=e,s.enabled=r.enabled(e),s.useColors=r.useColors(),s.color=t(e),s.destroy=n,s.extend=o,"function"==typeof r.init&&r.init(s),r.instances.push(s),s}function n(){var e=r.instances.indexOf(this);return-1!==e&&(r.instances.splice(e,1),!0)}function o(e,t){var n=r(this.namespace+(void 0===t?":":t)+e);return n.log=this.log,n}function i(e){return e.toString().substring(2,e.toString().length-2).replace(/\.\*\?$/,"*")}return r.debug=r,r.default=r,r.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},r.disable=function(){var e=[].concat(_toConsumableArray(r.names.map(i)),_toConsumableArray(r.skips.map(i).map(function(e){return"-"+e}))).join(",");return r.enable(""),e},r.enable=function(e){var t;r.save(e),r.names=[],r.skips=[];var n=("string"==typeof e?e:"").split(/[\s,]+/),o=n.length;for(t=0;t<o;t++)n[t]&&("-"===(e=n[t].replace(/\*/g,".*?"))[0]?r.skips.push(new RegExp("^"+e.substr(1)+"$")):r.names.push(new RegExp("^"+e+"$")));for(t=0;t<r.instances.length;t++){var i=r.instances[t];i.enabled=r.enabled(i.namespace)}},r.enabled=function(e){if("*"===e[e.length-1])return!0;var t,n;for(t=0,n=r.skips.length;t<n;t++)if(r.skips[t].test(e))return!1;for(t=0,n=r.names.length;t<n;t++)if(r.names[t].test(e))return!0;return!1},r.humanize=ms,Object.keys(e).forEach(function(t){r[t]=e[t]}),r.instances=[],r.names=[],r.skips=[],r.formatters={},r.selectColor=t,r.enable(r.load()),r}var common=setup,browser=createCommonjsModule(function(e,t){t.log=function(){var e;return"object"===("undefined"==typeof console?"undefined":_typeof(console))&&console.log&&(e=console).log.apply(e,arguments)},t.formatArgs=function(t){if(t[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+t[0]+(this.useColors?"%c ":" ")+"+"+e.exports.humanize(this.diff),!this.useColors)return;var r="color: "+this.color;t.splice(1,0,r,"color: inherit");var n=0,o=0;t[0].replace(/%[a-zA-Z%]/g,function(e){"%%"!==e&&(n++,"%c"===e&&(o=n))}),t.splice(o,0,r)},t.save=function(e){try{e?t.storage.setItem("debug",e):t.storage.removeItem("debug")}catch(e){}},t.load=function(){var e;try{e=t.storage.getItem("debug")}catch(e){}!e&&"undefined"!=typeof process&&"env"in process&&(e=process.env.DEBUG);return e},t.useColors=function(){if("undefined"!=typeof window&&window.process&&("renderer"===window.process.type||window.process.__nwjs))return!0;if("undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;return"undefined"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||"undefined"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)&&parseInt(RegExp.$1,10)>=31||"undefined"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)},t.storage=function(){try{return localStorage}catch(e){}}(),t.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"],e.exports=common(t),e.exports.formatters.j=function(e){try{return JSON.stringify(e)}catch(e){return"[UnexpectedJSONParseError]: "+e.message}}}),browser_1=browser.log,browser_2=browser.formatArgs,browser_3=browser.save,browser_4=browser.load,browser_5=browser.useColors,browser_6=browser.storage,browser_7=browser.colors,key$2="__global_unique_id__",gud=function(){return commonjsGlobal[key$2]=(commonjsGlobal[key$2]||0)+1},$values=_objectToArray(!1);_export(_export.S,"Object",{values:function(e){return $values(e)}}),_export(_export.S,"Reflect",{has:function(e,t){return t in e}});var umd=createCommonjsModule(function(e,t){!function(e){var t=function(e){return"undefined"!=typeof self&&self&&e in self?self[e]:"undefined"!=typeof window&&window&&e in window?window[e]:void 0!==commonjsGlobal&&commonjsGlobal&&e in commonjsGlobal?commonjsGlobal[e]:"undefined"!=typeof globalThis&&globalThis?globalThis[e]:void 0},r=t("document"),n=t("Headers"),o=t("Response"),i=t("ReadableStream"),s=t("fetch"),a=t("AbortController"),u=t("FormData"),l=function(e){return null!==e&&"object"===_typeof(e)},c="function"==typeof a,p="function"==typeof i,f="function"==typeof u,d=function e(){for(var t={},r=arguments.length,n=new Array(r),o=0;o<r;o++)n[o]=arguments[o];for(var i=0,s=n;i<s.length;i++){var a=s[i];if(Array.isArray(a))Array.isArray(t)||(t=[]),t=[].concat(_toConsumableArray(t),_toConsumableArray(a));else if(l(a))for(var u=0,c=Object.entries(a);u<c.length;u++){var p=_slicedToArray(c[u],2),f=p[0],d=p[1];l(d)&&Reflect.has(t,f)&&(d=e(t[f],d)),t=_objectSpread2({},t,_defineProperty({},f,d))}}return t},g=["get","post","put","patch","head","delete"],h={json:"application/json",text:"text/*",formData:"multipart/form-data",arrayBuffer:"*/*",blob:"*/*"},b=new Set(["get","put","head","delete","options","trace"]),_=new Set([408,413,429,500,502,503,504]),y=new Set([413,429,503]),m=function(e){function t(e){var r;return _classCallCheck(this,t),(r=_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,e.statusText))).name="HTTPError",r.response=e,r}return _inherits(t,e),t}(_wrapNativeSuper(Error)),v=function(e){function t(){var e;return _classCallCheck(this,t),(e=_possibleConstructorReturn(this,_getPrototypeOf(t).call(this,"Request timed out"))).name="TimeoutError",e}return _inherits(t,e),t}(_wrapNativeSuper(Error)),$=function(e){return new Promise(function(t,r){e>2147483647?r(new RangeError("The `timeout` option cannot be greater than 2147483647")):setTimeout(t,e)})},E=function(e,t,r){return new Promise(function(n,o){e.then(n).catch(o),$(t).then(function(){c&&r.abort(),o(new v)}).catch(o)})},I=function(e){return g.includes(e)?e.toUpperCase():e},S=function(){function e(t,i){var s=this,l=i.timeout,g=void 0===l?1e4:l,_=i.hooks,y=i.throwHttpErrors,v=void 0===y||y,E=i.searchParams,S=i.json,w=_objectWithoutProperties(i,["timeout","hooks","throwHttpErrors","searchParams","json"]);if(_classCallCheck(this,e),this._retryCount=0,this._options=_objectSpread2({method:"get",credentials:"same-origin",retry:2},w),c&&(this.abortController=new a,this._options.signal&&this._options.signal.addEventListener("abort",function(){s.abortController.abort()}),this._options.signal=this.abortController.signal),this._options.method=I(this._options.method),this._options.prefixUrl=String(this._options.prefixUrl||""),this._input=String(t||""),this._options.prefixUrl&&this._input.startsWith("/"))throw new Error("`input` must not begin with a slash when using `prefixUrl`");if(this._options.prefixUrl&&!this._options.prefixUrl.endsWith("/")&&(this._options.prefixUrl+="/"),this._input=this._options.prefixUrl+this._input,E){var O=new URL(this._input,r&&r.baseURI);if("string"==typeof E||URLSearchParams&&E instanceof URLSearchParams)O.search=E;else{if(!Object.values(E).every(function(e){return"number"==typeof e||"string"==typeof e}))throw new Error("The `searchParams` option must be either a string, `URLSearchParams` instance or an object with string and number values");O.search=new URLSearchParams(E).toString()}this._input=O.toString()}this._timeout=g,this._hooks=d({beforeRequest:[],afterResponse:[]},_),this._throwHttpErrors=v;var R=new n(this._options.headers||{});if((f&&this._options.body instanceof u||this._options.body instanceof URLSearchParams)&&R.has("content-type"))throw new Error("The `content-type` header cannot be used with a ".concat(this._options.body.constructor.name," body. It will be set automatically."));if(S){if(this._options.body)throw new Error("The `json` option cannot be used with the `body` option");R.set("content-type","application/json"),this._options.body=JSON.stringify(S)}this._options.headers=R;for(var T,A=(T=_asyncToGenerator(regenerator.mark(function e(){var t,r,n,i,a,u,l;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,$(1);case 2:return e.next=4,s._fetch();case 4:t=e.sent,r=s._hooks.afterResponse,n=Array.isArray(r),i=0,r=n?r:r[Symbol.iterator]();case 6:if(!n){e.next=12;break}if(!(i>=r.length)){e.next=9;break}return e.abrupt("break",23);case 9:a=r[i++],e.next=16;break;case 12:if(!(i=r.next()).done){e.next=15;break}return e.abrupt("break",23);case 15:a=i.value;case 16:return u=a,e.next=19,u(t.clone());case 19:(l=e.sent)instanceof o&&(t=l);case 21:e.next=6;break;case 23:if(t.ok||!s._throwHttpErrors){e.next=25;break}throw new m(t);case 25:if(!s._options.onDownloadProgress){e.next=31;break}if("function"==typeof s._options.onDownloadProgress){e.next=28;break}throw new TypeError("The `onDownloadProgress` option must be a function");case 28:if(p){e.next=30;break}throw new Error("Streams are not supported in your environment. `ReadableStream` is missing.");case 30:return e.abrupt("return",s._stream(t.clone(),s._options.onDownloadProgress));case 31:return e.abrupt("return",t);case 32:case"end":return e.stop()}},e)})),function(){return T.apply(this,arguments)}),N=b.has(this._options.method.toLowerCase()),L=N?this._retry(A):A(),P=function(){var e=_slicedToArray(k[C],2),t=e[0],r=e[1];L[t]=_asyncToGenerator(regenerator.mark(function e(){return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return R.set("accept",r),e.next=3,L;case 3:return e.t0=t,e.abrupt("return",e.sent.clone()[e.t0]());case 5:case"end":return e.stop()}},e)}))},C=0,k=Object.entries(h);C<k.length;C++)P();return L}return _createClass(e,[{key:"_calculateRetryDelay",value:function(e){if(this._retryCount++,this._retryCount<this._options.retry&&!(e instanceof v)){if(e instanceof m){if(!_.has(e.response.status))return 0;var t=e.response.headers.get("Retry-After");if(t&&y.has(e.response.status)){var r=Number(t);return Number.isNaN(r)?r=Date.parse(t)-Date.now():r*=1e3,r}if(413===e.response.status)return 0}return.3*Math.pow(2,this._retryCount-1)*1e3}return 0}},{key:"_retry",value:(l=_asyncToGenerator(regenerator.mark(function e(t){var r;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.prev=0,e.next=3,t();case 3:return e.abrupt("return",e.sent);case 6:if(e.prev=6,e.t0=e.catch(0),!(0!==(r=this._calculateRetryDelay(e.t0))&&this._retryCount>0)){e.next=13;break}return e.next=12,$(r);case 12:return e.abrupt("return",this._retry(t));case 13:if(!this._throwHttpErrors){e.next=15;break}throw e.t0;case 15:case"end":return e.stop()}},e,this,[[0,6]])})),function(e){return l.apply(this,arguments)})},{key:"_fetch",value:(t=_asyncToGenerator(regenerator.mark(function e(){var t,r,n,o,i;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:t=this._hooks.beforeRequest,r=Array.isArray(t),n=0,t=r?t:t[Symbol.iterator]();case 1:if(!r){e.next=7;break}if(!(n>=t.length)){e.next=4;break}return e.abrupt("break",16);case 4:o=t[n++],e.next=11;break;case 7:if(!(n=t.next()).done){e.next=10;break}return e.abrupt("break",16);case 10:o=n.value;case 11:return i=o,e.next=14,i(this._options);case 14:e.next=1;break;case 16:if(!1!==this._timeout){e.next=18;break}return e.abrupt("return",s(this._input,this._options));case 18:return e.abrupt("return",E(s(this._input,this._options),this._timeout,this.abortController));case 19:case"end":return e.stop()}},e,this)})),function(){return t.apply(this,arguments)})},{key:"_stream",value:function(e,t){var r=Number(e.headers.get("content-length"))||0,n=0;return new o(new i({start:function(o){var i=e.body.getReader();function s(){return a.apply(this,arguments)}function a(){return(a=_asyncToGenerator(regenerator.mark(function e(){var a,u,l;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return e.next=2,i.read();case 2:if(a=e.sent,u=a.done,l=a.value,!u){e.next=8;break}return o.close(),e.abrupt("return");case 8:t&&(n+=l.byteLength,t({percent:0===r?0:n/r,transferredBytes:n,totalBytes:r},l)),o.enqueue(l),s();case 11:case"end":return e.stop()}},e)}))).apply(this,arguments)}t&&t({percent:0,transferredBytes:0,totalBytes:r},new Uint8Array),s()}}))}}]),e;var t,l}(),w=function(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];for(var n=0,o=t;n<o.length;n++){var i=o[n];if((!l(i)||Array.isArray(i))&&void 0!==i)throw new TypeError("The `options` argument must be an object")}return d.apply(void 0,[{}].concat(t))},O=function e(t){for(var r=function(e,r){return new S(e,w(t,r))},n=function(){var e=i[o];r[e]=function(r,n){return new S(r,w(t,n,{method:e}))}},o=0,i=g;o<i.length;o++)n();return r.create=function(t){return e(w(t))},r.extend=function(r){return e(w(t,r))},r}();e.HTTPError=m,e.TimeoutError=v,e.default=O,Object.defineProperty(e,"__esModule",{value:!0})}(t)}),ky=unwrapExports(umd),hasProp=Object.prototype.hasOwnProperty;function throwsMessage(e){return"[Throws: "+(e?e.message:"?")+"]"}function safeGetValueFromPropertyOnObject(e,t){if(hasProp.call(e,t))try{return e[t]}catch(e){return throwsMessage(e)}return e[t]}function ensureProperties(e){var t=[];return function e(r){if(null===r||"object"!==_typeof(r))return r;if(-1!==t.indexOf(r))return"[Circular]";if(t.push(r),"function"==typeof r.toJSON)try{var n=e(r.toJSON());return t.pop(),n}catch(e){return throwsMessage(e)}if(Array.isArray(r)){var o=r.map(e);return t.pop(),o}var i=Object.keys(r).reduce(function(t,n){return t[n]=e(safeGetValueFromPropertyOnObject(r,n)),t},{});return t.pop(),i}(e)}var safeJsonStringify=function(e,t,r){return JSON.stringify(ensureProperties(e),t,r)},ensureProperties_1=ensureProperties;safeJsonStringify.ensureProperties=ensureProperties_1;var AP_CONCURRENT_REQ_NUM=2,APP_ID_LENGTH=32,AP_REQUEST_TIMEOUT=1e4,SOCKET_KEEPALIVE_TIMEOUT=4500,KEEPALIVE_INTERVAL=1e3,SOCKET_RETRY_INTERVAL=1500,CLIENT_LOGIN_TIMEOUT=8e3,LOGIN_RESP_TIMEOUT=5e3,MESSAGE_MIN_COMPRESSION_LEN=128,MESSAGE_SEND_TIMEOUT=1e4,COMMON_REQUEST_TIMEOUT=1e4,DIALOGUE_EXPIRE_TIMEOUT=1e4,LRU_MAX_ITEMS=1e4,MESSAGE_RETRY_TIMEOUT=6e3,LOGOUT_SOCKET_CLOSE_TIMEOUT=5e3,LOGIN_QPS_LIMIT=2,MESSAGE_TEXT_MAX_BYTES=32768,ONLINE_MESSAGE_DEDUP_DELAY=750,OFFLINE_MESSAGE_DEDUP_DELAY=1500,MSG_DEDUP_MAX_LEN=200,LOG_UPLOAD_MAX_ITEMS=40,MAX_JOINED_CHANNELS=20,INVITATION_EXPIRE_TIMEOUT=6e4,INVITATION_EXTRA_MAX_BYTES=8192,REMOTE_INVITATION_WAIT_ACCEPT_ACK_TIMEOUT=5e3,REMOTE_INVITATION_ACCEPT_RESEND_INTERVAL=1e3,LOCAL_INVITATION_ACK_TIMEOUT=3e4,LOCAL_INVITATION_RESEND_INTERVAL=2e3,MEMBER_COUNT_UPDATED_EVENT_INTERVAL=1e3,CHANNEL_ATTRIBUTES_CACHE_MAX_LENGTH=1e4;function asyncGeneratorStep$2(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$2(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$2(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$2(i,n,o,s,a,"throw",e)}s(void 0)})}}function _classCallCheck$2(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$1(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$1(e,t,r){return t&&_defineProperties$1(e.prototype,t),r&&_defineProperties$1(e,r),e}var uploadLog=browser("RTM:DEBUG"),UploadState;uploadLog.enabled=!isProd,function(e){e[e.Uploading=0]="Uploading",e[e.Free=1]="Free"}(UploadState||(UploadState={}));var LogUploader=function(){function e(t){_classCallCheck$2(this,e),this.uploadRequest=void 0,this.uploadState=void 0,this.uploadResendCount=void 0,this.LogCache=void 0,this.LogsToPost=void 0,this.processId=void 0,this.sdkVersion=void 0,this.logId=void 0,this.processId=t.processId,this.sdkVersion=t.sdkVersion,this.uploadRequest=t.uploadRequest,this.uploadState=UploadState.Free,this.uploadResendCount=0,this.LogCache=[],this.LogsToPost=[],this.logId=0}return _createClass$1(e,[{key:"upload",value:function(e){this.LogCache.push(e),this.uploadState===UploadState.Free&&(this.LogsToPost=this.LogCache.length<LOG_UPLOAD_MAX_ITEMS?this.LogCache.splice(0,this.LogCache.length):this.LogCache.splice(0,LOG_UPLOAD_MAX_ITEMS),this.postLog(this.LogsToPost))}},{key:"postLog",value:function(e){var t=this;this.uploadState=UploadState.Uploading,setTimeout(_asyncToGenerator$2(regenerator.mark(function r(){var n,o;return regenerator.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return n={sdk_version:t.sdkVersion,process_id:t.processId,payload:JSON.stringify(e)},r.prev=1,r.next=4,t.uploadRequest(n);case 4:r.next=12;break;case 6:return r.prev=6,r.t0=r.catch(1),console.error(r.t0),o=t.uploadResendCount++<2?200:1e4,setTimeout(function(){return t.postLog(t.LogsToPost)},o),r.abrupt("return");case 12:if(uploadLog('The logs uploaded for "process-'.concat(processId,'"')),0!==t.LogCache.length){r.next=16;break}return t.uploadState=UploadState.Free,r.abrupt("return");case 16:t.uploadResendCount=0,t.LogsToPost=t.LogCache.length<LOG_UPLOAD_MAX_ITEMS?t.LogCache.splice(0,t.LogCache.length):t.LogCache.splice(0,LOG_UPLOAD_MAX_ITEMS),t.postLog(t.LogsToPost);case 19:case"end":return r.stop()}},r,null,[[1,6]])})),3e3)}}]),e}();function _classCallCheck$3(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$2(e,t){return!t||"object"!==_typeof$2(t)&&"function"!=typeof t?_assertThisInitialized$2(e):t}function _getPrototypeOf$2(e){return(_getPrototypeOf$2=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _assertThisInitialized$2(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _inherits$2(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$2(e,t)}function _setPrototypeOf$2(e,t){return(_setPrototypeOf$2=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _toConsumableArray$2(e){return _arrayWithoutHoles$2(e)||_iterableToArray$2(e)||_nonIterableSpread$2()}function _nonIterableSpread$2(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$2(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$2(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _typeof$2(e){return(_typeof$2="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function asyncGeneratorStep$3(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$3(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$3(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$3(i,n,o,s,a,"throw",e)}s(void 0)})}}var LOG_SERVICE_MAIN_DOMAIN="logservice-rtm.agora.io",LOG_SERVICE_BACKUP_DOMAIN="logservice.agora.io",uploadRequest=function(){var e=_asyncToGenerator$3(regenerator.mark(function e(t){var r,n,o;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:e.next=2;break;case 2:return r={mode:"cors",cache:"no-cache",credentials:"include",headers:{"Content-Type":"application/json"},body:JSON.stringify(t),retry:1,timeout:1e4},e.prev=3,n="https://".concat(LOG_SERVICE_MAIN_DOMAIN,"/upload/v1"),e.next=7,ky.post(n,r);case 7:e.next=14;break;case 9:return e.prev=9,e.t0=e.catch(3),o="https://".concat(LOG_SERVICE_BACKUP_DOMAIN,"/upload/v1"),e.next=14,ky.post(o,r);case 14:case"end":return e.stop()}},e,null,[[3,9]])}));return function(t){return e.apply(this,arguments)}}(),logUploader=new LogUploader({processId:"process-".concat(processId),sdkVersion:"Agora_RTM_SDK_for_Web_".concat(BUILD),uploadRequest:uploadRequest}),blacklistedKeywords=["text","payload","rawMessage"],filterLogObject=function(e){return omit_1(e,blacklistedKeywords)},formatLogTextAndParameters=function(e,t){if(e instanceof Error)return e.message;if("string"!=typeof e)return JSON.stringify(filterLogObject(e));var r=t.map(function(e){if(e instanceof Error)return e.message;var t=function(e){return"object"===_typeof$2(e)?isPlainObject$1(e)?filterLogObject(e):e.constructor&&e.constructor.name:e};return"object"===_typeof$2(e)?safeJsonStringify(Array.isArray(e)?e.map(t):t(e)):e});return util_1.apply(void 0,[e.replace(/%[oO%]/g,function(e){return"%%"===e?"%":"%o"===e||"%O"===e?"%s":e})].concat(_toConsumableArray$2(r)))},logItemId=1,logAndUploadGenerator=function(e,t){var r=browser(e);r.useColors=!1;var n=function n(o){for(var i=arguments.length,s=new Array(i>1?i-1:0),a=1;a<i;a++)s[a-1]=arguments[a];var u,l=addPeriodIfNeeded(o);t.logFilter.track=!0,u=formatLogTextAndParameters(l,s),t.enableLogUpload&&logUploader.upload({log_item_id:"".concat(logItemId++),log_level:e,payload_str:"[".concat(getUTCTimestamp(),"] ").concat(e," - ").concat(void 0===u?formatLogTextAndParameters(o,s):u)}),merge_1(r,n);var c=function(){return void 0===u?r.apply(void 0,[l].concat(s)):r(u)};switch(e){case"RTM:INFO":t.logFilter.info&&c();break;case"RTM:WARN":t.logFilter.warn&&c();break;case"RTM:ERROR":t.logFilter.error&&c();break;case"RTM:TRACK":t.logFilter.track&&c();break;case"RTM:MSG:RECV":case"RTM:MSG:SEND":case"RTM:DEBUG":t.logFilter.debug&&c()}};return merge_1(n,r),n},loggerId,prefixer=function(e){return function(t){var r=1===loggerId||void 0===e?"":"Ins#".concat(e," ");return"".concat(r).concat(t)}},loggerGenerator=function(e,t,r){var n=prefixer(loggerId),o=logAndUploadGenerator("RTM:".concat(t),r);return o.enabled=!0,o.log=function(t){for(var r=arguments.length,o=new Array(r>1?r-1:0),i=1;i<r;i++)o[i-1]=arguments[i];return e.apply(void 0,[n(t)].concat(o))},o},createEventBase=function(){return function(e){function t(e,r){var n,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(_classCallCheck$3(this,t),(n=_possibleConstructorReturn$2(this,_getPrototypeOf$2(t).call(this))).logger=e,n.name=r,n.logError=void 0,n.genTracker=void 0,n.info=void 0,n.warn=void 0,n.log=void 0,n.genLogger=void 0,n.loggerId=void 0,n.loggerId=e.loggerId,n.info=e.info,n.warn=e.warn,n.logError=e.logError,n.genLogger=e.genLogger,n.genTracker=e.genTracker,n.log=e.genLogger("RTM:DEBUG","<".concat(r,"> ")),o){var i=n.emit.bind(_assertThisInitialized$2(n));n.emit=function(){for(var e=arguments.length,t=new Array(e),o=0;o<e;o++)t[o]=arguments[o];var s=t[0],a=t.slice(1);n.genTracker("Event").apply(void 0,["%s: ".concat(a.length>0?"%s emitted with args: ".concat(a.map(function(){return"%o"})):"%s emitted"),r,s].concat(_toConsumableArray$2(a)));try{i.apply(void 0,t)}catch(e){n.logError("Caught in the callback function of the event %s",s,e)}}}return n}return _inherits$2(t,events),t}()};function initLoggerId(){return loggerId=gud()}var genInfoLogger=function(e){return loggerGenerator(console.log,"INFO",e)},genWarnLogger=function(e){return loggerGenerator(console.warn,"WARN",e)},genErrorLogger=function(e){return loggerGenerator(console.error,"ERROR",e)},debugLoggerGenerator=function(e,t){return function(r){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",o=logAndUploadGenerator(r,t),i=prefixer(e),s=console.debug;return o.log=function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),n=1;n<t;n++)r[n-1]=arguments[n];return s.apply(void 0,[i(e)].concat(r))},o.enabled=!0,function(e){for(var t=arguments.length,r=new Array(t>1?t-1:0),i=1;i<t;i++)r[i-1]=arguments[i];return o.apply(void 0,[n+e].concat(r))}}},trackLoggerGenerator=function(e,t){return function(r){return debugLoggerGenerator(e,t)("RTM:TRACK","[".concat(r,"] "))}};function logged(e,t,r){var n=r;void 0===n&&(n=Object.getOwnPropertyDescriptor(e,t));var o=n.value;return n.value=function(){for(var e=this,r=arguments.length,n=new Array(r),i=0;i<r;i++)n[i]=arguments[i];this.genTracker("Invoke").apply(void 0,["%s: ".concat(n.length>0?"%s with args: ".concat(n.map(function(){return"%o"})):"%s"),this.name,t].concat(n));var s=o.apply(this,n),a=Date.now();return _asyncToGenerator$3(regenerator.mark(function r(){var n;return regenerator.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.prev=0,r.next=3,s;case 3:n=r.sent,r.next=10;break;case 6:return r.prev=6,r.t0=r.catch(0),e.logError(r.t0),r.abrupt("return");case 10:n!==s&&e.genTracker("Resolve")("%s resolves after %dms",t,Date.now()-a),void 0!==n&&e.genTracker("Result")("%s result is %o",t,n);case 12:case"end":return r.stop()}},r,null,[[0,6]])}))(),s},n}function _objectWithoutProperties$1(e,t){if(null==e)return{};var r,n,o=_objectWithoutPropertiesLoose$1(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function _objectWithoutPropertiesLoose$1(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}var URI=$root.URI,Wrapper$2=Wrapper$1,PacketsAndURI=_objectWithoutProperties$1(ProtoPackets,["Wrapper"]),Packets=omit_1(PacketsAndURI,"URI"),nameToUri=function(e){var t="".concat(e,"Uri"),r=URI[t];if("number"!=typeof r||0===r)throw new TypeError("Got Unknown URI Name");return r};function uriToPacketName(e){return URI[e].slice(0,-3)}function getWrappedByName(e,t){var r=nameToUri(e),n=Packets[e],o=n.verify(t);if(null!==o)throw new TypeError(o);var i=new n(t),s=n.encode(i).finish();return new Wrapper$2({uri:r,data:s})}var nativeFloor=Math.floor,nativeRandom=Math.random;function baseRandom(e,t){return e+nativeFloor(nativeRandom()*(t-e+1))}var _baseRandom=baseRandom;function shuffleSelf(e,t){var r=-1,n=e.length,o=n-1;for(t=void 0===t?n:t;++r<t;){var i=_baseRandom(r,o),s=e[i];e[i]=e[r],e[r]=s}return e.length=t,e}var _shuffleSelf=shuffleSelf;function arrayShuffle(e){return _shuffleSelf(_copyArray(e))}var _arrayShuffle=arrayShuffle;function baseValues(e,t){return _arrayMap(t,function(t){return e[t]})}var _baseValues=baseValues;function values(e){return null==e?[]:_baseValues(e,keys_1(e))}var values_1=values;function baseShuffle(e){return _shuffleSelf(values_1(e))}var _baseShuffle=baseShuffle;function shuffle(e){return(isArray_1(e)?_arrayShuffle:_baseShuffle)(e)}var shuffle_1=shuffle;function _toConsumableArray$3(e){return _arrayWithoutHoles$3(e)||_iterableToArray$3(e)||_nonIterableSpread$3()}function _nonIterableSpread$3(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$3(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$3(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}var AP_DOMAINS_CN=["ap-web-1.agoraio.cn","ap-web-2.agoraio.cn","ap-web-3.agoraio.cn","ap-web-4.agoraio.cn"],AP_DOMAINS_IO=["ap-web-1.agora.io","ap-web-2.agora.io","ap-web-3.agora.io","ap-web-4.agora.io"],EDGE_ENV_PORT={0:9591,1:9593},getUrl=function(e){return"https://".concat(e,"/api/v1")};function getEdgeDomain(e,t){var r=t?"agoraio.cn":"agora.io";return"".concat(e.split(".").join("-"),".edge.").concat(r)}var cnUrl$=of.apply(void 0,_toConsumableArray$3(shuffle_1(AP_DOMAINS_CN.map(getUrl)))),ioUrl$=of.apply(void 0,_toConsumableArray$3(shuffle_1(AP_DOMAINS_IO.map(getUrl))));function isValidAppId(e){return/^[a-zA-Z0-9]{32}$/.test(e)}function isValidId(e){return"string"==typeof e&&/^[a-zA-Z0-9!#$%&()+\-:;<=.>?@[\]^_{}|~,\s]{1,64}$/.test(e)&&"null"!==e}function isValidIp(e){var t;try{t=e.split(".").map(function(e){return Number(e)})}catch(e){return!1}if(4!==t.length)return!1;if(0===t[0])return!1;var r=t,n=Array.isArray(r),o=0;for(r=n?r:r[Symbol.iterator]();;){var i;if(n){if(o>=r.length)break;i=r[o++]}else{if((o=r.next()).done)break;i=o.value}var s=i;if(!Number.isInteger(s))return!1;if(s<0||s>255)return!1}return!0}function checkValidAttrGetByKeysArgs(e,t){if(!Array.isArray(t)||0===t.length||t.length>32||t.some(function(e){return 0===e.length||e.length>32}))throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);if(!isValidId(e))throw new RtmInvalidArgumentError("ID is invalid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT)}function _typeof$3(e){return(_typeof$3="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _slicedToArray$1(e,t){return _arrayWithHoles$1(e)||_iterableToArrayLimit$1(e,t)||_nonIterableRest$1()}function _nonIterableRest$1(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit$1(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return r}function _arrayWithHoles$1(e){if(Array.isArray(e))return e}function _classCallCheck$4(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$3(e,t){return!t||"object"!==_typeof$3(t)&&"function"!=typeof t?_assertThisInitialized$3(e):t}function _assertThisInitialized$3(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$3(e){return(_getPrototypeOf$3=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _defineProperties$2(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$2(e,t,r){return t&&_defineProperties$2(e.prototype,t),r&&_defineProperties$2(e,r),e}function _inherits$3(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$3(e,t)}function _setPrototypeOf$3(e,t){return(_setPrototypeOf$3=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var SocketError=genError(),Socket=function(e){function t(e,r,n,o,i){var s;if(_classCallCheck$4(this,t),(s=_possibleConstructorReturn$3(this,_getPrototypeOf$3(t).call(this,i,uniquePrefixedId("Socket-",i.loggerId)))).ip=e,s.env=r,s.ticket=n,s.context=o,s.isSpoiled=!1,s.notLoggedIn=!0,s.receivedPacket=new Subject,s.open$=void 0,s.input$=new Subject,s.userJoin$=new Subject,s.attemptsSinceLastError=0,s.message$=new Subject,s.socket$=void 0,s.toClose=new Subject,s.toReconnect=new Subject,s.socketReconnector=function(e){var t=function(e){return s.attemptsSinceLastError+=1,s.warn("The %s of Env %d reconnecting %s",s.name,s.env,e.message),timer((s.attemptsSinceLastError-1)*SOCKET_RETRY_INTERVAL)};return e.pipe(catchError(function(e){return s.isSpoiled?EMPTY:(s.notLoggedIn=!0,s.emit("reconnect"),throwError(e))}),retryWhen(function(e){return e.pipe(switchMap(t))}),tap(function(){s.attemptsSinceLastError=0}))},0!==r&&1!==r)throw new SocketError({ILLEGAL_RTM_ENV:"The env number is out of rtm env count"});if(!isValidIp(e))throw new SocketError({IP_NOT_VALID:"The ip from ap is not valid"});var a=EDGE_ENV_PORT[r],u=getEdgeDomain(e,"CN"===s.context.area),l="wss://".concat(u,":").concat(a);s.log("Opening websocket address %s for the Env %d",s.ip,s.env);var c=merge(s.input$,s.userJoin$.pipe(rateLimit(LOGIN_QPS_LIMIT)),s.message$).pipe(map$1(function(e){return Wrapper$1.encode(e).finish()}));return s.socket$=merge(makeWebSocketObservable(l,{protocols:[],makeWebSocket:function(e){var t=new WebSocket(e);return t.binaryType="arraybuffer",t}}),s.toReconnect).pipe(map$1(function(e){if(e instanceof Error)throw s.warn("Env_%d: Force reconnect the socket",s.env),e;return e(c).pipe(map$1(function(e){return Wrapper$1.decode(new Uint8Array(e))}))}),s.socketReconnector),s.open$=s.socket$.pipe(tap(function(e){s.log("Websocket opened",s.name),e.subscribe(function(e){var t=e.data,r=uriToPacketName(e.uri),n=Packets[r].decode(t),o=mergeWith_1({},omit_1(n,"toJSON"),function(e,t){return t instanceof long_1?longToStringIfNeeded(t):t}),i=!1;(n instanceof GroupEnterNotice||n instanceof GroupLeaveNotice)&&(n.instance.lessThanOrEqual(UINT32_MAX)&&(i=!0));if(n instanceof Message||n instanceof Ack){var a=n.instance,u=n.dialogue,l=n.sequence;(u.lessThanOrEqual(UINT32_MAX)||a.lessThanOrEqual(UINT32_MAX)||l.lessThan(1))&&(i=!0)}i?s.warn("Env_%d: Illegal %s, abandoned %o",s.env,r,o):("Pong"!==r&&s.genLogger("RTM:MSG:RECV")("Env_%d: %s %o",s.env,r,o),s.receivedPacket.next([r,n]))},function(){})}),mapTo(void 0),takeUntil(s.toClose),share()),s}return _inherits$3(t,createEventBase()),_createClass$2(t,[{key:"address",get:function(){return"".concat(this.ip,":").concat(EDGE_ENV_PORT[this.env])}}]),_createClass$2(t,[{key:"sendPacket",value:function(e,t){if("Ping"!==e){var r=mapValues_1(t,function(e){return e instanceof long_1?longToStringIfNeeded(e):e});this.genLogger("RTM:MSG:SEND")("Env_%d: %s %o",this.env,e,r)}var n=getWrappedByName(e,t);"UserJoin"===e?this.userJoin$.next(n):"Message"===e?this.message$.next(n):this.input$.next(n)}},{key:"close",value:function(){this.isSpoiled=!0,this.toClose.next()}},{key:"fromReceived",value:function(e){var t=this;return this.receivedPacket.pipe(tap(function(e){var r=_slicedToArray$1(e,2),n=r[0],o=r[1];"UserResp"===n&&(t.notLoggedIn=!1),"UserDrop"===n&&t.emit("socketUserDrop",o)}),filter(function(t){return _slicedToArray$1(t,1)[0]===e}),map$1(function(e){return _slicedToArray$1(e,2)[1]}))}},{key:"forceReconnect",value:function(){this.toReconnect.next(new SocketError({FORCE_RECONNECTING:"Connection seems broken, try force reconnecting"}))}}]),t}();function _typeof$4(e){return(_typeof$4="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function asyncGeneratorStep$4(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$4(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$4(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$4(i,n,o,s,a,"throw",e)}s(void 0)})}}function _toConsumableArray$4(e){return _arrayWithoutHoles$4(e)||_iterableToArray$4(e)||_nonIterableSpread$4()}function _nonIterableSpread$4(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$4(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$4(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _classCallCheck$5(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$4(e,t){return!t||"object"!==_typeof$4(t)&&"function"!=typeof t?_assertThisInitialized$4(e):t}function _assertThisInitialized$4(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$4(e){return(_getPrototypeOf$4=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$4(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$4(e,t)}function _setPrototypeOf$4(e,t){return(_setPrototypeOf$4=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var ApResErrorMessage={INVALID_APP_ID:"Illegal App ID",NO_AUTHORIZED:"Signature verification failed",TOKEN_TIMEOUT:"Dynamic key expired",INVALID_TOKEN_UID:"UID in the security key(token) is not valid",APP_ID_NO_ACTIVATED:"The vendor is not activated",DYNAMIC_KEY_NOT_ENABLED:"The vendor did not enable the dynamic key, but uses the dynamic key",DYNAMIC_ENABLED_BUT_STATIC_KEY:"The vendor enabled the dynamic key, but uses the static key",TOKEN_EXPIRED:"The token has expired",INVALID_USER_ID:"The user ID to login does not match the token"},ApResErrorCode={5:"INVALID_APP_ID",7:"INVALID_USER_ID",9:"NO_AUTHORIZED",10:"TOKEN_TIMEOUT",11:"APP_ID_NO_ACTIVATED",12:"INVALID_TOKEN_UID",13:"TOKEN_EXPIRED",14:"DYNAMIC_KEY_NOT_ENABLED",15:"DYNAMIC_ENABLED_BUT_STATIC_KEY"},AccessPoint=function(e){function t(e,r){var n;return _classCallCheck$5(this,t),(n=_possibleConstructorReturn$4(this,_getPrototypeOf$4(t).call(this,r,"AccessPoint"))).context=e,n.apEdgeInfo$=void 0,n.apFinish$=new Subject,n.usedUrl=[],n.url$=zip(cnUrl$,ioUrl$).pipe(concatMap(function(e){return of.apply(void 0,_toConsumableArray$4(e))}),filter(function(e){return!some_1(n.usedUrl,function(t){return e[15]===t})}),tap(function(e){n.usedUrl.push(e[15])}),take(AP_CONCURRENT_REQ_NUM),throwIfEmpty(function(){return t.runOutOfUrlSymbol}),catchError(function(e,r){return e===t.runOutOfUrlSymbol?(n.usedUrl=[],r):throwError(e)})),n.fetchAp=function(e,t){var r=uniquePrefixedId("AP-",n.loggerId);n.log("The AccessPoint requests %s(%s)",e,r);var o=new AbortController;return n.apFinish$.pipe(first()).subscribe(function(){return o.abort()}),defer$1(_asyncToGenerator$4(regenerator.mark(function r(){var i;return regenerator.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return i=getRandomInt(0,Number.MAX_SAFE_INTEGER),n.log("The AP-%d request uid param is %d",n.loggerId,i),r.abrupt("return",post({url:e,headers:{"Content-Type":"application/json","X-Packet-Service-Type":"0","X-Packet-URI":"69"},body:{flag:128,opid:1,key:t||n.context.key,cname:n.context.uid,detail:{},uid:i,sid:n.context.sid},signal:o.signal}));case 3:case"end":return r.stop()}},r)}))).pipe(catchError(function(t){return"AbortError"!==t.name&&(n.logError(t),n.warn("The AP server %s request failure",e)),EMPTY}),mergeMap(function(){var e=_asyncToGenerator$4(regenerator.mark(function e(t){var o,i,s,a,u,l,c,p,f,d,g,h,b,_,y,m,v;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(o=JSON.parse(t),n.log("The %s response is %o",r,o),s=(i=o).code,a=i.addresses,u=i.detail[9],0===s){e.next=30;break}if(l=s,s.toString().length>4&&(c=s.toString().padStart(8,"0"),p=c.slice(0,4),201===Number.parseInt(p,10)&&(l=Number.parseInt(c.slice(4,8),10))),f=l.toString(),Object.keys(ApResErrorCode).includes(f)){e.next=12;break}return(d=new RtmUnavailableError(["Login is rejected by the server. The response code is %d",s],LOGIN_ERR_REJECTED)).serverCode=l,e.abrupt("return",throwError(d));case 12:g=ApResErrorCode[f],h=ApResErrorMessage[g],e.t0=g,e.next="INVALID_APP_ID"===e.t0?17:"APP_ID_NO_ACTIVATED"===e.t0?17:"INVALID_USER_ID"===e.t0?20:"TOKEN_EXPIRED"===e.t0?23:"TOKEN_TIMEOUT"===e.t0?23:"NO_AUTHORIZED"===e.t0?26:"INVALID_TOKEN_UID"===e.t0?26:"DYNAMIC_KEY_NOT_ENABLED"===e.t0?26:"DYNAMIC_ENABLED_BUT_STATIC_KEY"===e.t0?26:29;break;case 17:return(b=new RtmUnauthenticatedError(h,LOGIN_ERR_INVALID_APP_ID)).serverCode=s,e.abrupt("return",throwError(b));case 20:return(_=new RtmUnauthenticatedError(h,LOGIN_ERR_INVALID_ARGUMENT)).serverCode=s,e.abrupt("return",throwError(_));case 23:return(y=new RtmUnauthenticatedError(h,LOGIN_ERR_TOKEN_EXPIRED)).serverCode=s,e.abrupt("return",throwError(y));case 26:return(m=new RtmUnauthenticatedError(h,LOGIN_ERR_INVALID_TOKEN)).serverCode=s,e.abrupt("return",throwError(m));case 29:return e.abrupt("return",throwError(assertNever("ApResErrType",g)));case 30:return v=a,void 0,n.context.area=u,e.abrupt("return",of.apply(void 0,_toConsumableArray$4(v).concat([queue$1])));case 35:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}()),mergeAll())},n.apEdgeInfo$=timer(0,2e3).pipe(take(6),takeUntil(n.apFinish$),mergeMap(function(){return n.url$}),mergeMap(function(e){return n.fetchAp(e)}),timeout(AP_REQUEST_TIMEOUT),catchError(function(e){return e instanceof TimeoutError&&n.warn("AP request timeout"),throwError(e)}),distinct(function(e){return e.ip})),n}return _inherits$4(t,createEventBase()),t}();function _typeof$5(e){return(_typeof$5="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray$5(e){return _arrayWithoutHoles$5(e)||_iterableToArray$5(e)||_nonIterableSpread$5()}function _nonIterableSpread$5(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$5(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$5(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function _classCallCheck$6(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$3(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$3(e,t,r){return t&&_defineProperties$3(e.prototype,t),r&&_defineProperties$3(e,r),e}function _possibleConstructorReturn$5(e,t){return!t||"object"!==_typeof$5(t)&&"function"!=typeof t?_assertThisInitialized$5(e):t}function _assertThisInitialized$5(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$5(e){return(_getPrototypeOf$5=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$5(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$5(e,t)}function _setPrototypeOf$5(e,t){return(_setPrototypeOf$5=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}AccessPoint.runOutOfUrlSymbol=Symbol("AP urls are used up");var ConnectionError=genError(),Connection=function(e){function t(e,r){var n;_classCallCheck$6(this,t),(n=_possibleConstructorReturn$5(this,_getPrototypeOf$5(t).call(this,r,"Connection"))).context=e,n.apClient=new AccessPoint(n.context,n.logger),n.lastOpenSockets=[new ReplaySubject(1),new ReplaySubject(1)],n.curOpenSockets=[void 0,void 0],n.socketOpeners=[void 0,void 0],n.openKeeperSubjects=[new Subject,new Subject],n.openKeeperSubs=[void 0,void 0],n.edgeInfoPool=[];var o=n.apClient.apEdgeInfo$.pipe(throwIfEmpty(function(){return new ConnectionError({AP_NO_AVAILABLE_EDGE:"No available edge address to connect"})}),filter(function(e){return!some_1(n.edgeInfoPool,e)}),tap(function(e){n.edgeInfoPool.push(e),n.log("An edge info got %o",e)}),tap({error:function(e){n.emit("connectionInitFailure",e)}}),shareReplay()),i="",s=Math.random()>=.5?1:0,a=1===s?0:1,u=o.pipe(mergeMap(function(e){var t=e.ip,o=e.ticket,i=new Socket(t,s,o,n.context,r);return n.apClient.apFinish$.next(void 0),i.open$.pipe(mapTo(i))}),tap(function(e){n.log("The websocket of ENV_%d opened to %s:%d",e.env,e.ip,EDGE_ENV_PORT[e.env]),n.curOpenSockets[s]=e,n.lastOpenSockets[s].next(e),i=e.ip}),first(),share()),l=o.pipe(reduce(function(e,t){return[].concat(_toConsumableArray$5(e),[t])},[]),map$1(function(e){return sortBy_1(e,function(e){var t=e.ip;return calIpDistance(i,t)}).slice(-1)[0]}),first(),mergeMap(function(e){var t=e.ip,o=e.ticket,i=new Socket(t,a,o,n.context,r);return i.open$.pipe(tap(function(){n.lastOpenSockets[a].next(i),n.curOpenSockets[a]=i}))}),share());return n.socketOpeners[s]=u.pipe(mergeMap(function(e){return e.open$.pipe(tap(function(){n.log("The websocket of first ENV_%d re-opened to %s:%d",e.env,e.ip,EDGE_ENV_PORT[e.env]),n.curOpenSockets[s]=e,n.lastOpenSockets[s].next(e)}))})),n.socketOpeners[a]=concat(u.pipe(skipLast(1),mapTo(void 0)),l),n.openKeeperSubjects.forEach(function(e,t){var r=e.pipe(switchAll());n.openKeeperSubs[t]=r.subscribe({error:n.logError})}),n}return _inherits$5(t,createEventBase()),_createClass$3(t,[{key:"initConnection",value:function(){var e=this;this.openKeeperSubjects.forEach(function(t,r){t.next(e.socketOpeners[r])})}},{key:"closeSocket",value:function(e,t){if(![0,1].includes(e))throw new CommonError({INVALID_ENV:"The env argument is not 0 or 1"});var r=this.openKeeperSubs[e],n=this.curOpenSockets[e];this.openKeeperSubs[e]=void 0,this.curOpenSockets[e]=void 0,n&&(n.isSpoiled=!0,setTimeout(function(){n.close()},t)),r&&setTimeout(function(){r.unsubscribe()},t)}},{key:"waitClosing",value:function(e){var t=this;return e.isSpoiled=!0,e.open$.pipe(ignoreElements(),catchError(function(e){return e.message===lib_es5_1?EMPTY:throwError(e)}),timeout(LOGOUT_SOCKET_CLOSE_TIMEOUT),catchError(function(r){return r instanceof TimeoutError?(t.warn("Force closing the ENV_%d conneciton",e.env),EMPTY):throwError(r)}))}}]),t}(),$Reader$1=indexMinimal_4,$Writer$1=indexMinimal_2,$util$1=indexMinimal_6,$root$1=indexMinimal_8.default||(indexMinimal_8.default={}),Session=$root$1.Session=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.appId="",e.prototype.ver="",e.prototype.installId="",e.prototype.os=0,e.prototype.did="",e.prototype.index=null,e.prototype.token="",e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.appId&&e.hasOwnProperty("appId")&&t.uint32(42).string(e.appId),null!=e.ver&&e.hasOwnProperty("ver")&&t.uint32(50).string(e.ver),null!=e.installId&&e.hasOwnProperty("installId")&&t.uint32(66).string(e.installId),null!=e.os&&e.hasOwnProperty("os")&&t.uint32(128).int32(e.os),null!=e.did&&e.hasOwnProperty("did")&&t.uint32(138).string(e.did),null!=e.index&&e.hasOwnProperty("index")&&$root$1.Session.CommonIndex.encode(e.index,t.uint32(162).fork()).ldelim(),null!=e.token&&e.hasOwnProperty("token")&&t.uint32(170).string(e.token),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.Session;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.appId=e.string();break;case 6:n.ver=e.string();break;case 8:n.installId=e.string();break;case 16:n.os=e.int32();break;case 17:n.did=e.string();break;case 20:n.index=$root$1.Session.CommonIndex.decode(e,e.uint32());break;case 21:n.token=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid))return"sid: string expected";if(null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId))return"userId: string expected";if(null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high)))return"lts: integer|Long expected";if(null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high)))return"elapse: integer|Long expected";if(null!=e.appId&&e.hasOwnProperty("appId")&&!$util$1.isString(e.appId))return"appId: string expected";if(null!=e.ver&&e.hasOwnProperty("ver")&&!$util$1.isString(e.ver))return"ver: string expected";if(null!=e.installId&&e.hasOwnProperty("installId")&&!$util$1.isString(e.installId))return"installId: string expected";if(null!=e.os&&e.hasOwnProperty("os")&&!$util$1.isInteger(e.os))return"os: integer expected";if(null!=e.did&&e.hasOwnProperty("did")&&!$util$1.isString(e.did))return"did: string expected";if(null!=e.index&&e.hasOwnProperty("index")){var t=$root$1.Session.CommonIndex.verify(e.index);if(t)return"index."+t}return null!=e.token&&e.hasOwnProperty("token")&&!$util$1.isString(e.token)?"token: string expected":null},e.fromObject=function(e){if(e instanceof $root$1.Session)return e;var t=new $root$1.Session;if(null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.appId&&(t.appId=String(e.appId)),null!=e.ver&&(t.ver=String(e.ver)),null!=e.installId&&(t.installId=String(e.installId)),null!=e.os&&(t.os=0|e.os),null!=e.did&&(t.did=String(e.did)),null!=e.index){if("object"!==_typeof(e.index))throw TypeError(".Session.index: object expected");t.index=$root$1.Session.CommonIndex.fromObject(e.index)}return null!=e.token&&(t.token=String(e.token)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.appId="",r.ver="",r.installId="",r.os=0,r.did="",r.index=null,r.token=""}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.appId&&e.hasOwnProperty("appId")&&(r.appId=e.appId),null!=e.ver&&e.hasOwnProperty("ver")&&(r.ver=e.ver),null!=e.installId&&e.hasOwnProperty("installId")&&(r.installId=e.installId),null!=e.os&&e.hasOwnProperty("os")&&(r.os=e.os),null!=e.did&&e.hasOwnProperty("did")&&(r.did=e.did),null!=e.index&&e.hasOwnProperty("index")&&(r.index=$root$1.Session.CommonIndex.toObject(e.index,t)),null!=e.token&&e.hasOwnProperty("token")&&(r.token=e.token),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.CommonIndex=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.index1="",e.prototype.index2="",e.prototype.index3="",e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.index1&&e.hasOwnProperty("index1")&&t.uint32(10).string(e.index1),null!=e.index2&&e.hasOwnProperty("index2")&&t.uint32(18).string(e.index2),null!=e.index3&&e.hasOwnProperty("index3")&&t.uint32(26).string(e.index3),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.Session.CommonIndex;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.index1=e.string();break;case 2:n.index2=e.string();break;case 3:n.index3=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.index1&&e.hasOwnProperty("index1")&&!$util$1.isString(e.index1)?"index1: string expected":null!=e.index2&&e.hasOwnProperty("index2")&&!$util$1.isString(e.index2)?"index2: string expected":null!=e.index3&&e.hasOwnProperty("index3")&&!$util$1.isString(e.index3)?"index3: string expected":null},e.fromObject=function(e){if(e instanceof $root$1.Session.CommonIndex)return e;var t=new $root$1.Session.CommonIndex;return null!=e.index1&&(t.index1=String(e.index1)),null!=e.index2&&(t.index2=String(e.index2)),null!=e.index3&&(t.index3=String(e.index3)),t},e.toObject=function(e,t){t||(t={});var r={};return t.defaults&&(r.index1="",r.index2="",r.index3=""),null!=e.index1&&e.hasOwnProperty("index1")&&(r.index1=e.index1),null!=e.index2&&e.hasOwnProperty("index2")&&(r.index2=e.index2),null!=e.index3&&e.hasOwnProperty("index3")&&(r.index3=e.index3),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),ApEvent=$root$1.ApEvent=function(){function e(e){if(this.linkServerList=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.apAddr="",e.prototype.linkServerList=$util$1.emptyArray,e.prototype.errCode=0,e.prototype.serverErrCode=0,e.prototype.isp="",e.prototype.opId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.envId=0,e.prototype.flag=0,e.prototype.area="",e.prototype.responseTime=0,e.prototype.apLinkType="",e.encode=function(e,t){if(t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.apAddr&&e.hasOwnProperty("apAddr")&&t.uint32(50).string(e.apAddr),null!=e.linkServerList&&e.linkServerList.length)for(var r=0;r<e.linkServerList.length;++r)t.uint32(58).string(e.linkServerList[r]);return null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(72).int32(e.errCode),null!=e.serverErrCode&&e.hasOwnProperty("serverErrCode")&&t.uint32(80).int32(e.serverErrCode),null!=e.isp&&e.hasOwnProperty("isp")&&t.uint32(90).string(e.isp),null!=e.opId&&e.hasOwnProperty("opId")&&t.uint32(96).int64(e.opId),null!=e.envId&&e.hasOwnProperty("envId")&&t.uint32(104).int32(e.envId),null!=e.flag&&e.hasOwnProperty("flag")&&t.uint32(112).int32(e.flag),null!=e.area&&e.hasOwnProperty("area")&&t.uint32(122).string(e.area),null!=e.responseTime&&e.hasOwnProperty("responseTime")&&t.uint32(128).int32(e.responseTime),null!=e.apLinkType&&e.hasOwnProperty("apLinkType")&&t.uint32(138).string(e.apLinkType),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ApEvent;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.apAddr=e.string();break;case 7:n.linkServerList&&n.linkServerList.length||(n.linkServerList=[]),n.linkServerList.push(e.string());break;case 9:n.errCode=e.int32();break;case 10:n.serverErrCode=e.int32();break;case 11:n.isp=e.string();break;case 12:n.opId=e.int64();break;case 13:n.envId=e.int32();break;case 14:n.flag=e.int32();break;case 15:n.area=e.string();break;case 16:n.responseTime=e.int32();break;case 17:n.apLinkType=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid))return"sid: string expected";if(null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId))return"userId: string expected";if(null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high)))return"lts: integer|Long expected";if(null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high)))return"elapse: integer|Long expected";if(null!=e.apAddr&&e.hasOwnProperty("apAddr")&&!$util$1.isString(e.apAddr))return"apAddr: string expected";if(null!=e.linkServerList&&e.hasOwnProperty("linkServerList")){if(!Array.isArray(e.linkServerList))return"linkServerList: array expected";for(var t=0;t<e.linkServerList.length;++t)if(!$util$1.isString(e.linkServerList[t]))return"linkServerList: string[] expected"}return null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null!=e.serverErrCode&&e.hasOwnProperty("serverErrCode")&&!$util$1.isInteger(e.serverErrCode)?"serverErrCode: integer expected":null!=e.isp&&e.hasOwnProperty("isp")&&!$util$1.isString(e.isp)?"isp: string expected":null!=e.opId&&e.hasOwnProperty("opId")&&!($util$1.isInteger(e.opId)||e.opId&&$util$1.isInteger(e.opId.low)&&$util$1.isInteger(e.opId.high))?"opId: integer|Long expected":null!=e.envId&&e.hasOwnProperty("envId")&&!$util$1.isInteger(e.envId)?"envId: integer expected":null!=e.flag&&e.hasOwnProperty("flag")&&!$util$1.isInteger(e.flag)?"flag: integer expected":null!=e.area&&e.hasOwnProperty("area")&&!$util$1.isString(e.area)?"area: string expected":null!=e.responseTime&&e.hasOwnProperty("responseTime")&&!$util$1.isInteger(e.responseTime)?"responseTime: integer expected":null!=e.apLinkType&&e.hasOwnProperty("apLinkType")&&!$util$1.isString(e.apLinkType)?"apLinkType: string expected":null},e.fromObject=function(e){if(e instanceof $root$1.ApEvent)return e;var t=new $root$1.ApEvent;if(null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.apAddr&&(t.apAddr=String(e.apAddr)),e.linkServerList){if(!Array.isArray(e.linkServerList))throw TypeError(".ApEvent.linkServerList: array expected");t.linkServerList=[];for(var r=0;r<e.linkServerList.length;++r)t.linkServerList[r]=String(e.linkServerList[r])}return null!=e.errCode&&(t.errCode=0|e.errCode),null!=e.serverErrCode&&(t.serverErrCode=0|e.serverErrCode),null!=e.isp&&(t.isp=String(e.isp)),null!=e.opId&&($util$1.Long?(t.opId=$util$1.Long.fromValue(e.opId)).unsigned=!1:"string"==typeof e.opId?t.opId=parseInt(e.opId,10):"number"==typeof e.opId?t.opId=e.opId:"object"===_typeof(e.opId)&&(t.opId=new $util$1.LongBits(e.opId.low>>>0,e.opId.high>>>0).toNumber())),null!=e.envId&&(t.envId=0|e.envId),null!=e.flag&&(t.flag=0|e.flag),null!=e.area&&(t.area=String(e.area)),null!=e.responseTime&&(t.responseTime=0|e.responseTime),null!=e.apLinkType&&(t.apLinkType=String(e.apLinkType)),t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.linkServerList=[]),t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if(r.apAddr="",r.errCode=0,r.serverErrCode=0,r.isp="",$util$1.Long){var i=new $util$1.Long(0,0,!1);r.opId=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.opId=t.longs===String?"0":0;r.envId=0,r.flag=0,r.area="",r.responseTime=0,r.apLinkType=""}if(null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.apAddr&&e.hasOwnProperty("apAddr")&&(r.apAddr=e.apAddr),e.linkServerList&&e.linkServerList.length){r.linkServerList=[];for(var s=0;s<e.linkServerList.length;++s)r.linkServerList[s]=e.linkServerList[s]}return null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),null!=e.serverErrCode&&e.hasOwnProperty("serverErrCode")&&(r.serverErrCode=e.serverErrCode),null!=e.isp&&e.hasOwnProperty("isp")&&(r.isp=e.isp),null!=e.opId&&e.hasOwnProperty("opId")&&("number"==typeof e.opId?r.opId=t.longs===String?String(e.opId):e.opId:r.opId=t.longs===String?$util$1.Long.prototype.toString.call(e.opId):t.longs===Number?new $util$1.LongBits(e.opId.low>>>0,e.opId.high>>>0).toNumber():e.opId),null!=e.envId&&e.hasOwnProperty("envId")&&(r.envId=e.envId),null!=e.flag&&e.hasOwnProperty("flag")&&(r.flag=e.flag),null!=e.area&&e.hasOwnProperty("area")&&(r.area=e.area),null!=e.responseTime&&e.hasOwnProperty("responseTime")&&(r.responseTime=e.responseTime),null!=e.apLinkType&&e.hasOwnProperty("apLinkType")&&(r.apLinkType=e.apLinkType),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Link=$root$1.Link=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.ec=0,e.prototype.sc=0,e.prototype.destServerIp="",e.prototype.ackedServerIp="",e.prototype.responseTime=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.ec&&e.hasOwnProperty("ec")&&t.uint32(40).int32(e.ec),null!=e.sc&&e.hasOwnProperty("sc")&&t.uint32(48).int32(e.sc),null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&t.uint32(58).string(e.destServerIp),null!=e.ackedServerIp&&e.hasOwnProperty("ackedServerIp")&&t.uint32(66).string(e.ackedServerIp),null!=e.responseTime&&e.hasOwnProperty("responseTime")&&t.uint32(72).int32(e.responseTime),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.Link;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.ec=e.int32();break;case 6:n.sc=e.int32();break;case 7:n.destServerIp=e.string();break;case 8:n.ackedServerIp=e.string();break;case 9:n.responseTime=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.ec&&e.hasOwnProperty("ec")&&!$util$1.isInteger(e.ec)?"ec: integer expected":null!=e.sc&&e.hasOwnProperty("sc")&&!$util$1.isInteger(e.sc)?"sc: integer expected":null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&!$util$1.isString(e.destServerIp)?"destServerIp: string expected":null!=e.ackedServerIp&&e.hasOwnProperty("ackedServerIp")&&!$util$1.isString(e.ackedServerIp)?"ackedServerIp: string expected":null!=e.responseTime&&e.hasOwnProperty("responseTime")&&!$util$1.isInteger(e.responseTime)?"responseTime: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.Link)return e;var t=new $root$1.Link;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.ec&&(t.ec=0|e.ec),null!=e.sc&&(t.sc=0|e.sc),null!=e.destServerIp&&(t.destServerIp=String(e.destServerIp)),null!=e.ackedServerIp&&(t.ackedServerIp=String(e.ackedServerIp)),null!=e.responseTime&&(t.responseTime=0|e.responseTime),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.ec=0,r.sc=0,r.destServerIp="",r.ackedServerIp="",r.responseTime=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.ec&&e.hasOwnProperty("ec")&&(r.ec=e.ec),null!=e.sc&&e.hasOwnProperty("sc")&&(r.sc=e.sc),null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&(r.destServerIp=e.destServerIp),null!=e.ackedServerIp&&e.hasOwnProperty("ackedServerIp")&&(r.ackedServerIp=e.ackedServerIp),null!=e.responseTime&&e.hasOwnProperty("responseTime")&&(r.responseTime=e.responseTime),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Logout=$root$1.Logout=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.Logout;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root$1.Logout)return e;var t=new $root$1.Logout;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),TxMessage=$root$1.TxMessage=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.insId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.dialId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.seq=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.srcId="",e.prototype.dstId="",e.prototype.dstType=0,e.prototype.payload="",e.prototype.messageId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.isOfflineMessage=!1,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.insId&&e.hasOwnProperty("insId")&&t.uint32(48).int64(e.insId),null!=e.dialId&&e.hasOwnProperty("dialId")&&t.uint32(56).int64(e.dialId),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(64).int64(e.seq),null!=e.srcId&&e.hasOwnProperty("srcId")&&t.uint32(74).string(e.srcId),null!=e.dstId&&e.hasOwnProperty("dstId")&&t.uint32(82).string(e.dstId),null!=e.dstType&&e.hasOwnProperty("dstType")&&t.uint32(88).int32(e.dstType),null!=e.payload&&e.hasOwnProperty("payload")&&t.uint32(98).string(e.payload),null!=e.messageId&&e.hasOwnProperty("messageId")&&t.uint32(104).int64(e.messageId),null!=e.isOfflineMessage&&e.hasOwnProperty("isOfflineMessage")&&t.uint32(112).bool(e.isOfflineMessage),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.TxMessage;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.insId=e.int64();break;case 7:n.dialId=e.int64();break;case 8:n.seq=e.int64();break;case 9:n.srcId=e.string();break;case 10:n.dstId=e.string();break;case 11:n.dstType=e.int32();break;case 12:n.payload=e.string();break;case 13:n.messageId=e.int64();break;case 14:n.isOfflineMessage=e.bool();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.insId&&e.hasOwnProperty("insId")&&!($util$1.isInteger(e.insId)||e.insId&&$util$1.isInteger(e.insId.low)&&$util$1.isInteger(e.insId.high))?"insId: integer|Long expected":null!=e.dialId&&e.hasOwnProperty("dialId")&&!($util$1.isInteger(e.dialId)||e.dialId&&$util$1.isInteger(e.dialId.low)&&$util$1.isInteger(e.dialId.high))?"dialId: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util$1.isInteger(e.seq)||e.seq&&$util$1.isInteger(e.seq.low)&&$util$1.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.srcId&&e.hasOwnProperty("srcId")&&!$util$1.isString(e.srcId)?"srcId: string expected":null!=e.dstId&&e.hasOwnProperty("dstId")&&!$util$1.isString(e.dstId)?"dstId: string expected":null!=e.dstType&&e.hasOwnProperty("dstType")&&!$util$1.isInteger(e.dstType)?"dstType: integer expected":null!=e.payload&&e.hasOwnProperty("payload")&&!$util$1.isString(e.payload)?"payload: string expected":null!=e.messageId&&e.hasOwnProperty("messageId")&&!($util$1.isInteger(e.messageId)||e.messageId&&$util$1.isInteger(e.messageId.low)&&$util$1.isInteger(e.messageId.high))?"messageId: integer|Long expected":null!=e.isOfflineMessage&&e.hasOwnProperty("isOfflineMessage")&&"boolean"!=typeof e.isOfflineMessage?"isOfflineMessage: boolean expected":null},e.fromObject=function(e){if(e instanceof $root$1.TxMessage)return e;var t=new $root$1.TxMessage;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.insId&&($util$1.Long?(t.insId=$util$1.Long.fromValue(e.insId)).unsigned=!1:"string"==typeof e.insId?t.insId=parseInt(e.insId,10):"number"==typeof e.insId?t.insId=e.insId:"object"===_typeof(e.insId)&&(t.insId=new $util$1.LongBits(e.insId.low>>>0,e.insId.high>>>0).toNumber())),null!=e.dialId&&($util$1.Long?(t.dialId=$util$1.Long.fromValue(e.dialId)).unsigned=!1:"string"==typeof e.dialId?t.dialId=parseInt(e.dialId,10):"number"==typeof e.dialId?t.dialId=e.dialId:"object"===_typeof(e.dialId)&&(t.dialId=new $util$1.LongBits(e.dialId.low>>>0,e.dialId.high>>>0).toNumber())),null!=e.seq&&($util$1.Long?(t.seq=$util$1.Long.fromValue(e.seq)).unsigned=!1:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber())),null!=e.srcId&&(t.srcId=String(e.srcId)),null!=e.dstId&&(t.dstId=String(e.dstId)),null!=e.dstType&&(t.dstType=0|e.dstType),null!=e.payload&&(t.payload=String(e.payload)),null!=e.messageId&&($util$1.Long?(t.messageId=$util$1.Long.fromValue(e.messageId)).unsigned=!1:"string"==typeof e.messageId?t.messageId=parseInt(e.messageId,10):"number"==typeof e.messageId?t.messageId=e.messageId:"object"===_typeof(e.messageId)&&(t.messageId=new $util$1.LongBits(e.messageId.low>>>0,e.messageId.high>>>0).toNumber())),null!=e.isOfflineMessage&&(t.isOfflineMessage=Boolean(e.isOfflineMessage)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if($util$1.Long){var i=new $util$1.Long(0,0,!1);r.insId=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.insId=t.longs===String?"0":0;if($util$1.Long){var s=new $util$1.Long(0,0,!1);r.dialId=t.longs===String?s.toString():t.longs===Number?s.toNumber():s}else r.dialId=t.longs===String?"0":0;if($util$1.Long){var a=new $util$1.Long(0,0,!1);r.seq=t.longs===String?a.toString():t.longs===Number?a.toNumber():a}else r.seq=t.longs===String?"0":0;if(r.srcId="",r.dstId="",r.dstType=0,r.payload="",$util$1.Long){var u=new $util$1.Long(0,0,!1);r.messageId=t.longs===String?u.toString():t.longs===Number?u.toNumber():u}else r.messageId=t.longs===String?"0":0;r.isOfflineMessage=!1}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.insId&&e.hasOwnProperty("insId")&&("number"==typeof e.insId?r.insId=t.longs===String?String(e.insId):e.insId:r.insId=t.longs===String?$util$1.Long.prototype.toString.call(e.insId):t.longs===Number?new $util$1.LongBits(e.insId.low>>>0,e.insId.high>>>0).toNumber():e.insId),null!=e.dialId&&e.hasOwnProperty("dialId")&&("number"==typeof e.dialId?r.dialId=t.longs===String?String(e.dialId):e.dialId:r.dialId=t.longs===String?$util$1.Long.prototype.toString.call(e.dialId):t.longs===Number?new $util$1.LongBits(e.dialId.low>>>0,e.dialId.high>>>0).toNumber():e.dialId),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util$1.Long.prototype.toString.call(e.seq):t.longs===Number?new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber():e.seq),null!=e.srcId&&e.hasOwnProperty("srcId")&&(r.srcId=e.srcId),null!=e.dstId&&e.hasOwnProperty("dstId")&&(r.dstId=e.dstId),null!=e.dstType&&e.hasOwnProperty("dstType")&&(r.dstType=e.dstType),null!=e.payload&&e.hasOwnProperty("payload")&&(r.payload=e.payload),null!=e.messageId&&e.hasOwnProperty("messageId")&&("number"==typeof e.messageId?r.messageId=t.longs===String?String(e.messageId):e.messageId:r.messageId=t.longs===String?$util$1.Long.prototype.toString.call(e.messageId):t.longs===Number?new $util$1.LongBits(e.messageId.low>>>0,e.messageId.high>>>0).toNumber():e.messageId),null!=e.isOfflineMessage&&e.hasOwnProperty("isOfflineMessage")&&(r.isOfflineMessage=e.isOfflineMessage),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),RxMessage=$root$1.RxMessage=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.insId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.dialId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.seq=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.srcId="",e.prototype.dstId="",e.prototype.dstType=0,e.prototype.payload="",e.prototype.messageId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.serverReceivedTs=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.isOfflineMessage=!1,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.insId&&e.hasOwnProperty("insId")&&t.uint32(48).int64(e.insId),null!=e.dialId&&e.hasOwnProperty("dialId")&&t.uint32(56).int64(e.dialId),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(64).int64(e.seq),null!=e.srcId&&e.hasOwnProperty("srcId")&&t.uint32(74).string(e.srcId),null!=e.dstId&&e.hasOwnProperty("dstId")&&t.uint32(82).string(e.dstId),null!=e.dstType&&e.hasOwnProperty("dstType")&&t.uint32(88).int32(e.dstType),null!=e.payload&&e.hasOwnProperty("payload")&&t.uint32(98).string(e.payload),null!=e.messageId&&e.hasOwnProperty("messageId")&&t.uint32(104).int64(e.messageId),null!=e.serverReceivedTs&&e.hasOwnProperty("serverReceivedTs")&&t.uint32(112).int64(e.serverReceivedTs),null!=e.isOfflineMessage&&e.hasOwnProperty("isOfflineMessage")&&t.uint32(120).bool(e.isOfflineMessage),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.RxMessage;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.insId=e.int64();break;case 7:n.dialId=e.int64();break;case 8:n.seq=e.int64();break;case 9:n.srcId=e.string();break;case 10:n.dstId=e.string();break;case 11:n.dstType=e.int32();break;case 12:n.payload=e.string();break;case 13:n.messageId=e.int64();break;case 14:n.serverReceivedTs=e.int64();break;case 15:n.isOfflineMessage=e.bool();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.insId&&e.hasOwnProperty("insId")&&!($util$1.isInteger(e.insId)||e.insId&&$util$1.isInteger(e.insId.low)&&$util$1.isInteger(e.insId.high))?"insId: integer|Long expected":null!=e.dialId&&e.hasOwnProperty("dialId")&&!($util$1.isInteger(e.dialId)||e.dialId&&$util$1.isInteger(e.dialId.low)&&$util$1.isInteger(e.dialId.high))?"dialId: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util$1.isInteger(e.seq)||e.seq&&$util$1.isInteger(e.seq.low)&&$util$1.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.srcId&&e.hasOwnProperty("srcId")&&!$util$1.isString(e.srcId)?"srcId: string expected":null!=e.dstId&&e.hasOwnProperty("dstId")&&!$util$1.isString(e.dstId)?"dstId: string expected":null!=e.dstType&&e.hasOwnProperty("dstType")&&!$util$1.isInteger(e.dstType)?"dstType: integer expected":null!=e.payload&&e.hasOwnProperty("payload")&&!$util$1.isString(e.payload)?"payload: string expected":null!=e.messageId&&e.hasOwnProperty("messageId")&&!($util$1.isInteger(e.messageId)||e.messageId&&$util$1.isInteger(e.messageId.low)&&$util$1.isInteger(e.messageId.high))?"messageId: integer|Long expected":null!=e.serverReceivedTs&&e.hasOwnProperty("serverReceivedTs")&&!($util$1.isInteger(e.serverReceivedTs)||e.serverReceivedTs&&$util$1.isInteger(e.serverReceivedTs.low)&&$util$1.isInteger(e.serverReceivedTs.high))?"serverReceivedTs: integer|Long expected":null!=e.isOfflineMessage&&e.hasOwnProperty("isOfflineMessage")&&"boolean"!=typeof e.isOfflineMessage?"isOfflineMessage: boolean expected":null},e.fromObject=function(e){if(e instanceof $root$1.RxMessage)return e;var t=new $root$1.RxMessage;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.insId&&($util$1.Long?(t.insId=$util$1.Long.fromValue(e.insId)).unsigned=!1:"string"==typeof e.insId?t.insId=parseInt(e.insId,10):"number"==typeof e.insId?t.insId=e.insId:"object"===_typeof(e.insId)&&(t.insId=new $util$1.LongBits(e.insId.low>>>0,e.insId.high>>>0).toNumber())),null!=e.dialId&&($util$1.Long?(t.dialId=$util$1.Long.fromValue(e.dialId)).unsigned=!1:"string"==typeof e.dialId?t.dialId=parseInt(e.dialId,10):"number"==typeof e.dialId?t.dialId=e.dialId:"object"===_typeof(e.dialId)&&(t.dialId=new $util$1.LongBits(e.dialId.low>>>0,e.dialId.high>>>0).toNumber())),null!=e.seq&&($util$1.Long?(t.seq=$util$1.Long.fromValue(e.seq)).unsigned=!1:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber())),null!=e.srcId&&(t.srcId=String(e.srcId)),null!=e.dstId&&(t.dstId=String(e.dstId)),null!=e.dstType&&(t.dstType=0|e.dstType),null!=e.payload&&(t.payload=String(e.payload)),null!=e.messageId&&($util$1.Long?(t.messageId=$util$1.Long.fromValue(e.messageId)).unsigned=!1:"string"==typeof e.messageId?t.messageId=parseInt(e.messageId,10):"number"==typeof e.messageId?t.messageId=e.messageId:"object"===_typeof(e.messageId)&&(t.messageId=new $util$1.LongBits(e.messageId.low>>>0,e.messageId.high>>>0).toNumber())),null!=e.serverReceivedTs&&($util$1.Long?(t.serverReceivedTs=$util$1.Long.fromValue(e.serverReceivedTs)).unsigned=!1:"string"==typeof e.serverReceivedTs?t.serverReceivedTs=parseInt(e.serverReceivedTs,10):"number"==typeof e.serverReceivedTs?t.serverReceivedTs=e.serverReceivedTs:"object"===_typeof(e.serverReceivedTs)&&(t.serverReceivedTs=new $util$1.LongBits(e.serverReceivedTs.low>>>0,e.serverReceivedTs.high>>>0).toNumber())),null!=e.isOfflineMessage&&(t.isOfflineMessage=Boolean(e.isOfflineMessage)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if($util$1.Long){var i=new $util$1.Long(0,0,!1);r.insId=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.insId=t.longs===String?"0":0;if($util$1.Long){var s=new $util$1.Long(0,0,!1);r.dialId=t.longs===String?s.toString():t.longs===Number?s.toNumber():s}else r.dialId=t.longs===String?"0":0;if($util$1.Long){var a=new $util$1.Long(0,0,!1);r.seq=t.longs===String?a.toString():t.longs===Number?a.toNumber():a}else r.seq=t.longs===String?"0":0;if(r.srcId="",r.dstId="",r.dstType=0,r.payload="",$util$1.Long){var u=new $util$1.Long(0,0,!1);r.messageId=t.longs===String?u.toString():t.longs===Number?u.toNumber():u}else r.messageId=t.longs===String?"0":0;if($util$1.Long){var l=new $util$1.Long(0,0,!1);r.serverReceivedTs=t.longs===String?l.toString():t.longs===Number?l.toNumber():l}else r.serverReceivedTs=t.longs===String?"0":0;r.isOfflineMessage=!1}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.insId&&e.hasOwnProperty("insId")&&("number"==typeof e.insId?r.insId=t.longs===String?String(e.insId):e.insId:r.insId=t.longs===String?$util$1.Long.prototype.toString.call(e.insId):t.longs===Number?new $util$1.LongBits(e.insId.low>>>0,e.insId.high>>>0).toNumber():e.insId),null!=e.dialId&&e.hasOwnProperty("dialId")&&("number"==typeof e.dialId?r.dialId=t.longs===String?String(e.dialId):e.dialId:r.dialId=t.longs===String?$util$1.Long.prototype.toString.call(e.dialId):t.longs===Number?new $util$1.LongBits(e.dialId.low>>>0,e.dialId.high>>>0).toNumber():e.dialId),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util$1.Long.prototype.toString.call(e.seq):t.longs===Number?new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber():e.seq),null!=e.srcId&&e.hasOwnProperty("srcId")&&(r.srcId=e.srcId),null!=e.dstId&&e.hasOwnProperty("dstId")&&(r.dstId=e.dstId),null!=e.dstType&&e.hasOwnProperty("dstType")&&(r.dstType=e.dstType),null!=e.payload&&e.hasOwnProperty("payload")&&(r.payload=e.payload),null!=e.messageId&&e.hasOwnProperty("messageId")&&("number"==typeof e.messageId?r.messageId=t.longs===String?String(e.messageId):e.messageId:r.messageId=t.longs===String?$util$1.Long.prototype.toString.call(e.messageId):t.longs===Number?new $util$1.LongBits(e.messageId.low>>>0,e.messageId.high>>>0).toNumber():e.messageId),null!=e.serverReceivedTs&&e.hasOwnProperty("serverReceivedTs")&&("number"==typeof e.serverReceivedTs?r.serverReceivedTs=t.longs===String?String(e.serverReceivedTs):e.serverReceivedTs:r.serverReceivedTs=t.longs===String?$util$1.Long.prototype.toString.call(e.serverReceivedTs):t.longs===Number?new $util$1.LongBits(e.serverReceivedTs.low>>>0,e.serverReceivedTs.high>>>0).toNumber():e.serverReceivedTs),null!=e.isOfflineMessage&&e.hasOwnProperty("isOfflineMessage")&&(r.isOfflineMessage=e.isOfflineMessage),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),KickedOff=$root$1.KickedOff=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.linkId=0,e.prototype.code=0,e.prototype.server="",e.prototype.serverCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.linkId&&e.hasOwnProperty("linkId")&&t.uint32(48).int32(e.linkId),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(56).int32(e.code),null!=e.server&&e.hasOwnProperty("server")&&t.uint32(66).string(e.server),null!=e.serverCode&&e.hasOwnProperty("serverCode")&&t.uint32(72).int32(e.serverCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.KickedOff;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.linkId=e.int32();break;case 7:n.code=e.int32();break;case 8:n.server=e.string();break;case 9:n.serverCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.linkId&&e.hasOwnProperty("linkId")&&!$util$1.isInteger(e.linkId)?"linkId: integer expected":null!=e.code&&e.hasOwnProperty("code")&&!$util$1.isInteger(e.code)?"code: integer expected":null!=e.server&&e.hasOwnProperty("server")&&!$util$1.isString(e.server)?"server: string expected":null!=e.serverCode&&e.hasOwnProperty("serverCode")&&!$util$1.isInteger(e.serverCode)?"serverCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.KickedOff)return e;var t=new $root$1.KickedOff;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.linkId&&(t.linkId=0|e.linkId),null!=e.code&&(t.code=0|e.code),null!=e.server&&(t.server=String(e.server)),null!=e.serverCode&&(t.serverCode=0|e.serverCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.linkId=0,r.code=0,r.server="",r.serverCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.linkId&&e.hasOwnProperty("linkId")&&(r.linkId=e.linkId),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),null!=e.server&&e.hasOwnProperty("server")&&(r.server=e.server),null!=e.serverCode&&e.hasOwnProperty("serverCode")&&(r.serverCode=e.serverCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),TxMessageRes=$root$1.TxMessageRes=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.insId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.dialId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.seq=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.srcId="",e.prototype.dstId="",e.prototype.dstType=0,e.prototype.messageId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.errCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.insId&&e.hasOwnProperty("insId")&&t.uint32(48).int64(e.insId),null!=e.dialId&&e.hasOwnProperty("dialId")&&t.uint32(56).int64(e.dialId),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(64).int64(e.seq),null!=e.srcId&&e.hasOwnProperty("srcId")&&t.uint32(74).string(e.srcId),null!=e.dstId&&e.hasOwnProperty("dstId")&&t.uint32(82).string(e.dstId),null!=e.dstType&&e.hasOwnProperty("dstType")&&t.uint32(88).int32(e.dstType),null!=e.messageId&&e.hasOwnProperty("messageId")&&t.uint32(96).int64(e.messageId),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(104).int32(e.errCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.TxMessageRes;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.insId=e.int64();break;case 7:n.dialId=e.int64();break;case 8:n.seq=e.int64();break;case 9:n.srcId=e.string();break;case 10:n.dstId=e.string();break;case 11:n.dstType=e.int32();break;case 12:n.messageId=e.int64();break;case 13:n.errCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.insId&&e.hasOwnProperty("insId")&&!($util$1.isInteger(e.insId)||e.insId&&$util$1.isInteger(e.insId.low)&&$util$1.isInteger(e.insId.high))?"insId: integer|Long expected":null!=e.dialId&&e.hasOwnProperty("dialId")&&!($util$1.isInteger(e.dialId)||e.dialId&&$util$1.isInteger(e.dialId.low)&&$util$1.isInteger(e.dialId.high))?"dialId: integer|Long expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util$1.isInteger(e.seq)||e.seq&&$util$1.isInteger(e.seq.low)&&$util$1.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.srcId&&e.hasOwnProperty("srcId")&&!$util$1.isString(e.srcId)?"srcId: string expected":null!=e.dstId&&e.hasOwnProperty("dstId")&&!$util$1.isString(e.dstId)?"dstId: string expected":null!=e.dstType&&e.hasOwnProperty("dstType")&&!$util$1.isInteger(e.dstType)?"dstType: integer expected":null!=e.messageId&&e.hasOwnProperty("messageId")&&!($util$1.isInteger(e.messageId)||e.messageId&&$util$1.isInteger(e.messageId.low)&&$util$1.isInteger(e.messageId.high))?"messageId: integer|Long expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.TxMessageRes)return e;var t=new $root$1.TxMessageRes;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.insId&&($util$1.Long?(t.insId=$util$1.Long.fromValue(e.insId)).unsigned=!1:"string"==typeof e.insId?t.insId=parseInt(e.insId,10):"number"==typeof e.insId?t.insId=e.insId:"object"===_typeof(e.insId)&&(t.insId=new $util$1.LongBits(e.insId.low>>>0,e.insId.high>>>0).toNumber())),null!=e.dialId&&($util$1.Long?(t.dialId=$util$1.Long.fromValue(e.dialId)).unsigned=!1:"string"==typeof e.dialId?t.dialId=parseInt(e.dialId,10):"number"==typeof e.dialId?t.dialId=e.dialId:"object"===_typeof(e.dialId)&&(t.dialId=new $util$1.LongBits(e.dialId.low>>>0,e.dialId.high>>>0).toNumber())),null!=e.seq&&($util$1.Long?(t.seq=$util$1.Long.fromValue(e.seq)).unsigned=!1:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber())),null!=e.srcId&&(t.srcId=String(e.srcId)),null!=e.dstId&&(t.dstId=String(e.dstId)),null!=e.dstType&&(t.dstType=0|e.dstType),null!=e.messageId&&($util$1.Long?(t.messageId=$util$1.Long.fromValue(e.messageId)).unsigned=!1:"string"==typeof e.messageId?t.messageId=parseInt(e.messageId,10):"number"==typeof e.messageId?t.messageId=e.messageId:"object"===_typeof(e.messageId)&&(t.messageId=new $util$1.LongBits(e.messageId.low>>>0,e.messageId.high>>>0).toNumber())),null!=e.errCode&&(t.errCode=0|e.errCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if($util$1.Long){var i=new $util$1.Long(0,0,!1);r.insId=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.insId=t.longs===String?"0":0;if($util$1.Long){var s=new $util$1.Long(0,0,!1);r.dialId=t.longs===String?s.toString():t.longs===Number?s.toNumber():s}else r.dialId=t.longs===String?"0":0;if($util$1.Long){var a=new $util$1.Long(0,0,!1);r.seq=t.longs===String?a.toString():t.longs===Number?a.toNumber():a}else r.seq=t.longs===String?"0":0;if(r.srcId="",r.dstId="",r.dstType=0,$util$1.Long){var u=new $util$1.Long(0,0,!1);r.messageId=t.longs===String?u.toString():t.longs===Number?u.toNumber():u}else r.messageId=t.longs===String?"0":0;r.errCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.insId&&e.hasOwnProperty("insId")&&("number"==typeof e.insId?r.insId=t.longs===String?String(e.insId):e.insId:r.insId=t.longs===String?$util$1.Long.prototype.toString.call(e.insId):t.longs===Number?new $util$1.LongBits(e.insId.low>>>0,e.insId.high>>>0).toNumber():e.insId),null!=e.dialId&&e.hasOwnProperty("dialId")&&("number"==typeof e.dialId?r.dialId=t.longs===String?String(e.dialId):e.dialId:r.dialId=t.longs===String?$util$1.Long.prototype.toString.call(e.dialId):t.longs===Number?new $util$1.LongBits(e.dialId.low>>>0,e.dialId.high>>>0).toNumber():e.dialId),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util$1.Long.prototype.toString.call(e.seq):t.longs===Number?new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber():e.seq),null!=e.srcId&&e.hasOwnProperty("srcId")&&(r.srcId=e.srcId),null!=e.dstId&&e.hasOwnProperty("dstId")&&(r.dstId=e.dstId),null!=e.dstType&&e.hasOwnProperty("dstType")&&(r.dstType=e.dstType),null!=e.messageId&&e.hasOwnProperty("messageId")&&("number"==typeof e.messageId?r.messageId=t.longs===String?String(e.messageId):e.messageId:r.messageId=t.longs===String?$util$1.Long.prototype.toString.call(e.messageId):t.longs===Number?new $util$1.LongBits(e.messageId.low>>>0,e.messageId.high>>>0).toNumber():e.messageId),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnJoin=$root$1.ChnJoin=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.errCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(56).int32(e.errCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnJoin;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.errCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnJoin)return e;var t=new $root$1.ChnJoin;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.errCode&&(t.errCode=0|e.errCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.errCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnJoinRes=$root$1.ChnJoinRes=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.errCode=0,e.prototype.serverErrCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(56).int32(e.errCode),null!=e.serverErrCode&&e.hasOwnProperty("serverErrCode")&&t.uint32(64).int32(e.serverErrCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnJoinRes;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.errCode=e.int32();break;case 8:n.serverErrCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null!=e.serverErrCode&&e.hasOwnProperty("serverErrCode")&&!$util$1.isInteger(e.serverErrCode)?"serverErrCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnJoinRes)return e;var t=new $root$1.ChnJoinRes;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.errCode&&(t.errCode=0|e.errCode),null!=e.serverErrCode&&(t.serverErrCode=0|e.serverErrCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.errCode=0,r.serverErrCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),null!=e.serverErrCode&&e.hasOwnProperty("serverErrCode")&&(r.serverErrCode=e.serverErrCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnLeave=$root$1.ChnLeave=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.errCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(56).int32(e.errCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnLeave;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.errCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnLeave)return e;var t=new $root$1.ChnLeave;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.errCode&&(t.errCode=0|e.errCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.errCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnGetMembers=$root$1.ChnGetMembers=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.errCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(56).int32(e.errCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnGetMembers;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.errCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnGetMembers)return e;var t=new $root$1.ChnGetMembers;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.errCode&&(t.errCode=0|e.errCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.errCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnGetMembersRes=$root$1.ChnGetMembersRes=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.errCode=0,e.prototype.size=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(56).int32(e.errCode),null!=e.size&&e.hasOwnProperty("size")&&t.uint32(64).int32(e.size),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnGetMembersRes;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.errCode=e.int32();break;case 8:n.size=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null!=e.size&&e.hasOwnProperty("size")&&!$util$1.isInteger(e.size)?"size: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnGetMembersRes)return e;var t=new $root$1.ChnGetMembersRes;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.errCode&&(t.errCode=0|e.errCode),null!=e.size&&(t.size=0|e.size),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.errCode=0,r.size=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),null!=e.size&&e.hasOwnProperty("size")&&(r.size=e.size),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnMemberJoined=$root$1.ChnMemberJoined=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.memberId="",e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.memberId&&e.hasOwnProperty("memberId")&&t.uint32(58).string(e.memberId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnMemberJoined;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.memberId=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.memberId&&e.hasOwnProperty("memberId")&&!$util$1.isString(e.memberId)?"memberId: string expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnMemberJoined)return e;var t=new $root$1.ChnMemberJoined;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.memberId&&(t.memberId=String(e.memberId)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.memberId=""}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.memberId&&e.hasOwnProperty("memberId")&&(r.memberId=e.memberId),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ChnMemberLeft=$root$1.ChnMemberLeft=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.memberId="",e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.memberId&&e.hasOwnProperty("memberId")&&t.uint32(58).string(e.memberId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ChnMemberLeft;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.memberId=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.memberId&&e.hasOwnProperty("memberId")&&!$util$1.isString(e.memberId)?"memberId: string expected":null},e.fromObject=function(e){if(e instanceof $root$1.ChnMemberLeft)return e;var t=new $root$1.ChnMemberLeft;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.memberId&&(t.memberId=String(e.memberId)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.memberId=""}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.memberId&&e.hasOwnProperty("memberId")&&(r.memberId=e.memberId),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),QueryPeersOnlineStatus=$root$1.QueryPeersOnlineStatus=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.peerCount=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.peerCount&&e.hasOwnProperty("peerCount")&&t.uint32(48).int32(e.peerCount),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.QueryPeersOnlineStatus;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.peerCount=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.peerCount&&e.hasOwnProperty("peerCount")&&!$util$1.isInteger(e.peerCount)?"peerCount: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.QueryPeersOnlineStatus)return e;var t=new $root$1.QueryPeersOnlineStatus;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.peerCount&&(t.peerCount=0|e.peerCount),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.peerCount=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.peerCount&&e.hasOwnProperty("peerCount")&&(r.peerCount=e.peerCount),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),QueryPeersOnlineStatusRes=$root$1.QueryPeersOnlineStatusRes=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.peerCount=0,e.prototype.errCode=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.peerCount&&e.hasOwnProperty("peerCount")&&t.uint32(48).int32(e.peerCount),null!=e.errCode&&e.hasOwnProperty("errCode")&&t.uint32(56).int32(e.errCode),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.QueryPeersOnlineStatusRes;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.peerCount=e.int32();break;case 7:n.errCode=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.peerCount&&e.hasOwnProperty("peerCount")&&!$util$1.isInteger(e.peerCount)?"peerCount: integer expected":null!=e.errCode&&e.hasOwnProperty("errCode")&&!$util$1.isInteger(e.errCode)?"errCode: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.QueryPeersOnlineStatusRes)return e;var t=new $root$1.QueryPeersOnlineStatusRes;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.peerCount&&(t.peerCount=0|e.peerCount),null!=e.errCode&&(t.errCode=0|e.errCode),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.peerCount=0,r.errCode=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.peerCount&&e.hasOwnProperty("peerCount")&&(r.peerCount=e.peerCount),null!=e.errCode&&e.hasOwnProperty("errCode")&&(r.errCode=e.errCode),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),RenewToken=$root$1.RenewToken=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.token="",e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(50).string(e.cname),null!=e.token&&e.hasOwnProperty("token")&&t.uint32(58).string(e.token),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.RenewToken;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 6:n.cname=e.string();break;case 7:n.token=e.string();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.token&&e.hasOwnProperty("token")&&!$util$1.isString(e.token)?"token: string expected":null},e.fromObject=function(e){if(e instanceof $root$1.RenewToken)return e;var t=new $root$1.RenewToken;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.token&&(t.token=String(e.token)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.cname="",r.token=""}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.token&&e.hasOwnProperty("token")&&(r.token=e.token),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),OperateAttribute=$root$1.OperateAttribute=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.destId="",e.prototype.attributeType=0,e.prototype.operationType=0,e.prototype.seq=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(42).string(e.cname),null!=e.destId&&e.hasOwnProperty("destId")&&t.uint32(50).string(e.destId),null!=e.attributeType&&e.hasOwnProperty("attributeType")&&t.uint32(56).int32(e.attributeType),null!=e.operationType&&e.hasOwnProperty("operationType")&&t.uint32(64).int32(e.operationType),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(72).int64(e.seq),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.OperateAttribute;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.cname=e.string();break;case 6:n.destId=e.string();break;case 7:n.attributeType=e.int32();break;case 8:n.operationType=e.int32();break;case 9:n.seq=e.int64();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.destId&&e.hasOwnProperty("destId")&&!$util$1.isString(e.destId)?"destId: string expected":null!=e.attributeType&&e.hasOwnProperty("attributeType")&&!$util$1.isInteger(e.attributeType)?"attributeType: integer expected":null!=e.operationType&&e.hasOwnProperty("operationType")&&!$util$1.isInteger(e.operationType)?"operationType: integer expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util$1.isInteger(e.seq)||e.seq&&$util$1.isInteger(e.seq.low)&&$util$1.isInteger(e.seq.high))?"seq: integer|Long expected":null},e.fromObject=function(e){if(e instanceof $root$1.OperateAttribute)return e;var t=new $root$1.OperateAttribute;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.destId&&(t.destId=String(e.destId)),null!=e.attributeType&&(t.attributeType=0|e.attributeType),null!=e.operationType&&(t.operationType=0|e.operationType),null!=e.seq&&($util$1.Long?(t.seq=$util$1.Long.fromValue(e.seq)).unsigned=!1:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber())),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if(r.cname="",r.destId="",r.attributeType=0,r.operationType=0,$util$1.Long){var i=new $util$1.Long(0,0,!1);r.seq=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.seq=t.longs===String?"0":0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.destId&&e.hasOwnProperty("destId")&&(r.destId=e.destId),null!=e.attributeType&&e.hasOwnProperty("attributeType")&&(r.attributeType=e.attributeType),null!=e.operationType&&e.hasOwnProperty("operationType")&&(r.operationType=e.operationType),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util$1.Long.prototype.toString.call(e.seq):t.longs===Number?new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber():e.seq),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),OperateAttributeRes=$root$1.OperateAttributeRes=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.cname="",e.prototype.destId="",e.prototype.attributeType=0,e.prototype.seq=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.code=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(42).string(e.cname),null!=e.destId&&e.hasOwnProperty("destId")&&t.uint32(50).string(e.destId),null!=e.attributeType&&e.hasOwnProperty("attributeType")&&t.uint32(56).int32(e.attributeType),null!=e.seq&&e.hasOwnProperty("seq")&&t.uint32(64).int64(e.seq),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(72).int32(e.code),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.OperateAttributeRes;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.cname=e.string();break;case 6:n.destId=e.string();break;case 7:n.attributeType=e.int32();break;case 8:n.seq=e.int64();break;case 9:n.code=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.destId&&e.hasOwnProperty("destId")&&!$util$1.isString(e.destId)?"destId: string expected":null!=e.attributeType&&e.hasOwnProperty("attributeType")&&!$util$1.isInteger(e.attributeType)?"attributeType: integer expected":null!=e.seq&&e.hasOwnProperty("seq")&&!($util$1.isInteger(e.seq)||e.seq&&$util$1.isInteger(e.seq.low)&&$util$1.isInteger(e.seq.high))?"seq: integer|Long expected":null!=e.code&&e.hasOwnProperty("code")&&!$util$1.isInteger(e.code)?"code: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.OperateAttributeRes)return e;var t=new $root$1.OperateAttributeRes;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.cname&&(t.cname=String(e.cname)),null!=e.destId&&(t.destId=String(e.destId)),null!=e.attributeType&&(t.attributeType=0|e.attributeType),null!=e.seq&&($util$1.Long?(t.seq=$util$1.Long.fromValue(e.seq)).unsigned=!1:"string"==typeof e.seq?t.seq=parseInt(e.seq,10):"number"==typeof e.seq?t.seq=e.seq:"object"===_typeof(e.seq)&&(t.seq=new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber())),null!=e.code&&(t.code=0|e.code),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if(r.cname="",r.destId="",r.attributeType=0,$util$1.Long){var i=new $util$1.Long(0,0,!1);r.seq=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.seq=t.longs===String?"0":0;r.code=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.destId&&e.hasOwnProperty("destId")&&(r.destId=e.destId),null!=e.attributeType&&e.hasOwnProperty("attributeType")&&(r.attributeType=e.attributeType),null!=e.seq&&e.hasOwnProperty("seq")&&("number"==typeof e.seq?r.seq=t.longs===String?String(e.seq):e.seq:r.seq=t.longs===String?$util$1.Long.prototype.toString.call(e.seq):t.longs===Number?new $util$1.LongBits(e.seq.low>>>0,e.seq.high>>>0).toNumber():e.seq),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ApRequest=$root$1.ApRequest=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.apAddr="",e.prototype.opId=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.envId=0,e.prototype.flag=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.apAddr&&e.hasOwnProperty("apAddr")&&t.uint32(42).string(e.apAddr),null!=e.opId&&e.hasOwnProperty("opId")&&t.uint32(48).int64(e.opId),null!=e.envId&&e.hasOwnProperty("envId")&&t.uint32(56).int32(e.envId),null!=e.flag&&e.hasOwnProperty("flag")&&t.uint32(64).int32(e.flag),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ApRequest;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.apAddr=e.string();break;case 6:n.opId=e.int64();break;case 7:n.envId=e.int32();break;case 8:n.flag=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.apAddr&&e.hasOwnProperty("apAddr")&&!$util$1.isString(e.apAddr)?"apAddr: string expected":null!=e.opId&&e.hasOwnProperty("opId")&&!($util$1.isInteger(e.opId)||e.opId&&$util$1.isInteger(e.opId.low)&&$util$1.isInteger(e.opId.high))?"opId: integer|Long expected":null!=e.envId&&e.hasOwnProperty("envId")&&!$util$1.isInteger(e.envId)?"envId: integer expected":null!=e.flag&&e.hasOwnProperty("flag")&&!$util$1.isInteger(e.flag)?"flag: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ApRequest)return e;var t=new $root$1.ApRequest;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.apAddr&&(t.apAddr=String(e.apAddr)),null!=e.opId&&($util$1.Long?(t.opId=$util$1.Long.fromValue(e.opId)).unsigned=!1:"string"==typeof e.opId?t.opId=parseInt(e.opId,10):"number"==typeof e.opId?t.opId=e.opId:"object"===_typeof(e.opId)&&(t.opId=new $util$1.LongBits(e.opId.low>>>0,e.opId.high>>>0).toNumber())),null!=e.envId&&(t.envId=0|e.envId),null!=e.flag&&(t.flag=0|e.flag),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;if(r.apAddr="",$util$1.Long){var i=new $util$1.Long(0,0,!1);r.opId=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.opId=t.longs===String?"0":0;r.envId=0,r.flag=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.apAddr&&e.hasOwnProperty("apAddr")&&(r.apAddr=e.apAddr),null!=e.opId&&e.hasOwnProperty("opId")&&("number"==typeof e.opId?r.opId=t.longs===String?String(e.opId):e.opId:r.opId=t.longs===String?$util$1.Long.prototype.toString.call(e.opId):t.longs===Number?new $util$1.LongBits(e.opId.low>>>0,e.opId.high>>>0).toNumber():e.opId),null!=e.envId&&e.hasOwnProperty("envId")&&(r.envId=e.envId),null!=e.flag&&e.hasOwnProperty("flag")&&(r.flag=e.flag),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),LinkTcpEvent=$root$1.LinkTcpEvent=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.destServerIp="",e.prototype.action="",e.prototype.code=0,e.prototype.responseTime=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&t.uint32(42).string(e.destServerIp),null!=e.action&&e.hasOwnProperty("action")&&t.uint32(50).string(e.action),null!=e.code&&e.hasOwnProperty("code")&&t.uint32(56).int32(e.code),null!=e.responseTime&&e.hasOwnProperty("responseTime")&&t.uint32(64).int32(e.responseTime),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.LinkTcpEvent;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.destServerIp=e.string();break;case 6:n.action=e.string();break;case 7:n.code=e.int32();break;case 8:n.responseTime=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&!$util$1.isString(e.destServerIp)?"destServerIp: string expected":null!=e.action&&e.hasOwnProperty("action")&&!$util$1.isString(e.action)?"action: string expected":null!=e.code&&e.hasOwnProperty("code")&&!$util$1.isInteger(e.code)?"code: integer expected":null!=e.responseTime&&e.hasOwnProperty("responseTime")&&!$util$1.isInteger(e.responseTime)?"responseTime: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.LinkTcpEvent)return e;var t=new $root$1.LinkTcpEvent;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.destServerIp&&(t.destServerIp=String(e.destServerIp)),null!=e.action&&(t.action=String(e.action)),null!=e.code&&(t.code=0|e.code),null!=e.responseTime&&(t.responseTime=0|e.responseTime),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.destServerIp="",r.action="",r.code=0,r.responseTime=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&(r.destServerIp=e.destServerIp),null!=e.action&&e.hasOwnProperty("action")&&(r.action=e.action),null!=e.code&&e.hasOwnProperty("code")&&(r.code=e.code),null!=e.responseTime&&e.hasOwnProperty("responseTime")&&(r.responseTime=e.responseTime),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),LinkLoginRequest=$root$1.LinkLoginRequest=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.destServerIp="",e.prototype.linkId=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&t.uint32(42).string(e.destServerIp),null!=e.linkId&&e.hasOwnProperty("linkId")&&t.uint32(48).int32(e.linkId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.LinkLoginRequest;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.destServerIp=e.string();break;case 6:n.linkId=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&!$util$1.isString(e.destServerIp)?"destServerIp: string expected":null!=e.linkId&&e.hasOwnProperty("linkId")&&!$util$1.isInteger(e.linkId)?"linkId: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.LinkLoginRequest)return e;var t=new $root$1.LinkLoginRequest;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.destServerIp&&(t.destServerIp=String(e.destServerIp)),null!=e.linkId&&(t.linkId=0|e.linkId),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.destServerIp="",r.linkId=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.destServerIp&&e.hasOwnProperty("destServerIp")&&(r.destServerIp=e.destServerIp),null!=e.linkId&&e.hasOwnProperty("linkId")&&(r.linkId=e.linkId),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ConnectionStateChange=$root$1.ConnectionStateChange=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.userId="",e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.oldState=0,e.prototype.newState=0,e.prototype.reason=0,e.prototype.reconnId=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&t.uint32(18).string(e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(24).int64(e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(32).int64(e.elapse),null!=e.oldState&&e.hasOwnProperty("oldState")&&t.uint32(40).int32(e.oldState),null!=e.newState&&e.hasOwnProperty("newState")&&t.uint32(48).int32(e.newState),null!=e.reason&&e.hasOwnProperty("reason")&&t.uint32(56).int32(e.reason),null!=e.reconnId&&e.hasOwnProperty("reconnId")&&t.uint32(64).int32(e.reconnId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ConnectionStateChange;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.userId=e.string();break;case 3:n.lts=e.int64();break;case 4:n.elapse=e.int64();break;case 5:n.oldState=e.int32();break;case 6:n.newState=e.int32();break;case 7:n.reason=e.int32();break;case 8:n.reconnId=e.int32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.userId&&e.hasOwnProperty("userId")&&!$util$1.isString(e.userId)?"userId: string expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.oldState&&e.hasOwnProperty("oldState")&&!$util$1.isInteger(e.oldState)?"oldState: integer expected":null!=e.newState&&e.hasOwnProperty("newState")&&!$util$1.isInteger(e.newState)?"newState: integer expected":null!=e.reason&&e.hasOwnProperty("reason")&&!$util$1.isInteger(e.reason)?"reason: integer expected":null!=e.reconnId&&e.hasOwnProperty("reconnId")&&!$util$1.isInteger(e.reconnId)?"reconnId: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.ConnectionStateChange)return e;var t=new $root$1.ConnectionStateChange;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.userId&&(t.userId=String(e.userId)),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.oldState&&(t.oldState=0|e.oldState),null!=e.newState&&(t.newState=0|e.newState),null!=e.reason&&(t.reason=0|e.reason),null!=e.reconnId&&(t.reconnId=0|e.reconnId),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.userId="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.elapse=t.longs===String?"0":0;r.oldState=0,r.newState=0,r.reason=0,r.reconnId=0}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.userId&&e.hasOwnProperty("userId")&&(r.userId=e.userId),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.oldState&&e.hasOwnProperty("oldState")&&(r.oldState=e.oldState),null!=e.newState&&e.hasOwnProperty("newState")&&(r.newState=e.newState),null!=e.reason&&e.hasOwnProperty("reason")&&(r.reason=e.reason),null!=e.reconnId&&e.hasOwnProperty("reconnId")&&(r.reconnId=e.reconnId),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),ApiExec=$root$1.ApiExec=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.cname="",e.prototype.cid=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.ip="",e.prototype.uid=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.success=!1,e.prototype.elapse=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.peer=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.apiPayload="",e.prototype.isCache=!1,e.prototype.isNotificationSuppressed=!1,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.cname&&e.hasOwnProperty("cname")&&t.uint32(18).string(e.cname),null!=e.cid&&e.hasOwnProperty("cid")&&t.uint32(24).int64(e.cid),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(32).int64(e.lts),null!=e.ip&&e.hasOwnProperty("ip")&&t.uint32(42).string(e.ip),null!=e.uid&&e.hasOwnProperty("uid")&&t.uint32(48).int64(e.uid),null!=e.success&&e.hasOwnProperty("success")&&t.uint32(56).bool(e.success),null!=e.elapse&&e.hasOwnProperty("elapse")&&t.uint32(64).int64(e.elapse),null!=e.peer&&e.hasOwnProperty("peer")&&t.uint32(72).int64(e.peer),null!=e.apiPayload&&e.hasOwnProperty("apiPayload")&&t.uint32(82).string(e.apiPayload),null!=e.isCache&&e.hasOwnProperty("isCache")&&t.uint32(88).bool(e.isCache),null!=e.isNotificationSuppressed&&e.hasOwnProperty("isNotificationSuppressed")&&t.uint32(96).bool(e.isNotificationSuppressed),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.ApiExec;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.cname=e.string();break;case 3:n.cid=e.int64();break;case 4:n.lts=e.int64();break;case 5:n.ip=e.string();break;case 6:n.uid=e.int64();break;case 7:n.success=e.bool();break;case 8:n.elapse=e.int64();break;case 9:n.peer=e.int64();break;case 10:n.apiPayload=e.string();break;case 11:n.isCache=e.bool();break;case 12:n.isNotificationSuppressed=e.bool();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid)?"sid: string expected":null!=e.cname&&e.hasOwnProperty("cname")&&!$util$1.isString(e.cname)?"cname: string expected":null!=e.cid&&e.hasOwnProperty("cid")&&!($util$1.isInteger(e.cid)||e.cid&&$util$1.isInteger(e.cid.low)&&$util$1.isInteger(e.cid.high))?"cid: integer|Long expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.ip&&e.hasOwnProperty("ip")&&!$util$1.isString(e.ip)?"ip: string expected":null!=e.uid&&e.hasOwnProperty("uid")&&!($util$1.isInteger(e.uid)||e.uid&&$util$1.isInteger(e.uid.low)&&$util$1.isInteger(e.uid.high))?"uid: integer|Long expected":null!=e.success&&e.hasOwnProperty("success")&&"boolean"!=typeof e.success?"success: boolean expected":null!=e.elapse&&e.hasOwnProperty("elapse")&&!($util$1.isInteger(e.elapse)||e.elapse&&$util$1.isInteger(e.elapse.low)&&$util$1.isInteger(e.elapse.high))?"elapse: integer|Long expected":null!=e.peer&&e.hasOwnProperty("peer")&&!($util$1.isInteger(e.peer)||e.peer&&$util$1.isInteger(e.peer.low)&&$util$1.isInteger(e.peer.high))?"peer: integer|Long expected":null!=e.apiPayload&&e.hasOwnProperty("apiPayload")&&!$util$1.isString(e.apiPayload)?"apiPayload: string expected":null!=e.isCache&&e.hasOwnProperty("isCache")&&"boolean"!=typeof e.isCache?"isCache: boolean expected":null!=e.isNotificationSuppressed&&e.hasOwnProperty("isNotificationSuppressed")&&"boolean"!=typeof e.isNotificationSuppressed?"isNotificationSuppressed: boolean expected":null},e.fromObject=function(e){if(e instanceof $root$1.ApiExec)return e;var t=new $root$1.ApiExec;return null!=e.sid&&(t.sid=String(e.sid)),null!=e.cname&&(t.cname=String(e.cname)),null!=e.cid&&($util$1.Long?(t.cid=$util$1.Long.fromValue(e.cid)).unsigned=!1:"string"==typeof e.cid?t.cid=parseInt(e.cid,10):"number"==typeof e.cid?t.cid=e.cid:"object"===_typeof(e.cid)&&(t.cid=new $util$1.LongBits(e.cid.low>>>0,e.cid.high>>>0).toNumber())),null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.ip&&(t.ip=String(e.ip)),null!=e.uid&&($util$1.Long?(t.uid=$util$1.Long.fromValue(e.uid)).unsigned=!1:"string"==typeof e.uid?t.uid=parseInt(e.uid,10):"number"==typeof e.uid?t.uid=e.uid:"object"===_typeof(e.uid)&&(t.uid=new $util$1.LongBits(e.uid.low>>>0,e.uid.high>>>0).toNumber())),null!=e.success&&(t.success=Boolean(e.success)),null!=e.elapse&&($util$1.Long?(t.elapse=$util$1.Long.fromValue(e.elapse)).unsigned=!1:"string"==typeof e.elapse?t.elapse=parseInt(e.elapse,10):"number"==typeof e.elapse?t.elapse=e.elapse:"object"===_typeof(e.elapse)&&(t.elapse=new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber())),null!=e.peer&&($util$1.Long?(t.peer=$util$1.Long.fromValue(e.peer)).unsigned=!1:"string"==typeof e.peer?t.peer=parseInt(e.peer,10):"number"==typeof e.peer?t.peer=e.peer:"object"===_typeof(e.peer)&&(t.peer=new $util$1.LongBits(e.peer.low>>>0,e.peer.high>>>0).toNumber())),null!=e.apiPayload&&(t.apiPayload=String(e.apiPayload)),null!=e.isCache&&(t.isCache=Boolean(e.isCache)),null!=e.isNotificationSuppressed&&(t.isNotificationSuppressed=Boolean(e.isNotificationSuppressed)),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if(r.sid="",r.cname="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.cid=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.cid=t.longs===String?"0":0;if($util$1.Long){var o=new $util$1.Long(0,0,!1);r.lts=t.longs===String?o.toString():t.longs===Number?o.toNumber():o}else r.lts=t.longs===String?"0":0;if(r.ip="",$util$1.Long){var i=new $util$1.Long(0,0,!1);r.uid=t.longs===String?i.toString():t.longs===Number?i.toNumber():i}else r.uid=t.longs===String?"0":0;if(r.success=!1,$util$1.Long){var s=new $util$1.Long(0,0,!1);r.elapse=t.longs===String?s.toString():t.longs===Number?s.toNumber():s}else r.elapse=t.longs===String?"0":0;if($util$1.Long){var a=new $util$1.Long(0,0,!1);r.peer=t.longs===String?a.toString():t.longs===Number?a.toNumber():a}else r.peer=t.longs===String?"0":0;r.apiPayload="",r.isCache=!1,r.isNotificationSuppressed=!1}return null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.cname&&e.hasOwnProperty("cname")&&(r.cname=e.cname),null!=e.cid&&e.hasOwnProperty("cid")&&("number"==typeof e.cid?r.cid=t.longs===String?String(e.cid):e.cid:r.cid=t.longs===String?$util$1.Long.prototype.toString.call(e.cid):t.longs===Number?new $util$1.LongBits(e.cid.low>>>0,e.cid.high>>>0).toNumber():e.cid),null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.ip&&e.hasOwnProperty("ip")&&(r.ip=e.ip),null!=e.uid&&e.hasOwnProperty("uid")&&("number"==typeof e.uid?r.uid=t.longs===String?String(e.uid):e.uid:r.uid=t.longs===String?$util$1.Long.prototype.toString.call(e.uid):t.longs===Number?new $util$1.LongBits(e.uid.low>>>0,e.uid.high>>>0).toNumber():e.uid),null!=e.success&&e.hasOwnProperty("success")&&(r.success=e.success),null!=e.elapse&&e.hasOwnProperty("elapse")&&("number"==typeof e.elapse?r.elapse=t.longs===String?String(e.elapse):e.elapse:r.elapse=t.longs===String?$util$1.Long.prototype.toString.call(e.elapse):t.longs===Number?new $util$1.LongBits(e.elapse.low>>>0,e.elapse.high>>>0).toNumber():e.elapse),null!=e.peer&&e.hasOwnProperty("peer")&&("number"==typeof e.peer?r.peer=t.longs===String?String(e.peer):e.peer:r.peer=t.longs===String?$util$1.Long.prototype.toString.call(e.peer):t.longs===Number?new $util$1.LongBits(e.peer.low>>>0,e.peer.high>>>0).toNumber():e.peer),null!=e.apiPayload&&e.hasOwnProperty("apiPayload")&&(r.apiPayload=e.apiPayload),null!=e.isCache&&e.hasOwnProperty("isCache")&&(r.isCache=e.isCache),null!=e.isNotificationSuppressed&&e.hasOwnProperty("isNotificationSuppressed")&&(r.isNotificationSuppressed=e.isNotificationSuppressed),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),Counter=$root$1.Counter=function(){function e(e){if(this.items=[],e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.sid="",e.prototype.peer=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.items=$util$1.emptyArray,e.encode=function(e,t){if(t||(t=$Writer$1.create()),null!=e.sid&&e.hasOwnProperty("sid")&&t.uint32(10).string(e.sid),null!=e.peer&&e.hasOwnProperty("peer")&&t.uint32(16).int64(e.peer),null!=e.items&&e.items.length)for(var r=0;r<e.items.length;++r)$root$1.Counter.CounterItem.encode(e.items[r],t.uint32(26).fork()).ldelim();return t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.Counter;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.sid=e.string();break;case 2:n.peer=e.int64();break;case 3:n.items&&n.items.length||(n.items=[]),n.items.push($root$1.Counter.CounterItem.decode(e,e.uint32()));break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){if("object"!==_typeof(e)||null===e)return"object expected";if(null!=e.sid&&e.hasOwnProperty("sid")&&!$util$1.isString(e.sid))return"sid: string expected";if(null!=e.peer&&e.hasOwnProperty("peer")&&!($util$1.isInteger(e.peer)||e.peer&&$util$1.isInteger(e.peer.low)&&$util$1.isInteger(e.peer.high)))return"peer: integer|Long expected";if(null!=e.items&&e.hasOwnProperty("items")){if(!Array.isArray(e.items))return"items: array expected";for(var t=0;t<e.items.length;++t){var r=$root$1.Counter.CounterItem.verify(e.items[t]);if(r)return"items."+r}}return null},e.fromObject=function(e){if(e instanceof $root$1.Counter)return e;var t=new $root$1.Counter;if(null!=e.sid&&(t.sid=String(e.sid)),null!=e.peer&&($util$1.Long?(t.peer=$util$1.Long.fromValue(e.peer)).unsigned=!1:"string"==typeof e.peer?t.peer=parseInt(e.peer,10):"number"==typeof e.peer?t.peer=e.peer:"object"===_typeof(e.peer)&&(t.peer=new $util$1.LongBits(e.peer.low>>>0,e.peer.high>>>0).toNumber())),e.items){if(!Array.isArray(e.items))throw TypeError(".Counter.items: array expected");t.items=[];for(var r=0;r<e.items.length;++r){if("object"!==_typeof(e.items[r]))throw TypeError(".Counter.items: object expected");t.items[r]=$root$1.Counter.CounterItem.fromObject(e.items[r])}}return t},e.toObject=function(e,t){t||(t={});var r={};if((t.arrays||t.defaults)&&(r.items=[]),t.defaults)if(r.sid="",$util$1.Long){var n=new $util$1.Long(0,0,!1);r.peer=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.peer=t.longs===String?"0":0;if(null!=e.sid&&e.hasOwnProperty("sid")&&(r.sid=e.sid),null!=e.peer&&e.hasOwnProperty("peer")&&("number"==typeof e.peer?r.peer=t.longs===String?String(e.peer):e.peer:r.peer=t.longs===String?$util$1.Long.prototype.toString.call(e.peer):t.longs===Number?new $util$1.LongBits(e.peer.low>>>0,e.peer.high>>>0).toNumber():e.peer),e.items&&e.items.length){r.items=[];for(var o=0;o<e.items.length;++o)r.items[o]=$root$1.Counter.CounterItem.toObject(e.items[o],t)}return r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e.CounterItem=function(){function e(e){if(e)for(var t=Object.keys(e),r=0;r<t.length;++r)null!=e[t[r]]&&(this[t[r]]=e[t[r]])}return e.prototype.lts=$util$1.Long?$util$1.Long.fromBits(0,0,!1):0,e.prototype.id=0,e.prototype.value=0,e.prototype.tagErrorCode=0,e.prototype.streamId=0,e.encode=function(e,t){return t||(t=$Writer$1.create()),null!=e.lts&&e.hasOwnProperty("lts")&&t.uint32(8).int64(e.lts),null!=e.id&&e.hasOwnProperty("id")&&t.uint32(16).int32(e.id),null!=e.value&&e.hasOwnProperty("value")&&t.uint32(24).int32(e.value),null!=e.tagErrorCode&&e.hasOwnProperty("tagErrorCode")&&t.uint32(32).int32(e.tagErrorCode),null!=e.streamId&&e.hasOwnProperty("streamId")&&t.uint32(40).uint32(e.streamId),t},e.encodeDelimited=function(e,t){return this.encode(e,t).ldelim()},e.decode=function(e,t){e instanceof $Reader$1||(e=$Reader$1.create(e));for(var r=void 0===t?e.len:e.pos+t,n=new $root$1.Counter.CounterItem;e.pos<r;){var o=e.uint32();switch(o>>>3){case 1:n.lts=e.int64();break;case 2:n.id=e.int32();break;case 3:n.value=e.int32();break;case 4:n.tagErrorCode=e.int32();break;case 5:n.streamId=e.uint32();break;default:e.skipType(7&o)}}return n},e.decodeDelimited=function(e){return e instanceof $Reader$1||(e=new $Reader$1(e)),this.decode(e,e.uint32())},e.verify=function(e){return"object"!==_typeof(e)||null===e?"object expected":null!=e.lts&&e.hasOwnProperty("lts")&&!($util$1.isInteger(e.lts)||e.lts&&$util$1.isInteger(e.lts.low)&&$util$1.isInteger(e.lts.high))?"lts: integer|Long expected":null!=e.id&&e.hasOwnProperty("id")&&!$util$1.isInteger(e.id)?"id: integer expected":null!=e.value&&e.hasOwnProperty("value")&&!$util$1.isInteger(e.value)?"value: integer expected":null!=e.tagErrorCode&&e.hasOwnProperty("tagErrorCode")&&!$util$1.isInteger(e.tagErrorCode)?"tagErrorCode: integer expected":null!=e.streamId&&e.hasOwnProperty("streamId")&&!$util$1.isInteger(e.streamId)?"streamId: integer expected":null},e.fromObject=function(e){if(e instanceof $root$1.Counter.CounterItem)return e;var t=new $root$1.Counter.CounterItem;return null!=e.lts&&($util$1.Long?(t.lts=$util$1.Long.fromValue(e.lts)).unsigned=!1:"string"==typeof e.lts?t.lts=parseInt(e.lts,10):"number"==typeof e.lts?t.lts=e.lts:"object"===_typeof(e.lts)&&(t.lts=new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber())),null!=e.id&&(t.id=0|e.id),null!=e.value&&(t.value=0|e.value),null!=e.tagErrorCode&&(t.tagErrorCode=0|e.tagErrorCode),null!=e.streamId&&(t.streamId=e.streamId>>>0),t},e.toObject=function(e,t){t||(t={});var r={};if(t.defaults){if($util$1.Long){var n=new $util$1.Long(0,0,!1);r.lts=t.longs===String?n.toString():t.longs===Number?n.toNumber():n}else r.lts=t.longs===String?"0":0;r.id=0,r.value=0,r.tagErrorCode=0,r.streamId=0}return null!=e.lts&&e.hasOwnProperty("lts")&&("number"==typeof e.lts?r.lts=t.longs===String?String(e.lts):e.lts:r.lts=t.longs===String?$util$1.Long.prototype.toString.call(e.lts):t.longs===Number?new $util$1.LongBits(e.lts.low>>>0,e.lts.high>>>0).toNumber():e.lts),null!=e.id&&e.hasOwnProperty("id")&&(r.id=e.id),null!=e.value&&e.hasOwnProperty("value")&&(r.value=e.value),null!=e.tagErrorCode&&e.hasOwnProperty("tagErrorCode")&&(r.tagErrorCode=e.tagErrorCode),null!=e.streamId&&e.hasOwnProperty("streamId")&&(r.streamId=e.streamId),r},e.prototype.toJSON=function(){return this.constructor.toObject(this,indexMinimal_6.toJSONOptions)},e}(),e}(),ProtoPackets$1=Object.freeze({Session:Session,ApEvent:ApEvent,Link:Link,Logout:Logout,TxMessage:TxMessage,RxMessage:RxMessage,KickedOff:KickedOff,TxMessageRes:TxMessageRes,ChnJoin:ChnJoin,ChnJoinRes:ChnJoinRes,ChnLeave:ChnLeave,ChnGetMembers:ChnGetMembers,ChnGetMembersRes:ChnGetMembersRes,ChnMemberJoined:ChnMemberJoined,ChnMemberLeft:ChnMemberLeft,QueryPeersOnlineStatus:QueryPeersOnlineStatus,QueryPeersOnlineStatusRes:QueryPeersOnlineStatusRes,RenewToken:RenewToken,OperateAttribute:OperateAttribute,OperateAttributeRes:OperateAttributeRes,ApRequest:ApRequest,LinkTcpEvent:LinkTcpEvent,LinkLoginRequest:LinkLoginRequest,ConnectionStateChange:ConnectionStateChange,ApiExec:ApiExec,Counter:Counter,default:$root$1}),Counter$1=1,ApiExec$1=154,Session$1=164,ApEvent$1=165,Link$1=166,Logout$1=167,TxMessage$1=168,RxMessage$1=169,KickedOff$1=170,TxMessageRes$1=171,ChnJoin$1=172,ChnJoinRes$1=173,ChnLeave$1=174,ChnGetMembers$1=175,ChnGetMembersRes$1=176,ChnMemberJoined$1=177,ChnMemberLeft$1=178,QueryPeersOnlineStatus$1=179,QueryPeersOnlineStatusRes$1=180,RenewToken$1=181,OperateAttribute$1=186,OperateAttributeRes$1=187,ApRequest$1=188,LinkTcpEvent$1=189,LinkLoginRequest$1=190,ConnectionStateChange$1=191,reportId={Counter:Counter$1,ApiExec:ApiExec$1,Session:Session$1,ApEvent:ApEvent$1,Link:Link$1,Logout:Logout$1,TxMessage:TxMessage$1,RxMessage:RxMessage$1,KickedOff:KickedOff$1,TxMessageRes:TxMessageRes$1,ChnJoin:ChnJoin$1,ChnJoinRes:ChnJoinRes$1,ChnLeave:ChnLeave$1,ChnGetMembers:ChnGetMembers$1,ChnGetMembersRes:ChnGetMembersRes$1,ChnMemberJoined:ChnMemberJoined$1,ChnMemberLeft:ChnMemberLeft$1,QueryPeersOnlineStatus:QueryPeersOnlineStatus$1,QueryPeersOnlineStatusRes:QueryPeersOnlineStatusRes$1,RenewToken:RenewToken$1,OperateAttribute:OperateAttribute$1,OperateAttributeRes:OperateAttributeRes$1,ApRequest:ApRequest$1,LinkTcpEvent:LinkTcpEvent$1,LinkLoginRequest:LinkLoginRequest$1,ConnectionStateChange:ConnectionStateChange$1},ReportId=Object.freeze({Counter:Counter$1,ApiExec:ApiExec$1,Session:Session$1,ApEvent:ApEvent$1,Link:Link$1,Logout:Logout$1,TxMessage:TxMessage$1,RxMessage:RxMessage$1,KickedOff:KickedOff$1,TxMessageRes:TxMessageRes$1,ChnJoin:ChnJoin$1,ChnJoinRes:ChnJoinRes$1,ChnLeave:ChnLeave$1,ChnGetMembers:ChnGetMembers$1,ChnGetMembersRes:ChnGetMembersRes$1,ChnMemberJoined:ChnMemberJoined$1,ChnMemberLeft:ChnMemberLeft$1,QueryPeersOnlineStatus:QueryPeersOnlineStatus$1,QueryPeersOnlineStatusRes:QueryPeersOnlineStatusRes$1,RenewToken:RenewToken$1,OperateAttribute:OperateAttribute$1,OperateAttributeRes:OperateAttributeRes$1,ApRequest:ApRequest$1,LinkTcpEvent:LinkTcpEvent$1,LinkLoginRequest:LinkLoginRequest$1,ConnectionStateChange:ConnectionStateChange$1,default:reportId});function asyncGeneratorStep$5(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$5(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$5(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$5(i,n,o,s,a,"throw",e)}s(void 0)})}}var EVENT_REPORT_DOMAIN="webcollector-rtm.agora.io",EVENT_REPORT_BACKUP_DOMAIN="webcollector-2.agoraio.cn";function sendReport(e,t){return _sendReport.apply(this,arguments)}function _sendReport(){return(_sendReport=_asyncToGenerator$5(regenerator.mark(function e(t,r){var n,o,i;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:e.next=2;break;case 2:return n=ProtoPackets$1[t].encode(r).finish(),(o=new URLSearchParams).append("sentTs",Math.ceil(Date.now()/1e3).toString()),o.append("id",ReportId[t].toString()),i=function(e){return ky.post("https://".concat(e,":6443/events/proto-raw"),{body:n,retry:1,timeout:1e4,searchParams:o,headers:{"Content-Type":"application/octet-stream"},mode:"cors",cache:"no-cache",credentials:"same-origin"})},e.prev=7,e.next=10,i(EVENT_REPORT_DOMAIN);case 10:e.next=16;break;case 12:return e.prev=12,e.t0=e.catch(7),e.next=16,i(EVENT_REPORT_BACKUP_DOMAIN);case 16:case"end":return e.stop()}},e,null,[[7,12]])}))).apply(this,arguments)}function getElapse(e){return void 0===e?long_1.fromNumber(0):long_1.fromNumber(Date.now()-e)}function _typeof$6(e){return(_typeof$6="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck$7(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$4(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$4(e,t,r){return t&&_defineProperties$4(e.prototype,t),r&&_defineProperties$4(e,r),e}function _possibleConstructorReturn$6(e,t){return!t||"object"!==_typeof$6(t)&&"function"!=typeof t?_assertThisInitialized$6(e):t}function _assertThisInitialized$6(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$6(e){return(_getPrototypeOf$6=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$6(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$6(e,t)}function _setPrototypeOf$6(e,t){return(_setPrototypeOf$6=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Context=function(e){function t(e,r){var n;return _classCallCheck$7(this,t),(n=_possibleConstructorReturn$6(this,_getPrototypeOf$6(t).call(this,r,"Context"))).appId=e,n._token=void 0,n._uid=void 0,n._sid=void 0,n._area=void 0,n}return _inherits$6(t,createEventBase()),_createClass$4(t,[{key:"token",set:function(e){this.log("The token is set to %s",e),this._token="string"==typeof e&&e?e:void 0}},{key:"uid",set:function(e){if(this.log("The user ID is set to %s",e),!isValidId(e))throw new RtmInternalError;this._uid=e},get:function(){if("string"==typeof this._uid&&this._uid)return this._uid;throw new RtmInternalError("Cannot get illegal uid")}},{key:"key",get:function(){if("string"==typeof this._token&&this._token)return this._token;if("string"==typeof this.appId&&this.appId)return this.appId;throw new RtmInternalError("Cannot get illegal key")}},{key:"sid",get:function(){if("string"==typeof this._sid&&this._sid)return this._sid;throw new RtmInternalError("Cannot get illegal sid")},set:function(e){if(this.log("sid is set to %s",e),"string"!=typeof e||!e)throw new RtmInternalError;this._sid=e}},{key:"area",get:function(){if("string"==typeof this._area&&this._area)return this._area;throw new RtmInternalError("Cannot get illegal area")},set:function(e){if(this.log("area is set to %s",e),"string"!=typeof e||!e)throw new RtmInternalError("The area is illegal");this._area=e}}]),t}();function compact(e){for(var t=-1,r=null==e?0:e.length,n=0,o=[];++t<r;){var i=e[t];i&&(o[n++]=i)}return o}var compact_1=compact,common$1=createCommonjsModule(function(e,t){var r="undefined"!=typeof Uint8Array&&"undefined"!=typeof Uint16Array&&"undefined"!=typeof Int32Array;function n(e,t){return Object.prototype.hasOwnProperty.call(e,t)}t.assign=function(e){for(var t=Array.prototype.slice.call(arguments,1);t.length;){var r=t.shift();if(r){if("object"!==_typeof(r))throw new TypeError(r+"must be non-object");for(var o in r)n(r,o)&&(e[o]=r[o])}}return e},t.shrinkBuf=function(e,t){return e.length===t?e:e.subarray?e.subarray(0,t):(e.length=t,e)};var o={arraySet:function(e,t,r,n,o){if(t.subarray&&e.subarray)e.set(t.subarray(r,r+n),o);else for(var i=0;i<n;i++)e[o+i]=t[r+i]},flattenChunks:function(e){var t,r,n,o,i,s;for(n=0,t=0,r=e.length;t<r;t++)n+=e[t].length;for(s=new Uint8Array(n),o=0,t=0,r=e.length;t<r;t++)i=e[t],s.set(i,o),o+=i.length;return s}},i={arraySet:function(e,t,r,n,o){for(var i=0;i<n;i++)e[o+i]=t[r+i]},flattenChunks:function(e){return[].concat.apply([],e)}};t.setTyped=function(e){e?(t.Buf8=Uint8Array,t.Buf16=Uint16Array,t.Buf32=Int32Array,t.assign(t,o)):(t.Buf8=Array,t.Buf16=Array,t.Buf32=Array,t.assign(t,i))},t.setTyped(r)}),common_1=common$1.assign,common_2=common$1.shrinkBuf,common_3=common$1.setTyped,common_4=common$1.Buf8,common_5=common$1.Buf16,common_6=common$1.Buf32,Z_FIXED=4,Z_BINARY=0,Z_TEXT=1,Z_UNKNOWN=2;function zero$1(e){for(var t=e.length;--t>=0;)e[t]=0}var STORED_BLOCK=0,STATIC_TREES=1,DYN_TREES=2,MIN_MATCH=3,MAX_MATCH=258,LENGTH_CODES=29,LITERALS=256,L_CODES=LITERALS+1+LENGTH_CODES,D_CODES=30,BL_CODES=19,HEAP_SIZE=2*L_CODES+1,MAX_BITS=15,Buf_size=16,MAX_BL_BITS=7,END_BLOCK=256,REP_3_6=16,REPZ_3_10=17,REPZ_11_138=18,extra_lbits=[0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0],extra_dbits=[0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13],extra_blbits=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7],bl_order=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15],DIST_CODE_LEN=512,static_ltree=new Array(2*(L_CODES+2));zero$1(static_ltree);var static_dtree=new Array(2*D_CODES);zero$1(static_dtree);var _dist_code=new Array(DIST_CODE_LEN);zero$1(_dist_code);var _length_code=new Array(MAX_MATCH-MIN_MATCH+1);zero$1(_length_code);var base_length=new Array(LENGTH_CODES);zero$1(base_length);var base_dist=new Array(D_CODES),static_l_desc,static_d_desc,static_bl_desc;function StaticTreeDesc(e,t,r,n,o){this.static_tree=e,this.extra_bits=t,this.extra_base=r,this.elems=n,this.max_length=o,this.has_stree=e&&e.length}function TreeDesc(e,t){this.dyn_tree=e,this.max_code=0,this.stat_desc=t}function d_code(e){return e<256?_dist_code[e]:_dist_code[256+(e>>>7)]}function put_short(e,t){e.pending_buf[e.pending++]=255&t,e.pending_buf[e.pending++]=t>>>8&255}function send_bits(e,t,r){e.bi_valid>Buf_size-r?(e.bi_buf|=t<<e.bi_valid&65535,put_short(e,e.bi_buf),e.bi_buf=t>>Buf_size-e.bi_valid,e.bi_valid+=r-Buf_size):(e.bi_buf|=t<<e.bi_valid&65535,e.bi_valid+=r)}function send_code(e,t,r){send_bits(e,r[2*t],r[2*t+1])}function bi_reverse(e,t){var r=0;do{r|=1&e,e>>>=1,r<<=1}while(--t>0);return r>>>1}function bi_flush(e){16===e.bi_valid?(put_short(e,e.bi_buf),e.bi_buf=0,e.bi_valid=0):e.bi_valid>=8&&(e.pending_buf[e.pending++]=255&e.bi_buf,e.bi_buf>>=8,e.bi_valid-=8)}function gen_bitlen(e,t){var r,n,o,i,s,a,u=t.dyn_tree,l=t.max_code,c=t.stat_desc.static_tree,p=t.stat_desc.has_stree,f=t.stat_desc.extra_bits,d=t.stat_desc.extra_base,g=t.stat_desc.max_length,h=0;for(i=0;i<=MAX_BITS;i++)e.bl_count[i]=0;for(u[2*e.heap[e.heap_max]+1]=0,r=e.heap_max+1;r<HEAP_SIZE;r++)(i=u[2*u[2*(n=e.heap[r])+1]+1]+1)>g&&(i=g,h++),u[2*n+1]=i,n>l||(e.bl_count[i]++,s=0,n>=d&&(s=f[n-d]),a=u[2*n],e.opt_len+=a*(i+s),p&&(e.static_len+=a*(c[2*n+1]+s)));if(0!==h){do{for(i=g-1;0===e.bl_count[i];)i--;e.bl_count[i]--,e.bl_count[i+1]+=2,e.bl_count[g]--,h-=2}while(h>0);for(i=g;0!==i;i--)for(n=e.bl_count[i];0!==n;)(o=e.heap[--r])>l||(u[2*o+1]!==i&&(e.opt_len+=(i-u[2*o+1])*u[2*o],u[2*o+1]=i),n--)}}function gen_codes(e,t,r){var n,o,i=new Array(MAX_BITS+1),s=0;for(n=1;n<=MAX_BITS;n++)i[n]=s=s+r[n-1]<<1;for(o=0;o<=t;o++){var a=e[2*o+1];0!==a&&(e[2*o]=bi_reverse(i[a]++,a))}}function tr_static_init(){var e,t,r,n,o,i=new Array(MAX_BITS+1);for(r=0,n=0;n<LENGTH_CODES-1;n++)for(base_length[n]=r,e=0;e<1<<extra_lbits[n];e++)_length_code[r++]=n;for(_length_code[r-1]=n,o=0,n=0;n<16;n++)for(base_dist[n]=o,e=0;e<1<<extra_dbits[n];e++)_dist_code[o++]=n;for(o>>=7;n<D_CODES;n++)for(base_dist[n]=o<<7,e=0;e<1<<extra_dbits[n]-7;e++)_dist_code[256+o++]=n;for(t=0;t<=MAX_BITS;t++)i[t]=0;for(e=0;e<=143;)static_ltree[2*e+1]=8,e++,i[8]++;for(;e<=255;)static_ltree[2*e+1]=9,e++,i[9]++;for(;e<=279;)static_ltree[2*e+1]=7,e++,i[7]++;for(;e<=287;)static_ltree[2*e+1]=8,e++,i[8]++;for(gen_codes(static_ltree,L_CODES+1,i),e=0;e<D_CODES;e++)static_dtree[2*e+1]=5,static_dtree[2*e]=bi_reverse(e,5);static_l_desc=new StaticTreeDesc(static_ltree,extra_lbits,LITERALS+1,L_CODES,MAX_BITS),static_d_desc=new StaticTreeDesc(static_dtree,extra_dbits,0,D_CODES,MAX_BITS),static_bl_desc=new StaticTreeDesc(new Array(0),extra_blbits,0,BL_CODES,MAX_BL_BITS)}function init_block(e){var t;for(t=0;t<L_CODES;t++)e.dyn_ltree[2*t]=0;for(t=0;t<D_CODES;t++)e.dyn_dtree[2*t]=0;for(t=0;t<BL_CODES;t++)e.bl_tree[2*t]=0;e.dyn_ltree[2*END_BLOCK]=1,e.opt_len=e.static_len=0,e.last_lit=e.matches=0}function bi_windup(e){e.bi_valid>8?put_short(e,e.bi_buf):e.bi_valid>0&&(e.pending_buf[e.pending++]=e.bi_buf),e.bi_buf=0,e.bi_valid=0}function copy_block(e,t,r,n){bi_windup(e),n&&(put_short(e,r),put_short(e,~r)),common$1.arraySet(e.pending_buf,e.window,t,r,e.pending),e.pending+=r}function smaller(e,t,r,n){var o=2*t,i=2*r;return e[o]<e[i]||e[o]===e[i]&&n[t]<=n[r]}function pqdownheap(e,t,r){for(var n=e.heap[r],o=r<<1;o<=e.heap_len&&(o<e.heap_len&&smaller(t,e.heap[o+1],e.heap[o],e.depth)&&o++,!smaller(t,n,e.heap[o],e.depth));)e.heap[r]=e.heap[o],r=o,o<<=1;e.heap[r]=n}function compress_block(e,t,r){var n,o,i,s,a=0;if(0!==e.last_lit)do{n=e.pending_buf[e.d_buf+2*a]<<8|e.pending_buf[e.d_buf+2*a+1],o=e.pending_buf[e.l_buf+a],a++,0===n?send_code(e,o,t):(send_code(e,(i=_length_code[o])+LITERALS+1,t),0!==(s=extra_lbits[i])&&send_bits(e,o-=base_length[i],s),send_code(e,i=d_code(--n),r),0!==(s=extra_dbits[i])&&send_bits(e,n-=base_dist[i],s))}while(a<e.last_lit);send_code(e,END_BLOCK,t)}function build_tree(e,t){var r,n,o,i=t.dyn_tree,s=t.stat_desc.static_tree,a=t.stat_desc.has_stree,u=t.stat_desc.elems,l=-1;for(e.heap_len=0,e.heap_max=HEAP_SIZE,r=0;r<u;r++)0!==i[2*r]?(e.heap[++e.heap_len]=l=r,e.depth[r]=0):i[2*r+1]=0;for(;e.heap_len<2;)i[2*(o=e.heap[++e.heap_len]=l<2?++l:0)]=1,e.depth[o]=0,e.opt_len--,a&&(e.static_len-=s[2*o+1]);for(t.max_code=l,r=e.heap_len>>1;r>=1;r--)pqdownheap(e,i,r);o=u;do{r=e.heap[1],e.heap[1]=e.heap[e.heap_len--],pqdownheap(e,i,1),n=e.heap[1],e.heap[--e.heap_max]=r,e.heap[--e.heap_max]=n,i[2*o]=i[2*r]+i[2*n],e.depth[o]=(e.depth[r]>=e.depth[n]?e.depth[r]:e.depth[n])+1,i[2*r+1]=i[2*n+1]=o,e.heap[1]=o++,pqdownheap(e,i,1)}while(e.heap_len>=2);e.heap[--e.heap_max]=e.heap[1],gen_bitlen(e,t),gen_codes(i,l,e.bl_count)}function scan_tree(e,t,r){var n,o,i=-1,s=t[1],a=0,u=7,l=4;for(0===s&&(u=138,l=3),t[2*(r+1)+1]=65535,n=0;n<=r;n++)o=s,s=t[2*(n+1)+1],++a<u&&o===s||(a<l?e.bl_tree[2*o]+=a:0!==o?(o!==i&&e.bl_tree[2*o]++,e.bl_tree[2*REP_3_6]++):a<=10?e.bl_tree[2*REPZ_3_10]++:e.bl_tree[2*REPZ_11_138]++,a=0,i=o,0===s?(u=138,l=3):o===s?(u=6,l=3):(u=7,l=4))}function send_tree(e,t,r){var n,o,i=-1,s=t[1],a=0,u=7,l=4;for(0===s&&(u=138,l=3),n=0;n<=r;n++)if(o=s,s=t[2*(n+1)+1],!(++a<u&&o===s)){if(a<l)do{send_code(e,o,e.bl_tree)}while(0!=--a);else 0!==o?(o!==i&&(send_code(e,o,e.bl_tree),a--),send_code(e,REP_3_6,e.bl_tree),send_bits(e,a-3,2)):a<=10?(send_code(e,REPZ_3_10,e.bl_tree),send_bits(e,a-3,3)):(send_code(e,REPZ_11_138,e.bl_tree),send_bits(e,a-11,7));a=0,i=o,0===s?(u=138,l=3):o===s?(u=6,l=3):(u=7,l=4)}}function build_bl_tree(e){var t;for(scan_tree(e,e.dyn_ltree,e.l_desc.max_code),scan_tree(e,e.dyn_dtree,e.d_desc.max_code),build_tree(e,e.bl_desc),t=BL_CODES-1;t>=3&&0===e.bl_tree[2*bl_order[t]+1];t--);return e.opt_len+=3*(t+1)+5+5+4,t}function send_all_trees(e,t,r,n){var o;for(send_bits(e,t-257,5),send_bits(e,r-1,5),send_bits(e,n-4,4),o=0;o<n;o++)send_bits(e,e.bl_tree[2*bl_order[o]+1],3);send_tree(e,e.dyn_ltree,t-1),send_tree(e,e.dyn_dtree,r-1)}function detect_data_type(e){var t,r=4093624447;for(t=0;t<=31;t++,r>>>=1)if(1&r&&0!==e.dyn_ltree[2*t])return Z_BINARY;if(0!==e.dyn_ltree[18]||0!==e.dyn_ltree[20]||0!==e.dyn_ltree[26])return Z_TEXT;for(t=32;t<LITERALS;t++)if(0!==e.dyn_ltree[2*t])return Z_TEXT;return Z_BINARY}zero$1(base_dist);var static_init_done=!1;function _tr_init(e){static_init_done||(tr_static_init(),static_init_done=!0),e.l_desc=new TreeDesc(e.dyn_ltree,static_l_desc),e.d_desc=new TreeDesc(e.dyn_dtree,static_d_desc),e.bl_desc=new TreeDesc(e.bl_tree,static_bl_desc),e.bi_buf=0,e.bi_valid=0,init_block(e)}function _tr_stored_block(e,t,r,n){send_bits(e,(STORED_BLOCK<<1)+(n?1:0),3),copy_block(e,t,r,!0)}function _tr_align(e){send_bits(e,STATIC_TREES<<1,3),send_code(e,END_BLOCK,static_ltree),bi_flush(e)}function _tr_flush_block(e,t,r,n){var o,i,s=0;e.level>0?(e.strm.data_type===Z_UNKNOWN&&(e.strm.data_type=detect_data_type(e)),build_tree(e,e.l_desc),build_tree(e,e.d_desc),s=build_bl_tree(e),o=e.opt_len+3+7>>>3,(i=e.static_len+3+7>>>3)<=o&&(o=i)):o=i=r+5,r+4<=o&&-1!==t?_tr_stored_block(e,t,r,n):e.strategy===Z_FIXED||i===o?(send_bits(e,(STATIC_TREES<<1)+(n?1:0),3),compress_block(e,static_ltree,static_dtree)):(send_bits(e,(DYN_TREES<<1)+(n?1:0),3),send_all_trees(e,e.l_desc.max_code+1,e.d_desc.max_code+1,s+1),compress_block(e,e.dyn_ltree,e.dyn_dtree)),init_block(e),n&&bi_windup(e)}function _tr_tally(e,t,r){return e.pending_buf[e.d_buf+2*e.last_lit]=t>>>8&255,e.pending_buf[e.d_buf+2*e.last_lit+1]=255&t,e.pending_buf[e.l_buf+e.last_lit]=255&r,e.last_lit++,0===t?e.dyn_ltree[2*r]++:(e.matches++,t--,e.dyn_ltree[2*(_length_code[r]+LITERALS+1)]++,e.dyn_dtree[2*d_code(t)]++),e.last_lit===e.lit_bufsize-1}var _tr_init_1=_tr_init,_tr_stored_block_1=_tr_stored_block,_tr_flush_block_1=_tr_flush_block,_tr_tally_1=_tr_tally,_tr_align_1=_tr_align,trees={_tr_init:_tr_init_1,_tr_stored_block:_tr_stored_block_1,_tr_flush_block:_tr_flush_block_1,_tr_tally:_tr_tally_1,_tr_align:_tr_align_1};function adler32(e,t,r,n){for(var o=65535&e|0,i=e>>>16&65535|0,s=0;0!==r;){r-=s=r>2e3?2e3:r;do{i=i+(o=o+t[n++]|0)|0}while(--s);o%=65521,i%=65521}return o|i<<16|0}var adler32_1=adler32;function makeTable(){for(var e,t=[],r=0;r<256;r++){e=r;for(var n=0;n<8;n++)e=1&e?3988292384^e>>>1:e>>>1;t[r]=e}return t}var crcTable=makeTable();function crc32(e,t,r,n){var o=crcTable,i=n+r;e^=-1;for(var s=n;s<i;s++)e=e>>>8^o[255&(e^t[s])];return-1^e}var crc32_1=crc32,messages={2:"need dictionary",1:"stream end",0:"","-1":"file error","-2":"stream error","-3":"data error","-4":"insufficient memory","-5":"buffer error","-6":"incompatible version"},Z_NO_FLUSH=0,Z_PARTIAL_FLUSH=1,Z_FULL_FLUSH=3,Z_FINISH=4,Z_BLOCK=5,Z_OK=0,Z_STREAM_END=1,Z_STREAM_ERROR=-2,Z_DATA_ERROR=-3,Z_BUF_ERROR=-5,Z_DEFAULT_COMPRESSION=-1,Z_FILTERED=1,Z_HUFFMAN_ONLY=2,Z_RLE=3,Z_FIXED$1=4,Z_DEFAULT_STRATEGY=0,Z_UNKNOWN$1=2,Z_DEFLATED=8,MAX_MEM_LEVEL=9,MAX_WBITS=15,DEF_MEM_LEVEL=8,LENGTH_CODES$1=29,LITERALS$1=256,L_CODES$1=LITERALS$1+1+LENGTH_CODES$1,D_CODES$1=30,BL_CODES$1=19,HEAP_SIZE$1=2*L_CODES$1+1,MAX_BITS$1=15,MIN_MATCH$1=3,MAX_MATCH$1=258,MIN_LOOKAHEAD=MAX_MATCH$1+MIN_MATCH$1+1,PRESET_DICT=32,INIT_STATE=42,EXTRA_STATE=69,NAME_STATE=73,COMMENT_STATE=91,HCRC_STATE=103,BUSY_STATE=113,FINISH_STATE=666,BS_NEED_MORE=1,BS_BLOCK_DONE=2,BS_FINISH_STARTED=3,BS_FINISH_DONE=4,OS_CODE=3,configuration_table;function err(e,t){return e.msg=messages[t],t}function rank(e){return(e<<1)-(e>4?9:0)}function zero$2(e){for(var t=e.length;--t>=0;)e[t]=0}function flush_pending(e){var t=e.state,r=t.pending;r>e.avail_out&&(r=e.avail_out),0!==r&&(common$1.arraySet(e.output,t.pending_buf,t.pending_out,r,e.next_out),e.next_out+=r,t.pending_out+=r,e.total_out+=r,e.avail_out-=r,t.pending-=r,0===t.pending&&(t.pending_out=0))}function flush_block_only(e,t){trees._tr_flush_block(e,e.block_start>=0?e.block_start:-1,e.strstart-e.block_start,t),e.block_start=e.strstart,flush_pending(e.strm)}function put_byte(e,t){e.pending_buf[e.pending++]=t}function putShortMSB(e,t){e.pending_buf[e.pending++]=t>>>8&255,e.pending_buf[e.pending++]=255&t}function read_buf(e,t,r,n){var o=e.avail_in;return o>n&&(o=n),0===o?0:(e.avail_in-=o,common$1.arraySet(t,e.input,e.next_in,o,r),1===e.state.wrap?e.adler=adler32_1(e.adler,t,o,r):2===e.state.wrap&&(e.adler=crc32_1(e.adler,t,o,r)),e.next_in+=o,e.total_in+=o,o)}function longest_match(e,t){var r,n,o=e.max_chain_length,i=e.strstart,s=e.prev_length,a=e.nice_match,u=e.strstart>e.w_size-MIN_LOOKAHEAD?e.strstart-(e.w_size-MIN_LOOKAHEAD):0,l=e.window,c=e.w_mask,p=e.prev,f=e.strstart+MAX_MATCH$1,d=l[i+s-1],g=l[i+s];e.prev_length>=e.good_match&&(o>>=2),a>e.lookahead&&(a=e.lookahead);do{if(l[(r=t)+s]===g&&l[r+s-1]===d&&l[r]===l[i]&&l[++r]===l[i+1]){i+=2,r++;do{}while(l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&l[++i]===l[++r]&&i<f);if(n=MAX_MATCH$1-(f-i),i=f-MAX_MATCH$1,n>s){if(e.match_start=t,s=n,n>=a)break;d=l[i+s-1],g=l[i+s]}}}while((t=p[t&c])>u&&0!=--o);return s<=e.lookahead?s:e.lookahead}function fill_window(e){var t,r,n,o,i,s=e.w_size;do{if(o=e.window_size-e.lookahead-e.strstart,e.strstart>=s+(s-MIN_LOOKAHEAD)){common$1.arraySet(e.window,e.window,s,s,0),e.match_start-=s,e.strstart-=s,e.block_start-=s,t=r=e.hash_size;do{n=e.head[--t],e.head[t]=n>=s?n-s:0}while(--r);t=r=s;do{n=e.prev[--t],e.prev[t]=n>=s?n-s:0}while(--r);o+=s}if(0===e.strm.avail_in)break;if(r=read_buf(e.strm,e.window,e.strstart+e.lookahead,o),e.lookahead+=r,e.lookahead+e.insert>=MIN_MATCH$1)for(i=e.strstart-e.insert,e.ins_h=e.window[i],e.ins_h=(e.ins_h<<e.hash_shift^e.window[i+1])&e.hash_mask;e.insert&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[i+MIN_MATCH$1-1])&e.hash_mask,e.prev[i&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=i,i++,e.insert--,!(e.lookahead+e.insert<MIN_MATCH$1)););}while(e.lookahead<MIN_LOOKAHEAD&&0!==e.strm.avail_in)}function deflate_stored(e,t){var r=65535;for(r>e.pending_buf_size-5&&(r=e.pending_buf_size-5);;){if(e.lookahead<=1){if(fill_window(e),0===e.lookahead&&t===Z_NO_FLUSH)return BS_NEED_MORE;if(0===e.lookahead)break}e.strstart+=e.lookahead,e.lookahead=0;var n=e.block_start+r;if((0===e.strstart||e.strstart>=n)&&(e.lookahead=e.strstart-n,e.strstart=n,flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE;if(e.strstart-e.block_start>=e.w_size-MIN_LOOKAHEAD&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):(e.strstart>e.block_start&&(flush_block_only(e,!1),e.strm.avail_out),BS_NEED_MORE)}function deflate_fast(e,t){for(var r,n;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&t===Z_NO_FLUSH)return BS_NEED_MORE;if(0===e.lookahead)break}if(r=0,e.lookahead>=MIN_MATCH$1&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+MIN_MATCH$1-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),0!==r&&e.strstart-r<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,r)),e.match_length>=MIN_MATCH$1)if(n=trees._tr_tally(e,e.strstart-e.match_start,e.match_length-MIN_MATCH$1),e.lookahead-=e.match_length,e.match_length<=e.max_lazy_match&&e.lookahead>=MIN_MATCH$1){e.match_length--;do{e.strstart++,e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+MIN_MATCH$1-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart}while(0!=--e.match_length);e.strstart++}else e.strstart+=e.match_length,e.match_length=0,e.ins_h=e.window[e.strstart],e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+1])&e.hash_mask;else n=trees._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++;if(n&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=e.strstart<MIN_MATCH$1-1?e.strstart:MIN_MATCH$1-1,t===Z_FINISH?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE}function deflate_slow(e,t){for(var r,n,o;;){if(e.lookahead<MIN_LOOKAHEAD){if(fill_window(e),e.lookahead<MIN_LOOKAHEAD&&t===Z_NO_FLUSH)return BS_NEED_MORE;if(0===e.lookahead)break}if(r=0,e.lookahead>=MIN_MATCH$1&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+MIN_MATCH$1-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart),e.prev_length=e.match_length,e.prev_match=e.match_start,e.match_length=MIN_MATCH$1-1,0!==r&&e.prev_length<e.max_lazy_match&&e.strstart-r<=e.w_size-MIN_LOOKAHEAD&&(e.match_length=longest_match(e,r),e.match_length<=5&&(e.strategy===Z_FILTERED||e.match_length===MIN_MATCH$1&&e.strstart-e.match_start>4096)&&(e.match_length=MIN_MATCH$1-1)),e.prev_length>=MIN_MATCH$1&&e.match_length<=e.prev_length){o=e.strstart+e.lookahead-MIN_MATCH$1,n=trees._tr_tally(e,e.strstart-1-e.prev_match,e.prev_length-MIN_MATCH$1),e.lookahead-=e.prev_length-1,e.prev_length-=2;do{++e.strstart<=o&&(e.ins_h=(e.ins_h<<e.hash_shift^e.window[e.strstart+MIN_MATCH$1-1])&e.hash_mask,r=e.prev[e.strstart&e.w_mask]=e.head[e.ins_h],e.head[e.ins_h]=e.strstart)}while(0!=--e.prev_length);if(e.match_available=0,e.match_length=MIN_MATCH$1-1,e.strstart++,n&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}else if(e.match_available){if((n=trees._tr_tally(e,0,e.window[e.strstart-1]))&&flush_block_only(e,!1),e.strstart++,e.lookahead--,0===e.strm.avail_out)return BS_NEED_MORE}else e.match_available=1,e.strstart++,e.lookahead--}return e.match_available&&(n=trees._tr_tally(e,0,e.window[e.strstart-1]),e.match_available=0),e.insert=e.strstart<MIN_MATCH$1-1?e.strstart:MIN_MATCH$1-1,t===Z_FINISH?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE}function deflate_rle(e,t){for(var r,n,o,i,s=e.window;;){if(e.lookahead<=MAX_MATCH$1){if(fill_window(e),e.lookahead<=MAX_MATCH$1&&t===Z_NO_FLUSH)return BS_NEED_MORE;if(0===e.lookahead)break}if(e.match_length=0,e.lookahead>=MIN_MATCH$1&&e.strstart>0&&(n=s[o=e.strstart-1])===s[++o]&&n===s[++o]&&n===s[++o]){i=e.strstart+MAX_MATCH$1;do{}while(n===s[++o]&&n===s[++o]&&n===s[++o]&&n===s[++o]&&n===s[++o]&&n===s[++o]&&n===s[++o]&&n===s[++o]&&o<i);e.match_length=MAX_MATCH$1-(i-o),e.match_length>e.lookahead&&(e.match_length=e.lookahead)}if(e.match_length>=MIN_MATCH$1?(r=trees._tr_tally(e,1,e.match_length-MIN_MATCH$1),e.lookahead-=e.match_length,e.strstart+=e.match_length,e.match_length=0):(r=trees._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++),r&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE}function deflate_huff(e,t){for(var r;;){if(0===e.lookahead&&(fill_window(e),0===e.lookahead)){if(t===Z_NO_FLUSH)return BS_NEED_MORE;break}if(e.match_length=0,r=trees._tr_tally(e,0,e.window[e.strstart]),e.lookahead--,e.strstart++,r&&(flush_block_only(e,!1),0===e.strm.avail_out))return BS_NEED_MORE}return e.insert=0,t===Z_FINISH?(flush_block_only(e,!0),0===e.strm.avail_out?BS_FINISH_STARTED:BS_FINISH_DONE):e.last_lit&&(flush_block_only(e,!1),0===e.strm.avail_out)?BS_NEED_MORE:BS_BLOCK_DONE}function Config(e,t,r,n,o){this.good_length=e,this.max_lazy=t,this.nice_length=r,this.max_chain=n,this.func=o}function lm_init(e){e.window_size=2*e.w_size,zero$2(e.head),e.max_lazy_match=configuration_table[e.level].max_lazy,e.good_match=configuration_table[e.level].good_length,e.nice_match=configuration_table[e.level].nice_length,e.max_chain_length=configuration_table[e.level].max_chain,e.strstart=0,e.block_start=0,e.lookahead=0,e.insert=0,e.match_length=e.prev_length=MIN_MATCH$1-1,e.match_available=0,e.ins_h=0}function DeflateState(){this.strm=null,this.status=0,this.pending_buf=null,this.pending_buf_size=0,this.pending_out=0,this.pending=0,this.wrap=0,this.gzhead=null,this.gzindex=0,this.method=Z_DEFLATED,this.last_flush=-1,this.w_size=0,this.w_bits=0,this.w_mask=0,this.window=null,this.window_size=0,this.prev=null,this.head=null,this.ins_h=0,this.hash_size=0,this.hash_bits=0,this.hash_mask=0,this.hash_shift=0,this.block_start=0,this.match_length=0,this.prev_match=0,this.match_available=0,this.strstart=0,this.match_start=0,this.lookahead=0,this.prev_length=0,this.max_chain_length=0,this.max_lazy_match=0,this.level=0,this.strategy=0,this.good_match=0,this.nice_match=0,this.dyn_ltree=new common$1.Buf16(2*HEAP_SIZE$1),this.dyn_dtree=new common$1.Buf16(2*(2*D_CODES$1+1)),this.bl_tree=new common$1.Buf16(2*(2*BL_CODES$1+1)),zero$2(this.dyn_ltree),zero$2(this.dyn_dtree),zero$2(this.bl_tree),this.l_desc=null,this.d_desc=null,this.bl_desc=null,this.bl_count=new common$1.Buf16(MAX_BITS$1+1),this.heap=new common$1.Buf16(2*L_CODES$1+1),zero$2(this.heap),this.heap_len=0,this.heap_max=0,this.depth=new common$1.Buf16(2*L_CODES$1+1),zero$2(this.depth),this.l_buf=0,this.lit_bufsize=0,this.last_lit=0,this.d_buf=0,this.opt_len=0,this.static_len=0,this.matches=0,this.insert=0,this.bi_buf=0,this.bi_valid=0}function deflateResetKeep(e){var t;return e&&e.state?(e.total_in=e.total_out=0,e.data_type=Z_UNKNOWN$1,(t=e.state).pending=0,t.pending_out=0,t.wrap<0&&(t.wrap=-t.wrap),t.status=t.wrap?INIT_STATE:BUSY_STATE,e.adler=2===t.wrap?0:1,t.last_flush=Z_NO_FLUSH,trees._tr_init(t),Z_OK):err(e,Z_STREAM_ERROR)}function deflateReset(e){var t=deflateResetKeep(e);return t===Z_OK&&lm_init(e.state),t}function deflateSetHeader(e,t){return e&&e.state?2!==e.state.wrap?Z_STREAM_ERROR:(e.state.gzhead=t,Z_OK):Z_STREAM_ERROR}function deflateInit2(e,t,r,n,o,i){if(!e)return Z_STREAM_ERROR;var s=1;if(t===Z_DEFAULT_COMPRESSION&&(t=6),n<0?(s=0,n=-n):n>15&&(s=2,n-=16),o<1||o>MAX_MEM_LEVEL||r!==Z_DEFLATED||n<8||n>15||t<0||t>9||i<0||i>Z_FIXED$1)return err(e,Z_STREAM_ERROR);8===n&&(n=9);var a=new DeflateState;return e.state=a,a.strm=e,a.wrap=s,a.gzhead=null,a.w_bits=n,a.w_size=1<<a.w_bits,a.w_mask=a.w_size-1,a.hash_bits=o+7,a.hash_size=1<<a.hash_bits,a.hash_mask=a.hash_size-1,a.hash_shift=~~((a.hash_bits+MIN_MATCH$1-1)/MIN_MATCH$1),a.window=new common$1.Buf8(2*a.w_size),a.head=new common$1.Buf16(a.hash_size),a.prev=new common$1.Buf16(a.w_size),a.lit_bufsize=1<<o+6,a.pending_buf_size=4*a.lit_bufsize,a.pending_buf=new common$1.Buf8(a.pending_buf_size),a.d_buf=1*a.lit_bufsize,a.l_buf=3*a.lit_bufsize,a.level=t,a.strategy=i,a.method=r,deflateReset(e)}function deflateInit(e,t){return deflateInit2(e,t,Z_DEFLATED,MAX_WBITS,DEF_MEM_LEVEL,Z_DEFAULT_STRATEGY)}function deflate(e,t){var r,n,o,i;if(!e||!e.state||t>Z_BLOCK||t<0)return e?err(e,Z_STREAM_ERROR):Z_STREAM_ERROR;if(n=e.state,!e.output||!e.input&&0!==e.avail_in||n.status===FINISH_STATE&&t!==Z_FINISH)return err(e,0===e.avail_out?Z_BUF_ERROR:Z_STREAM_ERROR);if(n.strm=e,r=n.last_flush,n.last_flush=t,n.status===INIT_STATE)if(2===n.wrap)e.adler=0,put_byte(n,31),put_byte(n,139),put_byte(n,8),n.gzhead?(put_byte(n,(n.gzhead.text?1:0)+(n.gzhead.hcrc?2:0)+(n.gzhead.extra?4:0)+(n.gzhead.name?8:0)+(n.gzhead.comment?16:0)),put_byte(n,255&n.gzhead.time),put_byte(n,n.gzhead.time>>8&255),put_byte(n,n.gzhead.time>>16&255),put_byte(n,n.gzhead.time>>24&255),put_byte(n,9===n.level?2:n.strategy>=Z_HUFFMAN_ONLY||n.level<2?4:0),put_byte(n,255&n.gzhead.os),n.gzhead.extra&&n.gzhead.extra.length&&(put_byte(n,255&n.gzhead.extra.length),put_byte(n,n.gzhead.extra.length>>8&255)),n.gzhead.hcrc&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending,0)),n.gzindex=0,n.status=EXTRA_STATE):(put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,0),put_byte(n,9===n.level?2:n.strategy>=Z_HUFFMAN_ONLY||n.level<2?4:0),put_byte(n,OS_CODE),n.status=BUSY_STATE);else{var s=Z_DEFLATED+(n.w_bits-8<<4)<<8;s|=(n.strategy>=Z_HUFFMAN_ONLY||n.level<2?0:n.level<6?1:6===n.level?2:3)<<6,0!==n.strstart&&(s|=PRESET_DICT),s+=31-s%31,n.status=BUSY_STATE,putShortMSB(n,s),0!==n.strstart&&(putShortMSB(n,e.adler>>>16),putShortMSB(n,65535&e.adler)),e.adler=1}if(n.status===EXTRA_STATE)if(n.gzhead.extra){for(o=n.pending;n.gzindex<(65535&n.gzhead.extra.length)&&(n.pending!==n.pending_buf_size||(n.gzhead.hcrc&&n.pending>o&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-o,o)),flush_pending(e),o=n.pending,n.pending!==n.pending_buf_size));)put_byte(n,255&n.gzhead.extra[n.gzindex]),n.gzindex++;n.gzhead.hcrc&&n.pending>o&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-o,o)),n.gzindex===n.gzhead.extra.length&&(n.gzindex=0,n.status=NAME_STATE)}else n.status=NAME_STATE;if(n.status===NAME_STATE)if(n.gzhead.name){o=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>o&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-o,o)),flush_pending(e),o=n.pending,n.pending===n.pending_buf_size)){i=1;break}i=n.gzindex<n.gzhead.name.length?255&n.gzhead.name.charCodeAt(n.gzindex++):0,put_byte(n,i)}while(0!==i);n.gzhead.hcrc&&n.pending>o&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-o,o)),0===i&&(n.gzindex=0,n.status=COMMENT_STATE)}else n.status=COMMENT_STATE;if(n.status===COMMENT_STATE)if(n.gzhead.comment){o=n.pending;do{if(n.pending===n.pending_buf_size&&(n.gzhead.hcrc&&n.pending>o&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-o,o)),flush_pending(e),o=n.pending,n.pending===n.pending_buf_size)){i=1;break}i=n.gzindex<n.gzhead.comment.length?255&n.gzhead.comment.charCodeAt(n.gzindex++):0,put_byte(n,i)}while(0!==i);n.gzhead.hcrc&&n.pending>o&&(e.adler=crc32_1(e.adler,n.pending_buf,n.pending-o,o)),0===i&&(n.status=HCRC_STATE)}else n.status=HCRC_STATE;if(n.status===HCRC_STATE&&(n.gzhead.hcrc?(n.pending+2>n.pending_buf_size&&flush_pending(e),n.pending+2<=n.pending_buf_size&&(put_byte(n,255&e.adler),put_byte(n,e.adler>>8&255),e.adler=0,n.status=BUSY_STATE)):n.status=BUSY_STATE),0!==n.pending){if(flush_pending(e),0===e.avail_out)return n.last_flush=-1,Z_OK}else if(0===e.avail_in&&rank(t)<=rank(r)&&t!==Z_FINISH)return err(e,Z_BUF_ERROR);if(n.status===FINISH_STATE&&0!==e.avail_in)return err(e,Z_BUF_ERROR);if(0!==e.avail_in||0!==n.lookahead||t!==Z_NO_FLUSH&&n.status!==FINISH_STATE){var a=n.strategy===Z_HUFFMAN_ONLY?deflate_huff(n,t):n.strategy===Z_RLE?deflate_rle(n,t):configuration_table[n.level].func(n,t);if(a!==BS_FINISH_STARTED&&a!==BS_FINISH_DONE||(n.status=FINISH_STATE),a===BS_NEED_MORE||a===BS_FINISH_STARTED)return 0===e.avail_out&&(n.last_flush=-1),Z_OK;if(a===BS_BLOCK_DONE&&(t===Z_PARTIAL_FLUSH?trees._tr_align(n):t!==Z_BLOCK&&(trees._tr_stored_block(n,0,0,!1),t===Z_FULL_FLUSH&&(zero$2(n.head),0===n.lookahead&&(n.strstart=0,n.block_start=0,n.insert=0))),flush_pending(e),0===e.avail_out))return n.last_flush=-1,Z_OK}return t!==Z_FINISH?Z_OK:n.wrap<=0?Z_STREAM_END:(2===n.wrap?(put_byte(n,255&e.adler),put_byte(n,e.adler>>8&255),put_byte(n,e.adler>>16&255),put_byte(n,e.adler>>24&255),put_byte(n,255&e.total_in),put_byte(n,e.total_in>>8&255),put_byte(n,e.total_in>>16&255),put_byte(n,e.total_in>>24&255)):(putShortMSB(n,e.adler>>>16),putShortMSB(n,65535&e.adler)),flush_pending(e),n.wrap>0&&(n.wrap=-n.wrap),0!==n.pending?Z_OK:Z_STREAM_END)}function deflateEnd(e){var t;return e&&e.state?(t=e.state.status)!==INIT_STATE&&t!==EXTRA_STATE&&t!==NAME_STATE&&t!==COMMENT_STATE&&t!==HCRC_STATE&&t!==BUSY_STATE&&t!==FINISH_STATE?err(e,Z_STREAM_ERROR):(e.state=null,t===BUSY_STATE?err(e,Z_DATA_ERROR):Z_OK):Z_STREAM_ERROR}function deflateSetDictionary(e,t){var r,n,o,i,s,a,u,l,c=t.length;if(!e||!e.state)return Z_STREAM_ERROR;if(2===(i=(r=e.state).wrap)||1===i&&r.status!==INIT_STATE||r.lookahead)return Z_STREAM_ERROR;for(1===i&&(e.adler=adler32_1(e.adler,t,c,0)),r.wrap=0,c>=r.w_size&&(0===i&&(zero$2(r.head),r.strstart=0,r.block_start=0,r.insert=0),l=new common$1.Buf8(r.w_size),common$1.arraySet(l,t,c-r.w_size,r.w_size,0),t=l,c=r.w_size),s=e.avail_in,a=e.next_in,u=e.input,e.avail_in=c,e.next_in=0,e.input=t,fill_window(r);r.lookahead>=MIN_MATCH$1;){n=r.strstart,o=r.lookahead-(MIN_MATCH$1-1);do{r.ins_h=(r.ins_h<<r.hash_shift^r.window[n+MIN_MATCH$1-1])&r.hash_mask,r.prev[n&r.w_mask]=r.head[r.ins_h],r.head[r.ins_h]=n,n++}while(--o);r.strstart=n,r.lookahead=MIN_MATCH$1-1,fill_window(r)}return r.strstart+=r.lookahead,r.block_start=r.strstart,r.insert=r.lookahead,r.lookahead=0,r.match_length=r.prev_length=MIN_MATCH$1-1,r.match_available=0,e.next_in=a,e.input=u,e.avail_in=s,r.wrap=i,Z_OK}configuration_table=[new Config(0,0,0,0,deflate_stored),new Config(4,4,8,4,deflate_fast),new Config(4,5,16,8,deflate_fast),new Config(4,6,32,32,deflate_fast),new Config(4,4,16,16,deflate_slow),new Config(8,16,32,32,deflate_slow),new Config(8,16,128,128,deflate_slow),new Config(8,32,128,256,deflate_slow),new Config(32,128,258,1024,deflate_slow),new Config(32,258,258,4096,deflate_slow)];var deflateInit_1=deflateInit,deflateInit2_1=deflateInit2,deflateReset_1=deflateReset,deflateResetKeep_1=deflateResetKeep,deflateSetHeader_1=deflateSetHeader,deflate_2=deflate,deflateEnd_1=deflateEnd,deflateSetDictionary_1=deflateSetDictionary,deflateInfo="pako deflate (from Nodeca project)",deflate_1={deflateInit:deflateInit_1,deflateInit2:deflateInit2_1,deflateReset:deflateReset_1,deflateResetKeep:deflateResetKeep_1,deflateSetHeader:deflateSetHeader_1,deflate:deflate_2,deflateEnd:deflateEnd_1,deflateSetDictionary:deflateSetDictionary_1,deflateInfo:deflateInfo},STR_APPLY_OK=!0,STR_APPLY_UIA_OK=!0;try{String.fromCharCode.apply(null,[0])}catch(e){STR_APPLY_OK=!1}try{String.fromCharCode.apply(null,new Uint8Array(1))}catch(e){STR_APPLY_UIA_OK=!1}for(var _utf8len=new common$1.Buf8(256),q=0;q<256;q++)_utf8len[q]=q>=252?6:q>=248?5:q>=240?4:q>=224?3:q>=192?2:1;_utf8len[254]=_utf8len[254]=1;var string2buf=function(e){var t,r,n,o,i,s=e.length,a=0;for(o=0;o<s;o++)55296==(64512&(r=e.charCodeAt(o)))&&o+1<s&&56320==(64512&(n=e.charCodeAt(o+1)))&&(r=65536+(r-55296<<10)+(n-56320),o++),a+=r<128?1:r<2048?2:r<65536?3:4;for(t=new common$1.Buf8(a),i=0,o=0;i<a;o++)55296==(64512&(r=e.charCodeAt(o)))&&o+1<s&&56320==(64512&(n=e.charCodeAt(o+1)))&&(r=65536+(r-55296<<10)+(n-56320),o++),r<128?t[i++]=r:r<2048?(t[i++]=192|r>>>6,t[i++]=128|63&r):r<65536?(t[i++]=224|r>>>12,t[i++]=128|r>>>6&63,t[i++]=128|63&r):(t[i++]=240|r>>>18,t[i++]=128|r>>>12&63,t[i++]=128|r>>>6&63,t[i++]=128|63&r);return t};function buf2binstring(e,t){if(t<65534&&(e.subarray&&STR_APPLY_UIA_OK||!e.subarray&&STR_APPLY_OK))return String.fromCharCode.apply(null,common$1.shrinkBuf(e,t));for(var r="",n=0;n<t;n++)r+=String.fromCharCode(e[n]);return r}var buf2binstring_1=function(e){return buf2binstring(e,e.length)},binstring2buf=function(e){for(var t=new common$1.Buf8(e.length),r=0,n=t.length;r<n;r++)t[r]=e.charCodeAt(r);return t},buf2string=function(e,t){var r,n,o,i,s=t||e.length,a=new Array(2*s);for(n=0,r=0;r<s;)if((o=e[r++])<128)a[n++]=o;else if((i=_utf8len[o])>4)a[n++]=65533,r+=i-1;else{for(o&=2===i?31:3===i?15:7;i>1&&r<s;)o=o<<6|63&e[r++],i--;i>1?a[n++]=65533:o<65536?a[n++]=o:(o-=65536,a[n++]=55296|o>>10&1023,a[n++]=56320|1023&o)}return buf2binstring(a,n)},utf8border=function(e,t){var r;for((t=t||e.length)>e.length&&(t=e.length),r=t-1;r>=0&&128==(192&e[r]);)r--;return r<0?t:0===r?t:r+_utf8len[e[r]]>t?r:t},strings={string2buf:string2buf,buf2binstring:buf2binstring_1,binstring2buf:binstring2buf,buf2string:buf2string,utf8border:utf8border};function ZStream(){this.input=null,this.next_in=0,this.avail_in=0,this.total_in=0,this.output=null,this.next_out=0,this.avail_out=0,this.total_out=0,this.msg="",this.state=null,this.data_type=2,this.adler=0}var zstream=ZStream,toString$3=Object.prototype.toString,Z_NO_FLUSH$1=0,Z_FINISH$1=4,Z_OK$1=0,Z_STREAM_END$1=1,Z_SYNC_FLUSH=2,Z_DEFAULT_COMPRESSION$1=-1,Z_DEFAULT_STRATEGY$1=0,Z_DEFLATED$1=8;function Deflate(e){if(!(this instanceof Deflate))return new Deflate(e);this.options=common$1.assign({level:Z_DEFAULT_COMPRESSION$1,method:Z_DEFLATED$1,chunkSize:16384,windowBits:15,memLevel:8,strategy:Z_DEFAULT_STRATEGY$1,to:""},e||{});var t=this.options;t.raw&&t.windowBits>0?t.windowBits=-t.windowBits:t.gzip&&t.windowBits>0&&t.windowBits<16&&(t.windowBits+=16),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;var r=deflate_1.deflateInit2(this.strm,t.level,t.method,t.windowBits,t.memLevel,t.strategy);if(r!==Z_OK$1)throw new Error(messages[r]);if(t.header&&deflate_1.deflateSetHeader(this.strm,t.header),t.dictionary){var n;if(n="string"==typeof t.dictionary?strings.string2buf(t.dictionary):"[object ArrayBuffer]"===toString$3.call(t.dictionary)?new Uint8Array(t.dictionary):t.dictionary,(r=deflate_1.deflateSetDictionary(this.strm,n))!==Z_OK$1)throw new Error(messages[r]);this._dict_set=!0}}function deflate$1(e,t){var r=new Deflate(t);if(r.push(e,!0),r.err)throw r.msg||messages[r.err];return r.result}function deflateRaw(e,t){return(t=t||{}).raw=!0,deflate$1(e,t)}function gzip(e,t){return(t=t||{}).gzip=!0,deflate$1(e,t)}Deflate.prototype.push=function(e,t){var r,n,o=this.strm,i=this.options.chunkSize;if(this.ended)return!1;n=t===~~t?t:!0===t?Z_FINISH$1:Z_NO_FLUSH$1,"string"==typeof e?o.input=strings.string2buf(e):"[object ArrayBuffer]"===toString$3.call(e)?o.input=new Uint8Array(e):o.input=e,o.next_in=0,o.avail_in=o.input.length;do{if(0===o.avail_out&&(o.output=new common$1.Buf8(i),o.next_out=0,o.avail_out=i),(r=deflate_1.deflate(o,n))!==Z_STREAM_END$1&&r!==Z_OK$1)return this.onEnd(r),this.ended=!0,!1;0!==o.avail_out&&(0!==o.avail_in||n!==Z_FINISH$1&&n!==Z_SYNC_FLUSH)||("string"===this.options.to?this.onData(strings.buf2binstring(common$1.shrinkBuf(o.output,o.next_out))):this.onData(common$1.shrinkBuf(o.output,o.next_out)))}while((o.avail_in>0||0===o.avail_out)&&r!==Z_STREAM_END$1);return n===Z_FINISH$1?(r=deflate_1.deflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===Z_OK$1):n!==Z_SYNC_FLUSH||(this.onEnd(Z_OK$1),o.avail_out=0,!0)},Deflate.prototype.onData=function(e){this.chunks.push(e)},Deflate.prototype.onEnd=function(e){e===Z_OK$1&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common$1.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Deflate_1=Deflate,deflate_2$1=deflate$1,deflateRaw_1=deflateRaw,gzip_1=gzip,deflate_1$1={Deflate:Deflate_1,deflate:deflate_2$1,deflateRaw:deflateRaw_1,gzip:gzip_1},BAD=30,TYPE=12,inffast=function(e,t){var r,n,o,i,s,a,u,l,c,p,f,d,g,h,b,_,y,m,v,$,E,I,S,w,O;r=e.state,n=e.next_in,w=e.input,o=n+(e.avail_in-5),i=e.next_out,O=e.output,s=i-(t-e.avail_out),a=i+(e.avail_out-257),u=r.dmax,l=r.wsize,c=r.whave,p=r.wnext,f=r.window,d=r.hold,g=r.bits,h=r.lencode,b=r.distcode,_=(1<<r.lenbits)-1,y=(1<<r.distbits)-1;e:do{g<15&&(d+=w[n++]<<g,g+=8,d+=w[n++]<<g,g+=8),m=h[d&_];t:for(;;){if(d>>>=v=m>>>24,g-=v,0===(v=m>>>16&255))O[i++]=65535&m;else{if(!(16&v)){if(0==(64&v)){m=h[(65535&m)+(d&(1<<v)-1)];continue t}if(32&v){r.mode=TYPE;break e}e.msg="invalid literal/length code",r.mode=BAD;break e}$=65535&m,(v&=15)&&(g<v&&(d+=w[n++]<<g,g+=8),$+=d&(1<<v)-1,d>>>=v,g-=v),g<15&&(d+=w[n++]<<g,g+=8,d+=w[n++]<<g,g+=8),m=b[d&y];r:for(;;){if(d>>>=v=m>>>24,g-=v,!(16&(v=m>>>16&255))){if(0==(64&v)){m=b[(65535&m)+(d&(1<<v)-1)];continue r}e.msg="invalid distance code",r.mode=BAD;break e}if(E=65535&m,g<(v&=15)&&(d+=w[n++]<<g,(g+=8)<v&&(d+=w[n++]<<g,g+=8)),(E+=d&(1<<v)-1)>u){e.msg="invalid distance too far back",r.mode=BAD;break e}if(d>>>=v,g-=v,E>(v=i-s)){if((v=E-v)>c&&r.sane){e.msg="invalid distance too far back",r.mode=BAD;break e}if(I=0,S=f,0===p){if(I+=l-v,v<$){$-=v;do{O[i++]=f[I++]}while(--v);I=i-E,S=O}}else if(p<v){if(I+=l+p-v,(v-=p)<$){$-=v;do{O[i++]=f[I++]}while(--v);if(I=0,p<$){$-=v=p;do{O[i++]=f[I++]}while(--v);I=i-E,S=O}}}else if(I+=p-v,v<$){$-=v;do{O[i++]=f[I++]}while(--v);I=i-E,S=O}for(;$>2;)O[i++]=S[I++],O[i++]=S[I++],O[i++]=S[I++],$-=3;$&&(O[i++]=S[I++],$>1&&(O[i++]=S[I++]))}else{I=i-E;do{O[i++]=O[I++],O[i++]=O[I++],O[i++]=O[I++],$-=3}while($>2);$&&(O[i++]=O[I++],$>1&&(O[i++]=O[I++]))}break}}break}}while(n<o&&i<a);n-=$=g>>3,d&=(1<<(g-=$<<3))-1,e.next_in=n,e.next_out=i,e.avail_in=n<o?o-n+5:5-(n-o),e.avail_out=i<a?a-i+257:257-(i-a),r.hold=d,r.bits=g},MAXBITS=15,ENOUGH_LENS=852,ENOUGH_DISTS=592,CODES=0,LENS=1,DISTS=2,lbase=[3,4,5,6,7,8,9,10,11,13,15,17,19,23,27,31,35,43,51,59,67,83,99,115,131,163,195,227,258,0,0],lext=[16,16,16,16,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,16,72,78],dbase=[1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,257,385,513,769,1025,1537,2049,3073,4097,6145,8193,12289,16385,24577,0,0],dext=[16,16,16,16,17,17,18,18,19,19,20,20,21,21,22,22,23,23,24,24,25,25,26,26,27,27,28,28,29,29,64,64],inftrees=function(e,t,r,n,o,i,s,a){var u,l,c,p,f,d,g,h,b,_=a.bits,y=0,m=0,v=0,$=0,E=0,I=0,S=0,w=0,O=0,R=0,T=null,A=0,N=new common$1.Buf16(MAXBITS+1),L=new common$1.Buf16(MAXBITS+1),P=null,C=0;for(y=0;y<=MAXBITS;y++)N[y]=0;for(m=0;m<n;m++)N[t[r+m]]++;for(E=_,$=MAXBITS;$>=1&&0===N[$];$--);if(E>$&&(E=$),0===$)return o[i++]=20971520,o[i++]=20971520,a.bits=1,0;for(v=1;v<$&&0===N[v];v++);for(E<v&&(E=v),w=1,y=1;y<=MAXBITS;y++)if(w<<=1,(w-=N[y])<0)return-1;if(w>0&&(e===CODES||1!==$))return-1;for(L[1]=0,y=1;y<MAXBITS;y++)L[y+1]=L[y]+N[y];for(m=0;m<n;m++)0!==t[r+m]&&(s[L[t[r+m]]++]=m);if(e===CODES?(T=P=s,d=19):e===LENS?(T=lbase,A-=257,P=lext,C-=257,d=256):(T=dbase,P=dext,d=-1),R=0,m=0,y=v,f=i,I=E,S=0,c=-1,p=(O=1<<E)-1,e===LENS&&O>ENOUGH_LENS||e===DISTS&&O>ENOUGH_DISTS)return 1;for(;;){g=y-S,s[m]<d?(h=0,b=s[m]):s[m]>d?(h=P[C+s[m]],b=T[A+s[m]]):(h=96,b=0),u=1<<y-S,v=l=1<<I;do{o[f+(R>>S)+(l-=u)]=g<<24|h<<16|b|0}while(0!==l);for(u=1<<y-1;R&u;)u>>=1;if(0!==u?(R&=u-1,R+=u):R=0,m++,0==--N[y]){if(y===$)break;y=t[r+s[m]]}if(y>E&&(R&p)!==c){for(0===S&&(S=E),f+=v,w=1<<(I=y-S);I+S<$&&!((w-=N[I+S])<=0);)I++,w<<=1;if(O+=1<<I,e===LENS&&O>ENOUGH_LENS||e===DISTS&&O>ENOUGH_DISTS)return 1;o[c=R&p]=E<<24|I<<16|f-i|0}}return 0!==R&&(o[f+R]=y-S<<24|64<<16|0),a.bits=E,0},CODES$1=0,LENS$1=1,DISTS$1=2,Z_FINISH$2=4,Z_BLOCK$1=5,Z_TREES=6,Z_OK$2=0,Z_STREAM_END$2=1,Z_NEED_DICT=2,Z_STREAM_ERROR$1=-2,Z_DATA_ERROR$1=-3,Z_MEM_ERROR=-4,Z_BUF_ERROR$1=-5,Z_DEFLATED$2=8,HEAD=1,FLAGS=2,TIME=3,OS=4,EXLEN=5,EXTRA=6,NAME$2=7,COMMENT=8,HCRC=9,DICTID=10,DICT=11,TYPE$1=12,TYPEDO=13,STORED=14,COPY_=15,COPY=16,TABLE=17,LENLENS=18,CODELENS=19,LEN_=20,LEN=21,LENEXT=22,DIST=23,DISTEXT=24,MATCH$2=25,LIT=26,CHECK=27,LENGTH$1=28,DONE=29,BAD$1=30,MEM=31,SYNC=32,ENOUGH_LENS$1=852,ENOUGH_DISTS$1=592,MAX_WBITS$1=15,DEF_WBITS=MAX_WBITS$1;function zswap32(e){return(e>>>24&255)+(e>>>8&65280)+((65280&e)<<8)+((255&e)<<24)}function InflateState(){this.mode=0,this.last=!1,this.wrap=0,this.havedict=!1,this.flags=0,this.dmax=0,this.check=0,this.total=0,this.head=null,this.wbits=0,this.wsize=0,this.whave=0,this.wnext=0,this.window=null,this.hold=0,this.bits=0,this.length=0,this.offset=0,this.extra=0,this.lencode=null,this.distcode=null,this.lenbits=0,this.distbits=0,this.ncode=0,this.nlen=0,this.ndist=0,this.have=0,this.next=null,this.lens=new common$1.Buf16(320),this.work=new common$1.Buf16(288),this.lendyn=null,this.distdyn=null,this.sane=0,this.back=0,this.was=0}function inflateResetKeep(e){var t;return e&&e.state?(t=e.state,e.total_in=e.total_out=t.total=0,e.msg="",t.wrap&&(e.adler=1&t.wrap),t.mode=HEAD,t.last=0,t.havedict=0,t.dmax=32768,t.head=null,t.hold=0,t.bits=0,t.lencode=t.lendyn=new common$1.Buf32(ENOUGH_LENS$1),t.distcode=t.distdyn=new common$1.Buf32(ENOUGH_DISTS$1),t.sane=1,t.back=-1,Z_OK$2):Z_STREAM_ERROR$1}function inflateReset(e){var t;return e&&e.state?((t=e.state).wsize=0,t.whave=0,t.wnext=0,inflateResetKeep(e)):Z_STREAM_ERROR$1}function inflateReset2(e,t){var r,n;return e&&e.state?(n=e.state,t<0?(r=0,t=-t):(r=1+(t>>4),t<48&&(t&=15)),t&&(t<8||t>15)?Z_STREAM_ERROR$1:(null!==n.window&&n.wbits!==t&&(n.window=null),n.wrap=r,n.wbits=t,inflateReset(e))):Z_STREAM_ERROR$1}function inflateInit2(e,t){var r,n;return e?(n=new InflateState,e.state=n,n.window=null,(r=inflateReset2(e,t))!==Z_OK$2&&(e.state=null),r):Z_STREAM_ERROR$1}function inflateInit(e){return inflateInit2(e,DEF_WBITS)}var virgin=!0,lenfix,distfix;function fixedtables(e){if(virgin){var t;for(lenfix=new common$1.Buf32(512),distfix=new common$1.Buf32(32),t=0;t<144;)e.lens[t++]=8;for(;t<256;)e.lens[t++]=9;for(;t<280;)e.lens[t++]=7;for(;t<288;)e.lens[t++]=8;for(inftrees(LENS$1,e.lens,0,288,lenfix,0,e.work,{bits:9}),t=0;t<32;)e.lens[t++]=5;inftrees(DISTS$1,e.lens,0,32,distfix,0,e.work,{bits:5}),virgin=!1}e.lencode=lenfix,e.lenbits=9,e.distcode=distfix,e.distbits=5}function updatewindow(e,t,r,n){var o,i=e.state;return null===i.window&&(i.wsize=1<<i.wbits,i.wnext=0,i.whave=0,i.window=new common$1.Buf8(i.wsize)),n>=i.wsize?(common$1.arraySet(i.window,t,r-i.wsize,i.wsize,0),i.wnext=0,i.whave=i.wsize):((o=i.wsize-i.wnext)>n&&(o=n),common$1.arraySet(i.window,t,r-n,o,i.wnext),(n-=o)?(common$1.arraySet(i.window,t,r-n,n,0),i.wnext=n,i.whave=i.wsize):(i.wnext+=o,i.wnext===i.wsize&&(i.wnext=0),i.whave<i.wsize&&(i.whave+=o))),0}function inflate(e,t){var r,n,o,i,s,a,u,l,c,p,f,d,g,h,b,_,y,m,v,$,E,I,S,w,O=0,R=new common$1.Buf8(4),T=[16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15];if(!e||!e.state||!e.output||!e.input&&0!==e.avail_in)return Z_STREAM_ERROR$1;(r=e.state).mode===TYPE$1&&(r.mode=TYPEDO),s=e.next_out,o=e.output,u=e.avail_out,i=e.next_in,n=e.input,a=e.avail_in,l=r.hold,c=r.bits,p=a,f=u,I=Z_OK$2;e:for(;;)switch(r.mode){case HEAD:if(0===r.wrap){r.mode=TYPEDO;break}for(;c<16;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(2&r.wrap&&35615===l){r.check=0,R[0]=255&l,R[1]=l>>>8&255,r.check=crc32_1(r.check,R,2,0),l=0,c=0,r.mode=FLAGS;break}if(r.flags=0,r.head&&(r.head.done=!1),!(1&r.wrap)||(((255&l)<<8)+(l>>8))%31){e.msg="incorrect header check",r.mode=BAD$1;break}if((15&l)!==Z_DEFLATED$2){e.msg="unknown compression method",r.mode=BAD$1;break}if(c-=4,E=8+(15&(l>>>=4)),0===r.wbits)r.wbits=E;else if(E>r.wbits){e.msg="invalid window size",r.mode=BAD$1;break}r.dmax=1<<E,e.adler=r.check=1,r.mode=512&l?DICTID:TYPE$1,l=0,c=0;break;case FLAGS:for(;c<16;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(r.flags=l,(255&r.flags)!==Z_DEFLATED$2){e.msg="unknown compression method",r.mode=BAD$1;break}if(57344&r.flags){e.msg="unknown header flags set",r.mode=BAD$1;break}r.head&&(r.head.text=l>>8&1),512&r.flags&&(R[0]=255&l,R[1]=l>>>8&255,r.check=crc32_1(r.check,R,2,0)),l=0,c=0,r.mode=TIME;case TIME:for(;c<32;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}r.head&&(r.head.time=l),512&r.flags&&(R[0]=255&l,R[1]=l>>>8&255,R[2]=l>>>16&255,R[3]=l>>>24&255,r.check=crc32_1(r.check,R,4,0)),l=0,c=0,r.mode=OS;case OS:for(;c<16;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}r.head&&(r.head.xflags=255&l,r.head.os=l>>8),512&r.flags&&(R[0]=255&l,R[1]=l>>>8&255,r.check=crc32_1(r.check,R,2,0)),l=0,c=0,r.mode=EXLEN;case EXLEN:if(1024&r.flags){for(;c<16;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}r.length=l,r.head&&(r.head.extra_len=l),512&r.flags&&(R[0]=255&l,R[1]=l>>>8&255,r.check=crc32_1(r.check,R,2,0)),l=0,c=0}else r.head&&(r.head.extra=null);r.mode=EXTRA;case EXTRA:if(1024&r.flags&&((d=r.length)>a&&(d=a),d&&(r.head&&(E=r.head.extra_len-r.length,r.head.extra||(r.head.extra=new Array(r.head.extra_len)),common$1.arraySet(r.head.extra,n,i,d,E)),512&r.flags&&(r.check=crc32_1(r.check,n,d,i)),a-=d,i+=d,r.length-=d),r.length))break e;r.length=0,r.mode=NAME$2;case NAME$2:if(2048&r.flags){if(0===a)break e;d=0;do{E=n[i+d++],r.head&&E&&r.length<65536&&(r.head.name+=String.fromCharCode(E))}while(E&&d<a);if(512&r.flags&&(r.check=crc32_1(r.check,n,d,i)),a-=d,i+=d,E)break e}else r.head&&(r.head.name=null);r.length=0,r.mode=COMMENT;case COMMENT:if(4096&r.flags){if(0===a)break e;d=0;do{E=n[i+d++],r.head&&E&&r.length<65536&&(r.head.comment+=String.fromCharCode(E))}while(E&&d<a);if(512&r.flags&&(r.check=crc32_1(r.check,n,d,i)),a-=d,i+=d,E)break e}else r.head&&(r.head.comment=null);r.mode=HCRC;case HCRC:if(512&r.flags){for(;c<16;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(l!==(65535&r.check)){e.msg="header crc mismatch",r.mode=BAD$1;break}l=0,c=0}r.head&&(r.head.hcrc=r.flags>>9&1,r.head.done=!0),e.adler=r.check=0,r.mode=TYPE$1;break;case DICTID:for(;c<32;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}e.adler=r.check=zswap32(l),l=0,c=0,r.mode=DICT;case DICT:if(0===r.havedict)return e.next_out=s,e.avail_out=u,e.next_in=i,e.avail_in=a,r.hold=l,r.bits=c,Z_NEED_DICT;e.adler=r.check=1,r.mode=TYPE$1;case TYPE$1:if(t===Z_BLOCK$1||t===Z_TREES)break e;case TYPEDO:if(r.last){l>>>=7&c,c-=7&c,r.mode=CHECK;break}for(;c<3;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}switch(r.last=1&l,c-=1,3&(l>>>=1)){case 0:r.mode=STORED;break;case 1:if(fixedtables(r),r.mode=LEN_,t===Z_TREES){l>>>=2,c-=2;break e}break;case 2:r.mode=TABLE;break;case 3:e.msg="invalid block type",r.mode=BAD$1}l>>>=2,c-=2;break;case STORED:for(l>>>=7&c,c-=7&c;c<32;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if((65535&l)!=(l>>>16^65535)){e.msg="invalid stored block lengths",r.mode=BAD$1;break}if(r.length=65535&l,l=0,c=0,r.mode=COPY_,t===Z_TREES)break e;case COPY_:r.mode=COPY;case COPY:if(d=r.length){if(d>a&&(d=a),d>u&&(d=u),0===d)break e;common$1.arraySet(o,n,i,d,s),a-=d,i+=d,u-=d,s+=d,r.length-=d;break}r.mode=TYPE$1;break;case TABLE:for(;c<14;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(r.nlen=257+(31&l),l>>>=5,c-=5,r.ndist=1+(31&l),l>>>=5,c-=5,r.ncode=4+(15&l),l>>>=4,c-=4,r.nlen>286||r.ndist>30){e.msg="too many length or distance symbols",r.mode=BAD$1;break}r.have=0,r.mode=LENLENS;case LENLENS:for(;r.have<r.ncode;){for(;c<3;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}r.lens[T[r.have++]]=7&l,l>>>=3,c-=3}for(;r.have<19;)r.lens[T[r.have++]]=0;if(r.lencode=r.lendyn,r.lenbits=7,S={bits:r.lenbits},I=inftrees(CODES$1,r.lens,0,19,r.lencode,0,r.work,S),r.lenbits=S.bits,I){e.msg="invalid code lengths set",r.mode=BAD$1;break}r.have=0,r.mode=CODELENS;case CODELENS:for(;r.have<r.nlen+r.ndist;){for(;_=(O=r.lencode[l&(1<<r.lenbits)-1])>>>16&255,y=65535&O,!((b=O>>>24)<=c);){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(y<16)l>>>=b,c-=b,r.lens[r.have++]=y;else{if(16===y){for(w=b+2;c<w;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(l>>>=b,c-=b,0===r.have){e.msg="invalid bit length repeat",r.mode=BAD$1;break}E=r.lens[r.have-1],d=3+(3&l),l>>>=2,c-=2}else if(17===y){for(w=b+3;c<w;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}c-=b,E=0,d=3+(7&(l>>>=b)),l>>>=3,c-=3}else{for(w=b+7;c<w;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}c-=b,E=0,d=11+(127&(l>>>=b)),l>>>=7,c-=7}if(r.have+d>r.nlen+r.ndist){e.msg="invalid bit length repeat",r.mode=BAD$1;break}for(;d--;)r.lens[r.have++]=E}}if(r.mode===BAD$1)break;if(0===r.lens[256]){e.msg="invalid code -- missing end-of-block",r.mode=BAD$1;break}if(r.lenbits=9,S={bits:r.lenbits},I=inftrees(LENS$1,r.lens,0,r.nlen,r.lencode,0,r.work,S),r.lenbits=S.bits,I){e.msg="invalid literal/lengths set",r.mode=BAD$1;break}if(r.distbits=6,r.distcode=r.distdyn,S={bits:r.distbits},I=inftrees(DISTS$1,r.lens,r.nlen,r.ndist,r.distcode,0,r.work,S),r.distbits=S.bits,I){e.msg="invalid distances set",r.mode=BAD$1;break}if(r.mode=LEN_,t===Z_TREES)break e;case LEN_:r.mode=LEN;case LEN:if(a>=6&&u>=258){e.next_out=s,e.avail_out=u,e.next_in=i,e.avail_in=a,r.hold=l,r.bits=c,inffast(e,f),s=e.next_out,o=e.output,u=e.avail_out,i=e.next_in,n=e.input,a=e.avail_in,l=r.hold,c=r.bits,r.mode===TYPE$1&&(r.back=-1);break}for(r.back=0;_=(O=r.lencode[l&(1<<r.lenbits)-1])>>>16&255,y=65535&O,!((b=O>>>24)<=c);){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(_&&0==(240&_)){for(m=b,v=_,$=y;_=(O=r.lencode[$+((l&(1<<m+v)-1)>>m)])>>>16&255,y=65535&O,!(m+(b=O>>>24)<=c);){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}l>>>=m,c-=m,r.back+=m}if(l>>>=b,c-=b,r.back+=b,r.length=y,0===_){r.mode=LIT;break}if(32&_){r.back=-1,r.mode=TYPE$1;break}if(64&_){e.msg="invalid literal/length code",r.mode=BAD$1;break}r.extra=15&_,r.mode=LENEXT;case LENEXT:if(r.extra){for(w=r.extra;c<w;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}r.length+=l&(1<<r.extra)-1,l>>>=r.extra,c-=r.extra,r.back+=r.extra}r.was=r.length,r.mode=DIST;case DIST:for(;_=(O=r.distcode[l&(1<<r.distbits)-1])>>>16&255,y=65535&O,!((b=O>>>24)<=c);){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(0==(240&_)){for(m=b,v=_,$=y;_=(O=r.distcode[$+((l&(1<<m+v)-1)>>m)])>>>16&255,y=65535&O,!(m+(b=O>>>24)<=c);){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}l>>>=m,c-=m,r.back+=m}if(l>>>=b,c-=b,r.back+=b,64&_){e.msg="invalid distance code",r.mode=BAD$1;break}r.offset=y,r.extra=15&_,r.mode=DISTEXT;case DISTEXT:if(r.extra){for(w=r.extra;c<w;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}r.offset+=l&(1<<r.extra)-1,l>>>=r.extra,c-=r.extra,r.back+=r.extra}if(r.offset>r.dmax){e.msg="invalid distance too far back",r.mode=BAD$1;break}r.mode=MATCH$2;case MATCH$2:if(0===u)break e;if(d=f-u,r.offset>d){if((d=r.offset-d)>r.whave&&r.sane){e.msg="invalid distance too far back",r.mode=BAD$1;break}d>r.wnext?(d-=r.wnext,g=r.wsize-d):g=r.wnext-d,d>r.length&&(d=r.length),h=r.window}else h=o,g=s-r.offset,d=r.length;d>u&&(d=u),u-=d,r.length-=d;do{o[s++]=h[g++]}while(--d);0===r.length&&(r.mode=LEN);break;case LIT:if(0===u)break e;o[s++]=r.length,u--,r.mode=LEN;break;case CHECK:if(r.wrap){for(;c<32;){if(0===a)break e;a--,l|=n[i++]<<c,c+=8}if(f-=u,e.total_out+=f,r.total+=f,f&&(e.adler=r.check=r.flags?crc32_1(r.check,o,f,s-f):adler32_1(r.check,o,f,s-f)),f=u,(r.flags?l:zswap32(l))!==r.check){e.msg="incorrect data check",r.mode=BAD$1;break}l=0,c=0}r.mode=LENGTH$1;case LENGTH$1:if(r.wrap&&r.flags){for(;c<32;){if(0===a)break e;a--,l+=n[i++]<<c,c+=8}if(l!==(4294967295&r.total)){e.msg="incorrect length check",r.mode=BAD$1;break}l=0,c=0}r.mode=DONE;case DONE:I=Z_STREAM_END$2;break e;case BAD$1:I=Z_DATA_ERROR$1;break e;case MEM:return Z_MEM_ERROR;case SYNC:default:return Z_STREAM_ERROR$1}return e.next_out=s,e.avail_out=u,e.next_in=i,e.avail_in=a,r.hold=l,r.bits=c,(r.wsize||f!==e.avail_out&&r.mode<BAD$1&&(r.mode<CHECK||t!==Z_FINISH$2))&&updatewindow(e,e.output,e.next_out,f-e.avail_out),p-=e.avail_in,f-=e.avail_out,e.total_in+=p,e.total_out+=f,r.total+=f,r.wrap&&f&&(e.adler=r.check=r.flags?crc32_1(r.check,o,f,e.next_out-f):adler32_1(r.check,o,f,e.next_out-f)),e.data_type=r.bits+(r.last?64:0)+(r.mode===TYPE$1?128:0)+(r.mode===LEN_||r.mode===COPY_?256:0),(0===p&&0===f||t===Z_FINISH$2)&&I===Z_OK$2&&(I=Z_BUF_ERROR$1),I}function inflateEnd(e){if(!e||!e.state)return Z_STREAM_ERROR$1;var t=e.state;return t.window&&(t.window=null),e.state=null,Z_OK$2}function inflateGetHeader(e,t){var r;return e&&e.state?0==(2&(r=e.state).wrap)?Z_STREAM_ERROR$1:(r.head=t,t.done=!1,Z_OK$2):Z_STREAM_ERROR$1}function inflateSetDictionary(e,t){var r,n=t.length;return e&&e.state?0!==(r=e.state).wrap&&r.mode!==DICT?Z_STREAM_ERROR$1:r.mode===DICT&&adler32_1(1,t,n,0)!==r.check?Z_DATA_ERROR$1:updatewindow(e,t,n,n)?(r.mode=MEM,Z_MEM_ERROR):(r.havedict=1,Z_OK$2):Z_STREAM_ERROR$1}var inflateReset_1=inflateReset,inflateReset2_1=inflateReset2,inflateResetKeep_1=inflateResetKeep,inflateInit_1=inflateInit,inflateInit2_1=inflateInit2,inflate_2=inflate,inflateEnd_1=inflateEnd,inflateGetHeader_1=inflateGetHeader,inflateSetDictionary_1=inflateSetDictionary,inflateInfo="pako inflate (from Nodeca project)",inflate_1={inflateReset:inflateReset_1,inflateReset2:inflateReset2_1,inflateResetKeep:inflateResetKeep_1,inflateInit:inflateInit_1,inflateInit2:inflateInit2_1,inflate:inflate_2,inflateEnd:inflateEnd_1,inflateGetHeader:inflateGetHeader_1,inflateSetDictionary:inflateSetDictionary_1,inflateInfo:inflateInfo},constants={Z_NO_FLUSH:0,Z_PARTIAL_FLUSH:1,Z_SYNC_FLUSH:2,Z_FULL_FLUSH:3,Z_FINISH:4,Z_BLOCK:5,Z_TREES:6,Z_OK:0,Z_STREAM_END:1,Z_NEED_DICT:2,Z_ERRNO:-1,Z_STREAM_ERROR:-2,Z_DATA_ERROR:-3,Z_BUF_ERROR:-5,Z_NO_COMPRESSION:0,Z_BEST_SPEED:1,Z_BEST_COMPRESSION:9,Z_DEFAULT_COMPRESSION:-1,Z_FILTERED:1,Z_HUFFMAN_ONLY:2,Z_RLE:3,Z_FIXED:4,Z_DEFAULT_STRATEGY:0,Z_BINARY:0,Z_TEXT:1,Z_UNKNOWN:2,Z_DEFLATED:8};function GZheader(){this.text=0,this.time=0,this.xflags=0,this.os=0,this.extra=null,this.extra_len=0,this.name="",this.comment="",this.hcrc=0,this.done=!1}var gzheader=GZheader,toString$4=Object.prototype.toString;function Inflate(e){if(!(this instanceof Inflate))return new Inflate(e);this.options=common$1.assign({chunkSize:16384,windowBits:0,to:""},e||{});var t=this.options;t.raw&&t.windowBits>=0&&t.windowBits<16&&(t.windowBits=-t.windowBits,0===t.windowBits&&(t.windowBits=-15)),!(t.windowBits>=0&&t.windowBits<16)||e&&e.windowBits||(t.windowBits+=32),t.windowBits>15&&t.windowBits<48&&0==(15&t.windowBits)&&(t.windowBits|=15),this.err=0,this.msg="",this.ended=!1,this.chunks=[],this.strm=new zstream,this.strm.avail_out=0;var r=inflate_1.inflateInit2(this.strm,t.windowBits);if(r!==constants.Z_OK)throw new Error(messages[r]);if(this.header=new gzheader,inflate_1.inflateGetHeader(this.strm,this.header),t.dictionary&&("string"==typeof t.dictionary?t.dictionary=strings.string2buf(t.dictionary):"[object ArrayBuffer]"===toString$4.call(t.dictionary)&&(t.dictionary=new Uint8Array(t.dictionary)),t.raw&&(r=inflate_1.inflateSetDictionary(this.strm,t.dictionary))!==constants.Z_OK))throw new Error(messages[r])}function inflate$1(e,t){var r=new Inflate(t);if(r.push(e,!0),r.err)throw r.msg||messages[r.err];return r.result}function inflateRaw(e,t){return(t=t||{}).raw=!0,inflate$1(e,t)}Inflate.prototype.push=function(e,t){var r,n,o,i,s,a=this.strm,u=this.options.chunkSize,l=this.options.dictionary,c=!1;if(this.ended)return!1;n=t===~~t?t:!0===t?constants.Z_FINISH:constants.Z_NO_FLUSH,"string"==typeof e?a.input=strings.binstring2buf(e):"[object ArrayBuffer]"===toString$4.call(e)?a.input=new Uint8Array(e):a.input=e,a.next_in=0,a.avail_in=a.input.length;do{if(0===a.avail_out&&(a.output=new common$1.Buf8(u),a.next_out=0,a.avail_out=u),(r=inflate_1.inflate(a,constants.Z_NO_FLUSH))===constants.Z_NEED_DICT&&l&&(r=inflate_1.inflateSetDictionary(this.strm,l)),r===constants.Z_BUF_ERROR&&!0===c&&(r=constants.Z_OK,c=!1),r!==constants.Z_STREAM_END&&r!==constants.Z_OK)return this.onEnd(r),this.ended=!0,!1;a.next_out&&(0!==a.avail_out&&r!==constants.Z_STREAM_END&&(0!==a.avail_in||n!==constants.Z_FINISH&&n!==constants.Z_SYNC_FLUSH)||("string"===this.options.to?(o=strings.utf8border(a.output,a.next_out),i=a.next_out-o,s=strings.buf2string(a.output,o),a.next_out=i,a.avail_out=u-i,i&&common$1.arraySet(a.output,a.output,o,i,0),this.onData(s)):this.onData(common$1.shrinkBuf(a.output,a.next_out)))),0===a.avail_in&&0===a.avail_out&&(c=!0)}while((a.avail_in>0||0===a.avail_out)&&r!==constants.Z_STREAM_END);return r===constants.Z_STREAM_END&&(n=constants.Z_FINISH),n===constants.Z_FINISH?(r=inflate_1.inflateEnd(this.strm),this.onEnd(r),this.ended=!0,r===constants.Z_OK):n!==constants.Z_SYNC_FLUSH||(this.onEnd(constants.Z_OK),a.avail_out=0,!0)},Inflate.prototype.onData=function(e){this.chunks.push(e)},Inflate.prototype.onEnd=function(e){e===constants.Z_OK&&("string"===this.options.to?this.result=this.chunks.join(""):this.result=common$1.flattenChunks(this.chunks)),this.chunks=[],this.err=e,this.msg=this.strm.msg};var Inflate_1=Inflate,inflate_2$1=inflate$1,inflateRaw_1=inflateRaw,ungzip=inflate$1,inflate_1$1={Inflate:Inflate_1,inflate:inflate_2$1,inflateRaw:inflateRaw_1,ungzip:ungzip},assign=common$1.assign,pako={};assign(pako,deflate_1$1,inflate_1$1,constants);var pako_1=pako,pako_2=pako_1.deflate,pako_3=pako_1.inflate;function createFind(e){return function(t,r,n){var o=Object(t);if(!isArrayLike_1(t)){var i=_baseIteratee(r);t=keys_1(t),r=function(e){return i(o[e],e,o)}}var s=e(t,r,n);return s>-1?o[i?t[s]:s]:void 0}}var _createFind=createFind,INFINITY$3=1/0,MAX_INTEGER=1.7976931348623157e308;function toFinite(e){return e?(e=toNumber_1(e))===INFINITY$3||e===-INFINITY$3?(e<0?-1:1)*MAX_INTEGER:e==e?e:0:0===e?e:0}var toFinite_1=toFinite;function toInteger(e){var t=toFinite_1(e),r=t%1;return t==t?r?t-r:t:0}var toInteger_1=toInteger,nativeMax$2=Math.max;function findIndex(e,t,r){var n=null==e?0:e.length;if(!n)return-1;var o=null==r?0:toInteger_1(r);return o<0&&(o=nativeMax$2(n+o,0)),_baseFindIndex(e,_baseIteratee(t),o)}var findIndex_1=findIndex,find=_createFind(findIndex_1),find_1=find;function uniqWith(e,t){return t="function"==typeof t?t:void 0,e&&e.length?_baseUniq(e,void 0,t):[]}var uniqWith_1=uniqWith;function _slicedToArray$2(e,t){return _arrayWithHoles$2(e)||_iterableToArrayLimit$2(e,t)||_nonIterableRest$2()}function _nonIterableRest$2(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit$2(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return r}function _arrayWithHoles$2(e){if(Array.isArray(e))return e}function _classCallCheck$8(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$5(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$5(e,t,r){return t&&_defineProperties$5(e.prototype,t),r&&_defineProperties$5(e,r),e}function comparator(e,t){return long_1.fromValue(e).eq(t)}function validateField(e,t){var r=void 0===t?e.val:t,n=e.isBoolean,o=e.isNumber,i=e.oneof,s=e.len;if(2!==[n,o,i].filter(function(e){return!e}).length)throw new TypeError("invalid field type");if(void 0!==r){var a=!1;if(void 0!==i){var u=values_1(i);uniqWith_1(u,comparator).length===u.length&&void 0!==find_1(u,function(e){return comparator(r,e)})&&(a=!0)}var l=void 0!==n&&(0===r||1===r)&&1===s,c=void 0!==o&&r.toString(2).length<=s;if(!(a||l||c))throw new Error("invalid field value")}}var Struct=function(){function e(){_classCallCheck$8(this,e),this.size=0,this.fields=new Map}return _createClass$5(e,[{key:"define",value:function(e,t,r){if(this.size+=r,this.size>64)throw new RangeError("the struct over 64 bits is not supported");var n={val:0,isNumber:"number"===t,isBoolean:"boolean"===t,oneof:"number"===t||"boolean"===t?void 0:t,len:r};validateField(n),this.fields.set(e,n)}},{key:"set",value:function(e,t){var r=this.fields.get(e);if(!r)throw new Error("field not found");var n,o=r.oneof;if(long_1.isLong(t)||"number"==typeof t)n=t;else if("boolean"==typeof t)n=t?1:0;else{if(void 0===o)throw new Error("invalid field type");var i=o[t];if(void 0===i)throw new Error("field type not found");n=i}validateField(r,n),r.val=n}},{key:"toNumber",value:function(){var e=0,t=0,r=this.fields,n=Array.isArray(r),o=0;for(r=n?r:r[Symbol.iterator]();;){var i;if(n){if(o>=r.length)break;i=r[o++]}else{if((o=r.next()).done)break;i=o.value}var s=_slicedToArray$2(i,2)[1],a=s.len,u=s.val;void 0!==u&&(e+=long_1.fromValue(u).shiftLeft(t).toNumber(),t+=a)}return e}},{key:"toLong",value:function(){var e=long_1.fromNumber(0,!0),t=0,r=this.fields,n=Array.isArray(r),o=0;for(r=n?r:r[Symbol.iterator]();;){var i;if(n){if(o>=r.length)break;i=r[o++]}else{if((o=r.next()).done)break;i=o.value}var s=_slicedToArray$2(i,2)[1],a=s.len,u=s.val;void 0!==u&&(e=long_1.fromValue(u).shiftLeft(t).add(e),t+=a)}return e}},{key:"assert",value:function(e,t){var r=this.fields.get(e);if(!r)throw new Error("field not found");var n,o=r.oneof;if(long_1.isLong(t)||"number"==typeof t)n=t;else if("boolean"==typeof t)n=t?1:0;else{if(void 0===o)throw new Error("invalid field type");var i=o[t];if(void 0===i)throw new Error("field type not found");n=i}return validateField(r,n),comparator(n,r.val)}},{key:"from",value:function(e){var t=long_1.fromValue(e),r=0,n=this.fields,o=Array.isArray(n),i=0;for(n=o?n:n[Symbol.iterator]();;){var s;if(o){if(i>=n.length)break;s=n[i++]}else{if((i=n.next()).done)break;s=i.value}var a=_slicedToArray$2(s,2)[1],u=a.len,l=long_1.fromNumber(Math.pow(2,u)-1,!0).shiftLeft(r),c=t.and(l).shiftRightUnsigned(r);validateField(a,c),a.val=c,r+=u}}},{key:"typeOf",value:function(e){var t=this.fields.get(e);if(void 0!==t){var r=t.oneof,n=t.val;if(void 0!==r)for(var o=0,i=Object.entries(r);o<i.length;o++){var s=_slicedToArray$2(i[o],2),a=s[0];if(comparator(n,s[1]))return a}}throw new TypeError("can only get type of oneof type")}}]),e}();function _typeof$7(e){return(_typeof$7="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck$9(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$7(e,t){return!t||"object"!==_typeof$7(t)&&"function"!=typeof t?_assertThisInitialized$7(e):t}function _assertThisInitialized$7(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$7(e){return(_getPrototypeOf$7=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$7(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$7(e,t)}function _setPrototypeOf$7(e,t){return(_setPrototypeOf$7=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var UserJoinOptions=function(e){function t(e){var r;return _classCallCheck$9(this,t),(r=_possibleConstructorReturn$7(this,_getPrototypeOf$7(t).call(this))).define("Rejoin","boolean",1),r.define("Unused","number",31),r.define("Platform","number",8),r.define("Version","number",12),r.define("Subversion","number",12),r.set("Platform",WEB_PLATFORM_TYPE),r.set("Version",VERSION_NO),r.set("Subversion",SUBVERSION),r.set("Rejoin",e),r}return _inherits$7(t,Struct),t}();function _typeof$8(e){return(_typeof$8="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _slicedToArray$3(e,t){return _arrayWithHoles$3(e)||_iterableToArrayLimit$3(e,t)||_nonIterableRest$3()}function _nonIterableRest$3(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit$3(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return r}function _arrayWithHoles$3(e){if(Array.isArray(e))return e}function _classCallCheck$a(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$6(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$6(e,t,r){return t&&_defineProperties$6(e.prototype,t),r&&_defineProperties$6(e,r),e}function _possibleConstructorReturn$8(e,t){return!t||"object"!==_typeof$8(t)&&"function"!=typeof t?_assertThisInitialized$8(e):t}function _assertThisInitialized$8(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$8(e){return(_getPrototypeOf$8=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$8(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$8(e,t)}function _setPrototypeOf$8(e,t){return(_setPrototypeOf$8=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function ownKeys$1(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function _objectSpread(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys$1(r,!0).forEach(function(t){_defineProperty$2(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys$1(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _defineProperty$2(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var MessageDstType={PeerToPeerMessage:0,ChannelMessage:1,PeerRawMessage:3,ChannelRawMessage:4},InvitationType={CallInvite:101,CallAccept:102,CallReject:103,CallCancel:104},MessageType=_objectSpread({},MessageDstType,{},InvitationType),CompressionMethod={Uncompressed:0,Zlib:1},MessageOption=function(e){function t(e){var r;if(_classCallCheck$a(this,t),(r=_possibleConstructorReturn$8(this,_getPrototypeOf$8(t).call(this))).define("MessageType",MessageType,8),r.define("BroadcastJumps","number",2),r.define("ToCache","boolean",1),r.define("FromCache","boolean",1),r.define("CompressionMethod",CompressionMethod,2),r.define("IterationNumber","number",4),r.define("BufferedMessage","boolean",1),r.define("ToArchive","boolean",1),isLongNum(e))r.from(e);else if(void 0!==e){var n=getEntries(e),o=Array.isArray(n),i=0;for(n=o?n:n[Symbol.iterator]();;){var s;if(o){if(i>=n.length)break;s=n[i++]}else{if((i=n.next()).done)break;s=i.value}var a=_slicedToArray$3(s,2),u=a[0],l=a[1];r.set(u,l)}}return r}return _inherits$8(t,Struct),_createClass$6(t,[{key:"isTextMessage",value:function(){return this.assert("MessageType","ChannelMessage")||this.assert("MessageType","PeerToPeerMessage")}},{key:"isRawMessage",value:function(){return this.assert("MessageType","ChannelRawMessage")||this.assert("MessageType","PeerRawMessage")}},{key:"isRawPeerMessage",value:function(){return this.assert("MessageType","PeerRawMessage")}},{key:"isRawChannelMessage",value:function(){return this.assert("MessageType","ChannelRawMessage")}},{key:"isPeerToPeerMessage",value:function(){return this.assert("MessageType","PeerToPeerMessage")}},{key:"isChannelMessage",value:function(){return this.assert("MessageType","ChannelMessage")}},{key:"isInvitation",value:function(e){var t=this;return void 0!==e?this.assert("MessageType",e):getKeys(InvitationType).some(function(e){return t.assert("MessageType",e)})}},{key:"isZlibCompressed",value:function(){return this.assert("CompressionMethod","Zlib")}},{key:"isFromCache",value:function(){return this.assert("FromCache",!0)}},{key:"isBufferedMessage",value:function(){return this.assert("BufferedMessage",!0)}},{key:"getInvitationType",value:function(){if(!this.isInvitation())throw new TypeError("cannot get InvitationType of a normal message type");return this.typeOf("MessageType")}}]),t}();function _typeof$9(e){return(_typeof$9="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck$b(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$7(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$7(e,t,r){return t&&_defineProperties$7(e.prototype,t),r&&_defineProperties$7(e,r),e}function _possibleConstructorReturn$9(e,t){return!t||"object"!==_typeof$9(t)&&"function"!=typeof t?_assertThisInitialized$9(e):t}function _assertThisInitialized$9(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$9(e){return(_getPrototypeOf$9=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$9(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$9(e,t)}function _setPrototypeOf$9(e,t){return(_setPrototypeOf$9=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var ChatManager=function(e){function t(e){var r;return _classCallCheck$b(this,t),(r=_possibleConstructorReturn$9(this,_getPrototypeOf$9(t).call(this,e,"ChatManager"))).dialogueLru=new TLRUCache(void 0,{maxlen:LRU_MAX_ITEMS,ttl:DIALOGUE_EXPIRE_TIMEOUT}),r}return _inherits$9(t,createEventBase()),_createClass$7(t,[{key:"getChatInfo",value:function(e){var t=this.dialogueLru.get(e);if(this.dialogueLru.prune(),t){var r=t.dialogue,n=t.sequence.add(1),o={dialogue:r,sequence:n};return this.dialogueLru.set(e,{dialogue:r,sequence:n}),o}var i={dialogue:getRandomUInt64(),sequence:long_1.fromNumber(1,!0)};return this.dialogueLru.set(e,i),i}}]),t}();function _typeof$a(e){return(_typeof$a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys$2(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function _objectSpread$1(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys$2(r,!0).forEach(function(t){_defineProperty$3(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys$2(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _defineProperty$3(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function _objectWithoutProperties$2(e,t){if(null==e)return{};var r,n,o=_objectWithoutPropertiesLoose$2(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}function _objectWithoutPropertiesLoose$2(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}function _slicedToArray$4(e,t){return _arrayWithHoles$4(e)||_iterableToArrayLimit$4(e,t)||_nonIterableRest$4()}function _nonIterableRest$4(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit$4(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return r}function _arrayWithHoles$4(e){if(Array.isArray(e))return e}function _toConsumableArray$6(e){return _arrayWithoutHoles$6(e)||_iterableToArray$6(e)||_nonIterableSpread$6()}function _nonIterableSpread$6(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$6(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$6(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function asyncGeneratorStep$6(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$6(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$6(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$6(i,n,o,s,a,"throw",e)}s(void 0)})}}function _classCallCheck$c(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$a(e,t){return!t||"object"!==_typeof$a(t)&&"function"!=typeof t?_assertThisInitialized$a(e):t}function _assertThisInitialized$a(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$a(e){return(_getPrototypeOf$a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _defineProperties$8(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$8(e,t,r){return t&&_defineProperties$8(e.prototype,t),r&&_defineProperties$8(e,r),e}function _inherits$a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$a(e,t)}function _setPrototypeOf$a(e,t){return(_setPrototypeOf$a=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var Session$2=function(e){function t(e,r,n,o){var i;return _classCallCheck$c(this,t),(i=_possibleConstructorReturn$a(this,_getPrototypeOf$a(t).call(this,o,"Session"))).context=e,i.connection=r,i.instanceId=n,i.chatManager=new ChatManager(i.logger),i.joinedChannels=new Set,i.msgDedupLru=new LRUCache(void 0,{maxlen:MSG_DEDUP_MAX_LEN}),i.startTime=Date.now(),i.seq=long_1.fromNumber(1,!0),i.seqSentStatuses=[!1,!1],i.dialogueSequenceLru=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),i.curLoginSockets=[void 0,void 0],i.loginSocketSubs=[[],[]],i.lastLoginSockets=[new ReplaySubject(1),new ReplaySubject(1)],i.dialPendingMsgSubjectMaps=[new Map,new Map],i.log("The instanceId is %s",i.instanceId.toString()),i}return _inherits$a(t,createEventBase()),_createClass$8(t,null,[{key:"sendMessageAck",value:function(e,t){var r=new MessageOption(e.options);(r.isInvitation()||r.isPeerToPeerMessage()||r.isRawPeerMessage())&&t.sendPacket("Ack",{code:0,dialogue:e.dialogue,instance:e.instance,sequence:e.sequence})}}]),_createClass$8(t,[{key:"loginHandler",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(){var t,r,n,o=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.connection.initConnection(),t=this.seq,r=this.getSocketLoginObservables(this.connection.lastOpenSockets,t),n=Date.now(),r.forEach(function(e,t){o.loginSocketSubs[t].push(e.pipe(tap(function(){var e=_asyncToGenerator$6(regenerator.mark(function e(r){var i;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:o.curLoginSockets[t]=r,i=Date.now(),sendReport("Link",{ackedServerIp:r.address,destServerIp:r.ip,ec:0,sc:0,elapse:getElapse(o.startTime),lts:long_1.fromNumber(i),responseTime:n-i,sid:getSid(o.instanceId),userId:o.context.uid}),o.emit("userJoined",r.env);case 4:case"end":return e.stop()}},e)}));return function(t){return e.apply(this,arguments)}}())).subscribe(o.lastLoginSockets[t]))}),this.initKeepAliveSender(),this.initKeepAliveReconnector(),this.initLoginReceiver(),e.abrupt("return",merge.apply(void 0,_toConsumableArray$6(r).concat([fromEvent(this.connection,"connectionInitFailure").pipe(tap(function(e){if(isRtmError(e)||isTimeout(e))throw e;throw new RtmUnknownError("Login failure",LOGIN_ERR_UNKNOWN,e)}))])).pipe(first(),timeout(CLIENT_LOGIN_TIMEOUT),catchError(function(e){return e instanceof TimeoutError&&o.warn("Client login timeout"),o.clearSockets(),throwError(e)}),finalize(function(){o.connection.apClient.apFinish$.next(void 0)})).toPromise());case 9:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:"logoutHandler",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(){var t,r,n,o=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return t=this.getLoginSockets(),r=t.map(function(e){return e.sendPacket("UserQuit",{}),o.connection.waitClosing(e)}),this.clearSockets(LOGOUT_SOCKET_CLOSE_TIMEOUT),n=t.map(function(e){return e.env}),[0,1].filter(function(e){return!n.includes(e)}).forEach(function(e){o.connection.closeSocket(e,0)}),e.abrupt("return",merge.apply(void 0,_toConsumableArray$6(r)).toPromise());case 7:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:"requestChannelJoin",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(t,r){var n,o,i,s=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(0!==this.getLoginSockets().length){e.next=2;break}throw new RtmInvalidStatusError("Client is not logged in. Cannot join the channel",JOIN_CHANNEL_ERR_USER_NOT_LOGGED_IN);case 2:return n=fromEvent(this,"channelLeft").pipe(filter(function(e){return e===t}),first()),o=this.incGetSeq(),(i=this.lastLoginSockets.map(function(e){return e.pipe(switchMap(function(e,t){0!==t&&s.incSeqIfNeeded(e.env);var n=0===t?o:s.seq;return e.sendPacket("GroupEnter",{account:r,seq:n}),e.fromReceived("GroupReply").pipe(first(function(e){var t=e.seq;return n.eq(t)}),tap(function(e){var t=e.code;if(0!==t)throw new RtmUnavailableError(["Channel join failure. The response code is %d",t],JOIN_CHANNEL_ERR_FAILURE)}))}),takeUntil(n),share())})).forEach(function(e,t){return s.loginSocketSubs[t].push(e.subscribe({error:function(){}}))}),e.next=8,merge.apply(void 0,_toConsumableArray$6(i)).pipe(first(),timeout(COMMON_REQUEST_TIMEOUT),catchError(function(e){return e instanceof TimeoutError&&s.warn("Channel join timeout"),throwError(e)})).toPromise();case 8:this.joinedChannels.add(t);case 9:case"end":return e.stop()}},e,this)}));return function(t,r){return e.apply(this,arguments)}}()},{key:"requestChannelLeave",value:function(e,t){this.emit("channelLeft",e),this.joinedChannels.delete(e),this.getLoginSockets().forEach(function(e){e.sendPacket("GroupLeave",{account:t})})}},{key:"requestChannelMemberList",value:function(e){var r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in. Cannot get the channel members",GET_MEMBERS_ERR_REJECTED);var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("GroupAllUsersList",{group:e,pageNumber:0,pageSize:200,seq:n})}),race.apply(void 0,[t.genTimeoutError(GET_CHANNEL_MEMBER_COUNT_ERR_TIMEOUT)].concat(_toConsumableArray$6(r.map(function(t){return t.fromReceived("GroupAllUsersResult").pipe(first(function(t){var r=t.group,o=t.seq;return r===e&&n.eq(o)}))}))))}},{key:"requestPeersOnlineStatus",value:function(e){var r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in");var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("UserStatusList",{users:e,seq:n})}),race.apply(void 0,[t.genTimeoutError(QUERY_PEERS_ONLINE_STATUS_ERR_TIMEOUT)].concat(_toConsumableArray$6(r.map(function(e){return e.fromReceived("UserStatusResult").pipe(first(function(e){var t=e.seq;return n.eq(t)}))}))))}},{key:"requestSetLocalUserAttributes",value:function(e,r){var n=this,o=this.getLoginSockets();if(0===o.length)throw new RtmInvalidStatusError("Client is not logged in");var i=this.incGetSeq();return o.forEach(function(t,o){void 0!==r&&o!==r||t.sendPacket("UserAttributeSet",{account:n.context.uid,attributeInfos:Object.entries(e).map(function(e){var t=_slicedToArray$4(e,2);return{key:t[0],value:t[1]}}),seq:i})}),race.apply(void 0,_toConsumableArray$6(o.map(function(e){return e.fromReceived("UserAttributeErr").pipe(first(function(e){var t=e.seq;return i.eq(t)}),map$1(function(){throw new RtmUnavailableError("The user attributes set failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(o.map(function(e){return e.fromReceived("UserAttributeRsp").pipe(first(function(e){var t=e.seq;return i.eq(t)}))}))))}},{key:"requestSetChannelAttributes",value:function(e,r,n){var o=this.getLoginSockets();if(0===o.length)throw new RtmInvalidStatusError("Client is not logged in");var i=this.incGetSeq();return o.forEach(function(t){t.sendPacket("GroupAttributeSet",{broadcast:n,group:e,attributeInfos:Object.entries(r).map(function(e){var t=_slicedToArray$4(e,2);return{key:t[0],value:t[1]}}),seq:i})}),race.apply(void 0,_toConsumableArray$6(o.map(function(e){return e.fromReceived("GroupAttributeErr").pipe(first(function(e){var t=e.seq;return i.eq(t)}),map$1(function(){throw new RtmUnavailableError("The group attributes set failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(o.map(function(e){return e.fromReceived("GroupAttributeRsp").pipe(first(function(e){var t=e.seq;return i.eq(t)}))}))))}},{key:"requestAddOrUpdateLocalUserAttributes",value:function(e){var r=this,n=this.getLoginSockets();if(0===n.length)throw new RtmInvalidStatusError("Client is not logged in");var o=this.incGetSeq();return n.forEach(function(t){t.sendPacket("UserAttributeMod",{account:r.context.uid,attributeInfos:Object.entries(e).map(function(e){var t=_slicedToArray$4(e,2);return{key:t[0],value:t[1]}}),seq:o})}),race.apply(void 0,_toConsumableArray$6(n.map(function(e){return e.fromReceived("UserAttributeErr").pipe(first(function(e){var t=e.seq;return o.eq(t)}),map$1(function(){throw new RtmUnavailableError("The user attributes add or update failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(n.map(function(e){return e.fromReceived("UserAttributeRsp").pipe(first(function(e){var t=e.seq;return o.eq(t)}))}))))}},{key:"requestAddOrUpdateChannelAttributes",value:function(e,r,n){var o=this.getLoginSockets();if(0===o.length)throw new RtmInvalidStatusError("Client is not logged in");var i=this.incGetSeq();return o.forEach(function(t){t.sendPacket("GroupAttributeMod",{broadcast:n,group:e,attributeInfos:Object.entries(r).map(function(e){var t=_slicedToArray$4(e,2);return{key:t[0],value:t[1]}}),seq:i})}),race.apply(void 0,_toConsumableArray$6(o.map(function(e){return e.fromReceived("GroupAttributeErr").pipe(first(function(e){var t=e.seq;return i.eq(t)}),map$1(function(){throw new RtmUnavailableError("The group attributes add or update failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(o.map(function(e){return e.fromReceived("GroupAttributeRsp").pipe(first(function(e){var t=e.seq;return i.eq(t)}))}))))}},{key:"requestDeleteLocalUserAttributesByKeys",value:function(e){var r=this,n=this.getLoginSockets();if(0===n.length)throw new RtmInvalidStatusError("Client is not logged in");var o=this.incGetSeq();return n.forEach(function(t){t.sendPacket("UserAttributeDel",{account:r.context.uid,attributes:e,seq:o})}),race.apply(void 0,_toConsumableArray$6(n.map(function(e){return e.fromReceived("UserAttributeErr").pipe(first(function(e){var t=e.seq;return o.eq(t)}),map$1(function(){throw new RtmUnavailableError("The user attributes delete failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(n.map(function(e){return e.fromReceived("UserAttributeRsp").pipe(first(function(e){var t=e.seq;return o.eq(t)}))}))))}},{key:"requestDeleteChannelAttributesByKeys",value:function(e,r,n){var o=this.getLoginSockets();if(0===o.length)throw new RtmInvalidStatusError("Client is not logged in");var i=this.incGetSeq();return o.forEach(function(t){t.sendPacket("GroupAttributeDel",{group:e,broadcast:n,attributes:r,seq:i})}),race.apply(void 0,_toConsumableArray$6(o.map(function(e){return e.fromReceived("GroupAttributeErr").pipe(first(function(e){var t=e.seq;return i.eq(t)}),map$1(function(){throw new RtmUnavailableError("The channel attributes delete failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(o.map(function(e){return e.fromReceived("GroupAttributeRsp").pipe(first(function(e){var t=e.seq;return i.eq(t)}))}))))}},{key:"requestClearLocalUserAttributes",value:function(){var e=this,r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in");var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("UserAttributeSet",{account:e.context.uid,seq:n,attributeInfos:[]})}),race.apply(void 0,_toConsumableArray$6(r.map(function(e){return e.fromReceived("UserAttributeErr").pipe(first(function(e){var t=e.seq;return n.eq(t)}),map$1(function(){throw new RtmUnavailableError("The user attributes clear failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(r.map(function(e){return e.fromReceived("UserAttributeRsp").pipe(first(function(e){var t=e.seq;return n.eq(t)}))}))))}},{key:"requestClearChannelAttributes",value:function(e,r){var n=this.getLoginSockets();if(0===n.length)throw new RtmInvalidStatusError("Client is not logged in");var o=this.incGetSeq();return n.forEach(function(t){t.sendPacket("GroupAttributeSet",{group:e,seq:o,attributeInfos:[],broadcast:r})}),race.apply(void 0,_toConsumableArray$6(n.map(function(e){return e.fromReceived("GroupAttributeErr").pipe(first(function(e){var t=e.seq;return o.eq(t)}),map$1(function(){throw new RtmUnavailableError("The channel attributes clear failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})).concat([t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)],_toConsumableArray$6(n.map(function(e){return e.fromReceived("GroupAttributeRsp").pipe(first(function(e){var t=e.seq;return o.eq(t)}))}))))}},{key:"requestGetUserAttributesByKeys",value:function(e,r){var n=this.getLoginSockets();if(0===n.length)throw new RtmInvalidStatusError("Client is not logged in");var o=this.incGetSeq();return n.forEach(function(t){t.sendPacket("UserAttributeGet",{account:e,seq:o,attributes:r})}),race.apply(void 0,[t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)].concat(_toConsumableArray$6(n.map(function(e){return e.fromReceived("UserAttributeErr").pipe(first(function(e){var t=e.seq;return o.eq(t)}),map$1(function(e){var t=e.code;if(10008===t)throw new RtmUnavailableError("The user requested is not online",ATTRIBUTE_OPERATION_ERR_USER_NOT_FOUND);throw new RtmUnknownError(["User attribute operation unknown error code: %d",t],ATTRIBUTE_OPERATION_ERR_FAILURE)}))})),_toConsumableArray$6(n.map(function(e){return e.fromReceived("UserAttributeRet").pipe(first(function(e){var t=e.seq;return o.eq(t)}))}))))}},{key:"requestGetChannelAttributesByKeys",value:function(e,r){var n=this.getLoginSockets();if(0===n.length)throw new RtmInvalidStatusError("Client is not logged in");var o=this.incGetSeq();return n.forEach(function(t){t.sendPacket("GroupAttributeGet",{group:e,seq:o,attributes:r})}),race.apply(void 0,[t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)].concat(_toConsumableArray$6(n.map(function(e){return e.fromReceived("GroupAttributeErr").pipe(first(function(e){var t=e.seq;return o.eq(t)}),map$1(function(){throw new RtmUnavailableError("The channel attributes get failure",ATTRIBUTE_OPERATION_ERR_FAILURE)}))})),_toConsumableArray$6(n.map(function(e){return e.fromReceived("GroupAttributeRet").pipe(first(function(e){var t=e.seq;return o.eq(t)}))}))))}},{key:"requestGetUserAttributeKeys",value:function(e){var r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in");var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("UserAttributeKeysGet",{account:e,seq:n})}),race.apply(void 0,[t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)].concat(_toConsumableArray$6(r.map(function(e){return e.fromReceived("UserAttributeErr").pipe(first(function(e){var t=e.seq;return n.eq(t)}),map$1(function(e){var t=e.code;if(10008===t)throw new RtmUnavailableError("The user requested is not online",ATTRIBUTE_OPERATION_ERR_USER_NOT_FOUND);throw new RtmUnknownError(["User attribute operation unknown error code: %d",t],ATTRIBUTE_OPERATION_ERR_FAILURE)}))})),_toConsumableArray$6(r.map(function(e){return e.fromReceived("UserAttributeKeysRet").pipe(first(function(e){var t=e.seq;return n.eq(t)}))}))))}},{key:"requestGetChannelAttributesKeys",value:function(e){var r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in");var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("GroupAttributeKeysGet",{group:e,seq:n})}),race.apply(void 0,[t.genTimeoutError(ATTRIBUTE_OPERATION_ERR_TIMEOUT)].concat(_toConsumableArray$6(r.map(function(e){return e.fromReceived("GroupAttributeErr").pipe(first(function(e){var t=e.seq;return n.eq(t)}),map$1(function(e){var t=e.code;throw new RtmUnknownError(["Channel attribute operation unknown error code: %d",t],ATTRIBUTE_OPERATION_ERR_FAILURE)}))})),_toConsumableArray$6(r.map(function(e){return e.fromReceived("GroupAttributeKeysRet").pipe(first(function(e){var t=e.seq;return n.eq(t)}))}))))}},{key:"requestGetChannelMemberCount",value:function(e){var r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in");var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("GroupStatusList",{groups:e,seq:n})}),race.apply(void 0,[t.genTimeoutError(GET_CHANNEL_MEMBER_COUNT_ERR_TIMEOUT)].concat(_toConsumableArray$6(r.map(function(e){return e.fromReceived("GroupStatusResult").pipe(first(function(e){var t=e.seq;return n.eq(t)}))}))))}},{key:"requestSubscribePeersOnlineStatus",value:function(e){var r=this.getLoginSockets();if(0===r.length)throw new RtmInvalidStatusError("Client is not logged in");var n=this.incGetSeq();return r.forEach(function(t){t.sendPacket("SubscribeUserStatus",{seq:n,users:e})}),race.apply(void 0,[t.genTimeoutError(PEER_SUBSCRIPTION_STATUS_ERR_TIMEOUT)].concat(_toConsumableArray$6(r.map(function(e){return e.fromReceived("SubscribeResponse").pipe(first(function(e){var t=e.seq;return n.eq(t)}))}))))}},{key:"requestUnsubscribePeersOnlineStatus",value:function(e){var t=this.getLoginSockets();if(0===t.length)throw new RtmInvalidStatusError("Client is not logged in");var r=this.incGetSeq();t.forEach(function(t){t.sendPacket("UnsubscribeUserStatus",{seq:r,users:e})})}},{key:"sendInvitationMessage",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p,f,d,g=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.peerId,n=t.callId,o=t.extra,i=t.isAcceptAck,s=t.channelId,a=t.type,u={callId:n},void 0===i){e.next=6;break}if("CallAccept"===a){e.next=5;break}throw new Error("invalid invitation type");case 5:u.type=i?"ack":"request";case 6:return u.channel=s,("CallInvite"===a||"CallCancel"===a||"CallReject"===a||"CallAccept"===a&&!1===i)&&void 0!==o&&(u.extra=o),l=getRandomUInt64(),this.log("The sent invitation body is %o",u),c=function(e){return{MiscMap:{},sequence:long_1.fromNumber(1),dialogue:l,instance:g.instanceId,dst:r,ms:long_1.fromNumber(Date.now(),!0),options:new MessageOption({IterationNumber:e,MessageType:a}).toLong(),payload:(new TextEncoder).encode(JSON.stringify(u)),src:g.context.uid}},e.next=14,from(this.sendMessageToRetry(c,!0)).pipe(timeout(MESSAGE_SEND_TIMEOUT),catchError(function(e){return e instanceof TimeoutError&&g.warn("Send invitation timeout"),throwError(e)})).toPromise();case 14:return p=e.sent,f=p.code,d=p.retryTimes,e.abrupt("return",{hasPeerReceived:0===f,hasReSent:0!==d});case 18:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"sendRawMessage",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(t,r,n,o,i,s){var a,u,l,c,p,f,d,g,h,b,_=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(a=i.enableOfflineMessaging,u=i.enableHistoricalMessaging,isValidId(n)&&t instanceof Uint8Array&&"string"==typeof r){e.next=3;break}throw new RtmInvalidArgumentError("The send message arguments are not valid",o?PEER_MESSAGE_ERR_INVALID_USERID:CHANNEL_MESSAGE_ERR_FAILURE);case 3:if(!(t.byteLength+new Blob([r]).size>MESSAGE_TEXT_MAX_BYTES)){e.next=5;break}throw new RtmLimitExceededError("The message size is over the 32KB limit",o?PEER_MESSAGE_ERR_INVALID_MESSAGE:CHANNEL_MESSAGE_ERR_INVALID_MESSAGE);case 5:return l=t.byteLength>=MESSAGE_MIN_COMPRESSION_LEN,c=this.chatManager.getChatInfo(n),p=c.dialogue,f=c.sequence,d=this.instanceId,this.log('A%s %s raw message is sending to %s: "'.concat(d,"-").concat(p,"#").concat(f,'"'),l?" compressed":"",o?"peer":"channel",n),g=function(e){return{MiscMap:{description:r},sequence:f,dialogue:p,instance:d,dst:n,ms:long_1.fromNumber(Date.now(),!0),options:new MessageOption({IterationNumber:e,CompressionMethod:l?"Zlib":"Uncompressed",MessageType:o?"PeerRawMessage":"ChannelRawMessage",ToCache:a,ToArchive:u}).toLong(),payload:l?pako_2(t):t,src:_.context.uid}},e.next=12,from(this.sendMessageToRetry(g,!0)).pipe(timeout(void 0===s?MESSAGE_SEND_TIMEOUT:s),catchError(function(e){return e instanceof TimeoutError&&_.warn("Send message timeout"),throwError(e)})).toPromise();case 12:return h=e.sent,b=h.code,e.abrupt("return",{hasPeerReceived:0===b});case 15:case"end":return e.stop()}},e,this)}));return function(t,r,n,o,i,s){return e.apply(this,arguments)}}()},{key:"sendTextMessage",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(t,r,n,o,i){var s,a,u,l,c,p,f,d,g,h,b=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(s=o.enableOfflineMessaging,a=o.enableHistoricalMessaging,isValidId(r)){e.next=3;break}throw new RtmInvalidArgumentError("The send message arguments are not valid",n?PEER_MESSAGE_ERR_INVALID_USERID:CHANNEL_MESSAGE_ERR_FAILURE);case 3:if(!(new Blob([t]).size>MESSAGE_TEXT_MAX_BYTES)){e.next=5;break}throw new RtmLimitExceededError("The message size is over the 32KB limit",n?PEER_MESSAGE_ERR_INVALID_MESSAGE:CHANNEL_MESSAGE_ERR_INVALID_MESSAGE);case 5:return u=new Blob([t]).size>=MESSAGE_MIN_COMPRESSION_LEN,l=this.chatManager.getChatInfo(r),c=l.dialogue,p=l.sequence,f=this.instanceId,this.log('A%s %s message is sending to %s: "'.concat(f,"-").concat(c,"#").concat(p,'"'),u?" compressed":"",n?"peer":"channel",r),d=function(e){return{MiscMap:{},sequence:p,dialogue:c,instance:f,dst:r,ms:long_1.fromNumber(Date.now(),!0),options:new MessageOption({IterationNumber:e,CompressionMethod:u?"Zlib":"Uncompressed",MessageType:n?"PeerToPeerMessage":"ChannelMessage",ToCache:s,ToArchive:a}).toLong(),payload:u?pako_2(t):(new TextEncoder).encode(t),src:b.context.uid}},e.next=12,from(this.sendMessageToRetry(d,!0)).pipe(timeout(void 0===i?COMMON_REQUEST_TIMEOUT:i),catchError(function(e){return e instanceof TimeoutError&&b.warn("Send message timeout"),throwError(e)})).toPromise();case 12:return g=e.sent,h=g.code,e.abrupt("return",{hasPeerReceived:0===h});case 15:case"end":return e.stop()}},e,this)}));return function(t,r,n,o,i){return e.apply(this,arguments)}}()},{key:"cleanLoginSubs",value:function(e){this.loginSocketSubs[e].reverse().forEach(function(e){return e.unsubscribe()}),this.loginSocketSubs[e]=[]}},{key:"sendMessageToRetry",value:function(){var e=_asyncToGenerator$6(regenerator.mark(function e(t,r){var n,o,i,s,a,u,l,c,p,f=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=f.length>2&&void 0!==f[2]?f[2]:0,this.log("Attempt to send the message ".concat(r?" with retrying, %o":"without retrying"),{retryTimes:n}),0!==(o=this.getLoginSockets()).length){e.next=5;break}throw new Error("no logged-in sockets");case 5:return i=t(n),o.forEach(function(e){e.sendPacket("Message",i)}),s=i.dialogue,a=i.sequence,u=i.instance,l=o.map(function(e){return e.fromReceived("Ack").pipe(filter(function(e){return s.eq(e.dialogue)&&a.eq(e.sequence)&&u.eq(e.instance)}))}),e.prev=9,e.next=12,merge.apply(void 0,_toConsumableArray$6(l)).pipe(timeout(MESSAGE_RETRY_TIMEOUT)).pipe(first()).toPromise();case 12:return c=e.sent,p=c.code,this.log("The message has been acked, %o",{code:p}),e.abrupt("return",{code:p,retryTimes:n});case 18:if(e.prev=18,e.t0=e.catch(9),!(e.t0 instanceof TimeoutError&&r)){e.next=22;break}return e.abrupt("return",this.sendMessageToRetry(t,!1,n+1));case 22:throw e.t0;case 23:case"end":return e.stop()}},e,this,[[9,18]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"initKeepAliveSender",value:function(){var e=this;this.lastLoginSockets.map(function(t){return t.pipe(switchMap(function(t){return timer(0,KEEPALIVE_INTERVAL).pipe(tap(function(){e.incSeqIfNeeded(t.env),t.sendPacket("Ping",{ms:long_1.fromNumber(Date.now(),!0),seq:e.seq})}))}))}).forEach(function(t,r){e.loginSocketSubs[r].push(t.subscribe({error:function(){}}))})}},{key:"initKeepAliveReconnector",value:function(){var e=this;this.lastLoginSockets.map(function(e){return e.pipe(switchMap(function(e){var t,r=!1,n=e.userJoin$.pipe(tap(function(){r=!0})),o=e.input$.pipe(tap(function(e){"Ping"!==uriToPacketName(e.uri)&&(r=!1)}));return merge(timer(LOGIN_RESP_TIMEOUT,SOCKET_KEEPALIVE_TIMEOUT).pipe(withLatestFrom(e.receivedPacket),tap(function(n){var o=_slicedToArray$4(n,2),i=_slicedToArray$4(o[1],2)[1];t!==i||r||e.forceReconnect(),t=i})),n,o)}))}).forEach(function(t,r){e.loginSocketSubs[r].push(t.subscribe({error:function(){}}))})}},{key:"initLoginReceiver",value:function(){var e=this;this.lastLoginSockets.map(function(t){return t.pipe(switchMap(function(t){return merge(fromEvent(t,"reconnect").pipe(tap(e.onReconnect(t))),t.fromReceived("Message").pipe(tap(e.onMessage(t))),t.fromReceived("GroupEnterNotice").pipe(tap(e.onGroupEnterNotice())),t.fromReceived("GroupLeaveNotice").pipe(tap(e.onGroupLeaveNotice())),t.fromReceived("GroupCountNotice").pipe(tap(e.onGroupCountNotice())),t.fromReceived("GroupAttributeAlt").pipe(tap(e.onGroupAttributeAlt())),t.fromReceived("UserJoinNotice").pipe(tap(e.onUserNotice(RtmStatusCode$1.PeerOnlineState.ONLINE))),t.fromReceived("UserQuitNotice").pipe(tap(e.onUserNotice(RtmStatusCode$1.PeerOnlineState.OFFLINE))),t.fromReceived("UserWaitNotice").pipe(tap(e.onUserNotice(RtmStatusCode$1.PeerOnlineState.UNREACHABLE)))).pipe(mapTo(void 0))}))}).forEach(function(t,r){e.loginSocketSubs[r].push(t.subscribe({error:function(){}}))})}},{key:"requestSocketLogin",value:function(e,t,r){var n=this;return concat(defer$1(_asyncToGenerator$6(regenerator.mark(function o(){return regenerator.wrap(function(o){for(;;)switch(o.prev=o.next){case 0:e.sendPacket("UserJoin",{account:n.context.uid,instance:n.instanceId,opt:new UserJoinOptions(t).toLong(),seq:r,ticket:e.ticket});case 1:case"end":return o.stop()}},o)}))),e.fromReceived("UserResp").pipe(first(function(e){return r.eq(e.seq)}),tap(function(t){var r=t.code;if(0!==r)throw n.clearSockets(),n.logError("Connected to gateway success but the Rtm server rejected login"),new RtmUnavailableError(["Login failure. The response code from the RTM service is %d",r],LOGIN_ERR_REJECTED);n.log("ENV_%d logged in",e.env)}),mapTo(e),timeout(LOGIN_RESP_TIMEOUT))).pipe(filter(function(e){return void 0!==e}),catchError(function(e,r){return e instanceof TimeoutError&&n.warn("Login response timeout, rejoin: %s",t),n.logError(e),t?r:throwError(e)}))}},{key:"getSocketLoginObservables",value:function(e,t){var r=this;return e.map(function(e){return e.pipe(tap(function(e){e.on("socketUserDrop",function(t){return r.onUserDrop(t,e)})}),switchMap(function(e,n){return r.incSeqIfNeeded(e.env),r.requestSocketLogin(e,0!==n,0===n?t:r.seq)}),share())})}},{key:"incSeqIfNeeded",value:function(e){if(![0,1].includes(e))throw new CommonError({INVALID_ENV:"The env argument is not 0 or 1"});this.seqSentStatuses[e]&&(this.seq=this.seq.add(1),this.seqSentStatuses=[!1,!1]),this.seqSentStatuses[e]=!0}},{key:"incGetSeq",value:function(){return this.seq=this.seq.add(1),this.seqSentStatuses=[!0,!0],this.seq}},{key:"getLoginSockets",value:function(){return compact_1(this.curLoginSockets)}},{key:"emitMessage",value:function(e,t){var r=e.options,n=e.payload,o=e.src,i=e.dst,s=e.instance,a=e.dialogue,u=e.sequence,l=e.ms,c=e.MiscMap;this.dialogueSequenceLru.set(a.toString(),u);var p="".concat(s,"-").concat(a,"#").concat(u);if(this.msgDedupLru.has(p))this.warn("Env_%d: Messages out-of-order or not start with 1: %s",t,p);else{this.msgDedupLru.set(p,void 0);var f=new MessageOption(r),d=f.isZlibCompressed();if(f.isInvitation()){var g=d?pako_3(n,{to:"string"}):new TextDecoder("utf-8").decode(n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength)),h=JSON.parse(g);this.log("The received invitation body is %o",h),this.emit("invitationMessage",{body:h,type:f.getInvitationType(),peerId:o,serverReceivedTs:l.toNumber()})}else if(f.isTextMessage()){var b=f.isPeerToPeerMessage(),_=d?pako_3(n,{to:"string"}):new TextDecoder("utf-8").decode(n.buffer.slice(n.byteOffset,n.byteOffset+n.byteLength));if(this.info("Received a%s %s text message from %s to %s, %s",d?" compressed":"",b?"peer":"channel",o,i,p),b){var y={text:_,peerId:o,properties:{serverReceivedTs:l.toNumber(),isOfflineMessage:f.isFromCache()}};this.emit("peerTextMessage",y)}else this.emit("channelTextMessage",{channelId:i,memberId:o,text:_,properties:{serverReceivedTs:l.toNumber(),isOfflineMessage:!1}})}else if(f.isRawMessage()){var m=f.isRawPeerMessage(),v=void 0===c.description?"":c.description,$=d?pako_3(n):n;if(this.info("Received a%s %s raw message from %s to %s, %s",d?" compressed":"",m?"peer":"channel",o,i,p),m){var E={desc:v,raw:$,peerId:o,properties:{serverReceivedTs:l.toNumber(),isOfflineMessage:f.isFromCache()}};this.emit("peerRawMessage",E)}else this.emit("channelRawMessage",{desc:v,raw:$,channelId:i,memberId:o,properties:{serverReceivedTs:l.toNumber(),isOfflineMessage:!1}})}}}},{key:"onReconnect",value:function(e){var t=this;return function(){var r=[0,1].filter(function(t){return t!==e.env})[0],n=t.connection.curOpenSockets[r];n&&!0===n.notLoggedIn&&t.emit("connectionLost")}}},{key:"onUserDrop",value:function(e,t){var r=e.code;if(sendReport("KickedOff",{code:0,elapse:getElapse(this.startTime),linkId:Number.parseInt(t.name.split("-")[1],10),lts:long_1.fromNumber(Date.now()),server:t.address,serverCode:r,sid:getSid(this.instanceId),userId:this.context.uid}),10006!==r&&10001!==r){if(10009===r)return this.warn("The instance ID conflicts, reconnecting"),this.instanceId=getRandomUInt64(),this.context.sid=getSid(this.instanceId),void this.emit("instanceChanged",this.instanceId);[11,14,15,16].includes(r)&&(this.emit("userDrop",r),this.clearSockets())}else this.warn("Login too often and kicked off, reconnect and login")}},{key:"clearSockets",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0;[0,1].forEach(function(r){e.cleanLoginSubs(r),e.connection.closeSocket(r,t)})}},{key:"onMessage",value:function(e){var r=this;return function(n){var o=n.dialogue,i=n.instance,s=n.sequence,a=n.options;if(n.src!==r.context.uid){var u=o.toString(),l=r.dialPendingMsgSubjectMaps[e.env].get(u),c="".concat(i,"-").concat(o,"#").concat(s);if(l)return l.next(n),void r.log("Env_%d: The dialogue has pending messages, next: %s",e.env,c);var p=r.dialogueSequenceLru.get(u),f=!p&&s.eq(1),d=void 0!==p&&s.sub(p).eq(1);if(f||d)return t.sendMessageAck(n,e),void r.emitMessage(n,e.env);if(p){if(s.lte(p))return;r.log("Env_%d: The message pended, the sequence is not continuous with the last: %s",e.env,c)}else r.log("Env_%d: The message pended, the first sequence is not equal to 1: %s",e.env,c);var g=new Subject;r.dialPendingMsgSubjectMaps[e.env].set(u,g);var h=g.pipe(observeOn(async),scan(function(e,t){return[].concat(_toConsumableArray$6(e),[t])},[]),map$1(function(e){return e.sort(function(e,t){var r=e.sequence,n=t.sequence;return r.eq(n)?0:r.gt(n)?1:-1})}),shareReplay(1)),b=new MessageOption(a),_=!b.isFromCache()&&!b.isBufferedMessage();h.pipe(takeUntil(timer(_?ONLINE_MESSAGE_DEDUP_DELAY:OFFLINE_MESSAGE_DEDUP_DELAY)),first(function(e){if(e.length<2)return!1;for(var t=void 0===p?long_1.fromNumber(1,!0):p.add(1),r=0;r<e.length;t=t.add(1),r++){if(!e[r].sequence.eq(t))return!1}return!0}),finalize(function(){r.dialPendingMsgSubjectMaps[e.env].delete(u)})).subscribe(function(n){n.forEach(function(n){t.sendMessageAck(n,e),r.emitMessage(n,e.env),r.log("Env_%d: The message queue has fully ordered, emitting: %s",e.env,"".concat(n.instance,"-").concat(n.dialogue,"#").concat(n.sequence))})},function(n){n instanceof EmptyError&&h.pipe(first()).subscribe(function(n){return n.forEach(function(n){r.log("Env_%d: The message pending queue expired, emitting: %s",e.env,"".concat(n.instance,"-").concat(n.dialogue,"#").concat(n.sequence)),t.sendMessageAck(n,e),r.emitMessage(n,e.env)})})}),g.next(n)}else r.log("The message is from the local account, ignored")}}},{key:"onGroupEnterNotice",value:function(){var e=this;return function(t){var r=t.group,n=t.instance,o=t.seq,i=t.user,s=t.size;e.emit("memberNotice",{channelId:r,seq:o,instance:n,memberId:i,type:"MemberJoined",size:s})}}},{key:"onGroupLeaveNotice",value:function(){var e=this;return function(t){var r=t.group,n=t.instance,o=t.seq,i=t.user,s=t.size;e.emit("memberNotice",{channelId:r,seq:o,instance:n,memberId:i,type:"MemberLeft",size:s})}}},{key:"onGroupCountNotice",value:function(){var e=this;return function(t){var r=t.group,n=t.instance,o=t.size,i=t.seq;e.emit("memberNotice",{channelId:r,seq:i,instance:n,type:"MemberCountUpdated",size:o})}}},{key:"onGroupAttributeAlt",value:function(){var e=this;return function(t){var r=t.group,n=_objectWithoutProperties$2(t,["group"]);e.emit("channelAttributesUpdated",_objectSpread$1({channelId:r},n))}}},{key:"onUserNotice",value:function(e){var t=this;return function(r){var n=r.instance,o=r.seq,i=r.user;t.emit("peerOnlineStatusChanged",{peerId:i,instance:n,seq:o,state:e})}}}]),t}();function genGetSession(e){return function(){var t=e();if(!t)throw new RtmInvalidStatusError("Client is not logged in. Cannot do the operation");return t}}function _typeof$b(e){return(_typeof$b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function asyncGeneratorStep$7(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$7(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$7(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$7(i,n,o,s,a,"throw",e)}s(void 0)})}}function _classCallCheck$d(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _possibleConstructorReturn$b(e,t){return!t||"object"!==_typeof$b(t)&&"function"!=typeof t?_assertThisInitialized$b(e):t}function _getPrototypeOf$b(e){return(_getPrototypeOf$b=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _assertThisInitialized$b(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _defineProperties$9(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$9(e,t,r){return t&&_defineProperties$9(e.prototype,t),r&&_defineProperties$9(e,r),e}function _inherits$b(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$b(e,t)}function _setPrototypeOf$b(e,t){return(_setPrototypeOf$b=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}Session$2.genTimeoutError=function(e){return of(void 0).pipe(delay(COMMON_REQUEST_TIMEOUT),map$1(function(){throw new RtmTimeoutError(["Request timed out after %ds",COMMON_REQUEST_TIMEOUT],e)}))};var LocalInvitationFailureReason=RtmStatusCode$1.LocalInvitationFailureReason,LocalInvitationState=RtmStatusCode$1.LocalInvitationState,RemoteInvitationFailureReason=RtmStatusCode$1.RemoteInvitationFailureReason,RemoteInvitationState=RtmStatusCode$1.RemoteInvitationState,EndedInvitationLogMessage="The invitation has ended, skipped emitting the %s event",InvitationError=genError(),RtmLocalInvitation=function(e){function t(e,r,n){var o;return _classCallCheck$d(this,t),(o=_possibleConstructorReturn$b(this,_getPrototypeOf$b(t).call(this,n,"RtmLocalInvitation",!0))).calleeId=e,o.getSession=r,o.state=LocalInvitationState.IDLE,o.localInvitationEnd$=merge(fromEvent(_assertThisInitialized$b(o),"LocalInvitationAccepted"),fromEvent(_assertThisInitialized$b(o),"LocalInvitationRefused"),fromEvent(_assertThisInitialized$b(o),"LocalInvitationFailure"),fromEvent(_assertThisInitialized$b(o),"LocalInvitationCanceled")).pipe(first(),subscribeOn(async)),o.callId=v4_1(),o._content="",o._channelId="",o._response="",o.onLocalInvitationAccepted=function(){o.state===LocalInvitationState.RECEIVED_BY_REMOTE?o.state=LocalInvitationState.ACCEPTED_BY_REMOTE:o.log(EndedInvitationLogMessage,"LocalInvitationAccepted")},o.onLocalInvitationCanceled=function(){o.isLocalInvitationEnd()?o.log(EndedInvitationLogMessage,"LocalInvitationCanceled"):o.state=LocalInvitationState.CANCELED},o.onLocalInvitationFailure=function(){o.isLocalInvitationEnd()?o.log(EndedInvitationLogMessage,"LocalInvitationFailure"):o.state=LocalInvitationState.FAILURE},o.onLocalInvitationReceivedByPeer=function(){o.state===LocalInvitationState.SENT_TO_REMOTE?o.state=LocalInvitationState.RECEIVED_BY_REMOTE:o.log(EndedInvitationLogMessage,"LocalInvitationReceivedByPeer")},o.onLocalInvitationRefused=function(){o.state===LocalInvitationState.RECEIVED_BY_REMOTE?o.state=LocalInvitationState.REFUSED_BY_REMOTE:o.log(EndedInvitationLogMessage,"LocalInvitationRefused")},o}return _inherits$b(t,createEventBase()),_createClass$9(t,[{key:"channelId",get:function(){return this._channelId},set:function(e){if(!isValidId(e))throw new RtmInvalidArgumentError("Illegal invitation channel ID",INVITATION_API_CALL_ERR_INVALID_ARGUMENT);if(this.state!==LocalInvitationState.IDLE)throw new RtmInvalidStatusError(["Cannot set the channel ID under the %s state",this.state],INVITATION_API_CALL_ERR_ALREADY_SENT);this._channelId=e}},{key:"content",get:function(){return this._content},set:function(e){if(this.state!==LocalInvitationState.IDLE&&this.state!==LocalInvitationState.SENT_TO_REMOTE&&this.state!==LocalInvitationState.RECEIVED_BY_REMOTE)throw new RtmInvalidStatusError(["Cannot set the content under the %s state",this.state],INVITATION_API_CALL_ERR_ALREADY_SENT);if(new Blob([e]).size>INVITATION_EXTRA_MAX_BYTES)throw new RtmInvalidArgumentError('The length of the "content" overflows. The number of bytes representing content must not exceed 8 × 1024 if encoded in UTF-8.',INVITATION_API_CALL_ERR_INVALID_ARGUMENT);this._content=e}},{key:"response",get:function(){return this._response},set:function(e){throw new RtmInvalidArgumentError('Cannot set the "response" of the LocalInvitation instance.',INVITATION_API_CALL_ERR_INVALID_ARGUMENT)}}]),_createClass$9(t,[{key:"send",value:function(){var e,t=this;if(this.state===LocalInvitationState.SENT_TO_REMOTE||this.state===LocalInvitationState.RECEIVED_BY_REMOTE)throw new RtmInvalidStatusError("The local invitation send failure. The call invitation has already been sent.",INVITATION_API_CALL_ERR_ALREADY_SENT);if(this.isLocalInvitationEnd())throw new RtmInvalidStatusError("The local invitation send failure. The call invitation has ended.",INVITATION_API_CALL_ERR_ALREADY_END);this.state=LocalInvitationState.SENT_TO_REMOTE,defer$1(_asyncToGenerator$7(regenerator.mark(function r(){var n,o,i;return regenerator.wrap(function(r){for(;;)switch(r.prev=r.next){case 0:return r.next=2,t.getSession().sendInvitationMessage({peerId:t.calleeId,callId:t.callId,extra:t.content,type:"CallInvite",channelId:t.channelId});case 2:if(n=r.sent,o=n.hasPeerReceived,i=n.hasReSent,t.log("The local invitation has sent to the callee"),o||i){r.next=9;break}throw e=new InvitationError({PEER_NOT_ONLINE:"The peer of the invitation is not online"});case 9:if(o){r.next=12;break}throw e=new InvitationError({RESENT_AND_OFFLINE:"Resent and the peer of the invitation is not online"});case 12:case"end":return r.stop()}},r)}))).pipe(retryWhen(function(e){return e.pipe(tap(function(e){if(!(e instanceof InvitationError))throw e}),delay(LOCAL_INVITATION_RESEND_INTERVAL))}),timeout(LOCAL_INVITATION_ACK_TIMEOUT),takeUntil(this.localInvitationEnd$)).subscribe({next:function(){t.isLocalInvitationEnd()?t.log(EndedInvitationLogMessage,"LocalInvitationReceivedByPeer"):t.state!==LocalInvitationState.RECEIVED_BY_REMOTE?(t.info("The peer received the local invitation %s.",t.callId),t.onLocalInvitationReceivedByPeer(),t.emit("LocalInvitationReceivedByPeer"),t.localInvitationEnd$.pipe(timeout(INVITATION_EXPIRE_TIMEOUT),takeUntil(t.localInvitationEnd$)).subscribe({error:function(e){t.isLocalInvitationEnd()?t.log(EndedInvitationLogMessage,"LocalInvitationFailure"):(t.state=LocalInvitationState.FAILURE,isTimeout(e)?t.emit("LocalInvitationFailure",LocalInvitationFailureReason.INVITATION_EXPIRE):e instanceof RtmInvalidStatusError?t.emit("LocalInvitationFailure",LocalInvitationFailureReason.NOT_LOGGEDIN):t.emit("LocalInvitationFailure",LocalInvitationFailureReason.UNKNOWN),t.onLocalInvitationFailure())}})):t.log('The local invitation state is already "RECEIVED_BY_REMOTE", skipped emitting "LocalInvitationReceivedByPeer"')},error:function(r){if(t.isLocalInvitationEnd())t.log(EndedInvitationLogMessage,"LocalInvitationFailure");else{if(t.onLocalInvitationFailure(),isTimeout(r)&&e){if("PEER_NOT_ONLINE"===e.code)return void t.emit("LocalInvitationFailure",LocalInvitationFailureReason.PEER_OFFLINE);if("RESENT_AND_OFFLINE"===e.code)return void t.emit("LocalInvitationFailure",LocalInvitationFailureReason.PEER_NO_RESPONSE)}t.emit("LocalInvitationFailure",LocalInvitationFailureReason.UNKNOWN)}}})}},{key:"cancel",value:function(){if(this.isLocalInvitationEnd())throw new RtmInvalidStatusError("The local invitation cancel failure",INVITATION_API_CALL_ERR_ALREADY_END);if(this.state===LocalInvitationState.IDLE)throw new RtmInvalidStatusError("The local invitation has not been sent",INVITATION_API_CALL_ERR_NOT_STARTED);this.getSession().sendInvitationMessage({callId:this.callId,peerId:this.calleeId,type:"CallCancel",channelId:this.channelId,extra:this.content}),this.onLocalInvitationCanceled(),this.emit("LocalInvitationCanceled")}},{key:"onAcceptReceived",value:function(e){this.isLocalInvitationEnd()?this.log(EndedInvitationLogMessage,"LocalInvitationAccepted"):(this._response=e,this.onLocalInvitationAccepted(),this.emit("LocalInvitationAccepted",e),this.getSession().sendInvitationMessage({callId:this.callId,isAcceptAck:!0,type:"CallAccept",peerId:this.calleeId,channelId:this.channelId}))}},{key:"onRefuseReceived",value:function(e){this.isLocalInvitationEnd()?this.log(EndedInvitationLogMessage,"LocalInvitationRefused"):(this._response=e,this.onLocalInvitationRefused(),this.emit("LocalInvitationRefused",e))}},{key:"isLocalInvitationEnd",value:function(){return[LocalInvitationState.CANCELED,LocalInvitationState.FAILURE,LocalInvitationState.ACCEPTED_BY_REMOTE,LocalInvitationState.REFUSED_BY_REMOTE].includes(this.state)}}]),t}(),RtmRemoteInvitation=function(e){function t(e,r,n,o,i,s){var a;return _classCallCheck$d(this,t),(a=_possibleConstructorReturn$b(this,_getPrototypeOf$b(t).call(this,o,"RtmRemoteInvitation",!0))).callerId=e,a.callId=r,a.getSession=n,a.logger=o,a._content=i,a._channelId=s,a.state=RemoteInvitationState.INVITATION_RECEIVED,a.remoteInvitationEnd$=merge(fromEvent(_assertThisInitialized$b(a),"RemoteInvitationCanceled"),fromEvent(_assertThisInitialized$b(a),"RemoteInvitationRefused"),fromEvent(_assertThisInitialized$b(a),"RemoteInvitationAccepted"),fromEvent(_assertThisInitialized$b(a),"RemoteInvitationFailure")).pipe(first(),subscribeOn(async)),a._response="",a.onRemoteInvitationAccepted=function(){a.state===RemoteInvitationState.ACCEPT_SENT_TO_LOCAL?a.state=RemoteInvitationState.ACCEPTED:a.log(EndedInvitationLogMessage,"RemoteInvitationAccepted")},a.onRemoteInvitationCanceled=function(){a.isRemoteInvitationEnd()?a.log(EndedInvitationLogMessage,"RemoteInvitationCanceled"):a.state=RemoteInvitationState.CANCELED},a.onRemoteInvitationFailure=function(){a.isRemoteInvitationEnd()?a.log(EndedInvitationLogMessage,"RemoteInvitationFailure"):a.state=RemoteInvitationState.FAILURE},a.onRemoteInvitationRefused=function(){a.state===RemoteInvitationState.INVITATION_RECEIVED?a.state=RemoteInvitationState.REFUSED:a.log(EndedInvitationLogMessage,"RemoteInvitationRefused")},a.remoteInvitationEnd$.pipe(timeout(INVITATION_EXPIRE_TIMEOUT),takeUntil(a.remoteInvitationEnd$)).subscribe({error:function(e){a.isRemoteInvitationEnd()?a.log(EndedInvitationLogMessage,"RemoteInvitationFailure"):(a.onRemoteInvitationFailure(),isTimeout(e)?a.emit("RemoteInvitationFailure",RemoteInvitationFailureReason.INVITATION_EXPIRE):a.emit("RemoteInvitationFailure",RemoteInvitationFailureReason.UNKNOWN))}}),a}return _inherits$b(t,createEventBase()),_createClass$9(t,[{key:"channelId",get:function(){return this._channelId},set:function(e){throw new RtmInvalidArgumentError('Cannot set the "response" of the RemoteInvitation instance.',INVITATION_API_CALL_ERR_INVALID_ARGUMENT)}},{key:"content",get:function(){return this._content},set:function(e){throw new RtmInvalidArgumentError('Cannot set the "content" of the RemoteInvitation instance.',INVITATION_API_CALL_ERR_INVALID_ARGUMENT)}},{key:"response",get:function(){return this._response},set:function(e){if(this.isRemoteInvitationEnd())throw new RtmInvalidStatusError("The response set failure. The call invitation has already ended.",INVITATION_API_CALL_ERR_ALREADY_END);if(this.state!==RemoteInvitationState.INVITATION_RECEIVED)throw new RtmInvalidStatusError(["Cannot set the response under the %s state",this.state],INVITATION_API_CALL_ERR_ALREADY_ACCEPT);if(new Blob([e]).size>INVITATION_EXTRA_MAX_BYTES)throw new RtmInvalidArgumentError('The length of the "content" overflows. The number of bytes representing content must not exceed 8 × 1024 if encoded in UTF-8.',INVITATION_API_CALL_ERR_INVALID_ARGUMENT);this._response=e}}]),_createClass$9(t,[{key:"accept",value:function(){var e=this;if(this.isRemoteInvitationEnd())throw new RtmInvalidStatusError("The local invitation has ended. Cannot accept.",INVITATION_API_CALL_ERR_ALREADY_END);if(this.state===RemoteInvitationState.ACCEPT_SENT_TO_LOCAL)throw new RtmInvalidStatusError("The remote invitation is accepting. Cannot do the operation.",INVITATION_API_CALL_ERR_ALREADY_ACCEPT);this.state=RemoteInvitationState.ACCEPT_SENT_TO_LOCAL,defer$1(_asyncToGenerator$7(regenerator.mark(function t(){var r;return regenerator.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,e.getSession().sendInvitationMessage({peerId:e.callerId,callId:e.callId,extra:e.response,type:"CallAccept",isAcceptAck:!1,channelId:e.channelId});case 2:if(r=t.sent,r.hasPeerReceived){t.next=6;break}throw new RtmUnavailableError;case 6:return t.next=8,fromEvent(e,"RemoteInvitationAccepted").toPromise();case 8:case"end":return t.stop()}},t)}))).pipe(retryWhen(function(e){return e.pipe(delay(REMOTE_INVITATION_ACCEPT_RESEND_INTERVAL))}),timeout(REMOTE_INVITATION_WAIT_ACCEPT_ACK_TIMEOUT),takeUntil(this.remoteInvitationEnd$),throwIfEmpty()).subscribe({error:function(t){e.isRemoteInvitationEnd()?t instanceof EmptyError||e.log(EndedInvitationLogMessage,"RemoteInvitationFailure"):(e.logError(t),e.onRemoteInvitationFailure(),e.emit("RemoteInvitationFailure",RemoteInvitationFailureReason.ACCEPT_FAILURE))}})}},{key:"refuse",value:function(){if(this.state===RemoteInvitationState.ACCEPT_SENT_TO_LOCAL)throw new RtmInvalidStatusError("The remote invitation is accepting. Cannot do the operation.",INVITATION_API_CALL_ERR_ALREADY_ACCEPT);if(this.isRemoteInvitationEnd())throw new RtmInvalidStatusError("The invitation is end. Cannot refuse",INVITATION_API_CALL_ERR_ALREADY_END);this.getSession().sendInvitationMessage({peerId:this.callerId,callId:this.callId,extra:this.response,type:"CallReject",channelId:this.channelId}),this.onRemoteInvitationRefused(),this.emit("RemoteInvitationRefused")}},{key:"onCancelReceived",value:function(e){this.isRemoteInvitationEnd()?this.log(EndedInvitationLogMessage,"RemoteInvitationCanceled"):(this._content=e,this.onRemoteInvitationCanceled(),this.emit("RemoteInvitationCanceled",e))}},{key:"onAcceptAckReceived",value:function(){this.isRemoteInvitationEnd()?this.log(EndedInvitationLogMessage,"RemoteInvitationAccepted"):(this.onRemoteInvitationAccepted(),this.emit("RemoteInvitationAccepted"))}},{key:"isRemoteInvitationEnd",value:function(){return[RemoteInvitationState.ACCEPTED,RemoteInvitationState.REFUSED,RemoteInvitationState.CANCELED,RemoteInvitationState.FAILURE].includes(this.state)}}]),t}(),InvitationManager=function(e){function t(e,r){var n;return _classCallCheck$d(this,t),(n=_possibleConstructorReturn$b(this,_getPrototypeOf$b(t).call(this,r,"InvitationManager"))).logger=r,n.getSession=void 0,n.invitationDispatcher=new events,n.outgoingLocalInvitations=new Map,n.receivedRemoteInvitations=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),n.getSession=genGetSession(e),n.invitationDispatcher.on("remoteInvitationToManager",function(e){var t=e.callId,o=e.extra,i=e.callerId,s=e.channelId;if(!n.receivedRemoteInvitations.has(t)){var a=new RtmRemoteInvitation(i,t,n.getSession,r,o,s);a.remoteInvitationEnd$.subscribe(function(){n.receivedRemoteInvitations.delete(t),a.removeAllListeners()}),n.receivedRemoteInvitations.set(t,a),n.emit("remoteInvitationInstance",a)}}),n.invitationDispatcher.on("acceptAckToRemoteInvitation",function(e){var t=e.callId,r=n.receivedRemoteInvitations.get(t);r&&r.onAcceptAckReceived()}),n.invitationDispatcher.on("cancelToRemoteInvitation",function(e){var t=e.callId,r=e.extra,o=n.receivedRemoteInvitations.get(t);o&&o.onCancelReceived(r)}),n.invitationDispatcher.on("acceptToLocalInvitation",function(e){var t=e.callId,r=e.extra,o=n.outgoingLocalInvitations.get(t);o&&o.onAcceptReceived(r)}),n.invitationDispatcher.on("refuseToLocalInvitation",function(e){var t=e.callId,r=e.extra,o=n.outgoingLocalInvitations.get(t);o&&o.onRefuseReceived(r)}),n}return _inherits$b(t,createEventBase()),_createClass$9(t,[{key:"invitationMessageHandler",value:function(e){var t=e.body,r=t.callId,n=t.extra,o=void 0===n?"":n,i=t.type,s=t.channel,a=void 0===s?"":s,u=e.type,l=e.peerId,c=e.serverReceivedTs;switch(u){case"CallAccept":return void("ack"===i?this.invitationDispatcher.emit("acceptAckToRemoteInvitation",{callId:r}):"request"===i&&this.invitationDispatcher.emit("acceptToLocalInvitation",{callId:r,extra:o}));case"CallInvite":return void this.invitationDispatcher.emit("remoteInvitationToManager",{callId:r,callerId:l,extra:o,channelId:a});case"CallCancel":if("0"===r){var p="".concat(END_CALL_PREFIX,"_").concat(a,"_").concat(o);return void this.getSession().emit("peerTextMessage",{peerId:l,properties:{serverReceivedTs:c,isOfflineMessage:!1},text:p})}return void this.invitationDispatcher.emit("cancelToRemoteInvitation",{callId:r,extra:o});case"CallReject":return void this.invitationDispatcher.emit("refuseToLocalInvitation",{callId:r,extra:o});default:throw assertNever("invitationType",u)}}},{key:"genLocalInvitation",value:function(e){var t=this,r=new RtmLocalInvitation(e,this.getSession,this.logger);return r.localInvitationEnd$.subscribe(function(){r.removeAllListeners(),t.outgoingLocalInvitations.delete(r.callId)}),this.outgoingLocalInvitations.set(r.callId,r),r}}]),t}(),FUNC_ERROR_TEXT$2="Expected a function";function throttle(e,t,r){var n=!0,o=!0;if("function"!=typeof e)throw new TypeError(FUNC_ERROR_TEXT$2);return isObject_1(r)&&(n="leading"in r?!!r.leading:n,o="trailing"in r?!!r.trailing:o),debounce_1(e,t,{leading:n,maxWait:t,trailing:o})}var throttle_1=throttle,_class,_temp;function _typeof$c(e){return(_typeof$c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _toConsumableArray$7(e){return _arrayWithoutHoles$7(e)||_iterableToArray$7(e)||_nonIterableSpread$7()}function _nonIterableSpread$7(){throw new TypeError("Invalid attempt to spread non-iterable instance")}function _iterableToArray$7(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}function _arrayWithoutHoles$7(e){if(Array.isArray(e)){for(var t=0,r=new Array(e.length);t<e.length;t++)r[t]=e[t];return r}}function asyncGeneratorStep$8(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$8(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$8(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$8(i,n,o,s,a,"throw",e)}s(void 0)})}}function _classCallCheck$e(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$a(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$a(e,t,r){return t&&_defineProperties$a(e.prototype,t),r&&_defineProperties$a(e,r),e}function _possibleConstructorReturn$c(e,t){return!t||"object"!==_typeof$c(t)&&"function"!=typeof t?_assertThisInitialized$c(e):t}function _assertThisInitialized$c(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$c(e){return(_getPrototypeOf$c=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$c(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$c(e,t)}function _setPrototypeOf$c(e,t){return(_setPrototypeOf$c=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _applyDecoratedDescriptor(e,t,r,n,o){var i={};return Object.keys(n).forEach(function(e){i[e]=n[e]}),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce(function(r,n){return n(e,t,r)||r},i),o&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(o):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}const MemberJoinState={JOINED:0,LEFT:1};var ConnectionState=RtmStatusCode$1.ConnectionState,Channel=(_temp=function(e){function t(e,r,n,o){var i;return _classCallCheck$e(this,t),(i=_possibleConstructorReturn$c(this,_getPrototypeOf$c(t).call(this,o,"RtmChannel",!0))).channelId=e,i.client=n,i.onMemberCountUpdated=throttle_1(function(e){e!==i.memberCount&&(i.memberCount=e,i.emit("MemberCountUpdated",e))},MEMBER_COUNT_UPDATED_EVENT_INTERVAL),i.getSession=void 0,i.memberCount=0,i.memberJoinedLru=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),i.memberLeftLru=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),i.memberJoinStateLru=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),i.attributesSeqLru=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),i.onAttributesUpdated=function(e){var t=e.channelId,r=e.attributeMaps,n=e.instance,o=e.seq,s=n.toString(),a=i.attributesSeqLru.get(s);if((!a||o.greaterThan(a))&&(i.attributesSeqLru.set(s,o),t===i.channelId)){var u={},l=r,c=Array.isArray(l),p=0;for(l=c?l:l[Symbol.iterator]();;){var f;if(c){if(p>=l.length)break;f=l[p++]}else{if((p=l.next()).done)break;f=p.value}var d=f,g=d.key,h=d.ms,b=d.value,_=d.origin;if("string"!=typeof g||!long_1.isLong(h)||"string"!=typeof b||!isValidId(_))break;u[g]={value:b,lastUpdateUserId:_,lastUpdateTs:h.toNumber()}}i.emit("AttributesUpdated",u)}},i.onChannelTextMessage=function(e){var t=e.memberId,r=e.text,n=e.channelId,o=e.properties;n===i.channelId&&i.emit("ChannelMessage",{text:r,messageType:RtmStatusCode$1.MessageType.TEXT},t,o)},i.onChannelRawMessage=function(e){var t=e.desc,r=e.raw,n=e.memberId,o=e.channelId,s=e.properties;o===i.channelId&&i.emit("ChannelMessage",{messageType:RtmStatusCode$1.MessageType.RAW,rawMessage:r,description:t},n,s)},i.onMemberNotice=function(e){var t=e.channelId,r=e.instance,n=e.memberId,o=e.seq,s=e.type,a=e.size;if(t===i.channelId){var u=r.toString(),l=o.toString(),c={MemberLeft:i.memberLeftLru,MemberJoined:i.memberJoinedLru,MemberCountUpdated:void 0}[s];if(c){if(c.has(u+l))return void i.log("received duplicated %s notice (seq: %s), channel '%s', member '%s'",s,l,i.channelId,n);if(c.set(u+l,void 0),"string"!=typeof n)return;if(n!==i.getSession().context.uid){var p=i.memberJoinStateLru.get(n);if(p===MemberJoinState.JOINED&&"MemberJoined"===s)return void i.log("received duplicated %s state (seq: %s), channel '%s', member '%s'",s,l,i.channelId,n);if(p===MemberJoinState.LEFT&&"MemberLeft"===s)return void i.log("received duplicated %s state (seq: %s), channel '%s', member '%s'",s,l,i.channelId,n)}i.memberJoinStateLru.set(n,"MemberJoined"===s?MemberJoinState.JOINED:MemberJoinState.LEFT)}i.info("Channel %s - %s, memberId: %s",s,i.channelId,"MemberCountUpdated"===s?"[unknown]":n);var f=n===i.getSession().context.uid;"MemberLeft"===s&&isValidId(n)?(f||i.emit(s,n),i.onMemberCountUpdated(a)):"MemberJoined"===s&&isValidId(n)?(f||i.emit(s,n),i.onMemberCountUpdated(a)):"MemberCountUpdated"===s&&"number"==typeof a&&i.onMemberCountUpdated(a)}},i.getSession=genGetSession(r),i.info("A channel created, id %s",e),i}return _inherits$c(t,createEventBase()),_createClass$a(t,[{key:"join",value:function(){var e=_asyncToGenerator$8(regenerator.mark(function e(){var t;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(isValidId(this.channelId)){e.next=2;break}throw new RtmInvalidArgumentError([invalidArgumentMessage,"channelId"],JOIN_CHANNEL_ERR_INVALID_ARGUMENT);case 2:e.prev=2,t=this.getSession(),e.next=9;break;case 6:throw e.prev=6,e.t0=e.catch(2),new RtmInvalidStatusError("The client is not logged in. Cannot do the operation",JOIN_CHANNEL_ERR_USER_NOT_LOGGED_IN);case 9:if(!t.joinedChannels.has(this)){e.next=12;break}throw sendReport("ChnJoin",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),userId:t.context.uid,elapse:getElapse(t.startTime),errCode:JOIN_CHANNEL_ERR_ALREADY_JOINED,sid:getSid(t.instanceId)}),new RtmInvalidStatusError("The channel has joined. Cannot rejoin",JOIN_CHANNEL_ERR_ALREADY_JOINED);case 12:if(e.prev=12,this.log("Joining the channel %s",this.channelId),!this.hasOtherChannelJoined()){e.next=17;break}throw sendReport("ChnJoin",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),userId:t.context.uid,elapse:getElapse(t.startTime),errCode:JOIN_CHANNEL_ERR_ALREADY_JOINED_CHANNEL_OF_SAME_ID,sid:getSid(t.instanceId)}),new RtmInvalidStatusError("A channel of the same channel ID has already joined. Cannot rejoin",JOIN_CHANNEL_ERR_ALREADY_JOINED_CHANNEL_OF_SAME_ID);case 17:if(t.joinedChannels.size!==MAX_JOINED_CHANNELS){e.next=20;break}throw sendReport("ChnJoin",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),userId:t.context.uid,elapse:getElapse(t.startTime),errCode:JOIN_CHANNEL_ERR_EXCEED_LIMIT,sid:getSid(t.instanceId)}),new RtmLimitExceededError("The joined channels has exceeded the limit of 20",JOIN_CHANNEL_ERR_EXCEED_LIMIT);case 20:return sendReport("ChnJoin",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),userId:t.context.uid,elapse:getElapse(t.startTime),errCode:0,sid:getSid(t.instanceId)}),e.next=23,t.requestChannelJoin(this,this.channelId);case 23:sendReport("ChnJoinRes",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),elapse:getElapse(t.startTime),errCode:0,sid:getSid(t.instanceId),serverErrCode:0,userId:t.context.uid}),this.info("The channel %s joined successfully",this.channelId),t.on("channelTextMessage",this.onChannelTextMessage),t.on("channelRawMessage",this.onChannelRawMessage),t.on("memberNotice",this.onMemberNotice),t.on("channelAttributesUpdated",this.onAttributesUpdated),e.next=40;break;case 31:if(e.prev=31,e.t1=e.catch(12),this.logError(e.t1),!isRtmError(e.t1)){e.next=36;break}throw e.t1;case 36:if(!isTimeout(e.t1)){e.next=39;break}throw sendReport("ChnJoinRes",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),elapse:getElapse(t.startTime),errCode:JOIN_CHANNEL_TIMEOUT,sid:getSid(t.instanceId),serverErrCode:0,userId:t.context.uid}),new RtmTimeoutError(["Join channel %s timed out",this.channelId],JOIN_CHANNEL_TIMEOUT);case 39:throw new RtmUnknownError(["The channel %s join failure",this.channelId],JOIN_CHANNEL_ERR_FAILURE,e.t1);case 40:case"end":return e.stop()}},e,this,[[2,6],[12,31]])}));return function(){return e.apply(this,arguments)}}()},{key:"leave",value:function(){var e=_asyncToGenerator$8(regenerator.mark(function e(){var t;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:e.prev=0,t=this.getSession(),e.next=7;break;case 4:throw e.prev=4,e.t0=e.catch(0),new RtmInvalidStatusError("The client is not logged in. Cannot do the operation",LEAVE_CHANNEL_ERR_USER_NOT_LOGGED_IN);case 7:if(t.joinedChannels.has(this)){e.next=9;break}throw new RtmInvalidStatusError("The channel does not join. Cannot do the operation",LEAVE_CHANNEL_ERR_NOT_IN_CHANNEL);case 9:e.prev=9,t.requestChannelLeave(this,this.channelId),this.memberLeftLru.empty(),this.memberJoinedLru.empty(),this.attributesSeqLru.empty(),this.memberJoinStateLru.empty(),this.memberCount=0,t.removeListener("channelTextMessage",this.onChannelTextMessage),t.removeListener("channelRawMessage",this.onChannelRawMessage),t.removeListener("memberNotice",this.onMemberNotice),t.removeListener("channelAttributesUpdated",this.onAttributesUpdated),e.next=31;break;case 22:if(e.prev=22,e.t1=e.catch(9),this.logError(e.t1),!isRtmError(e.t1)){e.next=29;break}throw!e.t1.code&&(e.t1.code=LEAVE_CHANNEL_ERR_REJECTED),sendReport("ChnLeave",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),elapse:getElapse(t.startTime),errCode:LEAVE_CHANNEL_ERR_REJECTED,sid:getSid(t.instanceId),userId:t.context.uid}),e.t1;case 29:throw sendReport("ChnLeave",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),elapse:getElapse(t.startTime),errCode:LEAVE_CHANNEL_ERR_FAILURE,sid:getSid(t.instanceId),userId:t.context.uid}),new RtmUnknownError("The channel leave failure",LEAVE_CHANNEL_ERR_FAILURE,e.t1);case 31:sendReport("ChnLeave",{cname:this.channelId,lts:long_1.fromNumber(Date.now()),elapse:getElapse(t.startTime),errCode:0,sid:getSid(t.instanceId),userId:t.context.uid});case 32:case"end":return e.stop()}},e,this,[[0,4],[9,22]])}));return function(){return e.apply(this,arguments)}}()},{key:"sendMessage",value:function(){var e=_asyncToGenerator$8(regenerator.mark(function e(t){var r,n,o,i,s,a,u=this,l=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=l.length>1&&void 0!==l[1]?l[1]:{},n=r.enableHistoricalMessaging,o=void 0!==n&&n,isPlainObject$1(t)){e.next=3;break}throw new RtmInvalidArgumentError("Message is not valid",CHANNEL_MESSAGE_ERR_INVALID_MESSAGE);case 3:if(void 0===t.messageType&&(void 0!==t.rawMessage?t.messageType="RAW":t.messageType="TEXT"),i=!0,"RAW"===t.messageType&&void 0!==t.text&&(i=!1),"TEXT"===t.messageType&&(void 0!==t.rawMessage&&(i=!1),void 0!==t.description&&(i=!1)),i){e.next=9;break}throw new RtmInvalidArgumentError("Message is not valid",CHANNEL_MESSAGE_ERR_INVALID_MESSAGE);case 9:if(this.client.connectionState!==ConnectionState.RECONNECTING){e.next=12;break}return s=Date.now(),e.abrupt("return",new Promise(function(e,r){var n,i=function(){var i=_asyncToGenerator$8(regenerator.mark(function i(){var a,l;return regenerator.wrap(function(i){for(;;)switch(i.prev=i.next){case 0:i.prev=0,a=u.getSession(),i.next=7;break;case 4:throw i.prev=4,i.t0=i.catch(0),new RtmInvalidStatusError("The client is not logged in. Cannot do the operation",CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN);case 7:if(l=Date.now()-s,i.prev=8,"TEXT"!==t.messageType){i.next=15;break}return i.next=12,a.sendTextMessage(t.text,u.channelId,!1,{enableHistoricalMessaging:o,enableOfflineMessaging:!1},MESSAGE_SEND_TIMEOUT-l);case 12:e(),i.next=23;break;case 15:if("RAW"!==t.messageType){i.next=22;break}return void 0===t.description&&(t.description=""),i.next=19,a.sendRawMessage(t.rawMessage,t.description,u.channelId,!1,{enableHistoricalMessaging:o,enableOfflineMessaging:!1},MESSAGE_SEND_TIMEOUT-l);case 19:e(),i.next=23;break;case 22:r(new RtmInvalidArgumentError("Invalid message type",CHANNEL_MESSAGE_ERR_INVALID_MESSAGE));case 23:return i.abrupt("return");case 26:i.prev=26,i.t1=i.catch(8),isTimeout(i.t1)&&r(new RtmTimeoutError(genTimeoutMessage(u.name,"sendMessageToPeer",MESSAGE_SEND_TIMEOUT),CHANNEL_MESSAGE_ERR_TIMEOUT)),isRtmError(i.t1)&&r(i.t1),r(new RtmUnavailableError("Channel message send failure",CHANNEL_MESSAGE_ERR_FAILURE,i.t1));case 31:return i.prev=31,clearTimeout(n),i.finish(31);case 34:case"end":return i.stop()}},i,null,[[0,4],[8,26,31,34]])}));return function(){return i.apply(this,arguments)}}();u.client.internalEmitter.once("RECONNECTED",i),n=setTimeout(function(){u.client.internalEmitter.off("RECONNECTED",i),r(new RtmTimeoutError(genTimeoutMessage(u.name,"sendMessageToPeer",MESSAGE_SEND_TIMEOUT),CHANNEL_MESSAGE_ERR_TIMEOUT))},MESSAGE_RETRY_TIMEOUT)}));case 12:if(this.client.connectionState===ConnectionState.CONNECTED){e.next=14;break}throw new RtmInvalidStatusError("The client is not logged in. Cannot do the operation",CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN);case 14:e.prev=14,a=this.getSession(),e.next=21;break;case 18:throw e.prev=18,e.t0=e.catch(14),new RtmInvalidStatusError("The client is not logged in. Cannot do the operation",CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN);case 21:if(e.prev=21,a.joinedChannels.has(this)){e.next=24;break}throw new RtmInvalidStatusError("The channel does not join. Cannot do the operation",CHANNEL_MESSAGE_ERR_USER_NOT_LOGGED_IN);case 24:if("TEXT"!==t.messageType){e.next=29;break}return e.next=27,a.sendTextMessage(t.text,this.channelId,!1,{enableHistoricalMessaging:o,enableOfflineMessaging:!1});case 27:e.next=36;break;case 29:if("RAW"!==t.messageType){e.next=35;break}return void 0===t.description&&(t.description=""),e.next=33,a.sendRawMessage(t.rawMessage,t.description,this.channelId,!1,{enableHistoricalMessaging:o,enableOfflineMessaging:!1});case 33:e.next=36;break;case 35:throw new RtmInvalidArgumentError("Invalid message type",CHANNEL_MESSAGE_ERR_INVALID_MESSAGE);case 36:e.next=46;break;case 38:if(e.prev=38,e.t1=e.catch(21),!isTimeout(e.t1)){e.next=42;break}throw new RtmTimeoutError(genTimeoutMessage(this.name,"sendMessage",MESSAGE_SEND_TIMEOUT),CHANNEL_MESSAGE_ERR_TIMEOUT);case 42:if(!isRtmError(e.t1)){e.next=45;break}throw this.logError(e.t1),e.t1;case 45:throw new RtmUnknownError("The channel message send failure",CHANNEL_MESSAGE_ERR_FAILURE);case 46:case"end":return e.stop()}},e,this,[[14,18],[21,38]])}));return function(t){return e.apply(this,arguments)}}()},{key:"getMembers",value:function(){var e=_asyncToGenerator$8(regenerator.mark(function e(){var t,r,n;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:e.prev=0,e.prev=1,t=this.getSession(),e.next=8;break;case 5:throw e.prev=5,e.t0=e.catch(1),new RtmInvalidStatusError("The client is not logged in. Cannot do the operation",GET_MEMBERS_ERR_USER_NOT_LOGGED_IN);case 8:if(t.joinedChannels.has(this)){e.next=10;break}throw new RtmInvalidStatusError("The channel does not join. Cannot do the operation",GET_MEMBERS_ERR_NOT_IN_CHANNEL);case 10:return r=this.getSession().requestChannelMemberList(this.channelId),e.next=13,r.pipe(map$1(function(e){return e.memberInfos.map(function(e){return e.account})})).toPromise();case 13:return n=e.sent,this.info("Channel %s - get members success, %o",this.channelId,n),e.abrupt("return",n);case 18:if(e.prev=18,e.t1=e.catch(0),!isRtmError(e.t1)){e.next=23;break}throw this.logError(e.t1),e.t1;case 23:throw new RtmUnknownError("The channel members get failure",GET_MEMBERS_ERR_FAILURE);case 24:case"end":return e.stop()}},e,this,[[0,18],[1,5]])}));return function(){return e.apply(this,arguments)}}()},{key:"hasOtherChannelJoined",value:function(){var e=this;return!this.getSession().joinedChannels.has(this)&&_toConsumableArray$7(this.getSession().joinedChannels).some(function(t){return t.channelId===e.channelId})}}]),t}(),_class=_temp,_applyDecoratedDescriptor(_class.prototype,"join",[logged],Object.getOwnPropertyDescriptor(_class.prototype,"join"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"leave",[logged],Object.getOwnPropertyDescriptor(_class.prototype,"leave"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"sendMessage",[logged],Object.getOwnPropertyDescriptor(_class.prototype,"sendMessage"),_class.prototype),_applyDecoratedDescriptor(_class.prototype,"getMembers",[logged],Object.getOwnPropertyDescriptor(_class.prototype,"getMembers"),_class.prototype),_class),_class$1,_temp$1;function _typeof$d(e){return(_typeof$d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function ownKeys$3(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function _objectSpread$2(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys$3(r,!0).forEach(function(t){_defineProperty$4(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys$3(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _slicedToArray$5(e,t){return _arrayWithHoles$5(e)||_iterableToArrayLimit$5(e,t)||_nonIterableRest$5()}function _nonIterableRest$5(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}function _iterableToArrayLimit$5(e,t){var r=[],n=!0,o=!1,i=void 0;try{for(var s,a=e[Symbol.iterator]();!(n=(s=a.next()).done)&&(r.push(s.value),!t||r.length!==t);n=!0);}catch(e){o=!0,i=e}finally{try{n||null==a.return||a.return()}finally{if(o)throw i}}return r}function _arrayWithHoles$5(e){if(Array.isArray(e))return e}function _defineProperty$4(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function asyncGeneratorStep$9(e,t,r,n,o,i,s){try{var a=e[i](s),u=a.value}catch(e){return void r(e)}a.done?t(u):Promise.resolve(u).then(n,o)}function _asyncToGenerator$9(e){return function(){var t=this,r=arguments;return new Promise(function(n,o){var i=e.apply(t,r);function s(e){asyncGeneratorStep$9(i,n,o,s,a,"next",e)}function a(e){asyncGeneratorStep$9(i,n,o,s,a,"throw",e)}s(void 0)})}}function _classCallCheck$f(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function _defineProperties$b(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function _createClass$b(e,t,r){return t&&_defineProperties$b(e.prototype,t),r&&_defineProperties$b(e,r),e}function _possibleConstructorReturn$d(e,t){return!t||"object"!==_typeof$d(t)&&"function"!=typeof t?_assertThisInitialized$d(e):t}function _assertThisInitialized$d(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function _getPrototypeOf$d(e){return(_getPrototypeOf$d=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function _inherits$d(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_setPrototypeOf$d(e,t)}function _setPrototypeOf$d(e,t){return(_setPrototypeOf$d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function _applyDecoratedDescriptor$1(e,t,r,n,o){var i={};return Object.keys(n).forEach(function(e){i[e]=n[e]}),i.enumerable=!!i.enumerable,i.configurable=!!i.configurable,("value"in i||i.initializer)&&(i.writable=!0),i=r.slice().reverse().reduce(function(r,n){return n(e,t,r)||r},i),o&&void 0!==i.initializer&&(i.value=i.initializer?i.initializer.call(o):void 0,i.initializer=void 0),void 0===i.initializer&&(Object.defineProperty(e,t,i),i=null),i}var ConnectionChangeReason=RtmStatusCode$1.ConnectionChangeReason,ConnectionState$1=RtmStatusCode$1.ConnectionState,connectionStateCodeMap={DISCONNECTED:1,CONNECTING:2,CONNECTED:3,RECONNECTING:4,ABORTED:5},connectionStateChangeReason={LOGIN:1,LOGIN_SUCCESS:2,LOGIN_FAILURE:3,LOGIN_TIMEOUT:4,INTERRUPTED:5,LOGOUT:6,BANNED_BY_SERVER:7,REMOTE_LOGIN:8},Client=(_temp$1=function(e){function t(e,r,n,o){var i;return _classCallCheck$f(this,t),(i=_possibleConstructorReturn$d(this,_getPrototypeOf$d(t).call(this,r,"RtmClient",!0))).parameters=n,i.setParameters=o,i.connectionState=ConnectionState$1.DISCONNECTED,i.internalEmitter=new events,i.context=void 0,i.attributes={},i.loginPromise=void 0,i.attributeDrafts=new Set,i.session=void 0,i.lastLoginTime=void 0,i.reconnId=0,i.channelAttributesCacheLru=new LRUCache(void 0,{maxlen:CHANNEL_ATTRIBUTES_CACHE_MAX_LENGTH}),i.invitationManager=new InvitationManager(function(){return i.session},i.logger),i.subscribedPeerStatusCache={},i.peerStatusSeqLru=new LRUCache(void 0,{maxlen:LRU_MAX_ITEMS}),i.peerUnreachableTimers={},i.reconnectionTimer=void 0,i.userDropHandler=function(e){if(void 0!==i.reconnectionTimer&&window.clearTimeout(i.reconnectionTimer),i.connectionState!==ConnectionState$1.ABORTED)switch(e){case 11:return i.logError("Kicked off by remote session"),void i.onConnectionStateChanged(ConnectionState$1.ABORTED,ConnectionChangeReason.REMOTE_LOGIN);case 14:case 15:case 16:return i.logError("Server banned because of illegal ".concat({14:"User ID",15:"IP",16:"Channel Name"}[e])),void i.onConnectionStateChanged(ConnectionState$1.ABORTED,ConnectionChangeReason.BANNED_BY_SERVER);default:i.logError("User kicked off for unknown code: ".concat(e)),i.onConnectionStateChanged(ConnectionState$1.ABORTED,ConnectionChangeReason.INTERRUPTED)}},i.context=new Context(e,r),i.invitationManager.on("remoteInvitationInstance",function(e){i.emit("RemoteInvitationReceived",e)}),i}return _inherits$d(t,createEventBase()),_createClass$b(t,[{key:"renewToken",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if("string"==typeof t&&0!==t.length){e.next=2;break}throw new RtmInvalidArgumentError("Invalid argument",RENEW_TOKEN_ERR_INVALID_ARGUMENT);case 2:if("string"!=typeof t){e.next=5;break}if(!(t.length<APP_ID_LENGTH||t.substr(3,APP_ID_LENGTH)!==this.context.appId)){e.next=5;break}throw new RtmInvalidArgumentError("Invalid token",RENEW_TOKEN_ERR_INVALID_TOKEN);case 5:if(this.connectionState!==ConnectionState$1.ABORTED){e.next=8;break}return e.next=8,new Promise(function(){});case 8:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=10;break}throw new RtmInvalidStatusError("The client is not logged in",RENEW_TOKEN_ERR_USER_NOT_LOGGED_IN);case 10:if(void 0!==this.session){e.next=12;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 12:return e.prev=12,e.next=15,this.session.connection.apClient.fetchAp(getUrl("ap-web-1.agora.io"),t).pipe(timeout(AP_REQUEST_TIMEOUT)).toPromise();case 15:r=e.sent,n=r.ticket,e.next=27;break;case 19:if(e.prev=19,e.t0=e.catch(12),e.t0.code!==LOGIN_ERR_INVALID_APP_ID&&e.t0.code!==LOGIN_ERR_INVALID_TOKEN){e.next=23;break}throw new RtmUnauthenticatedError("Invalid token",RENEW_TOKEN_ERR_INVALID_TOKEN);case 23:if(e.t0.code!==LOGIN_ERR_TOKEN_EXPIRED){e.next=25;break}throw new RtmUnauthenticatedError("The token expired",RENEW_TOKEN_ERR_TOKEN_EXPIRED);case 25:if(!isTimeout(e.t0)){e.next=27;break}throw new RtmTimeoutError("Renew token timed out",RENEW_TOKEN_ERR_FAILURE);case 27:this.context.token=t,this.session.curLoginSockets.filter(function(e){return void 0!==e}).forEach(function(e){return e.ticket=n});case 29:case"end":return e.stop()}},e,this,[[12,19]])}));return function(t){return e.apply(this,arguments)}}()},{key:"queryPeersOnlineStatus",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",QUERY_PEERS_ONLINE_STATUS_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:if(!(!Array.isArray(t)||0===t.length||t.some(function(e){return!isValidId(e)})||t.length>256)){e.next=6;break}throw new RtmInvalidArgumentError("invalid arguments",QUERY_PEERS_ONLINE_STATUS_ERR_INVALID_ARGUMENT);case 6:return e.next=8,this.session.requestPeersOnlineStatus(t).toPromise();case 8:return r=e.sent,n=mapValues_1(keyBy_1(r.userInfos,"account"),function(e){var t=e.ts;return Boolean(t)}),Object.keys(n).forEach(function(e){if(e in o.subscribedPeerStatusCache&&o.subscribedPeerStatusCache[e]!==RtmStatusCode$1.PeerOnlineState.UNREACHABLE){var t=n[e]?RtmStatusCode$1.PeerOnlineState.ONLINE:RtmStatusCode$1.PeerOnlineState.OFFLINE;o.emit("PeersOnlineStatusChanged",_defineProperty$4({},e,t)),o.subscribedPeerStatusCache[e]=t}}),e.abrupt("return",n);case 12:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"getChannelMemberCount",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p,f,d,g,h=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",GET_CHANNEL_MEMBER_COUNT_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:if(!(t.length>32)){e.next=6;break}throw new RtmInvalidArgumentError("getChannelMemberCount exceed limit of 32 channelIds",GET_CHANNEL_MEMBER_COUNT_ERR_EXCEED_LIMIT);case 6:if(Array.isArray(t)&&0!==t.length){e.next=8;break}throw new RtmInvalidArgumentError("Invalid arguments: channelIds",GET_CHANNEL_MEMBER_COUNT_ERR_INVALID_ARGUMENT);case 8:r=t,n=Array.isArray(r),o=0,r=n?r:r[Symbol.iterator]();case 9:if(!n){e.next=15;break}if(!(o>=r.length)){e.next=12;break}return e.abrupt("break",24);case 12:i=r[o++],e.next=19;break;case 15:if(!(o=r.next()).done){e.next=18;break}return e.abrupt("break",24);case 18:i=o.value;case 19:if(isValidId(s=i)){e.next=22;break}throw new RtmInvalidArgumentError(["getChannelMemberCount channel id %s is invalid",s],GET_CHANNEL_MEMBER_COUNT_ERR_INVALID_ARGUMENT);case 22:e.next=9;break;case 24:return e.next=26,this.session.requestGetChannelMemberCount(t).toPromise();case 26:a=e.sent,u=a.groupInfos,l={},c=function(){if(f){if(d>=p.length)return"break";g=p[d++]}else{if((d=p.next()).done)return"break";g=d.value}var e=g,t=e.group,r=e.memberCount;isValidId(t)&&"number"==typeof r&&(h.session.joinedChannels.forEach(function(e){e.channelId===t&&e.onMemberCountUpdated(r)}),l[t]=r)},p=u,f=Array.isArray(p),d=0,p=f?p:p[Symbol.iterator]();case 31:if("break"!==c()){e.next=34;break}return e.abrupt("break",36);case 34:e.next=31;break;case 36:return e.abrupt("return",l);case 37:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"setLocalUserAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!(Object.keys(t).length>32)){e.next=2;break}throw new RtmLimitExceededError("Exceed the limit of 32 attributes",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 2:if(0!==Object.keys(t).length){e.next=4;break}throw new RtmInvalidArgumentError("The attributes is an empty object",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 4:r=0,n=0,o=Object.entries(t);case 6:if(!(n<o.length)){e.next=21;break}if(i=_slicedToArray$5(o[n],2),s=i[0],a=i[1],u=new Blob([s]).size,!(0===s.length||u>32)){e.next=11;break}throw new RtmInvalidArgumentError("Invalid attribute key",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 11:if(!((l=new Blob([a]).size)>8192)){e.next=14;break}throw new RtmLimitExceededError("Invalid attribute value, over the limit of 8KB",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 14:if(0!==a.length){e.next=16;break}throw new RtmInvalidArgumentError("Invalid attribute value",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 16:r+=u,r+=l;case 18:n++,e.next=6;break;case 21:if(!(r>16384)){e.next=23;break}throw new RtmLimitExceededError("The attributes size overflow",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 23:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=25;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 25:if(void 0!==this.session){e.next=27;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 27:return c=this.session.requestSetLocalUserAttributes(t).toPromise(),p={attribute:t,promise:c},this.attributeDrafts.add(p),e.prev=30,e.next=33,c;case 33:this.attributes=t,e.next=41;break;case 36:if(e.prev=36,e.t0=e.catch(30),!isRtmError(e.t0)){e.next=40;break}throw e.t0;case 40:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 41:return e.prev=41,this.attributeDrafts.delete(p),e.finish(41);case 44:case"end":return e.stop()}},e,this,[[30,36,41,44]])}));return function(t){return e.apply(this,arguments)}}()},{key:"setChannelAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t,r){var n,o,i,s,a,u,l,c,p,f,d,g,h,b=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=b.length>2&&void 0!==b[2]?b[2]:{},o=n.enableNotificationToChannelMembers,i=void 0!==o&&o,!(Object.keys(r).length>32)){e.next=3;break}throw new RtmLimitExceededError("Exceed the limit of 32 attributes",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 3:if(0!==Object.keys(r).length){e.next=5;break}throw new RtmInvalidArgumentError("The attributes is an empty object",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 5:s=0,a=0,u=Object.entries(r);case 7:if(!(a<u.length)){e.next=22;break}if(l=_slicedToArray$5(u[a],2),c=l[0],p=l[1],f=new Blob([c]).size,!(0===c.length||f>32)){e.next=12;break}throw new RtmInvalidArgumentError("Invalid attribute key",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 12:if(!((d=new Blob([p]).size)>8192)){e.next=15;break}throw new RtmLimitExceededError("Invalid attribute value, over the limit of 8KB",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 15:if(0!==p.length){e.next=17;break}throw new RtmInvalidArgumentError("Invalid attribute value",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 17:s+=f,s+=d;case 19:a++,e.next=7;break;case 22:if(!(s>32768)){e.next=24;break}throw new RtmLimitExceededError("The attributes size overflow",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 24:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=26;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 26:if(void 0!==this.session){e.next=28;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 28:return g=this.session.requestSetChannelAttributes(t,r,i).toPromise(),e.prev=29,e.next=32,g;case 32:h=mapValues_1(r,function(e){return new Blob([e]).size}),this.channelAttributesCacheLru.set(t,h),e.next=41;break;case 36:if(e.prev=36,e.t0=e.catch(29),!isRtmError(e.t0)){e.next=40;break}throw e.t0;case 40:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 41:case"end":return e.stop()}},e,this,[[29,36]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"addOrUpdateLocalUserAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p,f,d,g;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(isPlainObject$1(t)){e.next=2;break}throw new RtmInvalidArgumentError("Invalid attribute",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 2:if(0!==Object.keys(t).length){e.next=4;break}throw new RtmInvalidArgumentError("The attributes is an empty object",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 4:if(r=_objectSpread$2({},this.attributes,{},t),!(Object.keys(r).length>32)){e.next=7;break}throw new RtmLimitExceededError("Exceed the limit of 32 attributes",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 7:for(n=0,o=0,i=Object.entries(r);o<i.length;o++)s=_slicedToArray$5(i[o],2),a=s[0],u=s[1],n+=new Blob([a,u]).size;if(!(n>16384)){e.next=11;break}throw new RtmLimitExceededError("The attributes size overflow",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 11:l=0,c=Object.entries(t);case 12:if(!(l<c.length)){e.next=23;break}if(p=_slicedToArray$5(c[l],2),f=p[0],u=p[1],!(0===f.length||new Blob([f]).size>32)){e.next=16;break}throw new RtmInvalidArgumentError("Invalid attribute key",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 16:if(!(new Blob([u]).size>8192)){e.next=18;break}throw new RtmLimitExceededError("Invalid attribute value, over the limit of 8KB",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 18:if(0!==u.length){e.next=20;break}throw new RtmInvalidArgumentError("Invalid attribute value",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 20:l++,e.next=12;break;case 23:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=25;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 25:if(void 0!==this.session){e.next=27;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 27:return d=this.session.requestAddOrUpdateLocalUserAttributes(t).toPromise(),g={attribute:r,promise:d},this.attributeDrafts.add(g),e.prev=30,e.next=33,d;case 33:this.attributes=r,e.next=41;break;case 36:if(e.prev=36,e.t0=e.catch(30),!isRtmError(e.t0)){e.next=40;break}throw e.t0;case 40:throw new RtmInvalidArgumentError("arguments is not valid",QUERY_PEERS_ONLINE_STATUS_ERR_INVALID_ARGUMENT);case 41:return e.prev=41,this.attributeDrafts.delete(g),e.finish(41);case 44:case"end":return e.stop()}},e,this,[[30,36,41,44]])}));return function(t){return e.apply(this,arguments)}}()},{key:"addOrUpdateChannelAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t,r){var n,o,i,s,a,u,l,c,p,f,d,g,h,b=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=b.length>2&&void 0!==b[2]?b[2]:{},o=n.enableNotificationToChannelMembers,i=void 0!==o&&o,isPlainObject$1(r)){e.next=3;break}throw new RtmInvalidArgumentError("Invalid attribute",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 3:if(0!==Object.keys(r).length){e.next=5;break}throw new RtmInvalidArgumentError("The attributes is an empty object",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 5:if(!(Object.keys(r).length>32)){e.next=7;break}throw new RtmLimitExceededError("Exceed the limit of 32 attributes",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 7:s=this.channelAttributesCacheLru.get(t,{}),a=mapValues_1(r,function(e){return new Blob([e]).size}),u=0,l=_objectSpread$2({},s,{},a),c=0,p=Object.entries(l);case 12:if(!(c<p.length)){e.next=25;break}if(f=_slicedToArray$5(p[c],2),d=f[0],g=f[1],!(0===d.length||new Blob([d]).size>32)){e.next=16;break}throw new RtmInvalidArgumentError("Invalid attribute key",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 16:if(!(g>8192)){e.next=18;break}throw new RtmLimitExceededError("Invalid attribute value, over the limit of 8KB",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 18:if(0!==g){e.next=20;break}throw new RtmInvalidArgumentError("Invalid attribute value",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 20:u+=g,u+=new Blob([d]).size;case 22:c++,e.next=12;break;case 25:if(!(u>32768)){e.next=27;break}throw new RtmLimitExceededError("The attributes size overflow",ATTRIBUTE_OPERATION_ERR_SIZE_OVERFLOW);case 27:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=29;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 29:if(void 0!==this.session){e.next=31;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 31:return h=this.session.requestAddOrUpdateChannelAttributes(t,r,i).toPromise(),e.prev=32,e.next=35,h;case 35:this.channelAttributesCacheLru.set(t,l),e.next=43;break;case 38:if(e.prev=38,e.t0=e.catch(32),!isRtmError(e.t0)){e.next=42;break}throw e.t0;case 42:throw new RtmInvalidArgumentError("arguments is not valid",QUERY_PEERS_ONLINE_STATUS_ERR_INVALID_ARGUMENT);case 43:case"end":return e.stop()}},e,this,[[32,38]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"deleteLocalUserAttributesByKeys",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(Array.isArray(t)&&0!==t.length&&!t.some(function(e){return 0===e.length||e.length>32})){e.next=2;break}throw new RtmInvalidStatusError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 2:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=4;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 4:if(void 0!==this.session){e.next=6;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 6:return r=this.session.requestDeleteLocalUserAttributesByKeys(t).toPromise(),n={attribute:omit_1(this.attributes,t),promise:r},this.attributeDrafts.add(n),e.prev=9,e.next=12,r;case 12:o=t,i=Array.isArray(o),s=0,o=i?o:o[Symbol.iterator]();case 13:if(!i){e.next=19;break}if(!(s>=o.length)){e.next=16;break}return e.abrupt("break",27);case 16:a=o[s++],e.next=23;break;case 19:if(!(s=o.next()).done){e.next=22;break}return e.abrupt("break",27);case 22:a=s.value;case 23:u=a,delete this.attributes[u];case 25:e.next=13;break;case 27:e.next=34;break;case 29:if(e.prev=29,e.t0=e.catch(9),!isRtmError(e.t0)){e.next=33;break}throw e.t0;case 33:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 34:return e.prev=34,this.attributeDrafts.delete(n),e.finish(34);case 37:case"end":return e.stop()}},e,this,[[9,29,34,37]])}));return function(t){return e.apply(this,arguments)}}()},{key:"deleteChannelAttributesByKeys",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t,r){var n,o,i,s,a,u,l,c,p,f=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=f.length>2&&void 0!==f[2]?f[2]:{},o=n.enableNotificationToChannelMembers,i=void 0!==o&&o,Array.isArray(r)&&0!==r.length&&isValidId(t)&&!r.some(function(e){return 0===e.length||e.length>32})){e.next=3;break}throw new RtmInvalidStatusError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 3:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=5;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 5:if(void 0!==this.session){e.next=7;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 7:return s=this.session.requestDeleteChannelAttributesByKeys(t,r,i).toPromise(),e.prev=8,e.next=11,s;case 11:if(!(a=this.channelAttributesCacheLru.get(t))){e.next=28;break}u=r,l=Array.isArray(u),c=0,u=l?u:u[Symbol.iterator]();case 14:if(!l){e.next=20;break}if(!(c>=u.length)){e.next=17;break}return e.abrupt("break",28);case 17:p=u[c++],e.next=24;break;case 20:if(!(c=u.next()).done){e.next=23;break}return e.abrupt("break",28);case 23:p=c.value;case 24:delete a[p];case 26:e.next=14;break;case 28:e.next=35;break;case 30:if(e.prev=30,e.t0=e.catch(8),!isRtmError(e.t0)){e.next=34;break}throw e.t0;case 34:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 35:case"end":return e.stop()}},e,this,[[8,30]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"clearLocalUserAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(){var t,r;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:return t=this.session.requestClearLocalUserAttributes().toPromise(),r={attribute:{},promise:t},this.attributeDrafts.add(r),e.prev=7,e.next=10,t;case 10:this.attributes={},e.next=18;break;case 13:if(e.prev=13,e.t0=e.catch(7),!isRtmError(e.t0)){e.next=17;break}throw e.t0;case 17:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 18:return e.prev=18,this.attributeDrafts.delete(r),e.finish(18);case 21:case"end":return e.stop()}},e,this,[[7,13,18,21]])}));return function(){return e.apply(this,arguments)}}()},{key:"clearChannelAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=s.length>1&&void 0!==s[1]?s[1]:{},n=r.enableNotificationToChannelMembers,o=void 0!==n&&n,this.connectionState===ConnectionState$1.CONNECTED){e.next=3;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 3:if(void 0!==this.session){e.next=5;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 5:return i=this.session.requestClearChannelAttributes(t,o).toPromise(),e.prev=6,e.next=9,i;case 9:this.channelAttributesCacheLru.delete(t),e.next=17;break;case 12:if(e.prev=12,e.t0=e.catch(6),!isRtmError(e.t0)){e.next=16;break}throw e.t0;case 16:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 17:case"end":return e.stop()}},e,this,[[6,12]])}));return function(t){return e.apply(this,arguments)}}()},{key:"getUserAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(isValidId(t)){e.next=2;break}throw new RtmInvalidArgumentError("Not a valid user ID",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 2:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=4;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 4:if(void 0!==this.session){e.next=6;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 6:return e.prev=6,e.next=9,this.session.requestGetUserAttributeKeys(t).toPromise();case 9:return r=e.sent,n=r.keys,e.next=13,this.session.requestGetUserAttributesByKeys(t,n.slice(0,32)).toPromise();case 13:o=e.sent,e.next=21;break;case 16:if(e.prev=16,e.t0=e.catch(6),!isRtmError(e.t0)){e.next=20;break}throw e.t0;case 20:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 21:return e.abrupt("return",fromPairs_1(o.attributeInfos.map(function(e){return[e.key,e.value]})));case 22:case"end":return e.stop()}},e,this,[[6,16]])}));return function(t){return e.apply(this,arguments)}}()},{key:"getChannelAttributes",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p,f,d,g,h;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(isValidId(t)){e.next=2;break}throw new RtmInvalidArgumentError("Not a valid channel ID",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 2:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=4;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 4:if(void 0!==this.session){e.next=6;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 6:return e.prev=6,e.next=9,this.session.requestGetChannelAttributesKeys(t).toPromise();case 9:return r=e.sent,n=r.keys,e.next=13,this.session.requestGetChannelAttributesByKeys(t,n.slice(0,32)).toPromise();case 13:o=e.sent,i=o.attributeMaps,e.next=22;break;case 17:if(e.prev=17,e.t0=e.catch(6),!isRtmError(e.t0)){e.next=21;break}throw e.t0;case 21:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 22:s={},a=i,u=Array.isArray(a),l=0,a=u?a:a[Symbol.iterator]();case 24:if(!u){e.next=30;break}if(!(l>=a.length)){e.next=27;break}return e.abrupt("break",40);case 27:c=a[l++],e.next=34;break;case 30:if(!(l=a.next()).done){e.next=33;break}return e.abrupt("break",40);case 33:c=l.value;case 34:if(f=(p=c).key,d=p.ms,g=p.value,h=p.origin,"string"==typeof f&&long_1.isLong(d)&&"string"==typeof g&&isValidId(h)){e.next=37;break}return e.abrupt("break",40);case 37:s[f]={value:g,lastUpdateUserId:h,lastUpdateTs:d.toNumber()};case 38:e.next=24;break;case 40:return this.channelAttributesCacheLru.set(t,mapValues_1(s,function(e){var t=e.value;return new Blob([t]).size})),e.abrupt("return",s);case 42:case"end":return e.stop()}},e,this,[[6,17]])}));return function(t){return e.apply(this,arguments)}}()},{key:"getChannelAttributesByKeys",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t,r){var n,o,i,s,a,u,l,c,p,f,d,g,h;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:return checkValidAttrGetByKeysArgs(t,r),e.prev=5,e.next=8,this.session.requestGetChannelAttributesByKeys(t,r).toPromise();case 8:n=e.sent,o=n.attributeMaps,e.next=17;break;case 12:if(e.prev=12,e.t0=e.catch(5),!isRtmError(e.t0)){e.next=16;break}throw e.t0;case 16:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 17:i={},s=this.channelAttributesCacheLru.get(t,{}),a=o,u=Array.isArray(a),l=0,a=u?a:a[Symbol.iterator]();case 20:if(!u){e.next=26;break}if(!(l>=a.length)){e.next=23;break}return e.abrupt("break",37);case 23:c=a[l++],e.next=30;break;case 26:if(!(l=a.next()).done){e.next=29;break}return e.abrupt("break",37);case 29:c=l.value;case 30:if(f=(p=c).key,d=p.ms,g=p.value,h=p.origin,"string"==typeof f&&long_1.isLong(d)&&"string"==typeof g&&isValidId(h)){e.next=33;break}return e.abrupt("break",37);case 33:s[f]=new Blob([g]).size,i[f]={value:g,lastUpdateUserId:h,lastUpdateTs:d.toNumber()};case 35:e.next=20;break;case 37:return this.channelAttributesCacheLru.set(t,s),e.abrupt("return",i);case 39:case"end":return e.stop()}},e,this,[[5,12]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"getUserAttributesByKeys",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t,r){var n;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",ATTRIBUTE_OPERATION_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:return checkValidAttrGetByKeysArgs(t,r),e.prev=5,e.next=8,this.session.requestGetUserAttributesByKeys(t,r).toPromise();case 8:n=e.sent,e.next=16;break;case 11:if(e.prev=11,e.t0=e.catch(5),!isRtmError(e.t0)){e.next=15;break}throw e.t0;case 15:throw new RtmInvalidArgumentError("arguments is not valid",ATTRIBUTE_OPERATION_ERR_INVALID_ARGUMENT);case 16:return e.abrupt("return",fromPairs_1(n.attributeInfos.map(function(e){return[e.key,e.value]})));case 17:case"end":return e.stop()}},e,this,[[5,11]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"login",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=getRandomUInt64(),n=t.token,t.token===this.context.appId&&(n=void 0),sendReport("Session",{appId:this.context.appId,did:navigator.userAgent,elapse:getElapse(this.session&&this.session.startTime),index:{index1:t.uid,index2:this.context.appId,index3:"enableLogUpload=".concat(this.parameters.enableLogUpload)},installId:processId,lts:long_1.fromNumber(Date.now()),os:WEB_PLATFORM_TYPE,sid:getSid(r),token:n||"",userId:t.uid,ver:version}),isPlainObject$1(t)&&isValidId(t.uid)){e.next=6;break}throw new RtmInvalidArgumentError("not a valid user id",LOGIN_ERR_INVALID_ARGUMENT);case 6:if("string"!=typeof n||!n){e.next=12;break}if(!(n.length<APP_ID_LENGTH+3||n.substr(3,APP_ID_LENGTH)!==this.context.appId)){e.next=9;break}throw new RtmInvalidArgumentError("Invalid token",LOGIN_ERR_INVALID_TOKEN);case 9:this.context.token=n,e.next=14;break;case 12:if("string"==typeof n||isNil_1(n)){e.next=14;break}throw new RtmInvalidArgumentError('The "token" is not a valid string.',LOGIN_ERR_INVALID_ARGUMENT);case 14:return o=Date.now(),this.context.sid=getSid(r),this.loginPromise=this.loginImpl({uid:t.uid,instanceId:r}),this.info("RTM Client logging in as".concat(t.uid)),e.prev=18,e.next=21,this.loginPromise;case 21:e.next=28;break;case 23:throw e.prev=23,e.t0=e.catch(18),isRtmError(e.t0)&&sendReport("Link",{ackedServerIp:"",destServerIp:"",ec:e.t0.code||1,sc:e.t0.serverCode,elapse:getElapse(this.session&&this.session.startTime),lts:long_1.fromNumber(Date.now()),responseTime:Date.now()-o,sid:getSid(r),userId:t.uid}),this.context.token=void 0,e.t0;case 28:return e.prev=28,this.loginPromise=void 0,e.finish(28);case 31:case"end":return e.stop()}},e,this,[[18,23,28,31]])}));return function(t){return e.apply(this,arguments)}}()},{key:"logout",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(){return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!this.loginPromise){e.next=3;break}return e.next=3,this.loginPromise;case 3:if(void 0!==this.reconnectionTimer&&window.clearTimeout(this.reconnectionTimer),this.connectionState!==ConnectionState$1.DISCONNECTED){e.next=7;break}throw this.logError("Already in logout state"),new RtmInvalidStatusError("Logout failure. The client has already been logged out",LOGOUT_ERR_USER_NOT_LOGGED_IN);case 7:if(this.connectionState!==ConnectionState$1.ABORTED){e.next=11;break}return this.info('Reset connection state from "ABORTED" to "DISCONNECTED"'),this.onConnectionStateChanged(ConnectionState$1.DISCONNECTED,ConnectionChangeReason.LOGOUT),e.abrupt("return");case 11:if(void 0!==this.session){e.next=14;break}return this.onConnectionStateChanged(ConnectionState$1.DISCONNECTED,ConnectionChangeReason.LOGOUT),e.abrupt("return");case 14:return sendReport("Logout",{elapse:getElapse(this.session.startTime),lts:long_1.fromNumber(Date.now()),sid:getSid(this.session.instanceId),userId:this.context.uid}),e.next=17,this.session.logoutHandler();case 17:this.onConnectionStateChanged(ConnectionState$1.DISCONNECTED,ConnectionChangeReason.LOGOUT),this.log("Log out success");case 19:case"end":return e.stop()}},e,this)}));return function(){return e.apply(this,arguments)}}()},{key:"sendMessageToPeer",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t,r){var n,o,i,s,a,u,l,c,p,f,d,g,h,b,_,y,m=this,v=arguments;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(n=v.length>2&&void 0!==v[2]?v[2]:{},o=n.enableOfflineMessaging,i=void 0!==o&&o,s=n.enableHistoricalMessaging,a=void 0!==s&&s,isPlainObject$1(t)){e.next=3;break}throw new RtmInvalidArgumentError("Message is not valid",PEER_MESSAGE_ERR_INVALID_MESSAGE);case 3:if(void 0===t.messageType&&(void 0!==t.rawMessage?t.messageType="RAW":t.messageType="TEXT"),u=!0,l=!1,"RAW"===t.messageType&&void 0!==t.text&&(u=!1),"TEXT"===t.messageType&&("string"!=typeof t.text?u=!1:t.text.startsWith(END_CALL_PREFIX)&&(c=t.text.split("_"),p=_slicedToArray$5(c,3),f=p[0],d=p[1],void 0!==p[2]&&isValidId(d)&&f===END_CALL_PREFIX?l=!0:u=!1),void 0!==t.rawMessage&&(u=!1),void 0!==t.description&&(u=!1)),u){e.next=10;break}throw new RtmInvalidArgumentError("Message is not valid",PEER_MESSAGE_ERR_INVALID_MESSAGE);case 10:if(this.connectionState!==ConnectionState$1.RECONNECTING){e.next=13;break}return g=Date.now(),e.abrupt("return",new Promise(function(e,n){var o,s=function(){var s=_asyncToGenerator$9(regenerator.mark(function s(){var u,c,p,f,d;return regenerator.wrap(function(s){for(;;)switch(s.prev=s.next){case 0:if(void 0!==m.session){s.next=2;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 2:if(u=Date.now()-g,s.prev=3,"TEXT"!==t.messageType){s.next=22;break}if(!l){s.next=15;break}return c=t.text.split("_"),p=_slicedToArray$5(c,3),f=p[1],d=p[2],m.log("[rtm-API] EndCall message send api is called"),s.t0=e,s.next=11,m.session.sendInvitationMessage({peerId:r,type:"CallCancel",extra:d,channelId:f,callId:"0"});case 11:s.t1=s.sent,(0,s.t0)(s.t1),s.next=20;break;case 15:return s.t2=e,s.next=18,m.session.sendTextMessage(t.text,r,!0,{enableOfflineMessaging:i,enableHistoricalMessaging:a},MESSAGE_SEND_TIMEOUT-u);case 18:s.t3=s.sent,(0,s.t2)(s.t3);case 20:s.next=32;break;case 22:if("RAW"!==t.messageType){s.next=31;break}return void 0===t.description&&(t.description=""),s.t4=e,s.next=27,m.session.sendRawMessage(t.rawMessage,t.description,r,!0,{enableOfflineMessaging:i,enableHistoricalMessaging:a},MESSAGE_SEND_TIMEOUT-u);case 27:s.t5=s.sent,(0,s.t4)(s.t5),s.next=32;break;case 31:n(new RtmInvalidArgumentError("Invalid message type",PEER_MESSAGE_ERR_INVALID_MESSAGE));case 32:return s.abrupt("return");case 35:s.prev=35,s.t6=s.catch(3),isTimeout(s.t6)&&n(new RtmTimeoutError(genTimeoutMessage(m.name,"sendMessageToPeer",MESSAGE_SEND_TIMEOUT),PEER_MESSAGE_ERR_TIMEOUT)),isRtmError(s.t6)&&n(s.t6),n(new RtmUnavailableError("Peer-to-peer message send failure",PEER_MESSAGE_ERR_FAILURE,s.t6));case 40:return s.prev=40,clearTimeout(o),s.finish(40);case 43:case"end":return s.stop()}},s,null,[[3,35,40,43]])}));return function(){return s.apply(this,arguments)}}();m.internalEmitter.once("RECONNECTED",s),o=setTimeout(function(){m.internalEmitter.off("RECONNECTED",s),n(new RtmTimeoutError(genTimeoutMessage(m.name,"sendMessageToPeer",MESSAGE_SEND_TIMEOUT),PEER_MESSAGE_ERR_TIMEOUT))},MESSAGE_RETRY_TIMEOUT)}));case 13:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=15;break}throw new RtmInvalidStatusError("Failed to send the peer-to-peer message. The client is not logged in",PEER_MESSAGE_ERR_USER_NOT_LOGGED_IN);case 15:if(void 0!==this.session){e.next=17;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 17:if(e.prev=17,"TEXT"!==t.messageType){e.next=28;break}if(!l){e.next=25;break}return h=t.text.split("_"),b=_slicedToArray$5(h,3),_=b[1],y=b[2],this.log("[rtm-API] EndCall message send api is called"),e.next=24,this.session.sendInvitationMessage({peerId:r,type:"CallCancel",extra:y,channelId:_,callId:"0"});case 24:return e.abrupt("return",e.sent);case 25:return e.next=27,this.session.sendTextMessage(t.text,r,!0,{enableOfflineMessaging:i,enableHistoricalMessaging:a});case 27:return e.abrupt("return",e.sent);case 28:if("RAW"!==t.messageType){e.next=33;break}return void 0===t.description&&(t.description=""),e.next=32,this.session.sendRawMessage(t.rawMessage,t.description,r,!0,{enableOfflineMessaging:i,enableHistoricalMessaging:a});case 32:return e.abrupt("return",e.sent);case 33:throw new RtmInvalidArgumentError("Invalid message type",PEER_MESSAGE_ERR_INVALID_MESSAGE);case 36:if(e.prev=36,e.t0=e.catch(17),!isTimeout(e.t0)){e.next=40;break}throw new RtmTimeoutError(genTimeoutMessage(this.name,"sendMessageToPeer",MESSAGE_SEND_TIMEOUT),PEER_MESSAGE_ERR_TIMEOUT);case 40:if(!isRtmError(e.t0)){e.next=42;break}throw e.t0;case 42:throw new RtmUnavailableError("Peer-to-peer message send failure",PEER_MESSAGE_ERR_FAILURE,e.t0);case 43:case"end":return e.stop()}},e,this,[[17,36]])}));return function(t,r){return e.apply(this,arguments)}}()},{key:"createChannel",value:function(e){var t=this;if(!isValidId(e))throw new RtmInvalidArgumentError([invalidArgumentMessage,getName({channelId:e})],CREATE_CHANNEL_ERR_INVALID_ARGUMENT);return new Channel(e,function(){return t.session},this,this.logger)}},{key:"createLocalInvitation",value:function(e){if(!isValidId(e))throw new RtmInvalidArgumentError([invalidArgumentMessage,getName({calleeId:e})],INVITATION_API_CALL_ERR_INVALID_ARGUMENT);return this.invitationManager.genLocalInvitation(e)}},{key:"subscribePeersOnlineStatus",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p,f,d,g,h,b,_,y,m,v,$,E,I=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",PEER_SUBSCRIPTION_STATUS_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:if(Array.isArray(t)&&0!==t.length){e.next=6;break}throw new RtmInvalidArgumentError("Invalid arguments: peerIds",PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT);case 6:r=t,n=Array.isArray(r),o=0,r=n?r:r[Symbol.iterator]();case 7:if(!n){e.next=13;break}if(!(o>=r.length)){e.next=10;break}return e.abrupt("break",22);case 10:i=r[o++],e.next=17;break;case 13:if(!(o=r.next()).done){e.next=16;break}return e.abrupt("break",22);case 16:i=o.value;case 17:if(isValidId(s=i)){e.next=20;break}throw new RtmInvalidArgumentError(["subscribePeersOnlineStatus peer id %s is invalid",s],PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT);case 20:e.next=7;break;case 22:if(!((a=uniq_1(t)).length+Object.keys(this.subscribedPeerStatusCache).length>512)){e.next=25;break}throw new RtmLimitExceededError("Subscribed peers overflows",PEER_SUBSCRIPTION_STATUS_ERR_OVERFLOW);case 25:return e.next=27,this.session.requestSubscribePeersOnlineStatus(a).toPromise();case 27:u=e.sent,l=u.errors,c=[],p=[],f=l,d=Array.isArray(f),g=0,f=d?f:f[Symbol.iterator]();case 32:if(!d){e.next=38;break}if(!(g>=f.length)){e.next=35;break}return e.abrupt("break",48);case 35:h=f[g++],e.next=42;break;case 38:if(!(g=f.next()).done){e.next=41;break}return e.abrupt("break",48);case 41:h=g.value;case 42:if(_=(b=h).code,"string"==typeof(y=b.account)){e.next=45;break}throw new RtmUnavailableError("Returned account is invalid",PEER_SUBSCRIPTION_STATUS_ERR_FAILURE);case 45:0!==_&&c.push(y);case 46:e.next=32;break;case 48:m=a,v=Array.isArray(m),$=0,m=v?m:m[Symbol.iterator]();case 49:if(!v){e.next=55;break}if(!($>=m.length)){e.next=52;break}return e.abrupt("break",63);case 52:E=m[$++],e.next=59;break;case 55:if(!($=m.next()).done){e.next=58;break}return e.abrupt("break",63);case 58:E=$.value;case 59:y=E,c.includes(y)||(p.push(y),this.subscribedPeerStatusCache[y]=void 0);case 61:e.next=49;break;case 63:if(this.session.requestPeersOnlineStatus(p).pipe(map$1(function(e){var t=e.userInfos;return mapValues_1(keyBy_1(t,"account"),function(e){var t=e.ts;return Boolean(t)})})).subscribe(function(e){var t=mapValues_1(e,function(e,t){var r=e?RtmStatusCode$1.PeerOnlineState.ONLINE:RtmStatusCode$1.PeerOnlineState.OFFLINE;return I.subscribedPeerStatusCache[t]=r,r});I.emit("PeersOnlineStatusChanged",t)}),0===c.length){e.next=66;break}throw new RtmUnavailableError("Subscription failed",PEER_SUBSCRIPTION_STATUS_ERR_FAILURE);case 66:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"unsubscribePeersOnlineStatus",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a,u,l,c,p,f;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",PEER_SUBSCRIPTION_STATUS_ERR_USER_NOT_LOGGED_IN);case 2:if(void 0!==this.session){e.next=4;break}throw new CommonError({SESSION_NOT_FOUND:"Failed to get session of the client"});case 4:if(Array.isArray(t)&&0!==t.length){e.next=6;break}throw new RtmInvalidArgumentError("Invalid arguments: peerIds",PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT);case 6:r=t,n=Array.isArray(r),o=0,r=n?r:r[Symbol.iterator]();case 7:if(!n){e.next=13;break}if(!(o>=r.length)){e.next=10;break}return e.abrupt("break",22);case 10:i=r[o++],e.next=17;break;case 13:if(!(o=r.next()).done){e.next=16;break}return e.abrupt("break",22);case 16:i=o.value;case 17:if(isValidId(s=i)){e.next=20;break}throw new RtmInvalidArgumentError(["subscribePeersOnlineStatus peer id %s is invalid",s],PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT);case 20:e.next=7;break;case 22:if(!(t.length>512)){e.next=24;break}throw new RtmLimitExceededError("Unsubscribed peers overflows",PEER_SUBSCRIPTION_STATUS_ERR_OVERFLOW);case 24:a=uniq_1(t),this.session.requestUnsubscribePeersOnlineStatus(a),u=a,l=Array.isArray(u),c=0,u=l?u:u[Symbol.iterator]();case 27:if(!l){e.next=33;break}if(!(c>=u.length)){e.next=30;break}return e.abrupt("break",41);case 30:p=u[c++],e.next=37;break;case 33:if(!(c=u.next()).done){e.next=36;break}return e.abrupt("break",41);case 36:p=c.value;case 37:f=p,delete this.subscribedPeerStatusCache[f];case 39:e.next=27;break;case 41:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"queryPeersBySubscriptionOption",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(this.connectionState===ConnectionState$1.CONNECTED){e.next=2;break}throw new RtmInvalidStatusError("The client is not logged in",PEER_SUBSCRIPTION_STATUS_ERR_USER_NOT_LOGGED_IN);case 2:if(t!==RtmStatusCode$1.PeerSubscriptionOption.ONLINE_STATUS){e.next=4;break}return e.abrupt("return",Object.keys(this.subscribedPeerStatusCache));case 4:throw new RtmInvalidArgumentError("Subscription option not supported",PEER_SUBSCRIPTION_STATUS_ERR_INVALID_ARGUMENT);case 5:case"end":return e.stop()}},e,this)}));return function(t){return e.apply(this,arguments)}}()},{key:"loginImpl",value:function(){var e=_asyncToGenerator$9(regenerator.mark(function e(t){var r,n,o,i,s,a=this;return regenerator.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(r=t.uid,n=t.instanceId,o=n,!(void 0!==this.lastLoginTime&&Date.now()-this.lastLoginTime<1e3/LOGIN_QPS_LIMIT)){e.next=4;break}throw new RtmInvokeTooOftenError(["The frequency of login exceeded the limit of %d queries per second",LOGIN_QPS_LIMIT],LOGIN_ERR_TOO_OFTEN);case 4:if(this.connectionState===ConnectionState$1.DISCONNECTED){e.next=6;break}throw new RtmInvalidStatusError("The SDK is either logging in or has logged in the Agora RTM system",LOGIN_ERR_ALREADY_LOGIN);case 6:e.prev=6,this.context.uid=r,e.next=13;break;case 10:throw e.prev=10,e.t0=e.catch(6),new RtmInvalidArgumentError([invalidArgumentMessage,getName({uid:r})],LOGIN_ERR_INVALID_ARGUMENT);case 13:return this.onConnectionStateChanged(ConnectionState$1.CONNECTING,ConnectionChangeReason.LOGIN),i=new Session$2(this.context,new Connection(this.context,this.logger),o,this.logger),this.session=i,s=function e(){if(a.connectionState===ConnectionState$1.CONNECTED){var t,r,n;a.onConnectionStateChanged(ConnectionState$1.RECONNECTING,ConnectionChangeReason.INTERRUPTED);var i=function(){var s=_asyncToGenerator$9(regenerator.mark(function s(){var u,l,c;return regenerator.wrap(function(s){for(;;)switch(s.prev=s.next){case 0:if(u=long_1.fromNumber(1),l=[!1,!1],c=Date.now(),a.connectionState===ConnectionState$1.RECONNECTING){s.next=5;break}return s.abrupt("return");case 5:return a.log("Enter giant reconnection"),a.session&&(a.session.removeAllListeners(),u=a.session.seq,l=a.session.seqSentStatuses,c=a.session.startTime,0!==a.session.joinedChannels.size&&(t=a.session.joinedChannels),0!==a.session.msgDedupLru.size&&(r=a.session.msgDedupLru),0!==a.session.dialogueSequenceLru.size&&(n=a.session.dialogueSequenceLru),a.session.logoutHandler()),a.session=new Session$2(a.context,new Connection(a.context,a.logger),o,a.logger),a.session.on("instanceChanged",function(e){return o=e}),a.session.on("userJoined",function(e){if(0!==Object.keys(a.attributes).length){if(void 0===a.session)return;a.session.requestSetLocalUserAttributes(a.attributes,e).toPromise()}if(0!==a.attributeDrafts.size){var t=function(){if(n){if(o>=r.length)return"break";i=r[o++]}else{if((o=r.next()).done)return"break";i=o.value}var t=i,s=t.promise,u=t.attribute;s.then(function(){void 0!==a.session&&a.session.requestSetLocalUserAttributes(u,e).toPromise()})},r=a.attributeDrafts,n=Array.isArray(r),o=0;for(r=n?r:r[Symbol.iterator]();;){var i;if("break"===t())break}}if(0!==Object.keys(a.subscribedPeerStatusCache).length){if(void 0===a.session)return;a.session.requestSubscribePeersOnlineStatus(Object.keys(a.subscribedPeerStatusCache))}}),s.prev=10,a.session.startTime=c,a.session.seq=u,a.session.seqSentStatuses=l,s.next=16,a.session.loginHandler();case 16:a.log("Login success for account %s",a.context.uid),s.next=27;break;case 19:return s.prev=19,s.t0=s.catch(10),s.t0.code===LOGIN_ERR_TOKEN_EXPIRED&&a.emit("TokenExpired"),s.next=24,delay$1(2e3);case 24:return s.next=26,i();case 26:return s.abrupt("return");case 27:a.session.on("connectionLost",e),a.session.once("userDrop",a.userDropHandler),a.session.on("peerTextMessage",function(e){var t=e.peerId,r=e.text,n=e.properties;a.emit("MessageFromPeer",{text:r,messageType:RtmStatusCode$1.MessageType.TEXT},t,n)}),a.session.on("peerRawMessage",function(e){var t=e.desc,r=e.raw,n=e.properties,o=e.peerId;a.emit("MessageFromPeer",{rawMessage:r,description:t,messageType:RtmStatusCode$1.MessageType.RAW},o,n)}),a.session.on("peerOnlineStatusChanged",function(e){var t=e.instance.toString()+e.state,r=a.peerStatusSeqLru.get(t);!r||e.seq.greaterThan(r)?(a.peerStatusSeqLru.set(t,e.seq),e.state!==a.subscribedPeerStatusCache[e.peerId]?a.emit("PeersOnlineStatusChanged",_defineProperty$4({},e.peerId,e.state)):a.log("peer status for %s not changed, previous %s",e.peerId,e.state),a.subscribedPeerStatusCache[e.peerId]=e.state,clearTimeout(a.peerUnreachableTimers[t]),e.state===RtmStatusCode$1.PeerOnlineState.UNREACHABLE&&(a.peerUnreachableTimers[t]=setTimeout(function(){a.subscribedPeerStatusCache[e.peerId]===RtmStatusCode$1.PeerOnlineState.UNREACHABLE&&(a.subscribedPeerStatusCache[e.peerId]=RtmStatusCode$1.PeerOnlineState.ONLINE,a.emit("PeersOnlineStatusChanged",_defineProperty$4({},e.peerId,RtmStatusCode$1.PeerOnlineState.ONLINE)))},3e4))):a.log("peerOnlineStatusChanged dedup for %s, %d",t,e.seq.toNumber())}),a.session.on("invitationMessage",a.invitationManager.invitationMessageHandler.bind(a.invitationManager)),a.session.on("channelAttributesUpdated",function(e){var t=e.channelId,r={},n=e.attributeMaps,o=Array.isArray(n),i=0;for(n=o?n:n[Symbol.iterator]();;){var s;if(o){if(i>=n.length)break;s=n[i++]}else{if((i=n.next()).done)break;s=i.value}var u=s,l=u.key,c=u.ms,p=u.value,f=u.origin;if("string"!=typeof l||!long_1.isLong(c)||"string"!=typeof p||!isValidId(f))break;r[l]=new Blob([p]).size}a.channelAttributesCacheLru.set(t,r)}),void 0!==t&&(t.forEach(function(e){return e.join()}),a.session.joinedChannels=t),void 0!==r&&(a.session.msgDedupLru=r),void 0!==u&&(a.session.seq=u),void 0!==n&&(a.session.dialogueSequenceLru=n),void 0!==l&&(a.session.seqSentStatuses=l),a.onConnectionStateChanged(ConnectionState$1.CONNECTED,ConnectionChangeReason.LOGIN_SUCCESS),0!==Object.keys(a.attributes).length&&a.setLocalUserAttributes(a.attributes);case 41:case"end":return s.stop()}},s,null,[[10,19]])}));return function(){return s.apply(this,arguments)}}();a.reconnectionTimer=window.setTimeout(i,12e3),a.session&&a.session.once("userJoined",function(){void 0!==a.reconnectionTimer&&window.clearTimeout(a.reconnectionTimer),a.onConnectionStateChanged(ConnectionState$1.CONNECTED,ConnectionChangeReason.LOGIN_SUCCESS)})}},i.on("connectionLost",s),i.once("userDrop",this.userDropHandler),this.session.on("peerTextMessage",function(e){var t=e.peerId,r=e.text,n=e.properties;a.emit("MessageFromPeer",{text:r,messageType:RtmStatusCode$1.MessageType.TEXT},t,n)}),this.session.on("peerRawMessage",function(e){var t=e.desc,r=e.raw,n=e.properties,o=e.peerId;a.emit("MessageFromPeer",{rawMessage:r,description:t,messageType:RtmStatusCode$1.MessageType.RAW},o,n)}),i.on("instanceChanged",function(e){return o=e}),i.on("peerOnlineStatusChanged",function(e){var t=e.instance.toString()+e.state,r=a.peerStatusSeqLru.get(t);!r||e.seq.greaterThan(r)?(a.peerStatusSeqLru.set(t,e.seq),e.state!==a.subscribedPeerStatusCache[e.peerId]?a.emit("PeersOnlineStatusChanged",_defineProperty$4({},e.peerId,e.state)):a.log("peer status for %s not changed, previous %s",e.peerId,e.state),a.subscribedPeerStatusCache[e.peerId]=e.state,clearTimeout(a.peerUnreachableTimers[t]),e.state===RtmStatusCode$1.PeerOnlineState.UNREACHABLE&&(a.peerUnreachableTimers[t]=setTimeout(function(){a.subscribedPeerStatusCache[e.peerId]===RtmStatusCode$1.PeerOnlineState.UNREACHABLE&&(a.subscribedPeerStatusCache[e.peerId]=RtmStatusCode$1.PeerOnlineState.ONLINE,a.emit("PeersOnlineStatusChanged",_defineProperty$4({},e.peerId,RtmStatusCode$1.PeerOnlineState.ONLINE)))},3e4))):a.log("peerOnlineStatusChanged dedup for %s, %d",t,e.seq.toNumber())}),i.on("invitationMessage",this.invitationManager.invitationMessageHandler.bind(this.invitationManager)),i.on("channelAttributesUpdated",function(e){var t=e.channelId,r={},n=e.attributeMaps,o=Array.isArray(n),i=0;for(n=o?n:n[Symbol.iterator]();;){var s;if(o){if(i>=n.length)break;s=n[i++]}else{if((i=n.next()).done)break;s=i.value}var u=s,l=u.key,c=u.ms,p=u.value,f=u.origin;if("string"!=typeof l||!long_1.isLong(c)||"string"!=typeof p||!isValidId(f))break;r[l]=new Blob([p]).size}a.channelAttributesCacheLru.set(t,r)}),i.on("userJoined",function(e){if(0!==Object.keys(a.attributes).length){if(void 0===a.session)return;a.session.requestSetLocalUserAttributes(a.attributes,e).toPromise()}if(0!==a.attributeDrafts.size){var t=function(){if(n){if(o>=r.length)return"break";s=r[o++]}else{if((o=r.next()).done)return"break";s=o.value}var t=s,i=t.promise,u=t.attribute;i.then(function(){void 0!==a.session&&a.session.requestSetLocalUserAttributes(u,e).toPromise()})},r=a.attributeDrafts,n=Array.isArray(r),o=0;for(r=n?r:r[Symbol.iterator]();;){var s;if("break"===t())break}}0!==Object.keys(a.subscribedPeerStatusCache).length&&i.requestSubscribePeersOnlineStatus(Object.keys(a.subscribedPeerStatusCache))}),this.lastLoginTime=Date.now(),e.prev=27,e.next=30,i.loginHandler();case 30:e.next=41;break;case 32:if(e.prev=32,e.t1=e.catch(27),!isTimeout(e.t1)){e.next=37;break}throw this.onConnectionStateChanged(ConnectionState$1.DISCONNECTED,ConnectionChangeReason.LOGIN_TIMEOUT),new RtmTimeoutError(genTimeoutMessage(this.name,"login",CLIENT_LOGIN_TIMEOUT),LOGIN_ERR_TIMEOUT);case 37:if(this.onConnectionStateChanged(ConnectionState$1.DISCONNECTED,ConnectionChangeReason.LOGIN_FAILURE),!isRtmError(e.t1)){e.next=40;break}throw e.t1;case 40:throw new RtmUnavailableError("Login failure",LOGIN_ERR_UNKNOWN,e.t1);case 41:this.onConnectionStateChanged(ConnectionState$1.CONNECTED,ConnectionChangeReason.LOGIN_SUCCESS);case 42:case"end":return e.stop()}},e,this,[[6,10],[27,32]])}));return function(t){return e.apply(this,arguments)}}()},{key:"onConnectionStateChanged",value:function(e,t){var r=this;e===ConnectionState$1.RECONNECTING&&(this.reconnId+=1),sendReport("ConnectionStateChange",{elapse:getElapse(this.session&&this.session.startTime),lts:long_1.fromNumber(Date.now()),newState:connectionStateCodeMap[e],oldState:connectionStateCodeMap[this.connectionState],reason:connectionStateChangeReason[t],sid:getSid(this.session&&this.session.instanceId||long_1.fromNumber(0)),userId:this.context.uid,reconnId:this.reconnId}),this.connectionState===ConnectionState$1.RECONNECTING&&e===ConnectionState$1.CONNECTED&&(0!==Object.keys(this.subscribedPeerStatusCache).length&&void 0!==this.session&&this.session.requestPeersOnlineStatus(Object.keys(this.subscribedPeerStatusCache)).pipe(map$1(function(e){var t=e.userInfos;return mapValues_1(keyBy_1(t,"account"),function(e){var t=e.ts;return Boolean(t)})})).subscribe(function(e){var t=mapValues_1(e,function(e,t){var n=e?RtmStatusCode$1.PeerOnlineState.ONLINE:RtmStatusCode$1.PeerOnlineState.OFFLINE;return r.subscribedPeerStatusCache[t]=n,n});r.emit("PeersOnlineStatusChanged",t)}),this.internalEmitter.emit("RECONNECTED")),this.connectionState=e,e!==ConnectionState$1.ABORTED&&e!==ConnectionState$1.DISCONNECTED||(this.reconnId=0,this.attributes={},this.session&&this.session.removeAllListeners(),this.session=void 0,this.channelAttributesCacheLru.empty(),this.peerStatusSeqLru.empty(),this.peerUnreachableTimers={},this.reconnectionTimer=void 0,this.subscribedPeerStatusCache={},this.attributeDrafts.clear(),this.context.token=void 0),this.emit("ConnectionStateChanged",e,t)}}]),t}(),_class$1=_temp$1,_applyDecoratedDescriptor$1(_class$1.prototype,"renewToken",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"renewToken"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"queryPeersOnlineStatus",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"queryPeersOnlineStatus"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"getChannelMemberCount",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"getChannelMemberCount"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"setLocalUserAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"setLocalUserAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"setChannelAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"setChannelAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"addOrUpdateLocalUserAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"addOrUpdateLocalUserAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"addOrUpdateChannelAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"addOrUpdateChannelAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"deleteLocalUserAttributesByKeys",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"deleteLocalUserAttributesByKeys"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"deleteChannelAttributesByKeys",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"deleteChannelAttributesByKeys"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"clearLocalUserAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"clearLocalUserAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"clearChannelAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"clearChannelAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"getUserAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"getUserAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"getChannelAttributes",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"getChannelAttributes"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"getChannelAttributesByKeys",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"getChannelAttributesByKeys"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"getUserAttributesByKeys",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"getUserAttributesByKeys"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"login",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"login"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"logout",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"logout"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"sendMessageToPeer",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"sendMessageToPeer"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"createChannel",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"createChannel"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"subscribePeersOnlineStatus",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"subscribePeersOnlineStatus"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"unsubscribePeersOnlineStatus",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"unsubscribePeersOnlineStatus"),_class$1.prototype),_applyDecoratedDescriptor$1(_class$1.prototype,"queryPeersBySubscriptionOption",[logged],Object.getOwnPropertyDescriptor(_class$1.prototype,"queryPeersBySubscriptionOption"),_class$1.prototype),_class$1);function ownKeys$4(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),r.push.apply(r,n)}return r}function _objectSpread$3(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?ownKeys$4(r,!0).forEach(function(t){_defineProperty$5(e,t,r[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):ownKeys$4(r).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))})}return e}function _defineProperty$5(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var ConnectionChangeReason$1=RtmStatusCode$1.ConnectionChangeReason,ConnectionState$2=RtmStatusCode$1.ConnectionState,LocalInvitationFailureReason$1=RtmStatusCode$1.LocalInvitationFailureReason,LocalInvitationState$1=RtmStatusCode$1.LocalInvitationState,RemoteInvitationFailureReason$1=RtmStatusCode$1.RemoteInvitationFailureReason,RemoteInvitationState$1=RtmStatusCode$1.RemoteInvitationState,MessageType$1=RtmStatusCode$1.MessageType,PeerOnlineState=RtmStatusCode$1.PeerOnlineState,PeerSubscriptionOption=RtmStatusCode$1.PeerSubscriptionOption;void 0===Number.MAX_SAFE_INTEGER&&(Number.MAX_SAFE_INTEGER=9007199254740991);var LogFilter={LOG_FILTER_OFF:{error:!1,warn:!1,info:!1,track:!1,debug:!1},LOG_FILTER_ERROR:{error:!0,warn:!1,info:!1,track:!1,debug:!1},LOG_FILTER_WARNING:{error:!0,warn:!0,info:!1,track:!1,debug:!1},LOG_FILTER_INFO:{error:!0,warn:!0,info:!0,track:!1,debug:!1},LOG_FILTER_DEBUG:{error:!0,warn:!0,info:!0,track:!0,debug:!0}};function createInstance(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=t.enableLogUpload,n=void 0!==r&&r,o=t.logFilter,i=void 0===o?LogFilter.LOG_FILTER_INFO:o;if(!isValidAppId(e))throw new RtmInvalidArgumentError([invalidArgumentMessage,getName({appId:e})],CREATE_INSTANCE_ERR_INVALID_ARGUMENT);var s={enableLogUpload:n,logFilter:i},a=initLoggerId(),u=genInfoLogger(s),l=genWarnLogger(s),c=genErrorLogger(s),p=trackLoggerGenerator(a,s),f=debugLoggerGenerator(a,s),d=f("RTM:DEBUG","<Entry> ");return u("The Agora RTM Web SDK version is %s",version),d("Creating an RtmClient instance"),d('The Git commit ID is "'.concat(BUILD,'"')),d("The App ID is %s",e),u("The process ID is %s",processId),d("process.env.NODE_ENV is %s","production"),new Client(e,{genLogger:f,genTracker:p,info:u,warn:l,logError:c,loggerId:a},s,function(e){var t=function(e,t){s[e]=t},r=getKeys(e),n=Array.isArray(r),o=0;for(r=n?r:r[Symbol.iterator]();;){var i;if(n){if(o>=r.length)break;i=r[o++]}else{if((o=r.next()).done)break;i=o.value}var a=i,u=e[a];null!=u&&t(a,u)}})}var index=_objectSpread$3({createInstance:createInstance,BUILD:BUILD,VERSION:version,END_CALL_PREFIX:END_CALL_PREFIX,processId:processId,ConnectionChangeReason:ConnectionChangeReason$1,ConnectionState:ConnectionState$2,LocalInvitationFailureReason:LocalInvitationFailureReason$1,LocalInvitationState:LocalInvitationState$1,RemoteInvitationFailureReason:RemoteInvitationFailureReason$1,RemoteInvitationState:RemoteInvitationState$1,MessageType:MessageType$1,PeerOnlineState:PeerOnlineState,PeerSubscriptionOption:PeerSubscriptionOption},LogFilter);return index});

/**
  @license
                                 Apache License
                         Version 2.0, January 2004
                      http://www.apache.org/licenses/

 TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

 1. Definitions.

    "License" shall mean the terms and conditions for use, reproduction,
    and distribution as defined by Sections 1 through 9 of this document.

    "Licensor" shall mean the copyright owner or entity authorized by
    the copyright owner that is granting the License.

    "Legal Entity" shall mean the union of the acting entity and all
    other entities that control, are controlled by, or are under common
    control with that entity. For the purposes of this definition,
    "control" means (i) the power, direct or indirect, to cause the
    direction or management of such entity, whether by contract or
    otherwise, or (ii) ownership of fifty percent (50%) or more of the
    outstanding shares, or (iii) beneficial ownership of such entity.

    "You" (or "Your") shall mean an individual or Legal Entity
    exercising permissions granted by this License.

    "Source" form shall mean the preferred form for making modifications,
    including but not limited to software source code, documentation
    source, and configuration files.

    "Object" form shall mean any form resulting from mechanical
    transformation or translation of a Source form, including but
    not limited to compiled object code, generated documentation,
    and conversions to other media types.

    "Work" shall mean the work of authorship, whether in Source or
    Object form, made available under the License, as indicated by a
    copyright notice that is included in or attached to the work
    (an example is provided in the Appendix below).

    "Derivative Works" shall mean any work, whether in Source or Object
    form, that is based on (or derived from) the Work and for which the
    editorial revisions, annotations, elaborations, or other modifications
    represent, as a whole, an original work of authorship. For the purposes
    of this License, Derivative Works shall not include works that remain
    separable from, or merely link (or bind by name) to the interfaces of,
    the Work and Derivative Works thereof.

    "Contribution" shall mean any work of authorship, including
    the original version of the Work and any modifications or additions
    to that Work or Derivative Works thereof, that is intentionally
    submitted to Licensor for inclusion in the Work by the copyright owner
    or by an individual or Legal Entity authorized to submit on behalf of
    the copyright owner. For the purposes of this definition, "submitted"
    means any form of electronic, verbal, or written communication sent
    to the Licensor or its representatives, including but not limited to
    communication on electronic mailing lists, source code control systems,
    and issue tracking systems that are managed by, or on behalf of, the
    Licensor for the purpose of discussing and improving the Work, but
    excluding communication that is conspicuously marked or otherwise
    designated in writing by the copyright owner as "Not a Contribution."

    "Contributor" shall mean Licensor and any individual or Legal Entity
    on behalf of whom a Contribution has been received by Licensor and
    subsequently incorporated within the Work.

 2. Grant of Copyright License. Subject to the terms and conditions of
    this License, each Contributor hereby grants to You a perpetual,
    worldwide, non-exclusive, no-charge, royalty-free, irrevocable
    copyright license to reproduce, prepare Derivative Works of,
    publicly display, publicly perform, sublicense, and distribute the
    Work and such Derivative Works in Source or Object form.

 3. Grant of Patent License. Subject to the terms and conditions of
    this License, each Contributor hereby grants to You a perpetual,
    worldwide, non-exclusive, no-charge, royalty-free, irrevocable
    (except as stated in this section) patent license to make, have made,
    use, offer to sell, sell, import, and otherwise transfer the Work,
    where such license applies only to those patent claims licensable
    by such Contributor that are necessarily infringed by their
    Contribution(s) alone or by combination of their Contribution(s)
    with the Work to which such Contribution(s) was submitted. If You
    institute patent litigation against any entity (including a
    cross-claim or counterclaim in a lawsuit) alleging that the Work
    or a Contribution incorporated within the Work constitutes direct
    or contributory patent infringement, then any patent licenses
    granted to You under this License for that Work shall terminate
    as of the date such litigation is filed.

 4. Redistribution. You may reproduce and distribute copies of the
    Work or Derivative Works thereof in any medium, with or without
    modifications, and in Source or Object form, provided that You
    meet the following conditions:

    (a) You must give any other recipients of the Work or
        Derivative Works a copy of this License; and

    (b) You must cause any modified files to carry prominent notices
        stating that You changed the files; and

    (c) You must retain, in the Source form of any Derivative Works
        that You distribute, all copyright, patent, trademark, and
        attribution notices from the Source form of the Work,
        excluding those notices that do not pertain to any part of
        the Derivative Works; and

    (d) If the Work includes a "NOTICE" text file as part of its
        distribution, then any Derivative Works that You distribute must
        include a readable copy of the attribution notices contained
        within such NOTICE file, excluding those notices that do not
        pertain to any part of the Derivative Works, in at least one
        of the following places: within a NOTICE text file distributed
        as part of the Derivative Works; within the Source form or
        documentation, if provided along with the Derivative Works; or,
        within a display generated by the Derivative Works, if and
        wherever such third-party notices normally appear. The contents
        of the NOTICE file are for informational purposes only and
        do not modify the License. You may add Your own attribution
        notices within Derivative Works that You distribute, alongside
        or as an addendum to the NOTICE text from the Work, provided
        that such additional attribution notices cannot be construed
        as modifying the License.

    You may add Your own copyright statement to Your modifications and
    may provide additional or different license terms and conditions
    for use, reproduction, or distribution of Your modifications, or
    for any such Derivative Works as a whole, provided Your use,
    reproduction, and distribution of the Work otherwise complies with
    the conditions stated in this License.

 5. Submission of Contributions. Unless You explicitly state otherwise,
    any Contribution intentionally submitted for inclusion in the Work
    by You to the Licensor shall be under the terms and conditions of
    this License, without any additional terms or conditions.
    Notwithstanding the above, nothing herein shall supersede or modify
    the terms of any separate license agreement you may have executed
    with Licensor regarding such Contributions.

 6. Trademarks. This License does not grant permission to use the trade
    names, trademarks, service marks, or product names of the Licensor,
    except as required for reasonable and customary use in describing the
    origin of the Work and reproducing the content of the NOTICE file.

 7. Disclaimer of Warranty. Unless required by applicable law or
    agreed to in writing, Licensor provides the Work (and each
    Contributor provides its Contributions) on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied, including, without limitation, any warranties or conditions
    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
    PARTICULAR PURPOSE. You are solely responsible for determining the
    appropriateness of using or redistributing the Work and assume any
    risks associated with Your exercise of permissions under this License.

 8. Limitation of Liability. In no event and under no legal theory,
    whether in tort (including negligence), contract, or otherwise,
    unless required by applicable law (such as deliberate and grossly
    negligent acts) or agreed to in writing, shall any Contributor be
    liable to You for damages, including any direct, indirect, special,
    incidental, or consequential damages of any character arising as a
    result of this License or out of the use or inability to use the
    Work (including but not limited to damages for loss of goodwill,
    work stoppage, computer failure or malfunction, or any and all
    other commercial damages or losses), even if such Contributor
    has been advised of the possibility of such damages.

 9. Accepting Warranty or Additional Liability. While redistributing
    the Work or Derivative Works thereof, You may choose to offer,
    and charge a fee for, acceptance of support, warranty, indemnity,
    or other liability obligations and/or rights consistent with this
    License. However, in accepting such obligations, You may act only
    on Your own behalf and on Your sole responsibility, not on behalf
    of any other Contributor, and only if You agree to indemnify,
    defend, and hold each Contributor harmless for any liability
    incurred by, or claims asserted against, such Contributor by reason
    of your accepting any such warranty or additional liability.

 END OF TERMS AND CONDITIONS

 APPENDIX: How to apply the Apache License to your work.

    To apply the Apache License to your work, attach the following
    boilerplate notice, with the fields enclosed by brackets "[]"
    replaced with your own identifying information. (Don't include
    the brackets!)  The text should be enclosed in the appropriate
    comment syntax for the file format. We also recommend that a
    file or class name and description of purpose be included on the
    same "printed page" as the copyright notice for easier
    identification within third-party archives.

 Copyright (c) 2015-2018 Google, Inc., Netflix, Inc., Microsoft Corp. and contributors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 

 **/
/**
  @license
                                 Apache License
                         Version 2.0, January 2004
                      http://www.apache.org/licenses/

 TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

 1. Definitions.

    "License" shall mean the terms and conditions for use, reproduction,
    and distribution as defined by Sections 1 through 9 of this document.

    "Licensor" shall mean the copyright owner or entity authorized by
    the copyright owner that is granting the License.

    "Legal Entity" shall mean the union of the acting entity and all
    other entities that control, are controlled by, or are under common
    control with that entity. For the purposes of this definition,
    "control" means (i) the power, direct or indirect, to cause the
    direction or management of such entity, whether by contract or
    otherwise, or (ii) ownership of fifty percent (50%) or more of the
    outstanding shares, or (iii) beneficial ownership of such entity.

    "You" (or "Your") shall mean an individual or Legal Entity
    exercising permissions granted by this License.

    "Source" form shall mean the preferred form for making modifications,
    including but not limited to software source code, documentation
    source, and configuration files.

    "Object" form shall mean any form resulting from mechanical
    transformation or translation of a Source form, including but
    not limited to compiled object code, generated documentation,
    and conversions to other media types.

    "Work" shall mean the work of authorship, whether in Source or
    Object form, made available under the License, as indicated by a
    copyright notice that is included in or attached to the work
    (an example is provided in the Appendix below).

    "Derivative Works" shall mean any work, whether in Source or Object
    form, that is based on (or derived from) the Work and for which the
    editorial revisions, annotations, elaborations, or other modifications
    represent, as a whole, an original work of authorship. For the purposes
    of this License, Derivative Works shall not include works that remain
    separable from, or merely link (or bind by name) to the interfaces of,
    the Work and Derivative Works thereof.

    "Contribution" shall mean any work of authorship, including
    the original version of the Work and any modifications or additions
    to that Work or Derivative Works thereof, that is intentionally
    submitted to Licensor for inclusion in the Work by the copyright owner
    or by an individual or Legal Entity authorized to submit on behalf of
    the copyright owner. For the purposes of this definition, "submitted"
    means any form of electronic, verbal, or written communication sent
    to the Licensor or its representatives, including but not limited to
    communication on electronic mailing lists, source code control systems,
    and issue tracking systems that are managed by, or on behalf of, the
    Licensor for the purpose of discussing and improving the Work, but
    excluding communication that is conspicuously marked or otherwise
    designated in writing by the copyright owner as "Not a Contribution."

    "Contributor" shall mean Licensor and any individual or Legal Entity
    on behalf of whom a Contribution has been received by Licensor and
    subsequently incorporated within the Work.

 2. Grant of Copyright License. Subject to the terms and conditions of
    this License, each Contributor hereby grants to You a perpetual,
    worldwide, non-exclusive, no-charge, royalty-free, irrevocable
    copyright license to reproduce, prepare Derivative Works of,
    publicly display, publicly perform, sublicense, and distribute the
    Work and such Derivative Works in Source or Object form.

 3. Grant of Patent License. Subject to the terms and conditions of
    this License, each Contributor hereby grants to You a perpetual,
    worldwide, non-exclusive, no-charge, royalty-free, irrevocable
    (except as stated in this section) patent license to make, have made,
    use, offer to sell, sell, import, and otherwise transfer the Work,
    where such license applies only to those patent claims licensable
    by such Contributor that are necessarily infringed by their
    Contribution(s) alone or by combination of their Contribution(s)
    with the Work to which such Contribution(s) was submitted. If You
    institute patent litigation against any entity (including a
    cross-claim or counterclaim in a lawsuit) alleging that the Work
    or a Contribution incorporated within the Work constitutes direct
    or contributory patent infringement, then any patent licenses
    granted to You under this License for that Work shall terminate
    as of the date such litigation is filed.

 4. Redistribution. You may reproduce and distribute copies of the
    Work or Derivative Works thereof in any medium, with or without
    modifications, and in Source or Object form, provided that You
    meet the following conditions:

    (a) You must give any other recipients of the Work or
        Derivative Works a copy of this License; and

    (b) You must cause any modified files to carry prominent notices
        stating that You changed the files; and

    (c) You must retain, in the Source form of any Derivative Works
        that You distribute, all copyright, patent, trademark, and
        attribution notices from the Source form of the Work,
        excluding those notices that do not pertain to any part of
        the Derivative Works; and

    (d) If the Work includes a "NOTICE" text file as part of its
        distribution, then any Derivative Works that You distribute must
        include a readable copy of the attribution notices contained
        within such NOTICE file, excluding those notices that do not
        pertain to any part of the Derivative Works, in at least one
        of the following places: within a NOTICE text file distributed
        as part of the Derivative Works; within the Source form or
        documentation, if provided along with the Derivative Works; or,
        within a display generated by the Derivative Works, if and
        wherever such third-party notices normally appear. The contents
        of the NOTICE file are for informational purposes only and
        do not modify the License. You may add Your own attribution
        notices within Derivative Works that You distribute, alongside
        or as an addendum to the NOTICE text from the Work, provided
        that such additional attribution notices cannot be construed
        as modifying the License.

    You may add Your own copyright statement to Your modifications and
    may provide additional or different license terms and conditions
    for use, reproduction, or distribution of Your modifications, or
    for any such Derivative Works as a whole, provided Your use,
    reproduction, and distribution of the Work otherwise complies with
    the conditions stated in this License.

 5. Submission of Contributions. Unless You explicitly state otherwise,
    any Contribution intentionally submitted for inclusion in the Work
    by You to the Licensor shall be under the terms and conditions of
    this License, without any additional terms or conditions.
    Notwithstanding the above, nothing herein shall supersede or modify
    the terms of any separate license agreement you may have executed
    with Licensor regarding such Contributions.

 6. Trademarks. This License does not grant permission to use the trade
    names, trademarks, service marks, or product names of the Licensor,
    except as required for reasonable and customary use in describing the
    origin of the Work and reproducing the content of the NOTICE file.

 7. Disclaimer of Warranty. Unless required by applicable law or
    agreed to in writing, Licensor provides the Work (and each
    Contributor provides its Contributions) on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
    implied, including, without limitation, any warranties or conditions
    of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
    PARTICULAR PURPOSE. You are solely responsible for determining the
    appropriateness of using or redistributing the Work and assume any
    risks associated with Your exercise of permissions under this License.

 8. Limitation of Liability. In no event and under no legal theory,
    whether in tort (including negligence), contract, or otherwise,
    unless required by applicable law (such as deliberate and grossly
    negligent acts) or agreed to in writing, shall any Contributor be
    liable to You for damages, including any direct, indirect, special,
    incidental, or consequential damages of any character arising as a
    result of this License or out of the use or inability to use the
    Work (including but not limited to damages for loss of goodwill,
    work stoppage, computer failure or malfunction, or any and all
    other commercial damages or losses), even if such Contributor
    has been advised of the possibility of such damages.

 9. Accepting Warranty or Additional Liability. While redistributing
    the Work or Derivative Works thereof, You may choose to offer,
    and charge a fee for, acceptance of support, warranty, indemnity,
    or other liability obligations and/or rights consistent with this
    License. However, in accepting such obligations, You may act only
    on Your own behalf and on Your sole responsibility, not on behalf
    of any other Contributor, and only if You agree to indemnify,
    defend, and hold each Contributor harmless for any liability
    incurred by, or claims asserted against, such Contributor by reason
    of your accepting any such warranty or additional liability.

 END OF TERMS AND CONDITIONS

 APPENDIX: How to apply the Apache License to your work.

    To apply the Apache License to your work, attach the following
    boilerplate notice, with the fields enclosed by brackets "[]"
    replaced with your own identifying information. (Don't include
    the brackets!)  The text should be enclosed in the appropriate
    comment syntax for the file format. We also recommend that a
    file or class name and description of purpose be included on the
    same "printed page" as the copyright notice for easier
    identification within third-party archives.

 Copyright (c) 2015-2018 Google, Inc., Netflix, Inc., Microsoft Corp. and contributors

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 

 **/
(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('rxjs', ['exports'], factory) :
    (factory((global.rxjs = {})));
}(this, (function (exports) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };

    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = Object.assign || function __assign(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    function isFunction(x) {
        return typeof x === 'function';
    }

    var _enable_super_gross_mode_that_will_cause_bad_things = false;
    var config = {
        Promise: undefined,
        set useDeprecatedSynchronousErrorHandling(value) {
            if (value) {
                var error = new Error();
                console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
            }
            else if (_enable_super_gross_mode_that_will_cause_bad_things) {
                console.log('RxJS: Back to a better error behavior. Thank you. <3');
            }
            _enable_super_gross_mode_that_will_cause_bad_things = value;
        },
        get useDeprecatedSynchronousErrorHandling() {
            return _enable_super_gross_mode_that_will_cause_bad_things;
        },
    };

    function hostReportError(err) {
        setTimeout(function () { throw err; }, 0);
    }

    var empty = {
        closed: true,
        next: function (value) { },
        error: function (err) {
            if (config.useDeprecatedSynchronousErrorHandling) {
                throw err;
            }
            else {
                hostReportError(err);
            }
        },
        complete: function () { }
    };

    var isArray = (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();

    function isObject(x) {
        return x !== null && typeof x === 'object';
    }

    var UnsubscriptionErrorImpl = (function () {
        function UnsubscriptionErrorImpl(errors) {
            Error.call(this);
            this.message = errors ?
                errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
            this.name = 'UnsubscriptionError';
            this.errors = errors;
            return this;
        }
        UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);
        return UnsubscriptionErrorImpl;
    })();
    var UnsubscriptionError = UnsubscriptionErrorImpl;

    var Subscription = (function () {
        function Subscription(unsubscribe) {
            this.closed = false;
            this._parentOrParents = null;
            this._subscriptions = null;
            if (unsubscribe) {
                this._unsubscribe = unsubscribe;
            }
        }
        Subscription.prototype.unsubscribe = function () {
            var errors;
            if (this.closed) {
                return;
            }
            var _a = this, _parentOrParents = _a._parentOrParents, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
            this.closed = true;
            this._parentOrParents = null;
            this._subscriptions = null;
            if (_parentOrParents instanceof Subscription) {
                _parentOrParents.remove(this);
            }
            else if (_parentOrParents !== null) {
                for (var index = 0; index < _parentOrParents.length; ++index) {
                    var parent_1 = _parentOrParents[index];
                    parent_1.remove(this);
                }
            }
            if (isFunction(_unsubscribe)) {
                try {
                    _unsubscribe.call(this);
                }
                catch (e) {
                    errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];
                }
            }
            if (isArray(_subscriptions)) {
                var index = -1;
                var len = _subscriptions.length;
                while (++index < len) {
                    var sub = _subscriptions[index];
                    if (isObject(sub)) {
                        try {
                            sub.unsubscribe();
                        }
                        catch (e) {
                            errors = errors || [];
                            if (e instanceof UnsubscriptionError) {
                                errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                            }
                            else {
                                errors.push(e);
                            }
                        }
                    }
                }
            }
            if (errors) {
                throw new UnsubscriptionError(errors);
            }
        };
        Subscription.prototype.add = function (teardown) {
            var subscription = teardown;
            if (!teardown) {
                return Subscription.EMPTY;
            }
            switch (typeof teardown) {
                case 'function':
                    subscription = new Subscription(teardown);
                case 'object':
                    if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                        return subscription;
                    }
                    else if (this.closed) {
                        subscription.unsubscribe();
                        return subscription;
                    }
                    else if (!(subscription instanceof Subscription)) {
                        var tmp = subscription;
                        subscription = new Subscription();
                        subscription._subscriptions = [tmp];
                    }
                    break;
                default: {
                    throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
                }
            }
            var _parentOrParents = subscription._parentOrParents;
            if (_parentOrParents === null) {
                subscription._parentOrParents = this;
            }
            else if (_parentOrParents instanceof Subscription) {
                if (_parentOrParents === this) {
                    return subscription;
                }
                subscription._parentOrParents = [_parentOrParents, this];
            }
            else if (_parentOrParents.indexOf(this) === -1) {
                _parentOrParents.push(this);
            }
            else {
                return subscription;
            }
            var subscriptions = this._subscriptions;
            if (subscriptions === null) {
                this._subscriptions = [subscription];
            }
            else {
                subscriptions.push(subscription);
            }
            return subscription;
        };
        Subscription.prototype.remove = function (subscription) {
            var subscriptions = this._subscriptions;
            if (subscriptions) {
                var subscriptionIndex = subscriptions.indexOf(subscription);
                if (subscriptionIndex !== -1) {
                    subscriptions.splice(subscriptionIndex, 1);
                }
            }
        };
        Subscription.EMPTY = (function (empty) {
            empty.closed = true;
            return empty;
        }(new Subscription()));
        return Subscription;
    }());
    function flattenUnsubscriptionErrors(errors) {
        return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError) ? err.errors : err); }, []);
    }

    var rxSubscriber = (function () {
        return typeof Symbol === 'function'
            ? Symbol('rxSubscriber')
            : '@@rxSubscriber_' + Math.random();
    })();

    var Subscriber = (function (_super) {
        __extends(Subscriber, _super);
        function Subscriber(destinationOrNext, error, complete) {
            var _this = _super.call(this) || this;
            _this.syncErrorValue = null;
            _this.syncErrorThrown = false;
            _this.syncErrorThrowable = false;
            _this.isStopped = false;
            switch (arguments.length) {
                case 0:
                    _this.destination = empty;
                    break;
                case 1:
                    if (!destinationOrNext) {
                        _this.destination = empty;
                        break;
                    }
                    if (typeof destinationOrNext === 'object') {
                        if (destinationOrNext instanceof Subscriber) {
                            _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                            _this.destination = destinationOrNext;
                            destinationOrNext.add(_this);
                        }
                        else {
                            _this.syncErrorThrowable = true;
                            _this.destination = new SafeSubscriber(_this, destinationOrNext);
                        }
                        break;
                    }
                default:
                    _this.syncErrorThrowable = true;
                    _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                    break;
            }
            return _this;
        }
        Subscriber.prototype[rxSubscriber] = function () { return this; };
        Subscriber.create = function (next, error, complete) {
            var subscriber = new Subscriber(next, error, complete);
            subscriber.syncErrorThrowable = false;
            return subscriber;
        };
        Subscriber.prototype.next = function (value) {
            if (!this.isStopped) {
                this._next(value);
            }
        };
        Subscriber.prototype.error = function (err) {
            if (!this.isStopped) {
                this.isStopped = true;
                this._error(err);
            }
        };
        Subscriber.prototype.complete = function () {
            if (!this.isStopped) {
                this.isStopped = true;
                this._complete();
            }
        };
        Subscriber.prototype.unsubscribe = function () {
            if (this.closed) {
                return;
            }
            this.isStopped = true;
            _super.prototype.unsubscribe.call(this);
        };
        Subscriber.prototype._next = function (value) {
            this.destination.next(value);
        };
        Subscriber.prototype._error = function (err) {
            this.destination.error(err);
            this.unsubscribe();
        };
        Subscriber.prototype._complete = function () {
            this.destination.complete();
            this.unsubscribe();
        };
        Subscriber.prototype._unsubscribeAndRecycle = function () {
            var _parentOrParents = this._parentOrParents;
            this._parentOrParents = null;
            this.unsubscribe();
            this.closed = false;
            this.isStopped = false;
            this._parentOrParents = _parentOrParents;
            return this;
        };
        return Subscriber;
    }(Subscription));
    var SafeSubscriber = (function (_super) {
        __extends(SafeSubscriber, _super);
        function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
            var _this = _super.call(this) || this;
            _this._parentSubscriber = _parentSubscriber;
            var next;
            var context = _this;
            if (isFunction(observerOrNext)) {
                next = observerOrNext;
            }
            else if (observerOrNext) {
                next = observerOrNext.next;
                error = observerOrNext.error;
                complete = observerOrNext.complete;
                if (observerOrNext !== empty) {
                    context = Object.create(observerOrNext);
                    if (isFunction(context.unsubscribe)) {
                        _this.add(context.unsubscribe.bind(context));
                    }
                    context.unsubscribe = _this.unsubscribe.bind(_this);
                }
            }
            _this._context = context;
            _this._next = next;
            _this._error = error;
            _this._complete = complete;
            return _this;
        }
        SafeSubscriber.prototype.next = function (value) {
            if (!this.isStopped && this._next) {
                var _parentSubscriber = this._parentSubscriber;
                if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                    this.__tryOrUnsub(this._next, value);
                }
                else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                    this.unsubscribe();
                }
            }
        };
        SafeSubscriber.prototype.error = function (err) {
            if (!this.isStopped) {
                var _parentSubscriber = this._parentSubscriber;
                var useDeprecatedSynchronousErrorHandling = config.useDeprecatedSynchronousErrorHandling;
                if (this._error) {
                    if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                        this.__tryOrUnsub(this._error, err);
                        this.unsubscribe();
                    }
                    else {
                        this.__tryOrSetError(_parentSubscriber, this._error, err);
                        this.unsubscribe();
                    }
                }
                else if (!_parentSubscriber.syncErrorThrowable) {
                    this.unsubscribe();
                    if (useDeprecatedSynchronousErrorHandling) {
                        throw err;
                    }
                    hostReportError(err);
                }
                else {
                    if (useDeprecatedSynchronousErrorHandling) {
                        _parentSubscriber.syncErrorValue = err;
                        _parentSubscriber.syncErrorThrown = true;
                    }
                    else {
                        hostReportError(err);
                    }
                    this.unsubscribe();
                }
            }
        };
        SafeSubscriber.prototype.complete = function () {
            var _this = this;
            if (!this.isStopped) {
                var _parentSubscriber = this._parentSubscriber;
                if (this._complete) {
                    var wrappedComplete = function () { return _this._complete.call(_this._context); };
                    if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                        this.__tryOrUnsub(wrappedComplete);
                        this.unsubscribe();
                    }
                    else {
                        this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                        this.unsubscribe();
                    }
                }
                else {
                    this.unsubscribe();
                }
            }
        };
        SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
            try {
                fn.call(this._context, value);
            }
            catch (err) {
                this.unsubscribe();
                if (config.useDeprecatedSynchronousErrorHandling) {
                    throw err;
                }
                else {
                    hostReportError(err);
                }
            }
        };
        SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
            if (!config.useDeprecatedSynchronousErrorHandling) {
                throw new Error('bad call');
            }
            try {
                fn.call(this._context, value);
            }
            catch (err) {
                if (config.useDeprecatedSynchronousErrorHandling) {
                    parent.syncErrorValue = err;
                    parent.syncErrorThrown = true;
                    return true;
                }
                else {
                    hostReportError(err);
                    return true;
                }
            }
            return false;
        };
        SafeSubscriber.prototype._unsubscribe = function () {
            var _parentSubscriber = this._parentSubscriber;
            this._context = null;
            this._parentSubscriber = null;
            _parentSubscriber.unsubscribe();
        };
        return SafeSubscriber;
    }(Subscriber));

    function canReportError(observer) {
        while (observer) {
            var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
            if (closed_1 || isStopped) {
                return false;
            }
            else if (destination && destination instanceof Subscriber) {
                observer = destination;
            }
            else {
                observer = null;
            }
        }
        return true;
    }

    function toSubscriber(nextOrObserver, error, complete) {
        if (nextOrObserver) {
            if (nextOrObserver instanceof Subscriber) {
                return nextOrObserver;
            }
            if (nextOrObserver[rxSubscriber]) {
                return nextOrObserver[rxSubscriber]();
            }
        }
        if (!nextOrObserver && !error && !complete) {
            return new Subscriber(empty);
        }
        return new Subscriber(nextOrObserver, error, complete);
    }

    var observable = (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();

    function identity(x) {
        return x;
    }

    function pipe() {
        var fns = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            fns[_i] = arguments[_i];
        }
        return pipeFromArray(fns);
    }
    function pipeFromArray(fns) {
        if (fns.length === 0) {
            return identity;
        }
        if (fns.length === 1) {
            return fns[0];
        }
        return function piped(input) {
            return fns.reduce(function (prev, fn) { return fn(prev); }, input);
        };
    }

    var Observable = (function () {
        function Observable(subscribe) {
            this._isScalar = false;
            if (subscribe) {
                this._subscribe = subscribe;
            }
        }
        Observable.prototype.lift = function (operator) {
            var observable$$1 = new Observable();
            observable$$1.source = this;
            observable$$1.operator = operator;
            return observable$$1;
        };
        Observable.prototype.subscribe = function (observerOrNext, error, complete) {
            var operator = this.operator;
            var sink = toSubscriber(observerOrNext, error, complete);
            if (operator) {
                sink.add(operator.call(sink, this.source));
            }
            else {
                sink.add(this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                    this._subscribe(sink) :
                    this._trySubscribe(sink));
            }
            if (config.useDeprecatedSynchronousErrorHandling) {
                if (sink.syncErrorThrowable) {
                    sink.syncErrorThrowable = false;
                    if (sink.syncErrorThrown) {
                        throw sink.syncErrorValue;
                    }
                }
            }
            return sink;
        };
        Observable.prototype._trySubscribe = function (sink) {
            try {
                return this._subscribe(sink);
            }
            catch (err) {
                if (config.useDeprecatedSynchronousErrorHandling) {
                    sink.syncErrorThrown = true;
                    sink.syncErrorValue = err;
                }
                if (canReportError(sink)) {
                    sink.error(err);
                }
                else {
                    console.warn(err);
                }
            }
        };
        Observable.prototype.forEach = function (next, promiseCtor) {
            var _this = this;
            promiseCtor = getPromiseCtor(promiseCtor);
            return new promiseCtor(function (resolve, reject) {
                var subscription;
                subscription = _this.subscribe(function (value) {
                    try {
                        next(value);
                    }
                    catch (err) {
                        reject(err);
                        if (subscription) {
                            subscription.unsubscribe();
                        }
                    }
                }, reject, resolve);
            });
        };
        Observable.prototype._subscribe = function (subscriber) {
            var source = this.source;
            return source && source.subscribe(subscriber);
        };
        Observable.prototype[observable] = function () {
            return this;
        };
        Observable.prototype.pipe = function () {
            var operations = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                operations[_i] = arguments[_i];
            }
            if (operations.length === 0) {
                return this;
            }
            return pipeFromArray(operations)(this);
        };
        Observable.prototype.toPromise = function (promiseCtor) {
            var _this = this;
            promiseCtor = getPromiseCtor(promiseCtor);
            return new promiseCtor(function (resolve, reject) {
                var value;
                _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
            });
        };
        Observable.create = function (subscribe) {
            return new Observable(subscribe);
        };
        return Observable;
    }());
    function getPromiseCtor(promiseCtor) {
        if (!promiseCtor) {
            promiseCtor = config.Promise || Promise;
        }
        if (!promiseCtor) {
            throw new Error('no Promise impl found');
        }
        return promiseCtor;
    }

    var ObjectUnsubscribedErrorImpl = (function () {
        function ObjectUnsubscribedErrorImpl() {
            Error.call(this);
            this.message = 'object unsubscribed';
            this.name = 'ObjectUnsubscribedError';
            return this;
        }
        ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);
        return ObjectUnsubscribedErrorImpl;
    })();
    var ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;

    var SubjectSubscription = (function (_super) {
        __extends(SubjectSubscription, _super);
        function SubjectSubscription(subject, subscriber) {
            var _this = _super.call(this) || this;
            _this.subject = subject;
            _this.subscriber = subscriber;
            _this.closed = false;
            return _this;
        }
        SubjectSubscription.prototype.unsubscribe = function () {
            if (this.closed) {
                return;
            }
            this.closed = true;
            var subject = this.subject;
            var observers = subject.observers;
            this.subject = null;
            if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
                return;
            }
            var subscriberIndex = observers.indexOf(this.subscriber);
            if (subscriberIndex !== -1) {
                observers.splice(subscriberIndex, 1);
            }
        };
        return SubjectSubscription;
    }(Subscription));

    var SubjectSubscriber = (function (_super) {
        __extends(SubjectSubscriber, _super);
        function SubjectSubscriber(destination) {
            var _this = _super.call(this, destination) || this;
            _this.destination = destination;
            return _this;
        }
        return SubjectSubscriber;
    }(Subscriber));
    var Subject = (function (_super) {
        __extends(Subject, _super);
        function Subject() {
            var _this = _super.call(this) || this;
            _this.observers = [];
            _this.closed = false;
            _this.isStopped = false;
            _this.hasError = false;
            _this.thrownError = null;
            return _this;
        }
        Subject.prototype[rxSubscriber] = function () {
            return new SubjectSubscriber(this);
        };
        Subject.prototype.lift = function (operator) {
            var subject = new AnonymousSubject(this, this);
            subject.operator = operator;
            return subject;
        };
        Subject.prototype.next = function (value) {
            if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            if (!this.isStopped) {
                var observers = this.observers;
                var len = observers.length;
                var copy = observers.slice();
                for (var i = 0; i < len; i++) {
                    copy[i].next(value);
                }
            }
        };
        Subject.prototype.error = function (err) {
            if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            this.hasError = true;
            this.thrownError = err;
            this.isStopped = true;
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].error(err);
            }
            this.observers.length = 0;
        };
        Subject.prototype.complete = function () {
            if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            this.isStopped = true;
            var observers = this.observers;
            var len = observers.length;
            var copy = observers.slice();
            for (var i = 0; i < len; i++) {
                copy[i].complete();
            }
            this.observers.length = 0;
        };
        Subject.prototype.unsubscribe = function () {
            this.isStopped = true;
            this.closed = true;
            this.observers = null;
        };
        Subject.prototype._trySubscribe = function (subscriber) {
            if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            else {
                return _super.prototype._trySubscribe.call(this, subscriber);
            }
        };
        Subject.prototype._subscribe = function (subscriber) {
            if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            else if (this.hasError) {
                subscriber.error(this.thrownError);
                return Subscription.EMPTY;
            }
            else if (this.isStopped) {
                subscriber.complete();
                return Subscription.EMPTY;
            }
            else {
                this.observers.push(subscriber);
                return new SubjectSubscription(this, subscriber);
            }
        };
        Subject.prototype.asObservable = function () {
            var observable = new Observable();
            observable.source = this;
            return observable;
        };
        Subject.create = function (destination, source) {
            return new AnonymousSubject(destination, source);
        };
        return Subject;
    }(Observable));
    var AnonymousSubject = (function (_super) {
        __extends(AnonymousSubject, _super);
        function AnonymousSubject(destination, source) {
            var _this = _super.call(this) || this;
            _this.destination = destination;
            _this.source = source;
            return _this;
        }
        AnonymousSubject.prototype.next = function (value) {
            var destination = this.destination;
            if (destination && destination.next) {
                destination.next(value);
            }
        };
        AnonymousSubject.prototype.error = function (err) {
            var destination = this.destination;
            if (destination && destination.error) {
                this.destination.error(err);
            }
        };
        AnonymousSubject.prototype.complete = function () {
            var destination = this.destination;
            if (destination && destination.complete) {
                this.destination.complete();
            }
        };
        AnonymousSubject.prototype._subscribe = function (subscriber) {
            var source = this.source;
            if (source) {
                return this.source.subscribe(subscriber);
            }
            else {
                return Subscription.EMPTY;
            }
        };
        return AnonymousSubject;
    }(Subject));

    function refCount() {
        return function refCountOperatorFunction(source) {
            return source.lift(new RefCountOperator(source));
        };
    }
    var RefCountOperator = (function () {
        function RefCountOperator(connectable) {
            this.connectable = connectable;
        }
        RefCountOperator.prototype.call = function (subscriber, source) {
            var connectable = this.connectable;
            connectable._refCount++;
            var refCounter = new RefCountSubscriber(subscriber, connectable);
            var subscription = source.subscribe(refCounter);
            if (!refCounter.closed) {
                refCounter.connection = connectable.connect();
            }
            return subscription;
        };
        return RefCountOperator;
    }());
    var RefCountSubscriber = (function (_super) {
        __extends(RefCountSubscriber, _super);
        function RefCountSubscriber(destination, connectable) {
            var _this = _super.call(this, destination) || this;
            _this.connectable = connectable;
            return _this;
        }
        RefCountSubscriber.prototype._unsubscribe = function () {
            var connectable = this.connectable;
            if (!connectable) {
                this.connection = null;
                return;
            }
            this.connectable = null;
            var refCount = connectable._refCount;
            if (refCount <= 0) {
                this.connection = null;
                return;
            }
            connectable._refCount = refCount - 1;
            if (refCount > 1) {
                this.connection = null;
                return;
            }
            var connection = this.connection;
            var sharedConnection = connectable._connection;
            this.connection = null;
            if (sharedConnection && (!connection || sharedConnection === connection)) {
                sharedConnection.unsubscribe();
            }
        };
        return RefCountSubscriber;
    }(Subscriber));

    var ConnectableObservable = (function (_super) {
        __extends(ConnectableObservable, _super);
        function ConnectableObservable(source, subjectFactory) {
            var _this = _super.call(this) || this;
            _this.source = source;
            _this.subjectFactory = subjectFactory;
            _this._refCount = 0;
            _this._isComplete = false;
            return _this;
        }
        ConnectableObservable.prototype._subscribe = function (subscriber) {
            return this.getSubject().subscribe(subscriber);
        };
        ConnectableObservable.prototype.getSubject = function () {
            var subject = this._subject;
            if (!subject || subject.isStopped) {
                this._subject = this.subjectFactory();
            }
            return this._subject;
        };
        ConnectableObservable.prototype.connect = function () {
            var connection = this._connection;
            if (!connection) {
                this._isComplete = false;
                connection = this._connection = new Subscription();
                connection.add(this.source
                    .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
                if (connection.closed) {
                    this._connection = null;
                    connection = Subscription.EMPTY;
                }
            }
            return connection;
        };
        ConnectableObservable.prototype.refCount = function () {
            return refCount()(this);
        };
        return ConnectableObservable;
    }(Observable));
    var connectableObservableDescriptor = (function () {
        var connectableProto = ConnectableObservable.prototype;
        return {
            operator: { value: null },
            _refCount: { value: 0, writable: true },
            _subject: { value: null, writable: true },
            _connection: { value: null, writable: true },
            _subscribe: { value: connectableProto._subscribe },
            _isComplete: { value: connectableProto._isComplete, writable: true },
            getSubject: { value: connectableProto.getSubject },
            connect: { value: connectableProto.connect },
            refCount: { value: connectableProto.refCount }
        };
    })();
    var ConnectableSubscriber = (function (_super) {
        __extends(ConnectableSubscriber, _super);
        function ConnectableSubscriber(destination, connectable) {
            var _this = _super.call(this, destination) || this;
            _this.connectable = connectable;
            return _this;
        }
        ConnectableSubscriber.prototype._error = function (err) {
            this._unsubscribe();
            _super.prototype._error.call(this, err);
        };
        ConnectableSubscriber.prototype._complete = function () {
            this.connectable._isComplete = true;
            this._unsubscribe();
            _super.prototype._complete.call(this);
        };
        ConnectableSubscriber.prototype._unsubscribe = function () {
            var connectable = this.connectable;
            if (connectable) {
                this.connectable = null;
                var connection = connectable._connection;
                connectable._refCount = 0;
                connectable._subject = null;
                connectable._connection = null;
                if (connection) {
                    connection.unsubscribe();
                }
            }
        };
        return ConnectableSubscriber;
    }(SubjectSubscriber));
    var RefCountSubscriber$1 = (function (_super) {
        __extends(RefCountSubscriber, _super);
        function RefCountSubscriber(destination, connectable) {
            var _this = _super.call(this, destination) || this;
            _this.connectable = connectable;
            return _this;
        }
        RefCountSubscriber.prototype._unsubscribe = function () {
            var connectable = this.connectable;
            if (!connectable) {
                this.connection = null;
                return;
            }
            this.connectable = null;
            var refCount$$1 = connectable._refCount;
            if (refCount$$1 <= 0) {
                this.connection = null;
                return;
            }
            connectable._refCount = refCount$$1 - 1;
            if (refCount$$1 > 1) {
                this.connection = null;
                return;
            }
            var connection = this.connection;
            var sharedConnection = connectable._connection;
            this.connection = null;
            if (sharedConnection && (!connection || sharedConnection === connection)) {
                sharedConnection.unsubscribe();
            }
        };
        return RefCountSubscriber;
    }(Subscriber));

    function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
        return function (source) {
            return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
        };
    }
    var GroupByOperator = (function () {
        function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
            this.keySelector = keySelector;
            this.elementSelector = elementSelector;
            this.durationSelector = durationSelector;
            this.subjectSelector = subjectSelector;
        }
        GroupByOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
        };
        return GroupByOperator;
    }());
    var GroupBySubscriber = (function (_super) {
        __extends(GroupBySubscriber, _super);
        function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
            var _this = _super.call(this, destination) || this;
            _this.keySelector = keySelector;
            _this.elementSelector = elementSelector;
            _this.durationSelector = durationSelector;
            _this.subjectSelector = subjectSelector;
            _this.groups = null;
            _this.attemptedToUnsubscribe = false;
            _this.count = 0;
            return _this;
        }
        GroupBySubscriber.prototype._next = function (value) {
            var key;
            try {
                key = this.keySelector(value);
            }
            catch (err) {
                this.error(err);
                return;
            }
            this._group(value, key);
        };
        GroupBySubscriber.prototype._group = function (value, key) {
            var groups = this.groups;
            if (!groups) {
                groups = this.groups = new Map();
            }
            var group = groups.get(key);
            var element;
            if (this.elementSelector) {
                try {
                    element = this.elementSelector(value);
                }
                catch (err) {
                    this.error(err);
                }
            }
            else {
                element = value;
            }
            if (!group) {
                group = (this.subjectSelector ? this.subjectSelector() : new Subject());
                groups.set(key, group);
                var groupedObservable = new GroupedObservable(key, group, this);
                this.destination.next(groupedObservable);
                if (this.durationSelector) {
                    var duration = void 0;
                    try {
                        duration = this.durationSelector(new GroupedObservable(key, group));
                    }
                    catch (err) {
                        this.error(err);
                        return;
                    }
                    this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
                }
            }
            if (!group.closed) {
                group.next(element);
            }
        };
        GroupBySubscriber.prototype._error = function (err) {
            var groups = this.groups;
            if (groups) {
                groups.forEach(function (group, key) {
                    group.error(err);
                });
                groups.clear();
            }
            this.destination.error(err);
        };
        GroupBySubscriber.prototype._complete = function () {
            var groups = this.groups;
            if (groups) {
                groups.forEach(function (group, key) {
                    group.complete();
                });
                groups.clear();
            }
            this.destination.complete();
        };
        GroupBySubscriber.prototype.removeGroup = function (key) {
            this.groups.delete(key);
        };
        GroupBySubscriber.prototype.unsubscribe = function () {
            if (!this.closed) {
                this.attemptedToUnsubscribe = true;
                if (this.count === 0) {
                    _super.prototype.unsubscribe.call(this);
                }
            }
        };
        return GroupBySubscriber;
    }(Subscriber));
    var GroupDurationSubscriber = (function (_super) {
        __extends(GroupDurationSubscriber, _super);
        function GroupDurationSubscriber(key, group, parent) {
            var _this = _super.call(this, group) || this;
            _this.key = key;
            _this.group = group;
            _this.parent = parent;
            return _this;
        }
        GroupDurationSubscriber.prototype._next = function (value) {
            this.complete();
        };
        GroupDurationSubscriber.prototype._unsubscribe = function () {
            var _a = this, parent = _a.parent, key = _a.key;
            this.key = this.parent = null;
            if (parent) {
                parent.removeGroup(key);
            }
        };
        return GroupDurationSubscriber;
    }(Subscriber));
    var GroupedObservable = (function (_super) {
        __extends(GroupedObservable, _super);
        function GroupedObservable(key, groupSubject, refCountSubscription) {
            var _this = _super.call(this) || this;
            _this.key = key;
            _this.groupSubject = groupSubject;
            _this.refCountSubscription = refCountSubscription;
            return _this;
        }
        GroupedObservable.prototype._subscribe = function (subscriber) {
            var subscription = new Subscription();
            var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
            if (refCountSubscription && !refCountSubscription.closed) {
                subscription.add(new InnerRefCountSubscription(refCountSubscription));
            }
            subscription.add(groupSubject.subscribe(subscriber));
            return subscription;
        };
        return GroupedObservable;
    }(Observable));
    var InnerRefCountSubscription = (function (_super) {
        __extends(InnerRefCountSubscription, _super);
        function InnerRefCountSubscription(parent) {
            var _this = _super.call(this) || this;
            _this.parent = parent;
            parent.count++;
            return _this;
        }
        InnerRefCountSubscription.prototype.unsubscribe = function () {
            var parent = this.parent;
            if (!parent.closed && !this.closed) {
                _super.prototype.unsubscribe.call(this);
                parent.count -= 1;
                if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                    parent.unsubscribe();
                }
            }
        };
        return InnerRefCountSubscription;
    }(Subscription));

    var BehaviorSubject = (function (_super) {
        __extends(BehaviorSubject, _super);
        function BehaviorSubject(_value) {
            var _this = _super.call(this) || this;
            _this._value = _value;
            return _this;
        }
        Object.defineProperty(BehaviorSubject.prototype, "value", {
            get: function () {
                return this.getValue();
            },
            enumerable: true,
            configurable: true
        });
        BehaviorSubject.prototype._subscribe = function (subscriber) {
            var subscription = _super.prototype._subscribe.call(this, subscriber);
            if (subscription && !subscription.closed) {
                subscriber.next(this._value);
            }
            return subscription;
        };
        BehaviorSubject.prototype.getValue = function () {
            if (this.hasError) {
                throw this.thrownError;
            }
            else if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            else {
                return this._value;
            }
        };
        BehaviorSubject.prototype.next = function (value) {
            _super.prototype.next.call(this, this._value = value);
        };
        return BehaviorSubject;
    }(Subject));

    var Action = (function (_super) {
        __extends(Action, _super);
        function Action(scheduler, work) {
            return _super.call(this) || this;
        }
        Action.prototype.schedule = function (state, delay) {
            if (delay === void 0) { delay = 0; }
            return this;
        };
        return Action;
    }(Subscription));

    var AsyncAction = (function (_super) {
        __extends(AsyncAction, _super);
        function AsyncAction(scheduler, work) {
            var _this = _super.call(this, scheduler, work) || this;
            _this.scheduler = scheduler;
            _this.work = work;
            _this.pending = false;
            return _this;
        }
        AsyncAction.prototype.schedule = function (state, delay) {
            if (delay === void 0) { delay = 0; }
            if (this.closed) {
                return this;
            }
            this.state = state;
            var id = this.id;
            var scheduler = this.scheduler;
            if (id != null) {
                this.id = this.recycleAsyncId(scheduler, id, delay);
            }
            this.pending = true;
            this.delay = delay;
            this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
            return this;
        };
        AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            return setInterval(scheduler.flush.bind(scheduler, this), delay);
        };
        AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            if (delay !== null && this.delay === delay && this.pending === false) {
                return id;
            }
            clearInterval(id);
            return undefined;
        };
        AsyncAction.prototype.execute = function (state, delay) {
            if (this.closed) {
                return new Error('executing a cancelled action');
            }
            this.pending = false;
            var error = this._execute(state, delay);
            if (error) {
                return error;
            }
            else if (this.pending === false && this.id != null) {
                this.id = this.recycleAsyncId(this.scheduler, this.id, null);
            }
        };
        AsyncAction.prototype._execute = function (state, delay) {
            var errored = false;
            var errorValue = undefined;
            try {
                this.work(state);
            }
            catch (e) {
                errored = true;
                errorValue = !!e && e || new Error(e);
            }
            if (errored) {
                this.unsubscribe();
                return errorValue;
            }
        };
        AsyncAction.prototype._unsubscribe = function () {
            var id = this.id;
            var scheduler = this.scheduler;
            var actions = scheduler.actions;
            var index = actions.indexOf(this);
            this.work = null;
            this.state = null;
            this.pending = false;
            this.scheduler = null;
            if (index !== -1) {
                actions.splice(index, 1);
            }
            if (id != null) {
                this.id = this.recycleAsyncId(scheduler, id, null);
            }
            this.delay = null;
        };
        return AsyncAction;
    }(Action));

    var QueueAction = (function (_super) {
        __extends(QueueAction, _super);
        function QueueAction(scheduler, work) {
            var _this = _super.call(this, scheduler, work) || this;
            _this.scheduler = scheduler;
            _this.work = work;
            return _this;
        }
        QueueAction.prototype.schedule = function (state, delay) {
            if (delay === void 0) { delay = 0; }
            if (delay > 0) {
                return _super.prototype.schedule.call(this, state, delay);
            }
            this.delay = delay;
            this.state = state;
            this.scheduler.flush(this);
            return this;
        };
        QueueAction.prototype.execute = function (state, delay) {
            return (delay > 0 || this.closed) ?
                _super.prototype.execute.call(this, state, delay) :
                this._execute(state, delay);
        };
        QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
            }
            return scheduler.flush(this);
        };
        return QueueAction;
    }(AsyncAction));

    var Scheduler = (function () {
        function Scheduler(SchedulerAction, now) {
            if (now === void 0) { now = Scheduler.now; }
            this.SchedulerAction = SchedulerAction;
            this.now = now;
        }
        Scheduler.prototype.schedule = function (work, delay, state) {
            if (delay === void 0) { delay = 0; }
            return new this.SchedulerAction(this, work).schedule(state, delay);
        };
        Scheduler.now = function () { return Date.now(); };
        return Scheduler;
    }());

    var AsyncScheduler = (function (_super) {
        __extends(AsyncScheduler, _super);
        function AsyncScheduler(SchedulerAction, now) {
            if (now === void 0) { now = Scheduler.now; }
            var _this = _super.call(this, SchedulerAction, function () {
                if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                    return AsyncScheduler.delegate.now();
                }
                else {
                    return now();
                }
            }) || this;
            _this.actions = [];
            _this.active = false;
            _this.scheduled = undefined;
            return _this;
        }
        AsyncScheduler.prototype.schedule = function (work, delay, state) {
            if (delay === void 0) { delay = 0; }
            if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
                return AsyncScheduler.delegate.schedule(work, delay, state);
            }
            else {
                return _super.prototype.schedule.call(this, work, delay, state);
            }
        };
        AsyncScheduler.prototype.flush = function (action) {
            var actions = this.actions;
            if (this.active) {
                actions.push(action);
                return;
            }
            var error;
            this.active = true;
            do {
                if (error = action.execute(action.state, action.delay)) {
                    break;
                }
            } while (action = actions.shift());
            this.active = false;
            if (error) {
                while (action = actions.shift()) {
                    action.unsubscribe();
                }
                throw error;
            }
        };
        return AsyncScheduler;
    }(Scheduler));

    var QueueScheduler = (function (_super) {
        __extends(QueueScheduler, _super);
        function QueueScheduler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return QueueScheduler;
    }(AsyncScheduler));

    var queue = new QueueScheduler(QueueAction);

    var EMPTY = new Observable(function (subscriber) { return subscriber.complete(); });
    function empty$1(scheduler) {
        return scheduler ? emptyScheduled(scheduler) : EMPTY;
    }
    function emptyScheduled(scheduler) {
        return new Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
    }

    function isScheduler(value) {
        return value && typeof value.schedule === 'function';
    }

    var subscribeToArray = function (array) { return function (subscriber) {
        for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
            subscriber.next(array[i]);
        }
        subscriber.complete();
    }; };

    function scheduleArray(input, scheduler) {
        return new Observable(function (subscriber) {
            var sub = new Subscription();
            var i = 0;
            sub.add(scheduler.schedule(function () {
                if (i === input.length) {
                    subscriber.complete();
                    return;
                }
                subscriber.next(input[i++]);
                if (!subscriber.closed) {
                    sub.add(this.schedule());
                }
            }));
            return sub;
        });
    }

    function fromArray(input, scheduler) {
        if (!scheduler) {
            return new Observable(subscribeToArray(input));
        }
        else {
            return scheduleArray(input, scheduler);
        }
    }

    function of() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        var scheduler = args[args.length - 1];
        if (isScheduler(scheduler)) {
            args.pop();
            return scheduleArray(args, scheduler);
        }
        else {
            return fromArray(args);
        }
    }

    function throwError(error, scheduler) {
        if (!scheduler) {
            return new Observable(function (subscriber) { return subscriber.error(error); });
        }
        else {
            return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
        }
    }
    function dispatch(_a) {
        var error = _a.error, subscriber = _a.subscriber;
        subscriber.error(error);
    }

    (function (NotificationKind) {
        NotificationKind["NEXT"] = "N";
        NotificationKind["ERROR"] = "E";
        NotificationKind["COMPLETE"] = "C";
    })(exports.NotificationKind || (exports.NotificationKind = {}));
    var Notification = (function () {
        function Notification(kind, value, error) {
            this.kind = kind;
            this.value = value;
            this.error = error;
            this.hasValue = kind === 'N';
        }
        Notification.prototype.observe = function (observer) {
            switch (this.kind) {
                case 'N':
                    return observer.next && observer.next(this.value);
                case 'E':
                    return observer.error && observer.error(this.error);
                case 'C':
                    return observer.complete && observer.complete();
            }
        };
        Notification.prototype.do = function (next, error, complete) {
            var kind = this.kind;
            switch (kind) {
                case 'N':
                    return next && next(this.value);
                case 'E':
                    return error && error(this.error);
                case 'C':
                    return complete && complete();
            }
        };
        Notification.prototype.accept = function (nextOrObserver, error, complete) {
            if (nextOrObserver && typeof nextOrObserver.next === 'function') {
                return this.observe(nextOrObserver);
            }
            else {
                return this.do(nextOrObserver, error, complete);
            }
        };
        Notification.prototype.toObservable = function () {
            var kind = this.kind;
            switch (kind) {
                case 'N':
                    return of(this.value);
                case 'E':
                    return throwError(this.error);
                case 'C':
                    return empty$1();
            }
            throw new Error('unexpected notification kind value');
        };
        Notification.createNext = function (value) {
            if (typeof value !== 'undefined') {
                return new Notification('N', value);
            }
            return Notification.undefinedValueNotification;
        };
        Notification.createError = function (err) {
            return new Notification('E', undefined, err);
        };
        Notification.createComplete = function () {
            return Notification.completeNotification;
        };
        Notification.completeNotification = new Notification('C');
        Notification.undefinedValueNotification = new Notification('N', undefined);
        return Notification;
    }());

    function observeOn(scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        return function observeOnOperatorFunction(source) {
            return source.lift(new ObserveOnOperator(scheduler, delay));
        };
    }
    var ObserveOnOperator = (function () {
        function ObserveOnOperator(scheduler, delay) {
            if (delay === void 0) { delay = 0; }
            this.scheduler = scheduler;
            this.delay = delay;
        }
        ObserveOnOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
        };
        return ObserveOnOperator;
    }());
    var ObserveOnSubscriber = (function (_super) {
        __extends(ObserveOnSubscriber, _super);
        function ObserveOnSubscriber(destination, scheduler, delay) {
            if (delay === void 0) { delay = 0; }
            var _this = _super.call(this, destination) || this;
            _this.scheduler = scheduler;
            _this.delay = delay;
            return _this;
        }
        ObserveOnSubscriber.dispatch = function (arg) {
            var notification = arg.notification, destination = arg.destination;
            notification.observe(destination);
            this.unsubscribe();
        };
        ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
            var destination = this.destination;
            destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
        };
        ObserveOnSubscriber.prototype._next = function (value) {
            this.scheduleMessage(Notification.createNext(value));
        };
        ObserveOnSubscriber.prototype._error = function (err) {
            this.scheduleMessage(Notification.createError(err));
            this.unsubscribe();
        };
        ObserveOnSubscriber.prototype._complete = function () {
            this.scheduleMessage(Notification.createComplete());
            this.unsubscribe();
        };
        return ObserveOnSubscriber;
    }(Subscriber));
    var ObserveOnMessage = (function () {
        function ObserveOnMessage(notification, destination) {
            this.notification = notification;
            this.destination = destination;
        }
        return ObserveOnMessage;
    }());

    var ReplaySubject = (function (_super) {
        __extends(ReplaySubject, _super);
        function ReplaySubject(bufferSize, windowTime, scheduler) {
            if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
            if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
            var _this = _super.call(this) || this;
            _this.scheduler = scheduler;
            _this._events = [];
            _this._infiniteTimeWindow = false;
            _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
            _this._windowTime = windowTime < 1 ? 1 : windowTime;
            if (windowTime === Number.POSITIVE_INFINITY) {
                _this._infiniteTimeWindow = true;
                _this.next = _this.nextInfiniteTimeWindow;
            }
            else {
                _this.next = _this.nextTimeWindow;
            }
            return _this;
        }
        ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
            var _events = this._events;
            _events.push(value);
            if (_events.length > this._bufferSize) {
                _events.shift();
            }
            _super.prototype.next.call(this, value);
        };
        ReplaySubject.prototype.nextTimeWindow = function (value) {
            this._events.push(new ReplayEvent(this._getNow(), value));
            this._trimBufferThenGetEvents();
            _super.prototype.next.call(this, value);
        };
        ReplaySubject.prototype._subscribe = function (subscriber) {
            var _infiniteTimeWindow = this._infiniteTimeWindow;
            var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
            var scheduler = this.scheduler;
            var len = _events.length;
            var subscription;
            if (this.closed) {
                throw new ObjectUnsubscribedError();
            }
            else if (this.isStopped || this.hasError) {
                subscription = Subscription.EMPTY;
            }
            else {
                this.observers.push(subscriber);
                subscription = new SubjectSubscription(this, subscriber);
            }
            if (scheduler) {
                subscriber.add(subscriber = new ObserveOnSubscriber(subscriber, scheduler));
            }
            if (_infiniteTimeWindow) {
                for (var i = 0; i < len && !subscriber.closed; i++) {
                    subscriber.next(_events[i]);
                }
            }
            else {
                for (var i = 0; i < len && !subscriber.closed; i++) {
                    subscriber.next(_events[i].value);
                }
            }
            if (this.hasError) {
                subscriber.error(this.thrownError);
            }
            else if (this.isStopped) {
                subscriber.complete();
            }
            return subscription;
        };
        ReplaySubject.prototype._getNow = function () {
            return (this.scheduler || queue).now();
        };
        ReplaySubject.prototype._trimBufferThenGetEvents = function () {
            var now = this._getNow();
            var _bufferSize = this._bufferSize;
            var _windowTime = this._windowTime;
            var _events = this._events;
            var eventsCount = _events.length;
            var spliceCount = 0;
            while (spliceCount < eventsCount) {
                if ((now - _events[spliceCount].time) < _windowTime) {
                    break;
                }
                spliceCount++;
            }
            if (eventsCount > _bufferSize) {
                spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
            }
            if (spliceCount > 0) {
                _events.splice(0, spliceCount);
            }
            return _events;
        };
        return ReplaySubject;
    }(Subject));
    var ReplayEvent = (function () {
        function ReplayEvent(time, value) {
            this.time = time;
            this.value = value;
        }
        return ReplayEvent;
    }());

    var AsyncSubject = (function (_super) {
        __extends(AsyncSubject, _super);
        function AsyncSubject() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.value = null;
            _this.hasNext = false;
            _this.hasCompleted = false;
            return _this;
        }
        AsyncSubject.prototype._subscribe = function (subscriber) {
            if (this.hasError) {
                subscriber.error(this.thrownError);
                return Subscription.EMPTY;
            }
            else if (this.hasCompleted && this.hasNext) {
                subscriber.next(this.value);
                subscriber.complete();
                return Subscription.EMPTY;
            }
            return _super.prototype._subscribe.call(this, subscriber);
        };
        AsyncSubject.prototype.next = function (value) {
            if (!this.hasCompleted) {
                this.value = value;
                this.hasNext = true;
            }
        };
        AsyncSubject.prototype.error = function (error) {
            if (!this.hasCompleted) {
                _super.prototype.error.call(this, error);
            }
        };
        AsyncSubject.prototype.complete = function () {
            this.hasCompleted = true;
            if (this.hasNext) {
                _super.prototype.next.call(this, this.value);
            }
            _super.prototype.complete.call(this);
        };
        return AsyncSubject;
    }(Subject));

    var nextHandle = 1;
    var RESOLVED = (function () { return Promise.resolve(); })();
    var activeHandles = {};
    function findAndClearHandle(handle) {
        if (handle in activeHandles) {
            delete activeHandles[handle];
            return true;
        }
        return false;
    }
    var Immediate = {
        setImmediate: function (cb) {
            var handle = nextHandle++;
            activeHandles[handle] = true;
            RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
            return handle;
        },
        clearImmediate: function (handle) {
            findAndClearHandle(handle);
        },
    };

    var AsapAction = (function (_super) {
        __extends(AsapAction, _super);
        function AsapAction(scheduler, work) {
            var _this = _super.call(this, scheduler, work) || this;
            _this.scheduler = scheduler;
            _this.work = work;
            return _this;
        }
        AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            if (delay !== null && delay > 0) {
                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
            }
            scheduler.actions.push(this);
            return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
        };
        AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
                return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
            }
            if (scheduler.actions.length === 0) {
                Immediate.clearImmediate(id);
                scheduler.scheduled = undefined;
            }
            return undefined;
        };
        return AsapAction;
    }(AsyncAction));

    var AsapScheduler = (function (_super) {
        __extends(AsapScheduler, _super);
        function AsapScheduler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        AsapScheduler.prototype.flush = function (action) {
            this.active = true;
            this.scheduled = undefined;
            var actions = this.actions;
            var error;
            var index = -1;
            var count = actions.length;
            action = action || actions.shift();
            do {
                if (error = action.execute(action.state, action.delay)) {
                    break;
                }
            } while (++index < count && (action = actions.shift()));
            this.active = false;
            if (error) {
                while (++index < count && (action = actions.shift())) {
                    action.unsubscribe();
                }
                throw error;
            }
        };
        return AsapScheduler;
    }(AsyncScheduler));

    var asap = new AsapScheduler(AsapAction);

    var async = new AsyncScheduler(AsyncAction);

    var AnimationFrameAction = (function (_super) {
        __extends(AnimationFrameAction, _super);
        function AnimationFrameAction(scheduler, work) {
            var _this = _super.call(this, scheduler, work) || this;
            _this.scheduler = scheduler;
            _this.work = work;
            return _this;
        }
        AnimationFrameAction.prototype.requestAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            if (delay !== null && delay > 0) {
                return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
            }
            scheduler.actions.push(this);
            return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(function () { return scheduler.flush(null); }));
        };
        AnimationFrameAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
                return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
            }
            if (scheduler.actions.length === 0) {
                cancelAnimationFrame(id);
                scheduler.scheduled = undefined;
            }
            return undefined;
        };
        return AnimationFrameAction;
    }(AsyncAction));

    var AnimationFrameScheduler = (function (_super) {
        __extends(AnimationFrameScheduler, _super);
        function AnimationFrameScheduler() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        AnimationFrameScheduler.prototype.flush = function (action) {
            this.active = true;
            this.scheduled = undefined;
            var actions = this.actions;
            var error;
            var index = -1;
            var count = actions.length;
            action = action || actions.shift();
            do {
                if (error = action.execute(action.state, action.delay)) {
                    break;
                }
            } while (++index < count && (action = actions.shift()));
            this.active = false;
            if (error) {
                while (++index < count && (action = actions.shift())) {
                    action.unsubscribe();
                }
                throw error;
            }
        };
        return AnimationFrameScheduler;
    }(AsyncScheduler));

    var animationFrame = new AnimationFrameScheduler(AnimationFrameAction);

    var VirtualTimeScheduler = (function (_super) {
        __extends(VirtualTimeScheduler, _super);
        function VirtualTimeScheduler(SchedulerAction, maxFrames) {
            if (SchedulerAction === void 0) { SchedulerAction = VirtualAction; }
            if (maxFrames === void 0) { maxFrames = Number.POSITIVE_INFINITY; }
            var _this = _super.call(this, SchedulerAction, function () { return _this.frame; }) || this;
            _this.maxFrames = maxFrames;
            _this.frame = 0;
            _this.index = -1;
            return _this;
        }
        VirtualTimeScheduler.prototype.flush = function () {
            var _a = this, actions = _a.actions, maxFrames = _a.maxFrames;
            var error, action;
            while ((action = actions[0]) && action.delay <= maxFrames) {
                actions.shift();
                this.frame = action.delay;
                if (error = action.execute(action.state, action.delay)) {
                    break;
                }
            }
            if (error) {
                while (action = actions.shift()) {
                    action.unsubscribe();
                }
                throw error;
            }
        };
        VirtualTimeScheduler.frameTimeFactor = 10;
        return VirtualTimeScheduler;
    }(AsyncScheduler));
    var VirtualAction = (function (_super) {
        __extends(VirtualAction, _super);
        function VirtualAction(scheduler, work, index) {
            if (index === void 0) { index = scheduler.index += 1; }
            var _this = _super.call(this, scheduler, work) || this;
            _this.scheduler = scheduler;
            _this.work = work;
            _this.index = index;
            _this.active = true;
            _this.index = scheduler.index = index;
            return _this;
        }
        VirtualAction.prototype.schedule = function (state, delay) {
            if (delay === void 0) { delay = 0; }
            if (!this.id) {
                return _super.prototype.schedule.call(this, state, delay);
            }
            this.active = false;
            var action = new VirtualAction(this.scheduler, this.work);
            this.add(action);
            return action.schedule(state, delay);
        };
        VirtualAction.prototype.requestAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            this.delay = scheduler.frame + delay;
            var actions = scheduler.actions;
            actions.push(this);
            actions.sort(VirtualAction.sortActions);
            return true;
        };
        VirtualAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
            if (delay === void 0) { delay = 0; }
            return undefined;
        };
        VirtualAction.prototype._execute = function (state, delay) {
            if (this.active === true) {
                return _super.prototype._execute.call(this, state, delay);
            }
        };
        VirtualAction.sortActions = function (a, b) {
            if (a.delay === b.delay) {
                if (a.index === b.index) {
                    return 0;
                }
                else if (a.index > b.index) {
                    return 1;
                }
                else {
                    return -1;
                }
            }
            else if (a.delay > b.delay) {
                return 1;
            }
            else {
                return -1;
            }
        };
        return VirtualAction;
    }(AsyncAction));

    function noop() { }

    function isObservable(obj) {
        return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));
    }

    var ArgumentOutOfRangeErrorImpl = (function () {
        function ArgumentOutOfRangeErrorImpl() {
            Error.call(this);
            this.message = 'argument out of range';
            this.name = 'ArgumentOutOfRangeError';
            return this;
        }
        ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);
        return ArgumentOutOfRangeErrorImpl;
    })();
    var ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;

    var EmptyErrorImpl = (function () {
        function EmptyErrorImpl() {
            Error.call(this);
            this.message = 'no elements in sequence';
            this.name = 'EmptyError';
            return this;
        }
        EmptyErrorImpl.prototype = Object.create(Error.prototype);
        return EmptyErrorImpl;
    })();
    var EmptyError = EmptyErrorImpl;

    var TimeoutErrorImpl = (function () {
        function TimeoutErrorImpl() {
            Error.call(this);
            this.message = 'Timeout has occurred';
            this.name = 'TimeoutError';
            return this;
        }
        TimeoutErrorImpl.prototype = Object.create(Error.prototype);
        return TimeoutErrorImpl;
    })();
    var TimeoutError = TimeoutErrorImpl;

    function map(project, thisArg) {
        return function mapOperation(source) {
            if (typeof project !== 'function') {
                throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
            }
            return source.lift(new MapOperator(project, thisArg));
        };
    }
    var MapOperator = (function () {
        function MapOperator(project, thisArg) {
            this.project = project;
            this.thisArg = thisArg;
        }
        MapOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
        };
        return MapOperator;
    }());
    var MapSubscriber = (function (_super) {
        __extends(MapSubscriber, _super);
        function MapSubscriber(destination, project, thisArg) {
            var _this = _super.call(this, destination) || this;
            _this.project = project;
            _this.count = 0;
            _this.thisArg = thisArg || _this;
            return _this;
        }
        MapSubscriber.prototype._next = function (value) {
            var result;
            try {
                result = this.project.call(this.thisArg, value, this.count++);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.destination.next(result);
        };
        return MapSubscriber;
    }(Subscriber));

    function bindCallback(callbackFunc, resultSelector, scheduler) {
        if (resultSelector) {
            if (isScheduler(resultSelector)) {
                scheduler = resultSelector;
            }
            else {
                return function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    return bindCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
                };
            }
        }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var context = this;
            var subject;
            var params = {
                context: context,
                subject: subject,
                callbackFunc: callbackFunc,
                scheduler: scheduler,
            };
            return new Observable(function (subscriber) {
                if (!scheduler) {
                    if (!subject) {
                        subject = new AsyncSubject();
                        var handler = function () {
                            var innerArgs = [];
                            for (var _i = 0; _i < arguments.length; _i++) {
                                innerArgs[_i] = arguments[_i];
                            }
                            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                            subject.complete();
                        };
                        try {
                            callbackFunc.apply(context, args.concat([handler]));
                        }
                        catch (err) {
                            if (canReportError(subject)) {
                                subject.error(err);
                            }
                            else {
                                console.warn(err);
                            }
                        }
                    }
                    return subject.subscribe(subscriber);
                }
                else {
                    var state = {
                        args: args, subscriber: subscriber, params: params,
                    };
                    return scheduler.schedule(dispatch$1, 0, state);
                }
            });
        };
    }
    function dispatch$1(state) {
        var _this = this;
        var args = state.args, subscriber = state.subscriber, params = state.params;
        var callbackFunc = params.callbackFunc, context = params.context, scheduler = params.scheduler;
        var subject = params.subject;
        if (!subject) {
            subject = params.subject = new AsyncSubject();
            var handler = function () {
                var innerArgs = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    innerArgs[_i] = arguments[_i];
                }
                var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                _this.add(scheduler.schedule(dispatchNext, 0, { value: value, subject: subject }));
            };
            try {
                callbackFunc.apply(context, args.concat([handler]));
            }
            catch (err) {
                subject.error(err);
            }
        }
        this.add(subject.subscribe(subscriber));
    }
    function dispatchNext(state) {
        var value = state.value, subject = state.subject;
        subject.next(value);
        subject.complete();
    }

    function bindNodeCallback(callbackFunc, resultSelector, scheduler) {
        if (resultSelector) {
            if (isScheduler(resultSelector)) {
                scheduler = resultSelector;
            }
            else {
                return function () {
                    var args = [];
                    for (var _i = 0; _i < arguments.length; _i++) {
                        args[_i] = arguments[_i];
                    }
                    return bindNodeCallback(callbackFunc, scheduler).apply(void 0, args).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
                };
            }
        }
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var params = {
                subject: undefined,
                args: args,
                callbackFunc: callbackFunc,
                scheduler: scheduler,
                context: this,
            };
            return new Observable(function (subscriber) {
                var context = params.context;
                var subject = params.subject;
                if (!scheduler) {
                    if (!subject) {
                        subject = params.subject = new AsyncSubject();
                        var handler = function () {
                            var innerArgs = [];
                            for (var _i = 0; _i < arguments.length; _i++) {
                                innerArgs[_i] = arguments[_i];
                            }
                            var err = innerArgs.shift();
                            if (err) {
                                subject.error(err);
                                return;
                            }
                            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);
                            subject.complete();
                        };
                        try {
                            callbackFunc.apply(context, args.concat([handler]));
                        }
                        catch (err) {
                            if (canReportError(subject)) {
                                subject.error(err);
                            }
                            else {
                                console.warn(err);
                            }
                        }
                    }
                    return subject.subscribe(subscriber);
                }
                else {
                    return scheduler.schedule(dispatch$2, 0, { params: params, subscriber: subscriber, context: context });
                }
            });
        };
    }
    function dispatch$2(state) {
        var _this = this;
        var params = state.params, subscriber = state.subscriber, context = state.context;
        var callbackFunc = params.callbackFunc, args = params.args, scheduler = params.scheduler;
        var subject = params.subject;
        if (!subject) {
            subject = params.subject = new AsyncSubject();
            var handler = function () {
                var innerArgs = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    innerArgs[_i] = arguments[_i];
                }
                var err = innerArgs.shift();
                if (err) {
                    _this.add(scheduler.schedule(dispatchError$1, 0, { err: err, subject: subject }));
                }
                else {
                    var value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;
                    _this.add(scheduler.schedule(dispatchNext$1, 0, { value: value, subject: subject }));
                }
            };
            try {
                callbackFunc.apply(context, args.concat([handler]));
            }
            catch (err) {
                this.add(scheduler.schedule(dispatchError$1, 0, { err: err, subject: subject }));
            }
        }
        this.add(subject.subscribe(subscriber));
    }
    function dispatchNext$1(arg) {
        var value = arg.value, subject = arg.subject;
        subject.next(value);
        subject.complete();
    }
    function dispatchError$1(arg) {
        var err = arg.err, subject = arg.subject;
        subject.error(err);
    }

    var OuterSubscriber = (function (_super) {
        __extends(OuterSubscriber, _super);
        function OuterSubscriber() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.destination.next(innerValue);
        };
        OuterSubscriber.prototype.notifyError = function (error, innerSub) {
            this.destination.error(error);
        };
        OuterSubscriber.prototype.notifyComplete = function (innerSub) {
            this.destination.complete();
        };
        return OuterSubscriber;
    }(Subscriber));

    var InnerSubscriber = (function (_super) {
        __extends(InnerSubscriber, _super);
        function InnerSubscriber(parent, outerValue, outerIndex) {
            var _this = _super.call(this) || this;
            _this.parent = parent;
            _this.outerValue = outerValue;
            _this.outerIndex = outerIndex;
            _this.index = 0;
            return _this;
        }
        InnerSubscriber.prototype._next = function (value) {
            this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
        };
        InnerSubscriber.prototype._error = function (error) {
            this.parent.notifyError(error, this);
            this.unsubscribe();
        };
        InnerSubscriber.prototype._complete = function () {
            this.parent.notifyComplete(this);
            this.unsubscribe();
        };
        return InnerSubscriber;
    }(Subscriber));

    var subscribeToPromise = function (promise) { return function (subscriber) {
        promise.then(function (value) {
            if (!subscriber.closed) {
                subscriber.next(value);
                subscriber.complete();
            }
        }, function (err) { return subscriber.error(err); })
            .then(null, hostReportError);
        return subscriber;
    }; };

    function getSymbolIterator() {
        if (typeof Symbol !== 'function' || !Symbol.iterator) {
            return '@@iterator';
        }
        return Symbol.iterator;
    }
    var iterator = getSymbolIterator();

    var subscribeToIterable = function (iterable) { return function (subscriber) {
        var iterator$$1 = iterable[iterator]();
        do {
            var item = iterator$$1.next();
            if (item.done) {
                subscriber.complete();
                break;
            }
            subscriber.next(item.value);
            if (subscriber.closed) {
                break;
            }
        } while (true);
        if (typeof iterator$$1.return === 'function') {
            subscriber.add(function () {
                if (iterator$$1.return) {
                    iterator$$1.return();
                }
            });
        }
        return subscriber;
    }; };

    var subscribeToObservable = function (obj) { return function (subscriber) {
        var obs = obj[observable]();
        if (typeof obs.subscribe !== 'function') {
            throw new TypeError('Provided object does not correctly implement Symbol.observable');
        }
        else {
            return obs.subscribe(subscriber);
        }
    }; };

    var isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });

    function isPromise(value) {
        return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
    }

    var subscribeTo = function (result) {
        if (!!result && typeof result[observable] === 'function') {
            return subscribeToObservable(result);
        }
        else if (isArrayLike(result)) {
            return subscribeToArray(result);
        }
        else if (isPromise(result)) {
            return subscribeToPromise(result);
        }
        else if (!!result && typeof result[iterator] === 'function') {
            return subscribeToIterable(result);
        }
        else {
            var value = isObject(result) ? 'an invalid object' : "'" + result + "'";
            var msg = "You provided " + value + " where a stream was expected."
                + ' You can provide an Observable, Promise, Array, or Iterable.';
            throw new TypeError(msg);
        }
    };

    function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
        if (innerSubscriber === void 0) { innerSubscriber = new InnerSubscriber(outerSubscriber, outerValue, outerIndex); }
        if (innerSubscriber.closed) {
            return undefined;
        }
        if (result instanceof Observable) {
            return result.subscribe(innerSubscriber);
        }
        return subscribeTo(result)(innerSubscriber);
    }

    var NONE = {};
    function combineLatest() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        var resultSelector = null;
        var scheduler = null;
        if (isScheduler(observables[observables.length - 1])) {
            scheduler = observables.pop();
        }
        if (typeof observables[observables.length - 1] === 'function') {
            resultSelector = observables.pop();
        }
        if (observables.length === 1 && isArray(observables[0])) {
            observables = observables[0];
        }
        return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
    }
    var CombineLatestOperator = (function () {
        function CombineLatestOperator(resultSelector) {
            this.resultSelector = resultSelector;
        }
        CombineLatestOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
        };
        return CombineLatestOperator;
    }());
    var CombineLatestSubscriber = (function (_super) {
        __extends(CombineLatestSubscriber, _super);
        function CombineLatestSubscriber(destination, resultSelector) {
            var _this = _super.call(this, destination) || this;
            _this.resultSelector = resultSelector;
            _this.active = 0;
            _this.values = [];
            _this.observables = [];
            return _this;
        }
        CombineLatestSubscriber.prototype._next = function (observable) {
            this.values.push(NONE);
            this.observables.push(observable);
        };
        CombineLatestSubscriber.prototype._complete = function () {
            var observables = this.observables;
            var len = observables.length;
            if (len === 0) {
                this.destination.complete();
            }
            else {
                this.active = len;
                this.toRespond = len;
                for (var i = 0; i < len; i++) {
                    var observable = observables[i];
                    this.add(subscribeToResult(this, observable, observable, i));
                }
            }
        };
        CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
            if ((this.active -= 1) === 0) {
                this.destination.complete();
            }
        };
        CombineLatestSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            var values = this.values;
            var oldVal = values[outerIndex];
            var toRespond = !this.toRespond
                ? 0
                : oldVal === NONE ? --this.toRespond : this.toRespond;
            values[outerIndex] = innerValue;
            if (toRespond === 0) {
                if (this.resultSelector) {
                    this._tryResultSelector(values);
                }
                else {
                    this.destination.next(values.slice());
                }
            }
        };
        CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
            var result;
            try {
                result = this.resultSelector.apply(this, values);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.destination.next(result);
        };
        return CombineLatestSubscriber;
    }(OuterSubscriber));

    function scheduleObservable(input, scheduler) {
        return new Observable(function (subscriber) {
            var sub = new Subscription();
            sub.add(scheduler.schedule(function () {
                var observable$$1 = input[observable]();
                sub.add(observable$$1.subscribe({
                    next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                    error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                    complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
                }));
            }));
            return sub;
        });
    }

    function schedulePromise(input, scheduler) {
        return new Observable(function (subscriber) {
            var sub = new Subscription();
            sub.add(scheduler.schedule(function () { return input.then(function (value) {
                sub.add(scheduler.schedule(function () {
                    subscriber.next(value);
                    sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
                }));
            }, function (err) {
                sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
            }); }));
            return sub;
        });
    }

    function scheduleIterable(input, scheduler) {
        if (!input) {
            throw new Error('Iterable cannot be null');
        }
        return new Observable(function (subscriber) {
            var sub = new Subscription();
            var iterator$$1;
            sub.add(function () {
                if (iterator$$1 && typeof iterator$$1.return === 'function') {
                    iterator$$1.return();
                }
            });
            sub.add(scheduler.schedule(function () {
                iterator$$1 = input[iterator]();
                sub.add(scheduler.schedule(function () {
                    if (subscriber.closed) {
                        return;
                    }
                    var value;
                    var done;
                    try {
                        var result = iterator$$1.next();
                        value = result.value;
                        done = result.done;
                    }
                    catch (err) {
                        subscriber.error(err);
                        return;
                    }
                    if (done) {
                        subscriber.complete();
                    }
                    else {
                        subscriber.next(value);
                        this.schedule();
                    }
                }));
            }));
            return sub;
        });
    }

    function isInteropObservable(input) {
        return input && typeof input[observable] === 'function';
    }

    function isIterable(input) {
        return input && typeof input[iterator] === 'function';
    }

    function scheduled(input, scheduler) {
        if (input != null) {
            if (isInteropObservable(input)) {
                return scheduleObservable(input, scheduler);
            }
            else if (isPromise(input)) {
                return schedulePromise(input, scheduler);
            }
            else if (isArrayLike(input)) {
                return scheduleArray(input, scheduler);
            }
            else if (isIterable(input) || typeof input === 'string') {
                return scheduleIterable(input, scheduler);
            }
        }
        throw new TypeError((input !== null && typeof input || input) + ' is not observable');
    }

    function from(input, scheduler) {
        if (!scheduler) {
            if (input instanceof Observable) {
                return input;
            }
            return new Observable(subscribeTo(input));
        }
        else {
            return scheduled(input, scheduler);
        }
    }

    function mergeMap(project, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        if (typeof resultSelector === 'function') {
            return function (source) { return source.pipe(mergeMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
        }
        else if (typeof resultSelector === 'number') {
            concurrent = resultSelector;
        }
        return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
    }
    var MergeMapOperator = (function () {
        function MergeMapOperator(project, concurrent) {
            if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
            this.project = project;
            this.concurrent = concurrent;
        }
        MergeMapOperator.prototype.call = function (observer, source) {
            return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
        };
        return MergeMapOperator;
    }());
    var MergeMapSubscriber = (function (_super) {
        __extends(MergeMapSubscriber, _super);
        function MergeMapSubscriber(destination, project, concurrent) {
            if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
            var _this = _super.call(this, destination) || this;
            _this.project = project;
            _this.concurrent = concurrent;
            _this.hasCompleted = false;
            _this.buffer = [];
            _this.active = 0;
            _this.index = 0;
            return _this;
        }
        MergeMapSubscriber.prototype._next = function (value) {
            if (this.active < this.concurrent) {
                this._tryNext(value);
            }
            else {
                this.buffer.push(value);
            }
        };
        MergeMapSubscriber.prototype._tryNext = function (value) {
            var result;
            var index = this.index++;
            try {
                result = this.project(value, index);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.active++;
            this._innerSub(result, value, index);
        };
        MergeMapSubscriber.prototype._innerSub = function (ish, value, index) {
            var innerSubscriber = new InnerSubscriber(this, value, index);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = subscribeToResult(this, ish, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        };
        MergeMapSubscriber.prototype._complete = function () {
            this.hasCompleted = true;
            if (this.active === 0 && this.buffer.length === 0) {
                this.destination.complete();
            }
            this.unsubscribe();
        };
        MergeMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.destination.next(innerValue);
        };
        MergeMapSubscriber.prototype.notifyComplete = function (innerSub) {
            var buffer = this.buffer;
            this.remove(innerSub);
            this.active--;
            if (buffer.length > 0) {
                this._next(buffer.shift());
            }
            else if (this.active === 0 && this.hasCompleted) {
                this.destination.complete();
            }
        };
        return MergeMapSubscriber;
    }(OuterSubscriber));

    function mergeAll(concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        return mergeMap(identity, concurrent);
    }

    function concatAll() {
        return mergeAll(1);
    }

    function concat() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        return concatAll()(of.apply(void 0, observables));
    }

    function defer(observableFactory) {
        return new Observable(function (subscriber) {
            var input;
            try {
                input = observableFactory();
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            var source = input ? from(input) : empty$1();
            return source.subscribe(subscriber);
        });
    }

    function forkJoin() {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i] = arguments[_i];
        }
        if (sources.length === 1) {
            var first_1 = sources[0];
            if (isArray(first_1)) {
                return forkJoinInternal(first_1, null);
            }
            if (isObject(first_1) && Object.getPrototypeOf(first_1) === Object.prototype) {
                var keys = Object.keys(first_1);
                return forkJoinInternal(keys.map(function (key) { return first_1[key]; }), keys);
            }
        }
        if (typeof sources[sources.length - 1] === 'function') {
            var resultSelector_1 = sources.pop();
            sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;
            return forkJoinInternal(sources, null).pipe(map(function (args) { return resultSelector_1.apply(void 0, args); }));
        }
        return forkJoinInternal(sources, null);
    }
    function forkJoinInternal(sources, keys) {
        return new Observable(function (subscriber) {
            var len = sources.length;
            if (len === 0) {
                subscriber.complete();
                return;
            }
            var values = new Array(len);
            var completed = 0;
            var emitted = 0;
            var _loop_1 = function (i) {
                var source = from(sources[i]);
                var hasValue = false;
                subscriber.add(source.subscribe({
                    next: function (value) {
                        if (!hasValue) {
                            hasValue = true;
                            emitted++;
                        }
                        values[i] = value;
                    },
                    error: function (err) { return subscriber.error(err); },
                    complete: function () {
                        completed++;
                        if (completed === len || !hasValue) {
                            if (emitted === len) {
                                subscriber.next(keys ?
                                    keys.reduce(function (result, key, i) { return (result[key] = values[i], result); }, {}) :
                                    values);
                            }
                            subscriber.complete();
                        }
                    }
                }));
            };
            for (var i = 0; i < len; i++) {
                _loop_1(i);
            }
        });
    }

    function fromEvent(target, eventName, options, resultSelector) {
        if (isFunction(options)) {
            resultSelector = options;
            options = undefined;
        }
        if (resultSelector) {
            return fromEvent(target, eventName, options).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
        }
        return new Observable(function (subscriber) {
            function handler(e) {
                if (arguments.length > 1) {
                    subscriber.next(Array.prototype.slice.call(arguments));
                }
                else {
                    subscriber.next(e);
                }
            }
            setupSubscription(target, eventName, handler, subscriber, options);
        });
    }
    function setupSubscription(sourceObj, eventName, handler, subscriber, options) {
        var unsubscribe;
        if (isEventTarget(sourceObj)) {
            var source_1 = sourceObj;
            sourceObj.addEventListener(eventName, handler, options);
            unsubscribe = function () { return source_1.removeEventListener(eventName, handler, options); };
        }
        else if (isJQueryStyleEventEmitter(sourceObj)) {
            var source_2 = sourceObj;
            sourceObj.on(eventName, handler);
            unsubscribe = function () { return source_2.off(eventName, handler); };
        }
        else if (isNodeStyleEventEmitter(sourceObj)) {
            var source_3 = sourceObj;
            sourceObj.addListener(eventName, handler);
            unsubscribe = function () { return source_3.removeListener(eventName, handler); };
        }
        else if (sourceObj && sourceObj.length) {
            for (var i = 0, len = sourceObj.length; i < len; i++) {
                setupSubscription(sourceObj[i], eventName, handler, subscriber, options);
            }
        }
        else {
            throw new TypeError('Invalid event target');
        }
        subscriber.add(unsubscribe);
    }
    function isNodeStyleEventEmitter(sourceObj) {
        return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';
    }
    function isJQueryStyleEventEmitter(sourceObj) {
        return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';
    }
    function isEventTarget(sourceObj) {
        return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';
    }

    function fromEventPattern(addHandler, removeHandler, resultSelector) {
        if (resultSelector) {
            return fromEventPattern(addHandler, removeHandler).pipe(map(function (args) { return isArray(args) ? resultSelector.apply(void 0, args) : resultSelector(args); }));
        }
        return new Observable(function (subscriber) {
            var handler = function () {
                var e = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    e[_i] = arguments[_i];
                }
                return subscriber.next(e.length === 1 ? e[0] : e);
            };
            var retValue;
            try {
                retValue = addHandler(handler);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            if (!isFunction(removeHandler)) {
                return undefined;
            }
            return function () { return removeHandler(handler, retValue); };
        });
    }

    function generate(initialStateOrOptions, condition, iterate, resultSelectorOrObservable, scheduler) {
        var resultSelector;
        var initialState;
        if (arguments.length == 1) {
            var options = initialStateOrOptions;
            initialState = options.initialState;
            condition = options.condition;
            iterate = options.iterate;
            resultSelector = options.resultSelector || identity;
            scheduler = options.scheduler;
        }
        else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {
            initialState = initialStateOrOptions;
            resultSelector = identity;
            scheduler = resultSelectorOrObservable;
        }
        else {
            initialState = initialStateOrOptions;
            resultSelector = resultSelectorOrObservable;
        }
        return new Observable(function (subscriber) {
            var state = initialState;
            if (scheduler) {
                return scheduler.schedule(dispatch$3, 0, {
                    subscriber: subscriber,
                    iterate: iterate,
                    condition: condition,
                    resultSelector: resultSelector,
                    state: state
                });
            }
            do {
                if (condition) {
                    var conditionResult = void 0;
                    try {
                        conditionResult = condition(state);
                    }
                    catch (err) {
                        subscriber.error(err);
                        return undefined;
                    }
                    if (!conditionResult) {
                        subscriber.complete();
                        break;
                    }
                }
                var value = void 0;
                try {
                    value = resultSelector(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return undefined;
                }
                subscriber.next(value);
                if (subscriber.closed) {
                    break;
                }
                try {
                    state = iterate(state);
                }
                catch (err) {
                    subscriber.error(err);
                    return undefined;
                }
            } while (true);
            return undefined;
        });
    }
    function dispatch$3(state) {
        var subscriber = state.subscriber, condition = state.condition;
        if (subscriber.closed) {
            return undefined;
        }
        if (state.needIterate) {
            try {
                state.state = state.iterate(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
        }
        else {
            state.needIterate = true;
        }
        if (condition) {
            var conditionResult = void 0;
            try {
                conditionResult = condition(state.state);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            if (!conditionResult) {
                subscriber.complete();
                return undefined;
            }
            if (subscriber.closed) {
                return undefined;
            }
        }
        var value;
        try {
            value = state.resultSelector(state.state);
        }
        catch (err) {
            subscriber.error(err);
            return undefined;
        }
        if (subscriber.closed) {
            return undefined;
        }
        subscriber.next(value);
        if (subscriber.closed) {
            return undefined;
        }
        return this.schedule(state);
    }

    function iif(condition, trueResult, falseResult) {
        if (trueResult === void 0) { trueResult = EMPTY; }
        if (falseResult === void 0) { falseResult = EMPTY; }
        return defer(function () { return condition() ? trueResult : falseResult; });
    }

    function isNumeric(val) {
        return !isArray(val) && (val - parseFloat(val) + 1) >= 0;
    }

    function interval(period, scheduler) {
        if (period === void 0) { period = 0; }
        if (scheduler === void 0) { scheduler = async; }
        if (!isNumeric(period) || period < 0) {
            period = 0;
        }
        if (!scheduler || typeof scheduler.schedule !== 'function') {
            scheduler = async;
        }
        return new Observable(function (subscriber) {
            subscriber.add(scheduler.schedule(dispatch$4, period, { subscriber: subscriber, counter: 0, period: period }));
            return subscriber;
        });
    }
    function dispatch$4(state) {
        var subscriber = state.subscriber, counter = state.counter, period = state.period;
        subscriber.next(counter);
        this.schedule({ subscriber: subscriber, counter: counter + 1, period: period }, period);
    }

    function merge() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        var concurrent = Number.POSITIVE_INFINITY;
        var scheduler = null;
        var last = observables[observables.length - 1];
        if (isScheduler(last)) {
            scheduler = observables.pop();
            if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
                concurrent = observables.pop();
            }
        }
        else if (typeof last === 'number') {
            concurrent = observables.pop();
        }
        if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {
            return observables[0];
        }
        return mergeAll(concurrent)(fromArray(observables, scheduler));
    }

    var NEVER = new Observable(noop);
    function never() {
        return NEVER;
    }

    function onErrorResumeNext() {
        var sources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            sources[_i] = arguments[_i];
        }
        if (sources.length === 0) {
            return EMPTY;
        }
        var first = sources[0], remainder = sources.slice(1);
        if (sources.length === 1 && isArray(first)) {
            return onErrorResumeNext.apply(void 0, first);
        }
        return new Observable(function (subscriber) {
            var subNext = function () { return subscriber.add(onErrorResumeNext.apply(void 0, remainder).subscribe(subscriber)); };
            return from(first).subscribe({
                next: function (value) { subscriber.next(value); },
                error: subNext,
                complete: subNext,
            });
        });
    }

    function pairs(obj, scheduler) {
        if (!scheduler) {
            return new Observable(function (subscriber) {
                var keys = Object.keys(obj);
                for (var i = 0; i < keys.length && !subscriber.closed; i++) {
                    var key = keys[i];
                    if (obj.hasOwnProperty(key)) {
                        subscriber.next([key, obj[key]]);
                    }
                }
                subscriber.complete();
            });
        }
        else {
            return new Observable(function (subscriber) {
                var keys = Object.keys(obj);
                var subscription = new Subscription();
                subscription.add(scheduler.schedule(dispatch$5, 0, { keys: keys, index: 0, subscriber: subscriber, subscription: subscription, obj: obj }));
                return subscription;
            });
        }
    }
    function dispatch$5(state) {
        var keys = state.keys, index = state.index, subscriber = state.subscriber, subscription = state.subscription, obj = state.obj;
        if (!subscriber.closed) {
            if (index < keys.length) {
                var key = keys[index];
                subscriber.next([key, obj[key]]);
                subscription.add(this.schedule({ keys: keys, index: index + 1, subscriber: subscriber, subscription: subscription, obj: obj }));
            }
            else {
                subscriber.complete();
            }
        }
    }

    function not(pred, thisArg) {
        function notPred() {
            return !(notPred.pred.apply(notPred.thisArg, arguments));
        }
        notPred.pred = pred;
        notPred.thisArg = thisArg;
        return notPred;
    }

    function filter(predicate, thisArg) {
        return function filterOperatorFunction(source) {
            return source.lift(new FilterOperator(predicate, thisArg));
        };
    }
    var FilterOperator = (function () {
        function FilterOperator(predicate, thisArg) {
            this.predicate = predicate;
            this.thisArg = thisArg;
        }
        FilterOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
        };
        return FilterOperator;
    }());
    var FilterSubscriber = (function (_super) {
        __extends(FilterSubscriber, _super);
        function FilterSubscriber(destination, predicate, thisArg) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.thisArg = thisArg;
            _this.count = 0;
            return _this;
        }
        FilterSubscriber.prototype._next = function (value) {
            var result;
            try {
                result = this.predicate.call(this.thisArg, value, this.count++);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            if (result) {
                this.destination.next(value);
            }
        };
        return FilterSubscriber;
    }(Subscriber));

    function partition(source, predicate, thisArg) {
        return [
            filter(predicate, thisArg)(new Observable(subscribeTo(source))),
            filter(not(predicate, thisArg))(new Observable(subscribeTo(source)))
        ];
    }

    function race() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        if (observables.length === 1) {
            if (isArray(observables[0])) {
                observables = observables[0];
            }
            else {
                return observables[0];
            }
        }
        return fromArray(observables, undefined).lift(new RaceOperator());
    }
    var RaceOperator = (function () {
        function RaceOperator() {
        }
        RaceOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new RaceSubscriber(subscriber));
        };
        return RaceOperator;
    }());
    var RaceSubscriber = (function (_super) {
        __extends(RaceSubscriber, _super);
        function RaceSubscriber(destination) {
            var _this = _super.call(this, destination) || this;
            _this.hasFirst = false;
            _this.observables = [];
            _this.subscriptions = [];
            return _this;
        }
        RaceSubscriber.prototype._next = function (observable) {
            this.observables.push(observable);
        };
        RaceSubscriber.prototype._complete = function () {
            var observables = this.observables;
            var len = observables.length;
            if (len === 0) {
                this.destination.complete();
            }
            else {
                for (var i = 0; i < len && !this.hasFirst; i++) {
                    var observable = observables[i];
                    var subscription = subscribeToResult(this, observable, observable, i);
                    if (this.subscriptions) {
                        this.subscriptions.push(subscription);
                    }
                    this.add(subscription);
                }
                this.observables = null;
            }
        };
        RaceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            if (!this.hasFirst) {
                this.hasFirst = true;
                for (var i = 0; i < this.subscriptions.length; i++) {
                    if (i !== outerIndex) {
                        var subscription = this.subscriptions[i];
                        subscription.unsubscribe();
                        this.remove(subscription);
                    }
                }
                this.subscriptions = null;
            }
            this.destination.next(innerValue);
        };
        return RaceSubscriber;
    }(OuterSubscriber));

    function range(start, count, scheduler) {
        if (start === void 0) { start = 0; }
        return new Observable(function (subscriber) {
            if (count === undefined) {
                count = start;
                start = 0;
            }
            var index = 0;
            var current = start;
            if (scheduler) {
                return scheduler.schedule(dispatch$6, 0, {
                    index: index, count: count, start: start, subscriber: subscriber
                });
            }
            else {
                do {
                    if (index++ >= count) {
                        subscriber.complete();
                        break;
                    }
                    subscriber.next(current++);
                    if (subscriber.closed) {
                        break;
                    }
                } while (true);
            }
            return undefined;
        });
    }
    function dispatch$6(state) {
        var start = state.start, index = state.index, count = state.count, subscriber = state.subscriber;
        if (index >= count) {
            subscriber.complete();
            return;
        }
        subscriber.next(start);
        if (subscriber.closed) {
            return;
        }
        state.index = index + 1;
        state.start = start + 1;
        this.schedule(state);
    }

    function timer(dueTime, periodOrScheduler, scheduler) {
        if (dueTime === void 0) { dueTime = 0; }
        var period = -1;
        if (isNumeric(periodOrScheduler)) {
            period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
        }
        else if (isScheduler(periodOrScheduler)) {
            scheduler = periodOrScheduler;
        }
        if (!isScheduler(scheduler)) {
            scheduler = async;
        }
        return new Observable(function (subscriber) {
            var due = isNumeric(dueTime)
                ? dueTime
                : (+dueTime - scheduler.now());
            return scheduler.schedule(dispatch$7, due, {
                index: 0, period: period, subscriber: subscriber
            });
        });
    }
    function dispatch$7(state) {
        var index = state.index, period = state.period, subscriber = state.subscriber;
        subscriber.next(index);
        if (subscriber.closed) {
            return;
        }
        else if (period === -1) {
            return subscriber.complete();
        }
        state.index = index + 1;
        this.schedule(state, period);
    }

    function using(resourceFactory, observableFactory) {
        return new Observable(function (subscriber) {
            var resource;
            try {
                resource = resourceFactory();
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            var result;
            try {
                result = observableFactory(resource);
            }
            catch (err) {
                subscriber.error(err);
                return undefined;
            }
            var source = result ? from(result) : EMPTY;
            var subscription = source.subscribe(subscriber);
            return function () {
                subscription.unsubscribe();
                if (resource) {
                    resource.unsubscribe();
                }
            };
        });
    }

    function zip() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        var resultSelector = observables[observables.length - 1];
        if (typeof resultSelector === 'function') {
            observables.pop();
        }
        return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));
    }
    var ZipOperator = (function () {
        function ZipOperator(resultSelector) {
            this.resultSelector = resultSelector;
        }
        ZipOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
        };
        return ZipOperator;
    }());
    var ZipSubscriber = (function (_super) {
        __extends(ZipSubscriber, _super);
        function ZipSubscriber(destination, resultSelector, values) {
            if (values === void 0) { values = Object.create(null); }
            var _this = _super.call(this, destination) || this;
            _this.iterators = [];
            _this.active = 0;
            _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : null;
            _this.values = values;
            return _this;
        }
        ZipSubscriber.prototype._next = function (value) {
            var iterators = this.iterators;
            if (isArray(value)) {
                iterators.push(new StaticArrayIterator(value));
            }
            else if (typeof value[iterator] === 'function') {
                iterators.push(new StaticIterator(value[iterator]()));
            }
            else {
                iterators.push(new ZipBufferIterator(this.destination, this, value));
            }
        };
        ZipSubscriber.prototype._complete = function () {
            var iterators = this.iterators;
            var len = iterators.length;
            this.unsubscribe();
            if (len === 0) {
                this.destination.complete();
                return;
            }
            this.active = len;
            for (var i = 0; i < len; i++) {
                var iterator$$1 = iterators[i];
                if (iterator$$1.stillUnsubscribed) {
                    var destination = this.destination;
                    destination.add(iterator$$1.subscribe(iterator$$1, i));
                }
                else {
                    this.active--;
                }
            }
        };
        ZipSubscriber.prototype.notifyInactive = function () {
            this.active--;
            if (this.active === 0) {
                this.destination.complete();
            }
        };
        ZipSubscriber.prototype.checkIterators = function () {
            var iterators = this.iterators;
            var len = iterators.length;
            var destination = this.destination;
            for (var i = 0; i < len; i++) {
                var iterator$$1 = iterators[i];
                if (typeof iterator$$1.hasValue === 'function' && !iterator$$1.hasValue()) {
                    return;
                }
            }
            var shouldComplete = false;
            var args = [];
            for (var i = 0; i < len; i++) {
                var iterator$$1 = iterators[i];
                var result = iterator$$1.next();
                if (iterator$$1.hasCompleted()) {
                    shouldComplete = true;
                }
                if (result.done) {
                    destination.complete();
                    return;
                }
                args.push(result.value);
            }
            if (this.resultSelector) {
                this._tryresultSelector(args);
            }
            else {
                destination.next(args);
            }
            if (shouldComplete) {
                destination.complete();
            }
        };
        ZipSubscriber.prototype._tryresultSelector = function (args) {
            var result;
            try {
                result = this.resultSelector.apply(this, args);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.destination.next(result);
        };
        return ZipSubscriber;
    }(Subscriber));
    var StaticIterator = (function () {
        function StaticIterator(iterator$$1) {
            this.iterator = iterator$$1;
            this.nextResult = iterator$$1.next();
        }
        StaticIterator.prototype.hasValue = function () {
            return true;
        };
        StaticIterator.prototype.next = function () {
            var result = this.nextResult;
            this.nextResult = this.iterator.next();
            return result;
        };
        StaticIterator.prototype.hasCompleted = function () {
            var nextResult = this.nextResult;
            return nextResult && nextResult.done;
        };
        return StaticIterator;
    }());
    var StaticArrayIterator = (function () {
        function StaticArrayIterator(array) {
            this.array = array;
            this.index = 0;
            this.length = 0;
            this.length = array.length;
        }
        StaticArrayIterator.prototype[iterator] = function () {
            return this;
        };
        StaticArrayIterator.prototype.next = function (value) {
            var i = this.index++;
            var array = this.array;
            return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
        };
        StaticArrayIterator.prototype.hasValue = function () {
            return this.array.length > this.index;
        };
        StaticArrayIterator.prototype.hasCompleted = function () {
            return this.array.length === this.index;
        };
        return StaticArrayIterator;
    }());
    var ZipBufferIterator = (function (_super) {
        __extends(ZipBufferIterator, _super);
        function ZipBufferIterator(destination, parent, observable) {
            var _this = _super.call(this, destination) || this;
            _this.parent = parent;
            _this.observable = observable;
            _this.stillUnsubscribed = true;
            _this.buffer = [];
            _this.isComplete = false;
            return _this;
        }
        ZipBufferIterator.prototype[iterator] = function () {
            return this;
        };
        ZipBufferIterator.prototype.next = function () {
            var buffer = this.buffer;
            if (buffer.length === 0 && this.isComplete) {
                return { value: null, done: true };
            }
            else {
                return { value: buffer.shift(), done: false };
            }
        };
        ZipBufferIterator.prototype.hasValue = function () {
            return this.buffer.length > 0;
        };
        ZipBufferIterator.prototype.hasCompleted = function () {
            return this.buffer.length === 0 && this.isComplete;
        };
        ZipBufferIterator.prototype.notifyComplete = function () {
            if (this.buffer.length > 0) {
                this.isComplete = true;
                this.parent.notifyInactive();
            }
            else {
                this.destination.complete();
            }
        };
        ZipBufferIterator.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.buffer.push(innerValue);
            this.parent.checkIterators();
        };
        ZipBufferIterator.prototype.subscribe = function (value, index) {
            return subscribeToResult(this, this.observable, this, index);
        };
        return ZipBufferIterator;
    }(OuterSubscriber));

    function audit(durationSelector) {
        return function auditOperatorFunction(source) {
            return source.lift(new AuditOperator(durationSelector));
        };
    }
    var AuditOperator = (function () {
        function AuditOperator(durationSelector) {
            this.durationSelector = durationSelector;
        }
        AuditOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
        };
        return AuditOperator;
    }());
    var AuditSubscriber = (function (_super) {
        __extends(AuditSubscriber, _super);
        function AuditSubscriber(destination, durationSelector) {
            var _this = _super.call(this, destination) || this;
            _this.durationSelector = durationSelector;
            _this.hasValue = false;
            return _this;
        }
        AuditSubscriber.prototype._next = function (value) {
            this.value = value;
            this.hasValue = true;
            if (!this.throttled) {
                var duration = void 0;
                try {
                    var durationSelector = this.durationSelector;
                    duration = durationSelector(value);
                }
                catch (err) {
                    return this.destination.error(err);
                }
                var innerSubscription = subscribeToResult(this, duration);
                if (!innerSubscription || innerSubscription.closed) {
                    this.clearThrottle();
                }
                else {
                    this.add(this.throttled = innerSubscription);
                }
            }
        };
        AuditSubscriber.prototype.clearThrottle = function () {
            var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
            if (throttled) {
                this.remove(throttled);
                this.throttled = null;
                throttled.unsubscribe();
            }
            if (hasValue) {
                this.value = null;
                this.hasValue = false;
                this.destination.next(value);
            }
        };
        AuditSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex) {
            this.clearThrottle();
        };
        AuditSubscriber.prototype.notifyComplete = function () {
            this.clearThrottle();
        };
        return AuditSubscriber;
    }(OuterSubscriber));

    function auditTime(duration, scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return audit(function () { return timer(duration, scheduler); });
    }

    function buffer(closingNotifier) {
        return function bufferOperatorFunction(source) {
            return source.lift(new BufferOperator(closingNotifier));
        };
    }
    var BufferOperator = (function () {
        function BufferOperator(closingNotifier) {
            this.closingNotifier = closingNotifier;
        }
        BufferOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
        };
        return BufferOperator;
    }());
    var BufferSubscriber = (function (_super) {
        __extends(BufferSubscriber, _super);
        function BufferSubscriber(destination, closingNotifier) {
            var _this = _super.call(this, destination) || this;
            _this.buffer = [];
            _this.add(subscribeToResult(_this, closingNotifier));
            return _this;
        }
        BufferSubscriber.prototype._next = function (value) {
            this.buffer.push(value);
        };
        BufferSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            var buffer = this.buffer;
            this.buffer = [];
            this.destination.next(buffer);
        };
        return BufferSubscriber;
    }(OuterSubscriber));

    function bufferCount(bufferSize, startBufferEvery) {
        if (startBufferEvery === void 0) { startBufferEvery = null; }
        return function bufferCountOperatorFunction(source) {
            return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
        };
    }
    var BufferCountOperator = (function () {
        function BufferCountOperator(bufferSize, startBufferEvery) {
            this.bufferSize = bufferSize;
            this.startBufferEvery = startBufferEvery;
            if (!startBufferEvery || bufferSize === startBufferEvery) {
                this.subscriberClass = BufferCountSubscriber;
            }
            else {
                this.subscriberClass = BufferSkipCountSubscriber;
            }
        }
        BufferCountOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
        };
        return BufferCountOperator;
    }());
    var BufferCountSubscriber = (function (_super) {
        __extends(BufferCountSubscriber, _super);
        function BufferCountSubscriber(destination, bufferSize) {
            var _this = _super.call(this, destination) || this;
            _this.bufferSize = bufferSize;
            _this.buffer = [];
            return _this;
        }
        BufferCountSubscriber.prototype._next = function (value) {
            var buffer = this.buffer;
            buffer.push(value);
            if (buffer.length == this.bufferSize) {
                this.destination.next(buffer);
                this.buffer = [];
            }
        };
        BufferCountSubscriber.prototype._complete = function () {
            var buffer = this.buffer;
            if (buffer.length > 0) {
                this.destination.next(buffer);
            }
            _super.prototype._complete.call(this);
        };
        return BufferCountSubscriber;
    }(Subscriber));
    var BufferSkipCountSubscriber = (function (_super) {
        __extends(BufferSkipCountSubscriber, _super);
        function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
            var _this = _super.call(this, destination) || this;
            _this.bufferSize = bufferSize;
            _this.startBufferEvery = startBufferEvery;
            _this.buffers = [];
            _this.count = 0;
            return _this;
        }
        BufferSkipCountSubscriber.prototype._next = function (value) {
            var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
            this.count++;
            if (count % startBufferEvery === 0) {
                buffers.push([]);
            }
            for (var i = buffers.length; i--;) {
                var buffer = buffers[i];
                buffer.push(value);
                if (buffer.length === bufferSize) {
                    buffers.splice(i, 1);
                    this.destination.next(buffer);
                }
            }
        };
        BufferSkipCountSubscriber.prototype._complete = function () {
            var _a = this, buffers = _a.buffers, destination = _a.destination;
            while (buffers.length > 0) {
                var buffer = buffers.shift();
                if (buffer.length > 0) {
                    destination.next(buffer);
                }
            }
            _super.prototype._complete.call(this);
        };
        return BufferSkipCountSubscriber;
    }(Subscriber));

    function bufferTime(bufferTimeSpan) {
        var length = arguments.length;
        var scheduler = async;
        if (isScheduler(arguments[arguments.length - 1])) {
            scheduler = arguments[arguments.length - 1];
            length--;
        }
        var bufferCreationInterval = null;
        if (length >= 2) {
            bufferCreationInterval = arguments[1];
        }
        var maxBufferSize = Number.POSITIVE_INFINITY;
        if (length >= 3) {
            maxBufferSize = arguments[2];
        }
        return function bufferTimeOperatorFunction(source) {
            return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
        };
    }
    var BufferTimeOperator = (function () {
        function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
            this.bufferTimeSpan = bufferTimeSpan;
            this.bufferCreationInterval = bufferCreationInterval;
            this.maxBufferSize = maxBufferSize;
            this.scheduler = scheduler;
        }
        BufferTimeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
        };
        return BufferTimeOperator;
    }());
    var Context = (function () {
        function Context() {
            this.buffer = [];
        }
        return Context;
    }());
    var BufferTimeSubscriber = (function (_super) {
        __extends(BufferTimeSubscriber, _super);
        function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.bufferTimeSpan = bufferTimeSpan;
            _this.bufferCreationInterval = bufferCreationInterval;
            _this.maxBufferSize = maxBufferSize;
            _this.scheduler = scheduler;
            _this.contexts = [];
            var context = _this.openContext();
            _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
            if (_this.timespanOnly) {
                var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
                _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
            }
            else {
                var closeState = { subscriber: _this, context: context };
                var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
                _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
                _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
            }
            return _this;
        }
        BufferTimeSubscriber.prototype._next = function (value) {
            var contexts = this.contexts;
            var len = contexts.length;
            var filledBufferContext;
            for (var i = 0; i < len; i++) {
                var context_1 = contexts[i];
                var buffer = context_1.buffer;
                buffer.push(value);
                if (buffer.length == this.maxBufferSize) {
                    filledBufferContext = context_1;
                }
            }
            if (filledBufferContext) {
                this.onBufferFull(filledBufferContext);
            }
        };
        BufferTimeSubscriber.prototype._error = function (err) {
            this.contexts.length = 0;
            _super.prototype._error.call(this, err);
        };
        BufferTimeSubscriber.prototype._complete = function () {
            var _a = this, contexts = _a.contexts, destination = _a.destination;
            while (contexts.length > 0) {
                var context_2 = contexts.shift();
                destination.next(context_2.buffer);
            }
            _super.prototype._complete.call(this);
        };
        BufferTimeSubscriber.prototype._unsubscribe = function () {
            this.contexts = null;
        };
        BufferTimeSubscriber.prototype.onBufferFull = function (context) {
            this.closeContext(context);
            var closeAction = context.closeAction;
            closeAction.unsubscribe();
            this.remove(closeAction);
            if (!this.closed && this.timespanOnly) {
                context = this.openContext();
                var bufferTimeSpan = this.bufferTimeSpan;
                var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
                this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
            }
        };
        BufferTimeSubscriber.prototype.openContext = function () {
            var context = new Context();
            this.contexts.push(context);
            return context;
        };
        BufferTimeSubscriber.prototype.closeContext = function (context) {
            this.destination.next(context.buffer);
            var contexts = this.contexts;
            var spliceIndex = contexts ? contexts.indexOf(context) : -1;
            if (spliceIndex >= 0) {
                contexts.splice(contexts.indexOf(context), 1);
            }
        };
        return BufferTimeSubscriber;
    }(Subscriber));
    function dispatchBufferTimeSpanOnly(state) {
        var subscriber = state.subscriber;
        var prevContext = state.context;
        if (prevContext) {
            subscriber.closeContext(prevContext);
        }
        if (!subscriber.closed) {
            state.context = subscriber.openContext();
            state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
        }
    }
    function dispatchBufferCreation(state) {
        var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
        var context = subscriber.openContext();
        var action = this;
        if (!subscriber.closed) {
            subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
            action.schedule(state, bufferCreationInterval);
        }
    }
    function dispatchBufferClose(arg) {
        var subscriber = arg.subscriber, context = arg.context;
        subscriber.closeContext(context);
    }

    function bufferToggle(openings, closingSelector) {
        return function bufferToggleOperatorFunction(source) {
            return source.lift(new BufferToggleOperator(openings, closingSelector));
        };
    }
    var BufferToggleOperator = (function () {
        function BufferToggleOperator(openings, closingSelector) {
            this.openings = openings;
            this.closingSelector = closingSelector;
        }
        BufferToggleOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
        };
        return BufferToggleOperator;
    }());
    var BufferToggleSubscriber = (function (_super) {
        __extends(BufferToggleSubscriber, _super);
        function BufferToggleSubscriber(destination, openings, closingSelector) {
            var _this = _super.call(this, destination) || this;
            _this.openings = openings;
            _this.closingSelector = closingSelector;
            _this.contexts = [];
            _this.add(subscribeToResult(_this, openings));
            return _this;
        }
        BufferToggleSubscriber.prototype._next = function (value) {
            var contexts = this.contexts;
            var len = contexts.length;
            for (var i = 0; i < len; i++) {
                contexts[i].buffer.push(value);
            }
        };
        BufferToggleSubscriber.prototype._error = function (err) {
            var contexts = this.contexts;
            while (contexts.length > 0) {
                var context_1 = contexts.shift();
                context_1.subscription.unsubscribe();
                context_1.buffer = null;
                context_1.subscription = null;
            }
            this.contexts = null;
            _super.prototype._error.call(this, err);
        };
        BufferToggleSubscriber.prototype._complete = function () {
            var contexts = this.contexts;
            while (contexts.length > 0) {
                var context_2 = contexts.shift();
                this.destination.next(context_2.buffer);
                context_2.subscription.unsubscribe();
                context_2.buffer = null;
                context_2.subscription = null;
            }
            this.contexts = null;
            _super.prototype._complete.call(this);
        };
        BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
        };
        BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
            this.closeBuffer(innerSub.context);
        };
        BufferToggleSubscriber.prototype.openBuffer = function (value) {
            try {
                var closingSelector = this.closingSelector;
                var closingNotifier = closingSelector.call(this, value);
                if (closingNotifier) {
                    this.trySubscribe(closingNotifier);
                }
            }
            catch (err) {
                this._error(err);
            }
        };
        BufferToggleSubscriber.prototype.closeBuffer = function (context) {
            var contexts = this.contexts;
            if (contexts && context) {
                var buffer = context.buffer, subscription = context.subscription;
                this.destination.next(buffer);
                contexts.splice(contexts.indexOf(context), 1);
                this.remove(subscription);
                subscription.unsubscribe();
            }
        };
        BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
            var contexts = this.contexts;
            var buffer = [];
            var subscription = new Subscription();
            var context = { buffer: buffer, subscription: subscription };
            contexts.push(context);
            var innerSubscription = subscribeToResult(this, closingNotifier, context);
            if (!innerSubscription || innerSubscription.closed) {
                this.closeBuffer(context);
            }
            else {
                innerSubscription.context = context;
                this.add(innerSubscription);
                subscription.add(innerSubscription);
            }
        };
        return BufferToggleSubscriber;
    }(OuterSubscriber));

    function bufferWhen(closingSelector) {
        return function (source) {
            return source.lift(new BufferWhenOperator(closingSelector));
        };
    }
    var BufferWhenOperator = (function () {
        function BufferWhenOperator(closingSelector) {
            this.closingSelector = closingSelector;
        }
        BufferWhenOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
        };
        return BufferWhenOperator;
    }());
    var BufferWhenSubscriber = (function (_super) {
        __extends(BufferWhenSubscriber, _super);
        function BufferWhenSubscriber(destination, closingSelector) {
            var _this = _super.call(this, destination) || this;
            _this.closingSelector = closingSelector;
            _this.subscribing = false;
            _this.openBuffer();
            return _this;
        }
        BufferWhenSubscriber.prototype._next = function (value) {
            this.buffer.push(value);
        };
        BufferWhenSubscriber.prototype._complete = function () {
            var buffer = this.buffer;
            if (buffer) {
                this.destination.next(buffer);
            }
            _super.prototype._complete.call(this);
        };
        BufferWhenSubscriber.prototype._unsubscribe = function () {
            this.buffer = null;
            this.subscribing = false;
        };
        BufferWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.openBuffer();
        };
        BufferWhenSubscriber.prototype.notifyComplete = function () {
            if (this.subscribing) {
                this.complete();
            }
            else {
                this.openBuffer();
            }
        };
        BufferWhenSubscriber.prototype.openBuffer = function () {
            var closingSubscription = this.closingSubscription;
            if (closingSubscription) {
                this.remove(closingSubscription);
                closingSubscription.unsubscribe();
            }
            var buffer = this.buffer;
            if (this.buffer) {
                this.destination.next(buffer);
            }
            this.buffer = [];
            var closingNotifier;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector();
            }
            catch (err) {
                return this.error(err);
            }
            closingSubscription = new Subscription();
            this.closingSubscription = closingSubscription;
            this.add(closingSubscription);
            this.subscribing = true;
            closingSubscription.add(subscribeToResult(this, closingNotifier));
            this.subscribing = false;
        };
        return BufferWhenSubscriber;
    }(OuterSubscriber));

    function catchError(selector) {
        return function catchErrorOperatorFunction(source) {
            var operator = new CatchOperator(selector);
            var caught = source.lift(operator);
            return (operator.caught = caught);
        };
    }
    var CatchOperator = (function () {
        function CatchOperator(selector) {
            this.selector = selector;
        }
        CatchOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
        };
        return CatchOperator;
    }());
    var CatchSubscriber = (function (_super) {
        __extends(CatchSubscriber, _super);
        function CatchSubscriber(destination, selector, caught) {
            var _this = _super.call(this, destination) || this;
            _this.selector = selector;
            _this.caught = caught;
            return _this;
        }
        CatchSubscriber.prototype.error = function (err) {
            if (!this.isStopped) {
                var result = void 0;
                try {
                    result = this.selector(err, this.caught);
                }
                catch (err2) {
                    _super.prototype.error.call(this, err2);
                    return;
                }
                this._unsubscribeAndRecycle();
                var innerSubscriber = new InnerSubscriber(this, undefined, undefined);
                this.add(innerSubscriber);
                var innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);
                if (innerSubscription !== innerSubscriber) {
                    this.add(innerSubscription);
                }
            }
        };
        return CatchSubscriber;
    }(OuterSubscriber));

    function combineAll(project) {
        return function (source) { return source.lift(new CombineLatestOperator(project)); };
    }

    function combineLatest$1() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        var project = null;
        if (typeof observables[observables.length - 1] === 'function') {
            project = observables.pop();
        }
        if (observables.length === 1 && isArray(observables[0])) {
            observables = observables[0].slice();
        }
        return function (source) { return source.lift.call(from([source].concat(observables)), new CombineLatestOperator(project)); };
    }

    function concat$1() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        return function (source) { return source.lift.call(concat.apply(void 0, [source].concat(observables))); };
    }

    function concatMap(project, resultSelector) {
        return mergeMap(project, resultSelector, 1);
    }

    function concatMapTo(innerObservable, resultSelector) {
        return concatMap(function () { return innerObservable; }, resultSelector);
    }

    function count(predicate) {
        return function (source) { return source.lift(new CountOperator(predicate, source)); };
    }
    var CountOperator = (function () {
        function CountOperator(predicate, source) {
            this.predicate = predicate;
            this.source = source;
        }
        CountOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
        };
        return CountOperator;
    }());
    var CountSubscriber = (function (_super) {
        __extends(CountSubscriber, _super);
        function CountSubscriber(destination, predicate, source) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.source = source;
            _this.count = 0;
            _this.index = 0;
            return _this;
        }
        CountSubscriber.prototype._next = function (value) {
            if (this.predicate) {
                this._tryPredicate(value);
            }
            else {
                this.count++;
            }
        };
        CountSubscriber.prototype._tryPredicate = function (value) {
            var result;
            try {
                result = this.predicate(value, this.index++, this.source);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            if (result) {
                this.count++;
            }
        };
        CountSubscriber.prototype._complete = function () {
            this.destination.next(this.count);
            this.destination.complete();
        };
        return CountSubscriber;
    }(Subscriber));

    function debounce(durationSelector) {
        return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
    }
    var DebounceOperator = (function () {
        function DebounceOperator(durationSelector) {
            this.durationSelector = durationSelector;
        }
        DebounceOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
        };
        return DebounceOperator;
    }());
    var DebounceSubscriber = (function (_super) {
        __extends(DebounceSubscriber, _super);
        function DebounceSubscriber(destination, durationSelector) {
            var _this = _super.call(this, destination) || this;
            _this.durationSelector = durationSelector;
            _this.hasValue = false;
            _this.durationSubscription = null;
            return _this;
        }
        DebounceSubscriber.prototype._next = function (value) {
            try {
                var result = this.durationSelector.call(this, value);
                if (result) {
                    this._tryNext(value, result);
                }
            }
            catch (err) {
                this.destination.error(err);
            }
        };
        DebounceSubscriber.prototype._complete = function () {
            this.emitValue();
            this.destination.complete();
        };
        DebounceSubscriber.prototype._tryNext = function (value, duration) {
            var subscription = this.durationSubscription;
            this.value = value;
            this.hasValue = true;
            if (subscription) {
                subscription.unsubscribe();
                this.remove(subscription);
            }
            subscription = subscribeToResult(this, duration);
            if (subscription && !subscription.closed) {
                this.add(this.durationSubscription = subscription);
            }
        };
        DebounceSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.emitValue();
        };
        DebounceSubscriber.prototype.notifyComplete = function () {
            this.emitValue();
        };
        DebounceSubscriber.prototype.emitValue = function () {
            if (this.hasValue) {
                var value = this.value;
                var subscription = this.durationSubscription;
                if (subscription) {
                    this.durationSubscription = null;
                    subscription.unsubscribe();
                    this.remove(subscription);
                }
                this.value = null;
                this.hasValue = false;
                _super.prototype._next.call(this, value);
            }
        };
        return DebounceSubscriber;
    }(OuterSubscriber));

    function debounceTime(dueTime, scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
    }
    var DebounceTimeOperator = (function () {
        function DebounceTimeOperator(dueTime, scheduler) {
            this.dueTime = dueTime;
            this.scheduler = scheduler;
        }
        DebounceTimeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
        };
        return DebounceTimeOperator;
    }());
    var DebounceTimeSubscriber = (function (_super) {
        __extends(DebounceTimeSubscriber, _super);
        function DebounceTimeSubscriber(destination, dueTime, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.dueTime = dueTime;
            _this.scheduler = scheduler;
            _this.debouncedSubscription = null;
            _this.lastValue = null;
            _this.hasValue = false;
            return _this;
        }
        DebounceTimeSubscriber.prototype._next = function (value) {
            this.clearDebounce();
            this.lastValue = value;
            this.hasValue = true;
            this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext$2, this.dueTime, this));
        };
        DebounceTimeSubscriber.prototype._complete = function () {
            this.debouncedNext();
            this.destination.complete();
        };
        DebounceTimeSubscriber.prototype.debouncedNext = function () {
            this.clearDebounce();
            if (this.hasValue) {
                var lastValue = this.lastValue;
                this.lastValue = null;
                this.hasValue = false;
                this.destination.next(lastValue);
            }
        };
        DebounceTimeSubscriber.prototype.clearDebounce = function () {
            var debouncedSubscription = this.debouncedSubscription;
            if (debouncedSubscription !== null) {
                this.remove(debouncedSubscription);
                debouncedSubscription.unsubscribe();
                this.debouncedSubscription = null;
            }
        };
        return DebounceTimeSubscriber;
    }(Subscriber));
    function dispatchNext$2(subscriber) {
        subscriber.debouncedNext();
    }

    function defaultIfEmpty(defaultValue) {
        if (defaultValue === void 0) { defaultValue = null; }
        return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
    }
    var DefaultIfEmptyOperator = (function () {
        function DefaultIfEmptyOperator(defaultValue) {
            this.defaultValue = defaultValue;
        }
        DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
        };
        return DefaultIfEmptyOperator;
    }());
    var DefaultIfEmptySubscriber = (function (_super) {
        __extends(DefaultIfEmptySubscriber, _super);
        function DefaultIfEmptySubscriber(destination, defaultValue) {
            var _this = _super.call(this, destination) || this;
            _this.defaultValue = defaultValue;
            _this.isEmpty = true;
            return _this;
        }
        DefaultIfEmptySubscriber.prototype._next = function (value) {
            this.isEmpty = false;
            this.destination.next(value);
        };
        DefaultIfEmptySubscriber.prototype._complete = function () {
            if (this.isEmpty) {
                this.destination.next(this.defaultValue);
            }
            this.destination.complete();
        };
        return DefaultIfEmptySubscriber;
    }(Subscriber));

    function isDate(value) {
        return value instanceof Date && !isNaN(+value);
    }

    function delay(delay, scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        var absoluteDelay = isDate(delay);
        var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
        return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
    }
    var DelayOperator = (function () {
        function DelayOperator(delay, scheduler) {
            this.delay = delay;
            this.scheduler = scheduler;
        }
        DelayOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
        };
        return DelayOperator;
    }());
    var DelaySubscriber = (function (_super) {
        __extends(DelaySubscriber, _super);
        function DelaySubscriber(destination, delay, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.delay = delay;
            _this.scheduler = scheduler;
            _this.queue = [];
            _this.active = false;
            _this.errored = false;
            return _this;
        }
        DelaySubscriber.dispatch = function (state) {
            var source = state.source;
            var queue = source.queue;
            var scheduler = state.scheduler;
            var destination = state.destination;
            while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
                queue.shift().notification.observe(destination);
            }
            if (queue.length > 0) {
                var delay_1 = Math.max(0, queue[0].time - scheduler.now());
                this.schedule(state, delay_1);
            }
            else {
                this.unsubscribe();
                source.active = false;
            }
        };
        DelaySubscriber.prototype._schedule = function (scheduler) {
            this.active = true;
            var destination = this.destination;
            destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
                source: this, destination: this.destination, scheduler: scheduler
            }));
        };
        DelaySubscriber.prototype.scheduleNotification = function (notification) {
            if (this.errored === true) {
                return;
            }
            var scheduler = this.scheduler;
            var message = new DelayMessage(scheduler.now() + this.delay, notification);
            this.queue.push(message);
            if (this.active === false) {
                this._schedule(scheduler);
            }
        };
        DelaySubscriber.prototype._next = function (value) {
            this.scheduleNotification(Notification.createNext(value));
        };
        DelaySubscriber.prototype._error = function (err) {
            this.errored = true;
            this.queue = [];
            this.destination.error(err);
            this.unsubscribe();
        };
        DelaySubscriber.prototype._complete = function () {
            this.scheduleNotification(Notification.createComplete());
            this.unsubscribe();
        };
        return DelaySubscriber;
    }(Subscriber));
    var DelayMessage = (function () {
        function DelayMessage(time, notification) {
            this.time = time;
            this.notification = notification;
        }
        return DelayMessage;
    }());

    function delayWhen(delayDurationSelector, subscriptionDelay) {
        if (subscriptionDelay) {
            return function (source) {
                return new SubscriptionDelayObservable(source, subscriptionDelay)
                    .lift(new DelayWhenOperator(delayDurationSelector));
            };
        }
        return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
    }
    var DelayWhenOperator = (function () {
        function DelayWhenOperator(delayDurationSelector) {
            this.delayDurationSelector = delayDurationSelector;
        }
        DelayWhenOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
        };
        return DelayWhenOperator;
    }());
    var DelayWhenSubscriber = (function (_super) {
        __extends(DelayWhenSubscriber, _super);
        function DelayWhenSubscriber(destination, delayDurationSelector) {
            var _this = _super.call(this, destination) || this;
            _this.delayDurationSelector = delayDurationSelector;
            _this.completed = false;
            _this.delayNotifierSubscriptions = [];
            _this.index = 0;
            return _this;
        }
        DelayWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.destination.next(outerValue);
            this.removeSubscription(innerSub);
            this.tryComplete();
        };
        DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
            this._error(error);
        };
        DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
            var value = this.removeSubscription(innerSub);
            if (value) {
                this.destination.next(value);
            }
            this.tryComplete();
        };
        DelayWhenSubscriber.prototype._next = function (value) {
            var index = this.index++;
            try {
                var delayNotifier = this.delayDurationSelector(value, index);
                if (delayNotifier) {
                    this.tryDelay(delayNotifier, value);
                }
            }
            catch (err) {
                this.destination.error(err);
            }
        };
        DelayWhenSubscriber.prototype._complete = function () {
            this.completed = true;
            this.tryComplete();
            this.unsubscribe();
        };
        DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
            subscription.unsubscribe();
            var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
            if (subscriptionIdx !== -1) {
                this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
            }
            return subscription.outerValue;
        };
        DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
            var notifierSubscription = subscribeToResult(this, delayNotifier, value);
            if (notifierSubscription && !notifierSubscription.closed) {
                var destination = this.destination;
                destination.add(notifierSubscription);
                this.delayNotifierSubscriptions.push(notifierSubscription);
            }
        };
        DelayWhenSubscriber.prototype.tryComplete = function () {
            if (this.completed && this.delayNotifierSubscriptions.length === 0) {
                this.destination.complete();
            }
        };
        return DelayWhenSubscriber;
    }(OuterSubscriber));
    var SubscriptionDelayObservable = (function (_super) {
        __extends(SubscriptionDelayObservable, _super);
        function SubscriptionDelayObservable(source, subscriptionDelay) {
            var _this = _super.call(this) || this;
            _this.source = source;
            _this.subscriptionDelay = subscriptionDelay;
            return _this;
        }
        SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
            this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
        };
        return SubscriptionDelayObservable;
    }(Observable));
    var SubscriptionDelaySubscriber = (function (_super) {
        __extends(SubscriptionDelaySubscriber, _super);
        function SubscriptionDelaySubscriber(parent, source) {
            var _this = _super.call(this) || this;
            _this.parent = parent;
            _this.source = source;
            _this.sourceSubscribed = false;
            return _this;
        }
        SubscriptionDelaySubscriber.prototype._next = function (unused) {
            this.subscribeToSource();
        };
        SubscriptionDelaySubscriber.prototype._error = function (err) {
            this.unsubscribe();
            this.parent.error(err);
        };
        SubscriptionDelaySubscriber.prototype._complete = function () {
            this.unsubscribe();
            this.subscribeToSource();
        };
        SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
            if (!this.sourceSubscribed) {
                this.sourceSubscribed = true;
                this.unsubscribe();
                this.source.subscribe(this.parent);
            }
        };
        return SubscriptionDelaySubscriber;
    }(Subscriber));

    function dematerialize() {
        return function dematerializeOperatorFunction(source) {
            return source.lift(new DeMaterializeOperator());
        };
    }
    var DeMaterializeOperator = (function () {
        function DeMaterializeOperator() {
        }
        DeMaterializeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DeMaterializeSubscriber(subscriber));
        };
        return DeMaterializeOperator;
    }());
    var DeMaterializeSubscriber = (function (_super) {
        __extends(DeMaterializeSubscriber, _super);
        function DeMaterializeSubscriber(destination) {
            return _super.call(this, destination) || this;
        }
        DeMaterializeSubscriber.prototype._next = function (value) {
            value.observe(this.destination);
        };
        return DeMaterializeSubscriber;
    }(Subscriber));

    function distinct(keySelector, flushes) {
        return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
    }
    var DistinctOperator = (function () {
        function DistinctOperator(keySelector, flushes) {
            this.keySelector = keySelector;
            this.flushes = flushes;
        }
        DistinctOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
        };
        return DistinctOperator;
    }());
    var DistinctSubscriber = (function (_super) {
        __extends(DistinctSubscriber, _super);
        function DistinctSubscriber(destination, keySelector, flushes) {
            var _this = _super.call(this, destination) || this;
            _this.keySelector = keySelector;
            _this.values = new Set();
            if (flushes) {
                _this.add(subscribeToResult(_this, flushes));
            }
            return _this;
        }
        DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.values.clear();
        };
        DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
            this._error(error);
        };
        DistinctSubscriber.prototype._next = function (value) {
            if (this.keySelector) {
                this._useKeySelector(value);
            }
            else {
                this._finalizeNext(value, value);
            }
        };
        DistinctSubscriber.prototype._useKeySelector = function (value) {
            var key;
            var destination = this.destination;
            try {
                key = this.keySelector(value);
            }
            catch (err) {
                destination.error(err);
                return;
            }
            this._finalizeNext(key, value);
        };
        DistinctSubscriber.prototype._finalizeNext = function (key, value) {
            var values = this.values;
            if (!values.has(key)) {
                values.add(key);
                this.destination.next(value);
            }
        };
        return DistinctSubscriber;
    }(OuterSubscriber));

    function distinctUntilChanged(compare, keySelector) {
        return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
    }
    var DistinctUntilChangedOperator = (function () {
        function DistinctUntilChangedOperator(compare, keySelector) {
            this.compare = compare;
            this.keySelector = keySelector;
        }
        DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
        };
        return DistinctUntilChangedOperator;
    }());
    var DistinctUntilChangedSubscriber = (function (_super) {
        __extends(DistinctUntilChangedSubscriber, _super);
        function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
            var _this = _super.call(this, destination) || this;
            _this.keySelector = keySelector;
            _this.hasKey = false;
            if (typeof compare === 'function') {
                _this.compare = compare;
            }
            return _this;
        }
        DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
            return x === y;
        };
        DistinctUntilChangedSubscriber.prototype._next = function (value) {
            var key;
            try {
                var keySelector = this.keySelector;
                key = keySelector ? keySelector(value) : value;
            }
            catch (err) {
                return this.destination.error(err);
            }
            var result = false;
            if (this.hasKey) {
                try {
                    var compare = this.compare;
                    result = compare(this.key, key);
                }
                catch (err) {
                    return this.destination.error(err);
                }
            }
            else {
                this.hasKey = true;
            }
            if (!result) {
                this.key = key;
                this.destination.next(value);
            }
        };
        return DistinctUntilChangedSubscriber;
    }(Subscriber));

    function distinctUntilKeyChanged(key, compare) {
        return distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
    }

    function throwIfEmpty(errorFactory) {
        if (errorFactory === void 0) { errorFactory = defaultErrorFactory; }
        return function (source) {
            return source.lift(new ThrowIfEmptyOperator(errorFactory));
        };
    }
    var ThrowIfEmptyOperator = (function () {
        function ThrowIfEmptyOperator(errorFactory) {
            this.errorFactory = errorFactory;
        }
        ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
        };
        return ThrowIfEmptyOperator;
    }());
    var ThrowIfEmptySubscriber = (function (_super) {
        __extends(ThrowIfEmptySubscriber, _super);
        function ThrowIfEmptySubscriber(destination, errorFactory) {
            var _this = _super.call(this, destination) || this;
            _this.errorFactory = errorFactory;
            _this.hasValue = false;
            return _this;
        }
        ThrowIfEmptySubscriber.prototype._next = function (value) {
            this.hasValue = true;
            this.destination.next(value);
        };
        ThrowIfEmptySubscriber.prototype._complete = function () {
            if (!this.hasValue) {
                var err = void 0;
                try {
                    err = this.errorFactory();
                }
                catch (e) {
                    err = e;
                }
                this.destination.error(err);
            }
            else {
                return this.destination.complete();
            }
        };
        return ThrowIfEmptySubscriber;
    }(Subscriber));
    function defaultErrorFactory() {
        return new EmptyError();
    }

    function take(count) {
        return function (source) {
            if (count === 0) {
                return empty$1();
            }
            else {
                return source.lift(new TakeOperator(count));
            }
        };
    }
    var TakeOperator = (function () {
        function TakeOperator(total) {
            this.total = total;
            if (this.total < 0) {
                throw new ArgumentOutOfRangeError;
            }
        }
        TakeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new TakeSubscriber(subscriber, this.total));
        };
        return TakeOperator;
    }());
    var TakeSubscriber = (function (_super) {
        __extends(TakeSubscriber, _super);
        function TakeSubscriber(destination, total) {
            var _this = _super.call(this, destination) || this;
            _this.total = total;
            _this.count = 0;
            return _this;
        }
        TakeSubscriber.prototype._next = function (value) {
            var total = this.total;
            var count = ++this.count;
            if (count <= total) {
                this.destination.next(value);
                if (count === total) {
                    this.destination.complete();
                    this.unsubscribe();
                }
            }
        };
        return TakeSubscriber;
    }(Subscriber));

    function elementAt(index, defaultValue) {
        if (index < 0) {
            throw new ArgumentOutOfRangeError();
        }
        var hasDefaultValue = arguments.length >= 2;
        return function (source) { return source.pipe(filter(function (v, i) { return i === index; }), take(1), hasDefaultValue
            ? defaultIfEmpty(defaultValue)
            : throwIfEmpty(function () { return new ArgumentOutOfRangeError(); })); };
    }

    function endWith() {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i] = arguments[_i];
        }
        return function (source) { return concat(source, of.apply(void 0, array)); };
    }

    function every(predicate, thisArg) {
        return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
    }
    var EveryOperator = (function () {
        function EveryOperator(predicate, thisArg, source) {
            this.predicate = predicate;
            this.thisArg = thisArg;
            this.source = source;
        }
        EveryOperator.prototype.call = function (observer, source) {
            return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
        };
        return EveryOperator;
    }());
    var EverySubscriber = (function (_super) {
        __extends(EverySubscriber, _super);
        function EverySubscriber(destination, predicate, thisArg, source) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.thisArg = thisArg;
            _this.source = source;
            _this.index = 0;
            _this.thisArg = thisArg || _this;
            return _this;
        }
        EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
            this.destination.next(everyValueMatch);
            this.destination.complete();
        };
        EverySubscriber.prototype._next = function (value) {
            var result = false;
            try {
                result = this.predicate.call(this.thisArg, value, this.index++, this.source);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            if (!result) {
                this.notifyComplete(false);
            }
        };
        EverySubscriber.prototype._complete = function () {
            this.notifyComplete(true);
        };
        return EverySubscriber;
    }(Subscriber));

    function exhaust() {
        return function (source) { return source.lift(new SwitchFirstOperator()); };
    }
    var SwitchFirstOperator = (function () {
        function SwitchFirstOperator() {
        }
        SwitchFirstOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SwitchFirstSubscriber(subscriber));
        };
        return SwitchFirstOperator;
    }());
    var SwitchFirstSubscriber = (function (_super) {
        __extends(SwitchFirstSubscriber, _super);
        function SwitchFirstSubscriber(destination) {
            var _this = _super.call(this, destination) || this;
            _this.hasCompleted = false;
            _this.hasSubscription = false;
            return _this;
        }
        SwitchFirstSubscriber.prototype._next = function (value) {
            if (!this.hasSubscription) {
                this.hasSubscription = true;
                this.add(subscribeToResult(this, value));
            }
        };
        SwitchFirstSubscriber.prototype._complete = function () {
            this.hasCompleted = true;
            if (!this.hasSubscription) {
                this.destination.complete();
            }
        };
        SwitchFirstSubscriber.prototype.notifyComplete = function (innerSub) {
            this.remove(innerSub);
            this.hasSubscription = false;
            if (this.hasCompleted) {
                this.destination.complete();
            }
        };
        return SwitchFirstSubscriber;
    }(OuterSubscriber));

    function exhaustMap(project, resultSelector) {
        if (resultSelector) {
            return function (source) { return source.pipe(exhaustMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
        }
        return function (source) {
            return source.lift(new ExhaustMapOperator(project));
        };
    }
    var ExhaustMapOperator = (function () {
        function ExhaustMapOperator(project) {
            this.project = project;
        }
        ExhaustMapOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
        };
        return ExhaustMapOperator;
    }());
    var ExhaustMapSubscriber = (function (_super) {
        __extends(ExhaustMapSubscriber, _super);
        function ExhaustMapSubscriber(destination, project) {
            var _this = _super.call(this, destination) || this;
            _this.project = project;
            _this.hasSubscription = false;
            _this.hasCompleted = false;
            _this.index = 0;
            return _this;
        }
        ExhaustMapSubscriber.prototype._next = function (value) {
            if (!this.hasSubscription) {
                this.tryNext(value);
            }
        };
        ExhaustMapSubscriber.prototype.tryNext = function (value) {
            var result;
            var index = this.index++;
            try {
                result = this.project(value, index);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.hasSubscription = true;
            this._innerSub(result, value, index);
        };
        ExhaustMapSubscriber.prototype._innerSub = function (result, value, index) {
            var innerSubscriber = new InnerSubscriber(this, value, index);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        };
        ExhaustMapSubscriber.prototype._complete = function () {
            this.hasCompleted = true;
            if (!this.hasSubscription) {
                this.destination.complete();
            }
            this.unsubscribe();
        };
        ExhaustMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.destination.next(innerValue);
        };
        ExhaustMapSubscriber.prototype.notifyError = function (err) {
            this.destination.error(err);
        };
        ExhaustMapSubscriber.prototype.notifyComplete = function (innerSub) {
            var destination = this.destination;
            destination.remove(innerSub);
            this.hasSubscription = false;
            if (this.hasCompleted) {
                this.destination.complete();
            }
        };
        return ExhaustMapSubscriber;
    }(OuterSubscriber));

    function expand(project, concurrent, scheduler) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        if (scheduler === void 0) { scheduler = undefined; }
        concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
        return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
    }
    var ExpandOperator = (function () {
        function ExpandOperator(project, concurrent, scheduler) {
            this.project = project;
            this.concurrent = concurrent;
            this.scheduler = scheduler;
        }
        ExpandOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
        };
        return ExpandOperator;
    }());
    var ExpandSubscriber = (function (_super) {
        __extends(ExpandSubscriber, _super);
        function ExpandSubscriber(destination, project, concurrent, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.project = project;
            _this.concurrent = concurrent;
            _this.scheduler = scheduler;
            _this.index = 0;
            _this.active = 0;
            _this.hasCompleted = false;
            if (concurrent < Number.POSITIVE_INFINITY) {
                _this.buffer = [];
            }
            return _this;
        }
        ExpandSubscriber.dispatch = function (arg) {
            var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
            subscriber.subscribeToProjection(result, value, index);
        };
        ExpandSubscriber.prototype._next = function (value) {
            var destination = this.destination;
            if (destination.closed) {
                this._complete();
                return;
            }
            var index = this.index++;
            if (this.active < this.concurrent) {
                destination.next(value);
                try {
                    var project = this.project;
                    var result = project(value, index);
                    if (!this.scheduler) {
                        this.subscribeToProjection(result, value, index);
                    }
                    else {
                        var state = { subscriber: this, result: result, value: value, index: index };
                        var destination_1 = this.destination;
                        destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                    }
                }
                catch (e) {
                    destination.error(e);
                }
            }
            else {
                this.buffer.push(value);
            }
        };
        ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
            this.active++;
            var destination = this.destination;
            destination.add(subscribeToResult(this, result, value, index));
        };
        ExpandSubscriber.prototype._complete = function () {
            this.hasCompleted = true;
            if (this.hasCompleted && this.active === 0) {
                this.destination.complete();
            }
            this.unsubscribe();
        };
        ExpandSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this._next(innerValue);
        };
        ExpandSubscriber.prototype.notifyComplete = function (innerSub) {
            var buffer = this.buffer;
            var destination = this.destination;
            destination.remove(innerSub);
            this.active--;
            if (buffer && buffer.length > 0) {
                this._next(buffer.shift());
            }
            if (this.hasCompleted && this.active === 0) {
                this.destination.complete();
            }
        };
        return ExpandSubscriber;
    }(OuterSubscriber));

    function finalize(callback) {
        return function (source) { return source.lift(new FinallyOperator(callback)); };
    }
    var FinallyOperator = (function () {
        function FinallyOperator(callback) {
            this.callback = callback;
        }
        FinallyOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new FinallySubscriber(subscriber, this.callback));
        };
        return FinallyOperator;
    }());
    var FinallySubscriber = (function (_super) {
        __extends(FinallySubscriber, _super);
        function FinallySubscriber(destination, callback) {
            var _this = _super.call(this, destination) || this;
            _this.add(new Subscription(callback));
            return _this;
        }
        return FinallySubscriber;
    }(Subscriber));

    function find(predicate, thisArg) {
        if (typeof predicate !== 'function') {
            throw new TypeError('predicate is not a function');
        }
        return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
    }
    var FindValueOperator = (function () {
        function FindValueOperator(predicate, source, yieldIndex, thisArg) {
            this.predicate = predicate;
            this.source = source;
            this.yieldIndex = yieldIndex;
            this.thisArg = thisArg;
        }
        FindValueOperator.prototype.call = function (observer, source) {
            return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
        };
        return FindValueOperator;
    }());
    var FindValueSubscriber = (function (_super) {
        __extends(FindValueSubscriber, _super);
        function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.source = source;
            _this.yieldIndex = yieldIndex;
            _this.thisArg = thisArg;
            _this.index = 0;
            return _this;
        }
        FindValueSubscriber.prototype.notifyComplete = function (value) {
            var destination = this.destination;
            destination.next(value);
            destination.complete();
            this.unsubscribe();
        };
        FindValueSubscriber.prototype._next = function (value) {
            var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
            var index = this.index++;
            try {
                var result = predicate.call(thisArg || this, value, index, this.source);
                if (result) {
                    this.notifyComplete(this.yieldIndex ? index : value);
                }
            }
            catch (err) {
                this.destination.error(err);
            }
        };
        FindValueSubscriber.prototype._complete = function () {
            this.notifyComplete(this.yieldIndex ? -1 : undefined);
        };
        return FindValueSubscriber;
    }(Subscriber));

    function findIndex(predicate, thisArg) {
        return function (source) { return source.lift(new FindValueOperator(predicate, source, true, thisArg)); };
    }

    function first(predicate, defaultValue) {
        var hasDefaultValue = arguments.length >= 2;
        return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, take(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };
    }

    function ignoreElements() {
        return function ignoreElementsOperatorFunction(source) {
            return source.lift(new IgnoreElementsOperator());
        };
    }
    var IgnoreElementsOperator = (function () {
        function IgnoreElementsOperator() {
        }
        IgnoreElementsOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new IgnoreElementsSubscriber(subscriber));
        };
        return IgnoreElementsOperator;
    }());
    var IgnoreElementsSubscriber = (function (_super) {
        __extends(IgnoreElementsSubscriber, _super);
        function IgnoreElementsSubscriber() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        IgnoreElementsSubscriber.prototype._next = function (unused) {
        };
        return IgnoreElementsSubscriber;
    }(Subscriber));

    function isEmpty() {
        return function (source) { return source.lift(new IsEmptyOperator()); };
    }
    var IsEmptyOperator = (function () {
        function IsEmptyOperator() {
        }
        IsEmptyOperator.prototype.call = function (observer, source) {
            return source.subscribe(new IsEmptySubscriber(observer));
        };
        return IsEmptyOperator;
    }());
    var IsEmptySubscriber = (function (_super) {
        __extends(IsEmptySubscriber, _super);
        function IsEmptySubscriber(destination) {
            return _super.call(this, destination) || this;
        }
        IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
            var destination = this.destination;
            destination.next(isEmpty);
            destination.complete();
        };
        IsEmptySubscriber.prototype._next = function (value) {
            this.notifyComplete(false);
        };
        IsEmptySubscriber.prototype._complete = function () {
            this.notifyComplete(true);
        };
        return IsEmptySubscriber;
    }(Subscriber));

    function takeLast(count) {
        return function takeLastOperatorFunction(source) {
            if (count === 0) {
                return empty$1();
            }
            else {
                return source.lift(new TakeLastOperator(count));
            }
        };
    }
    var TakeLastOperator = (function () {
        function TakeLastOperator(total) {
            this.total = total;
            if (this.total < 0) {
                throw new ArgumentOutOfRangeError;
            }
        }
        TakeLastOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
        };
        return TakeLastOperator;
    }());
    var TakeLastSubscriber = (function (_super) {
        __extends(TakeLastSubscriber, _super);
        function TakeLastSubscriber(destination, total) {
            var _this = _super.call(this, destination) || this;
            _this.total = total;
            _this.ring = new Array();
            _this.count = 0;
            return _this;
        }
        TakeLastSubscriber.prototype._next = function (value) {
            var ring = this.ring;
            var total = this.total;
            var count = this.count++;
            if (ring.length < total) {
                ring.push(value);
            }
            else {
                var index = count % total;
                ring[index] = value;
            }
        };
        TakeLastSubscriber.prototype._complete = function () {
            var destination = this.destination;
            var count = this.count;
            if (count > 0) {
                var total = this.count >= this.total ? this.total : this.count;
                var ring = this.ring;
                for (var i = 0; i < total; i++) {
                    var idx = (count++) % total;
                    destination.next(ring[idx]);
                }
            }
            destination.complete();
        };
        return TakeLastSubscriber;
    }(Subscriber));

    function last(predicate, defaultValue) {
        var hasDefaultValue = arguments.length >= 2;
        return function (source) { return source.pipe(predicate ? filter(function (v, i) { return predicate(v, i, source); }) : identity, takeLast(1), hasDefaultValue ? defaultIfEmpty(defaultValue) : throwIfEmpty(function () { return new EmptyError(); })); };
    }

    function mapTo(value) {
        return function (source) { return source.lift(new MapToOperator(value)); };
    }
    var MapToOperator = (function () {
        function MapToOperator(value) {
            this.value = value;
        }
        MapToOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new MapToSubscriber(subscriber, this.value));
        };
        return MapToOperator;
    }());
    var MapToSubscriber = (function (_super) {
        __extends(MapToSubscriber, _super);
        function MapToSubscriber(destination, value) {
            var _this = _super.call(this, destination) || this;
            _this.value = value;
            return _this;
        }
        MapToSubscriber.prototype._next = function (x) {
            this.destination.next(this.value);
        };
        return MapToSubscriber;
    }(Subscriber));

    function materialize() {
        return function materializeOperatorFunction(source) {
            return source.lift(new MaterializeOperator());
        };
    }
    var MaterializeOperator = (function () {
        function MaterializeOperator() {
        }
        MaterializeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new MaterializeSubscriber(subscriber));
        };
        return MaterializeOperator;
    }());
    var MaterializeSubscriber = (function (_super) {
        __extends(MaterializeSubscriber, _super);
        function MaterializeSubscriber(destination) {
            return _super.call(this, destination) || this;
        }
        MaterializeSubscriber.prototype._next = function (value) {
            this.destination.next(Notification.createNext(value));
        };
        MaterializeSubscriber.prototype._error = function (err) {
            var destination = this.destination;
            destination.next(Notification.createError(err));
            destination.complete();
        };
        MaterializeSubscriber.prototype._complete = function () {
            var destination = this.destination;
            destination.next(Notification.createComplete());
            destination.complete();
        };
        return MaterializeSubscriber;
    }(Subscriber));

    function scan(accumulator, seed) {
        var hasSeed = false;
        if (arguments.length >= 2) {
            hasSeed = true;
        }
        return function scanOperatorFunction(source) {
            return source.lift(new ScanOperator(accumulator, seed, hasSeed));
        };
    }
    var ScanOperator = (function () {
        function ScanOperator(accumulator, seed, hasSeed) {
            if (hasSeed === void 0) { hasSeed = false; }
            this.accumulator = accumulator;
            this.seed = seed;
            this.hasSeed = hasSeed;
        }
        ScanOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
        };
        return ScanOperator;
    }());
    var ScanSubscriber = (function (_super) {
        __extends(ScanSubscriber, _super);
        function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
            var _this = _super.call(this, destination) || this;
            _this.accumulator = accumulator;
            _this._seed = _seed;
            _this.hasSeed = hasSeed;
            _this.index = 0;
            return _this;
        }
        Object.defineProperty(ScanSubscriber.prototype, "seed", {
            get: function () {
                return this._seed;
            },
            set: function (value) {
                this.hasSeed = true;
                this._seed = value;
            },
            enumerable: true,
            configurable: true
        });
        ScanSubscriber.prototype._next = function (value) {
            if (!this.hasSeed) {
                this.seed = value;
                this.destination.next(value);
            }
            else {
                return this._tryNext(value);
            }
        };
        ScanSubscriber.prototype._tryNext = function (value) {
            var index = this.index++;
            var result;
            try {
                result = this.accumulator(this.seed, value, index);
            }
            catch (err) {
                this.destination.error(err);
            }
            this.seed = result;
            this.destination.next(result);
        };
        return ScanSubscriber;
    }(Subscriber));

    function reduce(accumulator, seed) {
        if (arguments.length >= 2) {
            return function reduceOperatorFunctionWithSeed(source) {
                return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);
            };
        }
        return function reduceOperatorFunction(source) {
            return pipe(scan(function (acc, value, index) { return accumulator(acc, value, index + 1); }), takeLast(1))(source);
        };
    }

    function max(comparer) {
        var max = (typeof comparer === 'function')
            ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
            : function (x, y) { return x > y ? x : y; };
        return reduce(max);
    }

    function merge$1() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        return function (source) { return source.lift.call(merge.apply(void 0, [source].concat(observables))); };
    }

    function mergeMapTo(innerObservable, resultSelector, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        if (typeof resultSelector === 'function') {
            return mergeMap(function () { return innerObservable; }, resultSelector, concurrent);
        }
        if (typeof resultSelector === 'number') {
            concurrent = resultSelector;
        }
        return mergeMap(function () { return innerObservable; }, concurrent);
    }

    function mergeScan(accumulator, seed, concurrent) {
        if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
        return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
    }
    var MergeScanOperator = (function () {
        function MergeScanOperator(accumulator, seed, concurrent) {
            this.accumulator = accumulator;
            this.seed = seed;
            this.concurrent = concurrent;
        }
        MergeScanOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
        };
        return MergeScanOperator;
    }());
    var MergeScanSubscriber = (function (_super) {
        __extends(MergeScanSubscriber, _super);
        function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
            var _this = _super.call(this, destination) || this;
            _this.accumulator = accumulator;
            _this.acc = acc;
            _this.concurrent = concurrent;
            _this.hasValue = false;
            _this.hasCompleted = false;
            _this.buffer = [];
            _this.active = 0;
            _this.index = 0;
            return _this;
        }
        MergeScanSubscriber.prototype._next = function (value) {
            if (this.active < this.concurrent) {
                var index = this.index++;
                var destination = this.destination;
                var ish = void 0;
                try {
                    var accumulator = this.accumulator;
                    ish = accumulator(this.acc, value, index);
                }
                catch (e) {
                    return destination.error(e);
                }
                this.active++;
                this._innerSub(ish, value, index);
            }
            else {
                this.buffer.push(value);
            }
        };
        MergeScanSubscriber.prototype._innerSub = function (ish, value, index) {
            var innerSubscriber = new InnerSubscriber(this, value, index);
            var destination = this.destination;
            destination.add(innerSubscriber);
            var innerSubscription = subscribeToResult(this, ish, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                destination.add(innerSubscription);
            }
        };
        MergeScanSubscriber.prototype._complete = function () {
            this.hasCompleted = true;
            if (this.active === 0 && this.buffer.length === 0) {
                if (this.hasValue === false) {
                    this.destination.next(this.acc);
                }
                this.destination.complete();
            }
            this.unsubscribe();
        };
        MergeScanSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            var destination = this.destination;
            this.acc = innerValue;
            this.hasValue = true;
            destination.next(innerValue);
        };
        MergeScanSubscriber.prototype.notifyComplete = function (innerSub) {
            var buffer = this.buffer;
            var destination = this.destination;
            destination.remove(innerSub);
            this.active--;
            if (buffer.length > 0) {
                this._next(buffer.shift());
            }
            else if (this.active === 0 && this.hasCompleted) {
                if (this.hasValue === false) {
                    this.destination.next(this.acc);
                }
                this.destination.complete();
            }
        };
        return MergeScanSubscriber;
    }(OuterSubscriber));

    function min(comparer) {
        var min = (typeof comparer === 'function')
            ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
            : function (x, y) { return x < y ? x : y; };
        return reduce(min);
    }

    function multicast(subjectOrSubjectFactory, selector) {
        return function multicastOperatorFunction(source) {
            var subjectFactory;
            if (typeof subjectOrSubjectFactory === 'function') {
                subjectFactory = subjectOrSubjectFactory;
            }
            else {
                subjectFactory = function subjectFactory() {
                    return subjectOrSubjectFactory;
                };
            }
            if (typeof selector === 'function') {
                return source.lift(new MulticastOperator(subjectFactory, selector));
            }
            var connectable = Object.create(source, connectableObservableDescriptor);
            connectable.source = source;
            connectable.subjectFactory = subjectFactory;
            return connectable;
        };
    }
    var MulticastOperator = (function () {
        function MulticastOperator(subjectFactory, selector) {
            this.subjectFactory = subjectFactory;
            this.selector = selector;
        }
        MulticastOperator.prototype.call = function (subscriber, source) {
            var selector = this.selector;
            var subject = this.subjectFactory();
            var subscription = selector(subject).subscribe(subscriber);
            subscription.add(source.subscribe(subject));
            return subscription;
        };
        return MulticastOperator;
    }());

    function onErrorResumeNext$1() {
        var nextSources = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            nextSources[_i] = arguments[_i];
        }
        if (nextSources.length === 1 && isArray(nextSources[0])) {
            nextSources = nextSources[0];
        }
        return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
    }
    var OnErrorResumeNextOperator = (function () {
        function OnErrorResumeNextOperator(nextSources) {
            this.nextSources = nextSources;
        }
        OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
        };
        return OnErrorResumeNextOperator;
    }());
    var OnErrorResumeNextSubscriber = (function (_super) {
        __extends(OnErrorResumeNextSubscriber, _super);
        function OnErrorResumeNextSubscriber(destination, nextSources) {
            var _this = _super.call(this, destination) || this;
            _this.destination = destination;
            _this.nextSources = nextSources;
            return _this;
        }
        OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
            this.subscribeToNextSource();
        };
        OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
            this.subscribeToNextSource();
        };
        OnErrorResumeNextSubscriber.prototype._error = function (err) {
            this.subscribeToNextSource();
            this.unsubscribe();
        };
        OnErrorResumeNextSubscriber.prototype._complete = function () {
            this.subscribeToNextSource();
            this.unsubscribe();
        };
        OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
            var next = this.nextSources.shift();
            if (!!next) {
                var innerSubscriber = new InnerSubscriber(this, undefined, undefined);
                var destination = this.destination;
                destination.add(innerSubscriber);
                var innerSubscription = subscribeToResult(this, next, undefined, undefined, innerSubscriber);
                if (innerSubscription !== innerSubscriber) {
                    destination.add(innerSubscription);
                }
            }
            else {
                this.destination.complete();
            }
        };
        return OnErrorResumeNextSubscriber;
    }(OuterSubscriber));

    function pairwise() {
        return function (source) { return source.lift(new PairwiseOperator()); };
    }
    var PairwiseOperator = (function () {
        function PairwiseOperator() {
        }
        PairwiseOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new PairwiseSubscriber(subscriber));
        };
        return PairwiseOperator;
    }());
    var PairwiseSubscriber = (function (_super) {
        __extends(PairwiseSubscriber, _super);
        function PairwiseSubscriber(destination) {
            var _this = _super.call(this, destination) || this;
            _this.hasPrev = false;
            return _this;
        }
        PairwiseSubscriber.prototype._next = function (value) {
            var pair;
            if (this.hasPrev) {
                pair = [this.prev, value];
            }
            else {
                this.hasPrev = true;
            }
            this.prev = value;
            if (pair) {
                this.destination.next(pair);
            }
        };
        return PairwiseSubscriber;
    }(Subscriber));

    function partition$1(predicate, thisArg) {
        return function (source) { return [
            filter(predicate, thisArg)(source),
            filter(not(predicate, thisArg))(source)
        ]; };
    }

    function pluck() {
        var properties = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            properties[_i] = arguments[_i];
        }
        var length = properties.length;
        if (length === 0) {
            throw new Error('list of properties cannot be empty.');
        }
        return function (source) { return map(plucker(properties, length))(source); };
    }
    function plucker(props, length) {
        var mapper = function (x) {
            var currentProp = x;
            for (var i = 0; i < length; i++) {
                var p = currentProp[props[i]];
                if (typeof p !== 'undefined') {
                    currentProp = p;
                }
                else {
                    return undefined;
                }
            }
            return currentProp;
        };
        return mapper;
    }

    function publish(selector) {
        return selector ?
            multicast(function () { return new Subject(); }, selector) :
            multicast(new Subject());
    }

    function publishBehavior(value) {
        return function (source) { return multicast(new BehaviorSubject(value))(source); };
    }

    function publishLast() {
        return function (source) { return multicast(new AsyncSubject())(source); };
    }

    function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
        if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
            scheduler = selectorOrScheduler;
        }
        var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
        var subject = new ReplaySubject(bufferSize, windowTime, scheduler);
        return function (source) { return multicast(function () { return subject; }, selector)(source); };
    }

    function race$1() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        return function raceOperatorFunction(source) {
            if (observables.length === 1 && isArray(observables[0])) {
                observables = observables[0];
            }
            return source.lift.call(race.apply(void 0, [source].concat(observables)));
        };
    }

    function repeat(count) {
        if (count === void 0) { count = -1; }
        return function (source) {
            if (count === 0) {
                return empty$1();
            }
            else if (count < 0) {
                return source.lift(new RepeatOperator(-1, source));
            }
            else {
                return source.lift(new RepeatOperator(count - 1, source));
            }
        };
    }
    var RepeatOperator = (function () {
        function RepeatOperator(count, source) {
            this.count = count;
            this.source = source;
        }
        RepeatOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
        };
        return RepeatOperator;
    }());
    var RepeatSubscriber = (function (_super) {
        __extends(RepeatSubscriber, _super);
        function RepeatSubscriber(destination, count, source) {
            var _this = _super.call(this, destination) || this;
            _this.count = count;
            _this.source = source;
            return _this;
        }
        RepeatSubscriber.prototype.complete = function () {
            if (!this.isStopped) {
                var _a = this, source = _a.source, count = _a.count;
                if (count === 0) {
                    return _super.prototype.complete.call(this);
                }
                else if (count > -1) {
                    this.count = count - 1;
                }
                source.subscribe(this._unsubscribeAndRecycle());
            }
        };
        return RepeatSubscriber;
    }(Subscriber));

    function repeatWhen(notifier) {
        return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
    }
    var RepeatWhenOperator = (function () {
        function RepeatWhenOperator(notifier) {
            this.notifier = notifier;
        }
        RepeatWhenOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
        };
        return RepeatWhenOperator;
    }());
    var RepeatWhenSubscriber = (function (_super) {
        __extends(RepeatWhenSubscriber, _super);
        function RepeatWhenSubscriber(destination, notifier, source) {
            var _this = _super.call(this, destination) || this;
            _this.notifier = notifier;
            _this.source = source;
            _this.sourceIsBeingSubscribedTo = true;
            return _this;
        }
        RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.sourceIsBeingSubscribedTo = true;
            this.source.subscribe(this);
        };
        RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
            if (this.sourceIsBeingSubscribedTo === false) {
                return _super.prototype.complete.call(this);
            }
        };
        RepeatWhenSubscriber.prototype.complete = function () {
            this.sourceIsBeingSubscribedTo = false;
            if (!this.isStopped) {
                if (!this.retries) {
                    this.subscribeToRetries();
                }
                if (!this.retriesSubscription || this.retriesSubscription.closed) {
                    return _super.prototype.complete.call(this);
                }
                this._unsubscribeAndRecycle();
                this.notifications.next();
            }
        };
        RepeatWhenSubscriber.prototype._unsubscribe = function () {
            var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
            if (notifications) {
                notifications.unsubscribe();
                this.notifications = null;
            }
            if (retriesSubscription) {
                retriesSubscription.unsubscribe();
                this.retriesSubscription = null;
            }
            this.retries = null;
        };
        RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
            var _unsubscribe = this._unsubscribe;
            this._unsubscribe = null;
            _super.prototype._unsubscribeAndRecycle.call(this);
            this._unsubscribe = _unsubscribe;
            return this;
        };
        RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
            this.notifications = new Subject();
            var retries;
            try {
                var notifier = this.notifier;
                retries = notifier(this.notifications);
            }
            catch (e) {
                return _super.prototype.complete.call(this);
            }
            this.retries = retries;
            this.retriesSubscription = subscribeToResult(this, retries);
        };
        return RepeatWhenSubscriber;
    }(OuterSubscriber));

    function retry(count) {
        if (count === void 0) { count = -1; }
        return function (source) { return source.lift(new RetryOperator(count, source)); };
    }
    var RetryOperator = (function () {
        function RetryOperator(count, source) {
            this.count = count;
            this.source = source;
        }
        RetryOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
        };
        return RetryOperator;
    }());
    var RetrySubscriber = (function (_super) {
        __extends(RetrySubscriber, _super);
        function RetrySubscriber(destination, count, source) {
            var _this = _super.call(this, destination) || this;
            _this.count = count;
            _this.source = source;
            return _this;
        }
        RetrySubscriber.prototype.error = function (err) {
            if (!this.isStopped) {
                var _a = this, source = _a.source, count = _a.count;
                if (count === 0) {
                    return _super.prototype.error.call(this, err);
                }
                else if (count > -1) {
                    this.count = count - 1;
                }
                source.subscribe(this._unsubscribeAndRecycle());
            }
        };
        return RetrySubscriber;
    }(Subscriber));

    function retryWhen(notifier) {
        return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
    }
    var RetryWhenOperator = (function () {
        function RetryWhenOperator(notifier, source) {
            this.notifier = notifier;
            this.source = source;
        }
        RetryWhenOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
        };
        return RetryWhenOperator;
    }());
    var RetryWhenSubscriber = (function (_super) {
        __extends(RetryWhenSubscriber, _super);
        function RetryWhenSubscriber(destination, notifier, source) {
            var _this = _super.call(this, destination) || this;
            _this.notifier = notifier;
            _this.source = source;
            return _this;
        }
        RetryWhenSubscriber.prototype.error = function (err) {
            if (!this.isStopped) {
                var errors = this.errors;
                var retries = this.retries;
                var retriesSubscription = this.retriesSubscription;
                if (!retries) {
                    errors = new Subject();
                    try {
                        var notifier = this.notifier;
                        retries = notifier(errors);
                    }
                    catch (e) {
                        return _super.prototype.error.call(this, e);
                    }
                    retriesSubscription = subscribeToResult(this, retries);
                }
                else {
                    this.errors = null;
                    this.retriesSubscription = null;
                }
                this._unsubscribeAndRecycle();
                this.errors = errors;
                this.retries = retries;
                this.retriesSubscription = retriesSubscription;
                errors.next(err);
            }
        };
        RetryWhenSubscriber.prototype._unsubscribe = function () {
            var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
            if (errors) {
                errors.unsubscribe();
                this.errors = null;
            }
            if (retriesSubscription) {
                retriesSubscription.unsubscribe();
                this.retriesSubscription = null;
            }
            this.retries = null;
        };
        RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            var _unsubscribe = this._unsubscribe;
            this._unsubscribe = null;
            this._unsubscribeAndRecycle();
            this._unsubscribe = _unsubscribe;
            this.source.subscribe(this);
        };
        return RetryWhenSubscriber;
    }(OuterSubscriber));

    function sample(notifier) {
        return function (source) { return source.lift(new SampleOperator(notifier)); };
    }
    var SampleOperator = (function () {
        function SampleOperator(notifier) {
            this.notifier = notifier;
        }
        SampleOperator.prototype.call = function (subscriber, source) {
            var sampleSubscriber = new SampleSubscriber(subscriber);
            var subscription = source.subscribe(sampleSubscriber);
            subscription.add(subscribeToResult(sampleSubscriber, this.notifier));
            return subscription;
        };
        return SampleOperator;
    }());
    var SampleSubscriber = (function (_super) {
        __extends(SampleSubscriber, _super);
        function SampleSubscriber() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.hasValue = false;
            return _this;
        }
        SampleSubscriber.prototype._next = function (value) {
            this.value = value;
            this.hasValue = true;
        };
        SampleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.emitValue();
        };
        SampleSubscriber.prototype.notifyComplete = function () {
            this.emitValue();
        };
        SampleSubscriber.prototype.emitValue = function () {
            if (this.hasValue) {
                this.hasValue = false;
                this.destination.next(this.value);
            }
        };
        return SampleSubscriber;
    }(OuterSubscriber));

    function sampleTime(period, scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
    }
    var SampleTimeOperator = (function () {
        function SampleTimeOperator(period, scheduler) {
            this.period = period;
            this.scheduler = scheduler;
        }
        SampleTimeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
        };
        return SampleTimeOperator;
    }());
    var SampleTimeSubscriber = (function (_super) {
        __extends(SampleTimeSubscriber, _super);
        function SampleTimeSubscriber(destination, period, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.period = period;
            _this.scheduler = scheduler;
            _this.hasValue = false;
            _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
            return _this;
        }
        SampleTimeSubscriber.prototype._next = function (value) {
            this.lastValue = value;
            this.hasValue = true;
        };
        SampleTimeSubscriber.prototype.notifyNext = function () {
            if (this.hasValue) {
                this.hasValue = false;
                this.destination.next(this.lastValue);
            }
        };
        return SampleTimeSubscriber;
    }(Subscriber));
    function dispatchNotification(state) {
        var subscriber = state.subscriber, period = state.period;
        subscriber.notifyNext();
        this.schedule(state, period);
    }

    function sequenceEqual(compareTo, comparator) {
        return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
    }
    var SequenceEqualOperator = (function () {
        function SequenceEqualOperator(compareTo, comparator) {
            this.compareTo = compareTo;
            this.comparator = comparator;
        }
        SequenceEqualOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
        };
        return SequenceEqualOperator;
    }());
    var SequenceEqualSubscriber = (function (_super) {
        __extends(SequenceEqualSubscriber, _super);
        function SequenceEqualSubscriber(destination, compareTo, comparator) {
            var _this = _super.call(this, destination) || this;
            _this.compareTo = compareTo;
            _this.comparator = comparator;
            _this._a = [];
            _this._b = [];
            _this._oneComplete = false;
            _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));
            return _this;
        }
        SequenceEqualSubscriber.prototype._next = function (value) {
            if (this._oneComplete && this._b.length === 0) {
                this.emit(false);
            }
            else {
                this._a.push(value);
                this.checkValues();
            }
        };
        SequenceEqualSubscriber.prototype._complete = function () {
            if (this._oneComplete) {
                this.emit(this._a.length === 0 && this._b.length === 0);
            }
            else {
                this._oneComplete = true;
            }
            this.unsubscribe();
        };
        SequenceEqualSubscriber.prototype.checkValues = function () {
            var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
            while (_a.length > 0 && _b.length > 0) {
                var a = _a.shift();
                var b = _b.shift();
                var areEqual = false;
                try {
                    areEqual = comparator ? comparator(a, b) : a === b;
                }
                catch (e) {
                    this.destination.error(e);
                }
                if (!areEqual) {
                    this.emit(false);
                }
            }
        };
        SequenceEqualSubscriber.prototype.emit = function (value) {
            var destination = this.destination;
            destination.next(value);
            destination.complete();
        };
        SequenceEqualSubscriber.prototype.nextB = function (value) {
            if (this._oneComplete && this._a.length === 0) {
                this.emit(false);
            }
            else {
                this._b.push(value);
                this.checkValues();
            }
        };
        SequenceEqualSubscriber.prototype.completeB = function () {
            if (this._oneComplete) {
                this.emit(this._a.length === 0 && this._b.length === 0);
            }
            else {
                this._oneComplete = true;
            }
        };
        return SequenceEqualSubscriber;
    }(Subscriber));
    var SequenceEqualCompareToSubscriber = (function (_super) {
        __extends(SequenceEqualCompareToSubscriber, _super);
        function SequenceEqualCompareToSubscriber(destination, parent) {
            var _this = _super.call(this, destination) || this;
            _this.parent = parent;
            return _this;
        }
        SequenceEqualCompareToSubscriber.prototype._next = function (value) {
            this.parent.nextB(value);
        };
        SequenceEqualCompareToSubscriber.prototype._error = function (err) {
            this.parent.error(err);
            this.unsubscribe();
        };
        SequenceEqualCompareToSubscriber.prototype._complete = function () {
            this.parent.completeB();
            this.unsubscribe();
        };
        return SequenceEqualCompareToSubscriber;
    }(Subscriber));

    function shareSubjectFactory() {
        return new Subject();
    }
    function share() {
        return function (source) { return refCount()(multicast(shareSubjectFactory)(source)); };
    }

    function shareReplay(configOrBufferSize, windowTime, scheduler) {
        var config;
        if (configOrBufferSize && typeof configOrBufferSize === 'object') {
            config = configOrBufferSize;
        }
        else {
            config = {
                bufferSize: configOrBufferSize,
                windowTime: windowTime,
                refCount: false,
                scheduler: scheduler
            };
        }
        return function (source) { return source.lift(shareReplayOperator(config)); };
    }
    function shareReplayOperator(_a) {
        var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
        var subject;
        var refCount = 0;
        var subscription;
        var hasError = false;
        var isComplete = false;
        return function shareReplayOperation(source) {
            refCount++;
            if (!subject || hasError) {
                hasError = false;
                subject = new ReplaySubject(bufferSize, windowTime, scheduler);
                subscription = source.subscribe({
                    next: function (value) { subject.next(value); },
                    error: function (err) {
                        hasError = true;
                        subject.error(err);
                    },
                    complete: function () {
                        isComplete = true;
                        subscription = undefined;
                        subject.complete();
                    },
                });
            }
            var innerSub = subject.subscribe(this);
            this.add(function () {
                refCount--;
                innerSub.unsubscribe();
                if (subscription && !isComplete && useRefCount && refCount === 0) {
                    subscription.unsubscribe();
                    subscription = undefined;
                    subject = undefined;
                }
            });
        };
    }

    function single(predicate) {
        return function (source) { return source.lift(new SingleOperator(predicate, source)); };
    }
    var SingleOperator = (function () {
        function SingleOperator(predicate, source) {
            this.predicate = predicate;
            this.source = source;
        }
        SingleOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
        };
        return SingleOperator;
    }());
    var SingleSubscriber = (function (_super) {
        __extends(SingleSubscriber, _super);
        function SingleSubscriber(destination, predicate, source) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.source = source;
            _this.seenValue = false;
            _this.index = 0;
            return _this;
        }
        SingleSubscriber.prototype.applySingleValue = function (value) {
            if (this.seenValue) {
                this.destination.error('Sequence contains more than one element');
            }
            else {
                this.seenValue = true;
                this.singleValue = value;
            }
        };
        SingleSubscriber.prototype._next = function (value) {
            var index = this.index++;
            if (this.predicate) {
                this.tryNext(value, index);
            }
            else {
                this.applySingleValue(value);
            }
        };
        SingleSubscriber.prototype.tryNext = function (value, index) {
            try {
                if (this.predicate(value, index, this.source)) {
                    this.applySingleValue(value);
                }
            }
            catch (err) {
                this.destination.error(err);
            }
        };
        SingleSubscriber.prototype._complete = function () {
            var destination = this.destination;
            if (this.index > 0) {
                destination.next(this.seenValue ? this.singleValue : undefined);
                destination.complete();
            }
            else {
                destination.error(new EmptyError);
            }
        };
        return SingleSubscriber;
    }(Subscriber));

    function skip(count) {
        return function (source) { return source.lift(new SkipOperator(count)); };
    }
    var SkipOperator = (function () {
        function SkipOperator(total) {
            this.total = total;
        }
        SkipOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SkipSubscriber(subscriber, this.total));
        };
        return SkipOperator;
    }());
    var SkipSubscriber = (function (_super) {
        __extends(SkipSubscriber, _super);
        function SkipSubscriber(destination, total) {
            var _this = _super.call(this, destination) || this;
            _this.total = total;
            _this.count = 0;
            return _this;
        }
        SkipSubscriber.prototype._next = function (x) {
            if (++this.count > this.total) {
                this.destination.next(x);
            }
        };
        return SkipSubscriber;
    }(Subscriber));

    function skipLast(count) {
        return function (source) { return source.lift(new SkipLastOperator(count)); };
    }
    var SkipLastOperator = (function () {
        function SkipLastOperator(_skipCount) {
            this._skipCount = _skipCount;
            if (this._skipCount < 0) {
                throw new ArgumentOutOfRangeError;
            }
        }
        SkipLastOperator.prototype.call = function (subscriber, source) {
            if (this._skipCount === 0) {
                return source.subscribe(new Subscriber(subscriber));
            }
            else {
                return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
            }
        };
        return SkipLastOperator;
    }());
    var SkipLastSubscriber = (function (_super) {
        __extends(SkipLastSubscriber, _super);
        function SkipLastSubscriber(destination, _skipCount) {
            var _this = _super.call(this, destination) || this;
            _this._skipCount = _skipCount;
            _this._count = 0;
            _this._ring = new Array(_skipCount);
            return _this;
        }
        SkipLastSubscriber.prototype._next = function (value) {
            var skipCount = this._skipCount;
            var count = this._count++;
            if (count < skipCount) {
                this._ring[count] = value;
            }
            else {
                var currentIndex = count % skipCount;
                var ring = this._ring;
                var oldValue = ring[currentIndex];
                ring[currentIndex] = value;
                this.destination.next(oldValue);
            }
        };
        return SkipLastSubscriber;
    }(Subscriber));

    function skipUntil(notifier) {
        return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
    }
    var SkipUntilOperator = (function () {
        function SkipUntilOperator(notifier) {
            this.notifier = notifier;
        }
        SkipUntilOperator.prototype.call = function (destination, source) {
            return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
        };
        return SkipUntilOperator;
    }());
    var SkipUntilSubscriber = (function (_super) {
        __extends(SkipUntilSubscriber, _super);
        function SkipUntilSubscriber(destination, notifier) {
            var _this = _super.call(this, destination) || this;
            _this.hasValue = false;
            var innerSubscriber = new InnerSubscriber(_this, undefined, undefined);
            _this.add(innerSubscriber);
            _this.innerSubscription = innerSubscriber;
            var innerSubscription = subscribeToResult(_this, notifier, undefined, undefined, innerSubscriber);
            if (innerSubscription !== innerSubscriber) {
                _this.add(innerSubscription);
                _this.innerSubscription = innerSubscription;
            }
            return _this;
        }
        SkipUntilSubscriber.prototype._next = function (value) {
            if (this.hasValue) {
                _super.prototype._next.call(this, value);
            }
        };
        SkipUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.hasValue = true;
            if (this.innerSubscription) {
                this.innerSubscription.unsubscribe();
            }
        };
        SkipUntilSubscriber.prototype.notifyComplete = function () {
        };
        return SkipUntilSubscriber;
    }(OuterSubscriber));

    function skipWhile(predicate) {
        return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
    }
    var SkipWhileOperator = (function () {
        function SkipWhileOperator(predicate) {
            this.predicate = predicate;
        }
        SkipWhileOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
        };
        return SkipWhileOperator;
    }());
    var SkipWhileSubscriber = (function (_super) {
        __extends(SkipWhileSubscriber, _super);
        function SkipWhileSubscriber(destination, predicate) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.skipping = true;
            _this.index = 0;
            return _this;
        }
        SkipWhileSubscriber.prototype._next = function (value) {
            var destination = this.destination;
            if (this.skipping) {
                this.tryCallPredicate(value);
            }
            if (!this.skipping) {
                destination.next(value);
            }
        };
        SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
            try {
                var result = this.predicate(value, this.index++);
                this.skipping = Boolean(result);
            }
            catch (err) {
                this.destination.error(err);
            }
        };
        return SkipWhileSubscriber;
    }(Subscriber));

    function startWith() {
        var array = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            array[_i] = arguments[_i];
        }
        var scheduler = array[array.length - 1];
        if (isScheduler(scheduler)) {
            array.pop();
            return function (source) { return concat(array, source, scheduler); };
        }
        else {
            return function (source) { return concat(array, source); };
        }
    }

    var SubscribeOnObservable = (function (_super) {
        __extends(SubscribeOnObservable, _super);
        function SubscribeOnObservable(source, delayTime, scheduler) {
            if (delayTime === void 0) { delayTime = 0; }
            if (scheduler === void 0) { scheduler = asap; }
            var _this = _super.call(this) || this;
            _this.source = source;
            _this.delayTime = delayTime;
            _this.scheduler = scheduler;
            if (!isNumeric(delayTime) || delayTime < 0) {
                _this.delayTime = 0;
            }
            if (!scheduler || typeof scheduler.schedule !== 'function') {
                _this.scheduler = asap;
            }
            return _this;
        }
        SubscribeOnObservable.create = function (source, delay, scheduler) {
            if (delay === void 0) { delay = 0; }
            if (scheduler === void 0) { scheduler = asap; }
            return new SubscribeOnObservable(source, delay, scheduler);
        };
        SubscribeOnObservable.dispatch = function (arg) {
            var source = arg.source, subscriber = arg.subscriber;
            return this.add(source.subscribe(subscriber));
        };
        SubscribeOnObservable.prototype._subscribe = function (subscriber) {
            var delay = this.delayTime;
            var source = this.source;
            var scheduler = this.scheduler;
            return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
                source: source, subscriber: subscriber
            });
        };
        return SubscribeOnObservable;
    }(Observable));

    function subscribeOn(scheduler, delay) {
        if (delay === void 0) { delay = 0; }
        return function subscribeOnOperatorFunction(source) {
            return source.lift(new SubscribeOnOperator(scheduler, delay));
        };
    }
    var SubscribeOnOperator = (function () {
        function SubscribeOnOperator(scheduler, delay) {
            this.scheduler = scheduler;
            this.delay = delay;
        }
        SubscribeOnOperator.prototype.call = function (subscriber, source) {
            return new SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
        };
        return SubscribeOnOperator;
    }());

    function switchMap(project, resultSelector) {
        if (typeof resultSelector === 'function') {
            return function (source) { return source.pipe(switchMap(function (a, i) { return from(project(a, i)).pipe(map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
        }
        return function (source) { return source.lift(new SwitchMapOperator(project)); };
    }
    var SwitchMapOperator = (function () {
        function SwitchMapOperator(project) {
            this.project = project;
        }
        SwitchMapOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
        };
        return SwitchMapOperator;
    }());
    var SwitchMapSubscriber = (function (_super) {
        __extends(SwitchMapSubscriber, _super);
        function SwitchMapSubscriber(destination, project) {
            var _this = _super.call(this, destination) || this;
            _this.project = project;
            _this.index = 0;
            return _this;
        }
        SwitchMapSubscriber.prototype._next = function (value) {
            var result;
            var index = this.index++;
            try {
                result = this.project(value, index);
            }
            catch (error) {
                this.destination.error(error);
                return;
            }
            this._innerSub(result, value, index);
        };
        SwitchMapSubscriber.prototype._innerSub = function (result, value, index) {
            var innerSubscription = this.innerSubscription;
            if (innerSubscription) {
                innerSubscription.unsubscribe();
            }
            var innerSubscriber = new InnerSubscriber(this, value, index);
            var destination = this.destination;
            destination.add(innerSubscriber);
            this.innerSubscription = subscribeToResult(this, result, undefined, undefined, innerSubscriber);
            if (this.innerSubscription !== innerSubscriber) {
                destination.add(this.innerSubscription);
            }
        };
        SwitchMapSubscriber.prototype._complete = function () {
            var innerSubscription = this.innerSubscription;
            if (!innerSubscription || innerSubscription.closed) {
                _super.prototype._complete.call(this);
            }
            this.unsubscribe();
        };
        SwitchMapSubscriber.prototype._unsubscribe = function () {
            this.innerSubscription = null;
        };
        SwitchMapSubscriber.prototype.notifyComplete = function (innerSub) {
            var destination = this.destination;
            destination.remove(innerSub);
            this.innerSubscription = null;
            if (this.isStopped) {
                _super.prototype._complete.call(this);
            }
        };
        SwitchMapSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.destination.next(innerValue);
        };
        return SwitchMapSubscriber;
    }(OuterSubscriber));

    function switchAll() {
        return switchMap(identity);
    }

    function switchMapTo(innerObservable, resultSelector) {
        return resultSelector ? switchMap(function () { return innerObservable; }, resultSelector) : switchMap(function () { return innerObservable; });
    }

    function takeUntil(notifier) {
        return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
    }
    var TakeUntilOperator = (function () {
        function TakeUntilOperator(notifier) {
            this.notifier = notifier;
        }
        TakeUntilOperator.prototype.call = function (subscriber, source) {
            var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
            var notifierSubscription = subscribeToResult(takeUntilSubscriber, this.notifier);
            if (notifierSubscription && !takeUntilSubscriber.seenValue) {
                takeUntilSubscriber.add(notifierSubscription);
                return source.subscribe(takeUntilSubscriber);
            }
            return takeUntilSubscriber;
        };
        return TakeUntilOperator;
    }());
    var TakeUntilSubscriber = (function (_super) {
        __extends(TakeUntilSubscriber, _super);
        function TakeUntilSubscriber(destination) {
            var _this = _super.call(this, destination) || this;
            _this.seenValue = false;
            return _this;
        }
        TakeUntilSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.seenValue = true;
            this.complete();
        };
        TakeUntilSubscriber.prototype.notifyComplete = function () {
        };
        return TakeUntilSubscriber;
    }(OuterSubscriber));

    function takeWhile(predicate, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        return function (source) {
            return source.lift(new TakeWhileOperator(predicate, inclusive));
        };
    }
    var TakeWhileOperator = (function () {
        function TakeWhileOperator(predicate, inclusive) {
            this.predicate = predicate;
            this.inclusive = inclusive;
        }
        TakeWhileOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
        };
        return TakeWhileOperator;
    }());
    var TakeWhileSubscriber = (function (_super) {
        __extends(TakeWhileSubscriber, _super);
        function TakeWhileSubscriber(destination, predicate, inclusive) {
            var _this = _super.call(this, destination) || this;
            _this.predicate = predicate;
            _this.inclusive = inclusive;
            _this.index = 0;
            return _this;
        }
        TakeWhileSubscriber.prototype._next = function (value) {
            var destination = this.destination;
            var result;
            try {
                result = this.predicate(value, this.index++);
            }
            catch (err) {
                destination.error(err);
                return;
            }
            this.nextOrComplete(value, result);
        };
        TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
            var destination = this.destination;
            if (Boolean(predicateResult)) {
                destination.next(value);
            }
            else {
                if (this.inclusive) {
                    destination.next(value);
                }
                destination.complete();
            }
        };
        return TakeWhileSubscriber;
    }(Subscriber));

    function tap(nextOrObserver, error, complete) {
        return function tapOperatorFunction(source) {
            return source.lift(new DoOperator(nextOrObserver, error, complete));
        };
    }
    var DoOperator = (function () {
        function DoOperator(nextOrObserver, error, complete) {
            this.nextOrObserver = nextOrObserver;
            this.error = error;
            this.complete = complete;
        }
        DoOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
        };
        return DoOperator;
    }());
    var TapSubscriber = (function (_super) {
        __extends(TapSubscriber, _super);
        function TapSubscriber(destination, observerOrNext, error, complete) {
            var _this = _super.call(this, destination) || this;
            _this._tapNext = noop;
            _this._tapError = noop;
            _this._tapComplete = noop;
            _this._tapError = error || noop;
            _this._tapComplete = complete || noop;
            if (isFunction(observerOrNext)) {
                _this._context = _this;
                _this._tapNext = observerOrNext;
            }
            else if (observerOrNext) {
                _this._context = observerOrNext;
                _this._tapNext = observerOrNext.next || noop;
                _this._tapError = observerOrNext.error || noop;
                _this._tapComplete = observerOrNext.complete || noop;
            }
            return _this;
        }
        TapSubscriber.prototype._next = function (value) {
            try {
                this._tapNext.call(this._context, value);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.destination.next(value);
        };
        TapSubscriber.prototype._error = function (err) {
            try {
                this._tapError.call(this._context, err);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.destination.error(err);
        };
        TapSubscriber.prototype._complete = function () {
            try {
                this._tapComplete.call(this._context);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            return this.destination.complete();
        };
        return TapSubscriber;
    }(Subscriber));

    var defaultThrottleConfig = {
        leading: true,
        trailing: false
    };
    function throttle(durationSelector, config) {
        if (config === void 0) { config = defaultThrottleConfig; }
        return function (source) { return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing)); };
    }
    var ThrottleOperator = (function () {
        function ThrottleOperator(durationSelector, leading, trailing) {
            this.durationSelector = durationSelector;
            this.leading = leading;
            this.trailing = trailing;
        }
        ThrottleOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
        };
        return ThrottleOperator;
    }());
    var ThrottleSubscriber = (function (_super) {
        __extends(ThrottleSubscriber, _super);
        function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
            var _this = _super.call(this, destination) || this;
            _this.destination = destination;
            _this.durationSelector = durationSelector;
            _this._leading = _leading;
            _this._trailing = _trailing;
            _this._hasValue = false;
            return _this;
        }
        ThrottleSubscriber.prototype._next = function (value) {
            this._hasValue = true;
            this._sendValue = value;
            if (!this._throttled) {
                if (this._leading) {
                    this.send();
                }
                else {
                    this.throttle(value);
                }
            }
        };
        ThrottleSubscriber.prototype.send = function () {
            var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
            if (_hasValue) {
                this.destination.next(_sendValue);
                this.throttle(_sendValue);
            }
            this._hasValue = false;
            this._sendValue = null;
        };
        ThrottleSubscriber.prototype.throttle = function (value) {
            var duration = this.tryDurationSelector(value);
            if (!!duration) {
                this.add(this._throttled = subscribeToResult(this, duration));
            }
        };
        ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
            try {
                return this.durationSelector(value);
            }
            catch (err) {
                this.destination.error(err);
                return null;
            }
        };
        ThrottleSubscriber.prototype.throttlingDone = function () {
            var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
            if (_throttled) {
                _throttled.unsubscribe();
            }
            this._throttled = null;
            if (_trailing) {
                this.send();
            }
        };
        ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.throttlingDone();
        };
        ThrottleSubscriber.prototype.notifyComplete = function () {
            this.throttlingDone();
        };
        return ThrottleSubscriber;
    }(OuterSubscriber));

    function throttleTime(duration, scheduler, config) {
        if (scheduler === void 0) { scheduler = async; }
        if (config === void 0) { config = defaultThrottleConfig; }
        return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
    }
    var ThrottleTimeOperator = (function () {
        function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
            this.duration = duration;
            this.scheduler = scheduler;
            this.leading = leading;
            this.trailing = trailing;
        }
        ThrottleTimeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
        };
        return ThrottleTimeOperator;
    }());
    var ThrottleTimeSubscriber = (function (_super) {
        __extends(ThrottleTimeSubscriber, _super);
        function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
            var _this = _super.call(this, destination) || this;
            _this.duration = duration;
            _this.scheduler = scheduler;
            _this.leading = leading;
            _this.trailing = trailing;
            _this._hasTrailingValue = false;
            _this._trailingValue = null;
            return _this;
        }
        ThrottleTimeSubscriber.prototype._next = function (value) {
            if (this.throttled) {
                if (this.trailing) {
                    this._trailingValue = value;
                    this._hasTrailingValue = true;
                }
            }
            else {
                this.add(this.throttled = this.scheduler.schedule(dispatchNext$3, this.duration, { subscriber: this }));
                if (this.leading) {
                    this.destination.next(value);
                }
                else if (this.trailing) {
                    this._trailingValue = value;
                    this._hasTrailingValue = true;
                }
            }
        };
        ThrottleTimeSubscriber.prototype._complete = function () {
            if (this._hasTrailingValue) {
                this.destination.next(this._trailingValue);
                this.destination.complete();
            }
            else {
                this.destination.complete();
            }
        };
        ThrottleTimeSubscriber.prototype.clearThrottle = function () {
            var throttled = this.throttled;
            if (throttled) {
                if (this.trailing && this._hasTrailingValue) {
                    this.destination.next(this._trailingValue);
                    this._trailingValue = null;
                    this._hasTrailingValue = false;
                }
                throttled.unsubscribe();
                this.remove(throttled);
                this.throttled = null;
            }
        };
        return ThrottleTimeSubscriber;
    }(Subscriber));
    function dispatchNext$3(arg) {
        var subscriber = arg.subscriber;
        subscriber.clearThrottle();
    }

    function timeInterval(scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return function (source) { return defer(function () {
            return source.pipe(scan(function (_a, value) {
                var current = _a.current;
                return ({ value: value, current: scheduler.now(), last: current });
            }, { current: scheduler.now(), value: undefined, last: undefined }), map(function (_a) {
                var current = _a.current, last = _a.last, value = _a.value;
                return new TimeInterval(value, current - last);
            }));
        }); };
    }
    var TimeInterval = (function () {
        function TimeInterval(value, interval) {
            this.value = value;
            this.interval = interval;
        }
        return TimeInterval;
    }());

    function timeoutWith(due, withObservable, scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return function (source) {
            var absoluteTimeout = isDate(due);
            var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
            return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
        };
    }
    var TimeoutWithOperator = (function () {
        function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
            this.waitFor = waitFor;
            this.absoluteTimeout = absoluteTimeout;
            this.withObservable = withObservable;
            this.scheduler = scheduler;
        }
        TimeoutWithOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
        };
        return TimeoutWithOperator;
    }());
    var TimeoutWithSubscriber = (function (_super) {
        __extends(TimeoutWithSubscriber, _super);
        function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.absoluteTimeout = absoluteTimeout;
            _this.waitFor = waitFor;
            _this.withObservable = withObservable;
            _this.scheduler = scheduler;
            _this.action = null;
            _this.scheduleTimeout();
            return _this;
        }
        TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
            var withObservable = subscriber.withObservable;
            subscriber._unsubscribeAndRecycle();
            subscriber.add(subscribeToResult(subscriber, withObservable));
        };
        TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
            var action = this.action;
            if (action) {
                this.action = action.schedule(this, this.waitFor);
            }
            else {
                this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
            }
        };
        TimeoutWithSubscriber.prototype._next = function (value) {
            if (!this.absoluteTimeout) {
                this.scheduleTimeout();
            }
            _super.prototype._next.call(this, value);
        };
        TimeoutWithSubscriber.prototype._unsubscribe = function () {
            this.action = null;
            this.scheduler = null;
            this.withObservable = null;
        };
        return TimeoutWithSubscriber;
    }(OuterSubscriber));

    function timeout(due, scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return timeoutWith(due, throwError(new TimeoutError()), scheduler);
    }

    function timestamp(scheduler) {
        if (scheduler === void 0) { scheduler = async; }
        return map(function (value) { return new Timestamp(value, scheduler.now()); });
    }
    var Timestamp = (function () {
        function Timestamp(value, timestamp) {
            this.value = value;
            this.timestamp = timestamp;
        }
        return Timestamp;
    }());

    function toArrayReducer(arr, item, index) {
        if (index === 0) {
            return [item];
        }
        arr.push(item);
        return arr;
    }
    function toArray() {
        return reduce(toArrayReducer, []);
    }

    function window$1(windowBoundaries) {
        return function windowOperatorFunction(source) {
            return source.lift(new WindowOperator(windowBoundaries));
        };
    }
    var WindowOperator = (function () {
        function WindowOperator(windowBoundaries) {
            this.windowBoundaries = windowBoundaries;
        }
        WindowOperator.prototype.call = function (subscriber, source) {
            var windowSubscriber = new WindowSubscriber(subscriber);
            var sourceSubscription = source.subscribe(windowSubscriber);
            if (!sourceSubscription.closed) {
                windowSubscriber.add(subscribeToResult(windowSubscriber, this.windowBoundaries));
            }
            return sourceSubscription;
        };
        return WindowOperator;
    }());
    var WindowSubscriber = (function (_super) {
        __extends(WindowSubscriber, _super);
        function WindowSubscriber(destination) {
            var _this = _super.call(this, destination) || this;
            _this.window = new Subject();
            destination.next(_this.window);
            return _this;
        }
        WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.openWindow();
        };
        WindowSubscriber.prototype.notifyError = function (error, innerSub) {
            this._error(error);
        };
        WindowSubscriber.prototype.notifyComplete = function (innerSub) {
            this._complete();
        };
        WindowSubscriber.prototype._next = function (value) {
            this.window.next(value);
        };
        WindowSubscriber.prototype._error = function (err) {
            this.window.error(err);
            this.destination.error(err);
        };
        WindowSubscriber.prototype._complete = function () {
            this.window.complete();
            this.destination.complete();
        };
        WindowSubscriber.prototype._unsubscribe = function () {
            this.window = null;
        };
        WindowSubscriber.prototype.openWindow = function () {
            var prevWindow = this.window;
            if (prevWindow) {
                prevWindow.complete();
            }
            var destination = this.destination;
            var newWindow = this.window = new Subject();
            destination.next(newWindow);
        };
        return WindowSubscriber;
    }(OuterSubscriber));

    function windowCount(windowSize, startWindowEvery) {
        if (startWindowEvery === void 0) { startWindowEvery = 0; }
        return function windowCountOperatorFunction(source) {
            return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
        };
    }
    var WindowCountOperator = (function () {
        function WindowCountOperator(windowSize, startWindowEvery) {
            this.windowSize = windowSize;
            this.startWindowEvery = startWindowEvery;
        }
        WindowCountOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
        };
        return WindowCountOperator;
    }());
    var WindowCountSubscriber = (function (_super) {
        __extends(WindowCountSubscriber, _super);
        function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
            var _this = _super.call(this, destination) || this;
            _this.destination = destination;
            _this.windowSize = windowSize;
            _this.startWindowEvery = startWindowEvery;
            _this.windows = [new Subject()];
            _this.count = 0;
            destination.next(_this.windows[0]);
            return _this;
        }
        WindowCountSubscriber.prototype._next = function (value) {
            var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
            var destination = this.destination;
            var windowSize = this.windowSize;
            var windows = this.windows;
            var len = windows.length;
            for (var i = 0; i < len && !this.closed; i++) {
                windows[i].next(value);
            }
            var c = this.count - windowSize + 1;
            if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
                windows.shift().complete();
            }
            if (++this.count % startWindowEvery === 0 && !this.closed) {
                var window_1 = new Subject();
                windows.push(window_1);
                destination.next(window_1);
            }
        };
        WindowCountSubscriber.prototype._error = function (err) {
            var windows = this.windows;
            if (windows) {
                while (windows.length > 0 && !this.closed) {
                    windows.shift().error(err);
                }
            }
            this.destination.error(err);
        };
        WindowCountSubscriber.prototype._complete = function () {
            var windows = this.windows;
            if (windows) {
                while (windows.length > 0 && !this.closed) {
                    windows.shift().complete();
                }
            }
            this.destination.complete();
        };
        WindowCountSubscriber.prototype._unsubscribe = function () {
            this.count = 0;
            this.windows = null;
        };
        return WindowCountSubscriber;
    }(Subscriber));

    function windowTime(windowTimeSpan) {
        var scheduler = async;
        var windowCreationInterval = null;
        var maxWindowSize = Number.POSITIVE_INFINITY;
        if (isScheduler(arguments[3])) {
            scheduler = arguments[3];
        }
        if (isScheduler(arguments[2])) {
            scheduler = arguments[2];
        }
        else if (isNumeric(arguments[2])) {
            maxWindowSize = arguments[2];
        }
        if (isScheduler(arguments[1])) {
            scheduler = arguments[1];
        }
        else if (isNumeric(arguments[1])) {
            windowCreationInterval = arguments[1];
        }
        return function windowTimeOperatorFunction(source) {
            return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
        };
    }
    var WindowTimeOperator = (function () {
        function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
            this.windowTimeSpan = windowTimeSpan;
            this.windowCreationInterval = windowCreationInterval;
            this.maxWindowSize = maxWindowSize;
            this.scheduler = scheduler;
        }
        WindowTimeOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
        };
        return WindowTimeOperator;
    }());
    var CountedSubject = (function (_super) {
        __extends(CountedSubject, _super);
        function CountedSubject() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this._numberOfNextedValues = 0;
            return _this;
        }
        CountedSubject.prototype.next = function (value) {
            this._numberOfNextedValues++;
            _super.prototype.next.call(this, value);
        };
        Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
            get: function () {
                return this._numberOfNextedValues;
            },
            enumerable: true,
            configurable: true
        });
        return CountedSubject;
    }(Subject));
    var WindowTimeSubscriber = (function (_super) {
        __extends(WindowTimeSubscriber, _super);
        function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
            var _this = _super.call(this, destination) || this;
            _this.destination = destination;
            _this.windowTimeSpan = windowTimeSpan;
            _this.windowCreationInterval = windowCreationInterval;
            _this.maxWindowSize = maxWindowSize;
            _this.scheduler = scheduler;
            _this.windows = [];
            var window = _this.openWindow();
            if (windowCreationInterval !== null && windowCreationInterval >= 0) {
                var closeState = { subscriber: _this, window: window, context: null };
                var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
                _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
                _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
            }
            else {
                var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
                _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
            }
            return _this;
        }
        WindowTimeSubscriber.prototype._next = function (value) {
            var windows = this.windows;
            var len = windows.length;
            for (var i = 0; i < len; i++) {
                var window_1 = windows[i];
                if (!window_1.closed) {
                    window_1.next(value);
                    if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                        this.closeWindow(window_1);
                    }
                }
            }
        };
        WindowTimeSubscriber.prototype._error = function (err) {
            var windows = this.windows;
            while (windows.length > 0) {
                windows.shift().error(err);
            }
            this.destination.error(err);
        };
        WindowTimeSubscriber.prototype._complete = function () {
            var windows = this.windows;
            while (windows.length > 0) {
                var window_2 = windows.shift();
                if (!window_2.closed) {
                    window_2.complete();
                }
            }
            this.destination.complete();
        };
        WindowTimeSubscriber.prototype.openWindow = function () {
            var window = new CountedSubject();
            this.windows.push(window);
            var destination = this.destination;
            destination.next(window);
            return window;
        };
        WindowTimeSubscriber.prototype.closeWindow = function (window) {
            window.complete();
            var windows = this.windows;
            windows.splice(windows.indexOf(window), 1);
        };
        return WindowTimeSubscriber;
    }(Subscriber));
    function dispatchWindowTimeSpanOnly(state) {
        var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
        if (window) {
            subscriber.closeWindow(window);
        }
        state.window = subscriber.openWindow();
        this.schedule(state, windowTimeSpan);
    }
    function dispatchWindowCreation(state) {
        var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
        var window = subscriber.openWindow();
        var action = this;
        var context = { action: action, subscription: null };
        var timeSpanState = { subscriber: subscriber, window: window, context: context };
        context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
        action.add(context.subscription);
        action.schedule(state, windowCreationInterval);
    }
    function dispatchWindowClose(state) {
        var subscriber = state.subscriber, window = state.window, context = state.context;
        if (context && context.action && context.subscription) {
            context.action.remove(context.subscription);
        }
        subscriber.closeWindow(window);
    }

    function windowToggle(openings, closingSelector) {
        return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
    }
    var WindowToggleOperator = (function () {
        function WindowToggleOperator(openings, closingSelector) {
            this.openings = openings;
            this.closingSelector = closingSelector;
        }
        WindowToggleOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
        };
        return WindowToggleOperator;
    }());
    var WindowToggleSubscriber = (function (_super) {
        __extends(WindowToggleSubscriber, _super);
        function WindowToggleSubscriber(destination, openings, closingSelector) {
            var _this = _super.call(this, destination) || this;
            _this.openings = openings;
            _this.closingSelector = closingSelector;
            _this.contexts = [];
            _this.add(_this.openSubscription = subscribeToResult(_this, openings, openings));
            return _this;
        }
        WindowToggleSubscriber.prototype._next = function (value) {
            var contexts = this.contexts;
            if (contexts) {
                var len = contexts.length;
                for (var i = 0; i < len; i++) {
                    contexts[i].window.next(value);
                }
            }
        };
        WindowToggleSubscriber.prototype._error = function (err) {
            var contexts = this.contexts;
            this.contexts = null;
            if (contexts) {
                var len = contexts.length;
                var index = -1;
                while (++index < len) {
                    var context_1 = contexts[index];
                    context_1.window.error(err);
                    context_1.subscription.unsubscribe();
                }
            }
            _super.prototype._error.call(this, err);
        };
        WindowToggleSubscriber.prototype._complete = function () {
            var contexts = this.contexts;
            this.contexts = null;
            if (contexts) {
                var len = contexts.length;
                var index = -1;
                while (++index < len) {
                    var context_2 = contexts[index];
                    context_2.window.complete();
                    context_2.subscription.unsubscribe();
                }
            }
            _super.prototype._complete.call(this);
        };
        WindowToggleSubscriber.prototype._unsubscribe = function () {
            var contexts = this.contexts;
            this.contexts = null;
            if (contexts) {
                var len = contexts.length;
                var index = -1;
                while (++index < len) {
                    var context_3 = contexts[index];
                    context_3.window.unsubscribe();
                    context_3.subscription.unsubscribe();
                }
            }
        };
        WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            if (outerValue === this.openings) {
                var closingNotifier = void 0;
                try {
                    var closingSelector = this.closingSelector;
                    closingNotifier = closingSelector(innerValue);
                }
                catch (e) {
                    return this.error(e);
                }
                var window_1 = new Subject();
                var subscription = new Subscription();
                var context_4 = { window: window_1, subscription: subscription };
                this.contexts.push(context_4);
                var innerSubscription = subscribeToResult(this, closingNotifier, context_4);
                if (innerSubscription.closed) {
                    this.closeWindow(this.contexts.length - 1);
                }
                else {
                    innerSubscription.context = context_4;
                    subscription.add(innerSubscription);
                }
                this.destination.next(window_1);
            }
            else {
                this.closeWindow(this.contexts.indexOf(outerValue));
            }
        };
        WindowToggleSubscriber.prototype.notifyError = function (err) {
            this.error(err);
        };
        WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
            if (inner !== this.openSubscription) {
                this.closeWindow(this.contexts.indexOf(inner.context));
            }
        };
        WindowToggleSubscriber.prototype.closeWindow = function (index) {
            if (index === -1) {
                return;
            }
            var contexts = this.contexts;
            var context = contexts[index];
            var window = context.window, subscription = context.subscription;
            contexts.splice(index, 1);
            window.complete();
            subscription.unsubscribe();
        };
        return WindowToggleSubscriber;
    }(OuterSubscriber));

    function windowWhen(closingSelector) {
        return function windowWhenOperatorFunction(source) {
            return source.lift(new WindowOperator$1(closingSelector));
        };
    }
    var WindowOperator$1 = (function () {
        function WindowOperator(closingSelector) {
            this.closingSelector = closingSelector;
        }
        WindowOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new WindowSubscriber$1(subscriber, this.closingSelector));
        };
        return WindowOperator;
    }());
    var WindowSubscriber$1 = (function (_super) {
        __extends(WindowSubscriber, _super);
        function WindowSubscriber(destination, closingSelector) {
            var _this = _super.call(this, destination) || this;
            _this.destination = destination;
            _this.closingSelector = closingSelector;
            _this.openWindow();
            return _this;
        }
        WindowSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.openWindow(innerSub);
        };
        WindowSubscriber.prototype.notifyError = function (error, innerSub) {
            this._error(error);
        };
        WindowSubscriber.prototype.notifyComplete = function (innerSub) {
            this.openWindow(innerSub);
        };
        WindowSubscriber.prototype._next = function (value) {
            this.window.next(value);
        };
        WindowSubscriber.prototype._error = function (err) {
            this.window.error(err);
            this.destination.error(err);
            this.unsubscribeClosingNotification();
        };
        WindowSubscriber.prototype._complete = function () {
            this.window.complete();
            this.destination.complete();
            this.unsubscribeClosingNotification();
        };
        WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
            if (this.closingNotification) {
                this.closingNotification.unsubscribe();
            }
        };
        WindowSubscriber.prototype.openWindow = function (innerSub) {
            if (innerSub === void 0) { innerSub = null; }
            if (innerSub) {
                this.remove(innerSub);
                innerSub.unsubscribe();
            }
            var prevWindow = this.window;
            if (prevWindow) {
                prevWindow.complete();
            }
            var window = this.window = new Subject();
            this.destination.next(window);
            var closingNotifier;
            try {
                var closingSelector = this.closingSelector;
                closingNotifier = closingSelector();
            }
            catch (e) {
                this.destination.error(e);
                this.window.error(e);
                return;
            }
            this.add(this.closingNotification = subscribeToResult(this, closingNotifier));
        };
        return WindowSubscriber;
    }(OuterSubscriber));

    function withLatestFrom() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return function (source) {
            var project;
            if (typeof args[args.length - 1] === 'function') {
                project = args.pop();
            }
            var observables = args;
            return source.lift(new WithLatestFromOperator(observables, project));
        };
    }
    var WithLatestFromOperator = (function () {
        function WithLatestFromOperator(observables, project) {
            this.observables = observables;
            this.project = project;
        }
        WithLatestFromOperator.prototype.call = function (subscriber, source) {
            return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
        };
        return WithLatestFromOperator;
    }());
    var WithLatestFromSubscriber = (function (_super) {
        __extends(WithLatestFromSubscriber, _super);
        function WithLatestFromSubscriber(destination, observables, project) {
            var _this = _super.call(this, destination) || this;
            _this.observables = observables;
            _this.project = project;
            _this.toRespond = [];
            var len = observables.length;
            _this.values = new Array(len);
            for (var i = 0; i < len; i++) {
                _this.toRespond.push(i);
            }
            for (var i = 0; i < len; i++) {
                var observable = observables[i];
                _this.add(subscribeToResult(_this, observable, observable, i));
            }
            return _this;
        }
        WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
            this.values[outerIndex] = innerValue;
            var toRespond = this.toRespond;
            if (toRespond.length > 0) {
                var found = toRespond.indexOf(outerIndex);
                if (found !== -1) {
                    toRespond.splice(found, 1);
                }
            }
        };
        WithLatestFromSubscriber.prototype.notifyComplete = function () {
        };
        WithLatestFromSubscriber.prototype._next = function (value) {
            if (this.toRespond.length === 0) {
                var args = [value].concat(this.values);
                if (this.project) {
                    this._tryProject(args);
                }
                else {
                    this.destination.next(args);
                }
            }
        };
        WithLatestFromSubscriber.prototype._tryProject = function (args) {
            var result;
            try {
                result = this.project.apply(this, args);
            }
            catch (err) {
                this.destination.error(err);
                return;
            }
            this.destination.next(result);
        };
        return WithLatestFromSubscriber;
    }(OuterSubscriber));

    function zip$1() {
        var observables = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            observables[_i] = arguments[_i];
        }
        return function zipOperatorFunction(source) {
            return source.lift.call(zip.apply(void 0, [source].concat(observables)));
        };
    }

    function zipAll(project) {
        return function (source) { return source.lift(new ZipOperator(project)); };
    }



    var _operators = /*#__PURE__*/Object.freeze({
        audit: audit,
        auditTime: auditTime,
        buffer: buffer,
        bufferCount: bufferCount,
        bufferTime: bufferTime,
        bufferToggle: bufferToggle,
        bufferWhen: bufferWhen,
        catchError: catchError,
        combineAll: combineAll,
        combineLatest: combineLatest$1,
        concat: concat$1,
        concatAll: concatAll,
        concatMap: concatMap,
        concatMapTo: concatMapTo,
        count: count,
        debounce: debounce,
        debounceTime: debounceTime,
        defaultIfEmpty: defaultIfEmpty,
        delay: delay,
        delayWhen: delayWhen,
        dematerialize: dematerialize,
        distinct: distinct,
        distinctUntilChanged: distinctUntilChanged,
        distinctUntilKeyChanged: distinctUntilKeyChanged,
        elementAt: elementAt,
        endWith: endWith,
        every: every,
        exhaust: exhaust,
        exhaustMap: exhaustMap,
        expand: expand,
        filter: filter,
        finalize: finalize,
        find: find,
        findIndex: findIndex,
        first: first,
        groupBy: groupBy,
        ignoreElements: ignoreElements,
        isEmpty: isEmpty,
        last: last,
        map: map,
        mapTo: mapTo,
        materialize: materialize,
        max: max,
        merge: merge$1,
        mergeAll: mergeAll,
        mergeMap: mergeMap,
        flatMap: mergeMap,
        mergeMapTo: mergeMapTo,
        mergeScan: mergeScan,
        min: min,
        multicast: multicast,
        observeOn: observeOn,
        onErrorResumeNext: onErrorResumeNext$1,
        pairwise: pairwise,
        partition: partition$1,
        pluck: pluck,
        publish: publish,
        publishBehavior: publishBehavior,
        publishLast: publishLast,
        publishReplay: publishReplay,
        race: race$1,
        reduce: reduce,
        repeat: repeat,
        repeatWhen: repeatWhen,
        retry: retry,
        retryWhen: retryWhen,
        refCount: refCount,
        sample: sample,
        sampleTime: sampleTime,
        scan: scan,
        sequenceEqual: sequenceEqual,
        share: share,
        shareReplay: shareReplay,
        single: single,
        skip: skip,
        skipLast: skipLast,
        skipUntil: skipUntil,
        skipWhile: skipWhile,
        startWith: startWith,
        subscribeOn: subscribeOn,
        switchAll: switchAll,
        switchMap: switchMap,
        switchMapTo: switchMapTo,
        take: take,
        takeLast: takeLast,
        takeUntil: takeUntil,
        takeWhile: takeWhile,
        tap: tap,
        throttle: throttle,
        throttleTime: throttleTime,
        throwIfEmpty: throwIfEmpty,
        timeInterval: timeInterval,
        timeout: timeout,
        timeoutWith: timeoutWith,
        timestamp: timestamp,
        toArray: toArray,
        window: window$1,
        windowCount: windowCount,
        windowTime: windowTime,
        windowToggle: windowToggle,
        windowWhen: windowWhen,
        withLatestFrom: withLatestFrom,
        zip: zip$1,
        zipAll: zipAll
    });

    var SubscriptionLog = (function () {
        function SubscriptionLog(subscribedFrame, unsubscribedFrame) {
            if (unsubscribedFrame === void 0) { unsubscribedFrame = Number.POSITIVE_INFINITY; }
            this.subscribedFrame = subscribedFrame;
            this.unsubscribedFrame = unsubscribedFrame;
        }
        return SubscriptionLog;
    }());

    var SubscriptionLoggable = (function () {
        function SubscriptionLoggable() {
            this.subscriptions = [];
        }
        SubscriptionLoggable.prototype.logSubscribedFrame = function () {
            this.subscriptions.push(new SubscriptionLog(this.scheduler.now()));
            return this.subscriptions.length - 1;
        };
        SubscriptionLoggable.prototype.logUnsubscribedFrame = function (index) {
            var subscriptionLogs = this.subscriptions;
            var oldSubscriptionLog = subscriptionLogs[index];
            subscriptionLogs[index] = new SubscriptionLog(oldSubscriptionLog.subscribedFrame, this.scheduler.now());
        };
        return SubscriptionLoggable;
    }());

    function applyMixins(derivedCtor, baseCtors) {
        for (var i = 0, len = baseCtors.length; i < len; i++) {
            var baseCtor = baseCtors[i];
            var propertyKeys = Object.getOwnPropertyNames(baseCtor.prototype);
            for (var j = 0, len2 = propertyKeys.length; j < len2; j++) {
                var name_1 = propertyKeys[j];
                derivedCtor.prototype[name_1] = baseCtor.prototype[name_1];
            }
        }
    }

    var ColdObservable = (function (_super) {
        __extends(ColdObservable, _super);
        function ColdObservable(messages, scheduler) {
            var _this = _super.call(this, function (subscriber) {
                var observable = this;
                var index = observable.logSubscribedFrame();
                var subscription = new Subscription();
                subscription.add(new Subscription(function () {
                    observable.logUnsubscribedFrame(index);
                }));
                observable.scheduleMessages(subscriber);
                return subscription;
            }) || this;
            _this.messages = messages;
            _this.subscriptions = [];
            _this.scheduler = scheduler;
            return _this;
        }
        ColdObservable.prototype.scheduleMessages = function (subscriber) {
            var messagesLength = this.messages.length;
            for (var i = 0; i < messagesLength; i++) {
                var message = this.messages[i];
                subscriber.add(this.scheduler.schedule(function (_a) {
                    var message = _a.message, subscriber = _a.subscriber;
                    message.notification.observe(subscriber);
                }, message.frame, { message: message, subscriber: subscriber }));
            }
        };
        return ColdObservable;
    }(Observable));
    applyMixins(ColdObservable, [SubscriptionLoggable]);

    var HotObservable = (function (_super) {
        __extends(HotObservable, _super);
        function HotObservable(messages, scheduler) {
            var _this = _super.call(this) || this;
            _this.messages = messages;
            _this.subscriptions = [];
            _this.scheduler = scheduler;
            return _this;
        }
        HotObservable.prototype._subscribe = function (subscriber) {
            var subject = this;
            var index = subject.logSubscribedFrame();
            var subscription = new Subscription();
            subscription.add(new Subscription(function () {
                subject.logUnsubscribedFrame(index);
            }));
            subscription.add(_super.prototype._subscribe.call(this, subscriber));
            return subscription;
        };
        HotObservable.prototype.setup = function () {
            var subject = this;
            var messagesLength = subject.messages.length;
            for (var i = 0; i < messagesLength; i++) {
                (function () {
                    var message = subject.messages[i];
                    subject.scheduler.schedule(function () { message.notification.observe(subject); }, message.frame);
                })();
            }
        };
        return HotObservable;
    }(Subject));
    applyMixins(HotObservable, [SubscriptionLoggable]);

    var defaultMaxFrame = 750;
    var TestScheduler = (function (_super) {
        __extends(TestScheduler, _super);
        function TestScheduler(assertDeepEqual) {
            var _this = _super.call(this, VirtualAction, defaultMaxFrame) || this;
            _this.assertDeepEqual = assertDeepEqual;
            _this.hotObservables = [];
            _this.coldObservables = [];
            _this.flushTests = [];
            _this.runMode = false;
            return _this;
        }
        TestScheduler.prototype.createTime = function (marbles) {
            var indexOf = marbles.indexOf('|');
            if (indexOf === -1) {
                throw new Error('marble diagram for time should have a completion marker "|"');
            }
            return indexOf * TestScheduler.frameTimeFactor;
        };
        TestScheduler.prototype.createColdObservable = function (marbles, values, error) {
            if (marbles.indexOf('^') !== -1) {
                throw new Error('cold observable cannot have subscription offset "^"');
            }
            if (marbles.indexOf('!') !== -1) {
                throw new Error('cold observable cannot have unsubscription marker "!"');
            }
            var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);
            var cold = new ColdObservable(messages, this);
            this.coldObservables.push(cold);
            return cold;
        };
        TestScheduler.prototype.createHotObservable = function (marbles, values, error) {
            if (marbles.indexOf('!') !== -1) {
                throw new Error('hot observable cannot have unsubscription marker "!"');
            }
            var messages = TestScheduler.parseMarbles(marbles, values, error, undefined, this.runMode);
            var subject = new HotObservable(messages, this);
            this.hotObservables.push(subject);
            return subject;
        };
        TestScheduler.prototype.materializeInnerObservable = function (observable, outerFrame) {
            var _this = this;
            var messages = [];
            observable.subscribe(function (value) {
                messages.push({ frame: _this.frame - outerFrame, notification: Notification.createNext(value) });
            }, function (err) {
                messages.push({ frame: _this.frame - outerFrame, notification: Notification.createError(err) });
            }, function () {
                messages.push({ frame: _this.frame - outerFrame, notification: Notification.createComplete() });
            });
            return messages;
        };
        TestScheduler.prototype.expectObservable = function (observable, subscriptionMarbles) {
            var _this = this;
            if (subscriptionMarbles === void 0) { subscriptionMarbles = null; }
            var actual = [];
            var flushTest = { actual: actual, ready: false };
            var subscriptionParsed = TestScheduler.parseMarblesAsSubscriptions(subscriptionMarbles, this.runMode);
            var subscriptionFrame = subscriptionParsed.subscribedFrame === Number.POSITIVE_INFINITY ?
                0 : subscriptionParsed.subscribedFrame;
            var unsubscriptionFrame = subscriptionParsed.unsubscribedFrame;
            var subscription;
            this.schedule(function () {
                subscription = observable.subscribe(function (x) {
                    var value = x;
                    if (x instanceof Observable) {
                        value = _this.materializeInnerObservable(value, _this.frame);
                    }
                    actual.push({ frame: _this.frame, notification: Notification.createNext(value) });
                }, function (err) {
                    actual.push({ frame: _this.frame, notification: Notification.createError(err) });
                }, function () {
                    actual.push({ frame: _this.frame, notification: Notification.createComplete() });
                });
            }, subscriptionFrame);
            if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
                this.schedule(function () { return subscription.unsubscribe(); }, unsubscriptionFrame);
            }
            this.flushTests.push(flushTest);
            var runMode = this.runMode;
            return {
                toBe: function (marbles, values, errorValue) {
                    flushTest.ready = true;
                    flushTest.expected = TestScheduler.parseMarbles(marbles, values, errorValue, true, runMode);
                }
            };
        };
        TestScheduler.prototype.expectSubscriptions = function (actualSubscriptionLogs) {
            var flushTest = { actual: actualSubscriptionLogs, ready: false };
            this.flushTests.push(flushTest);
            var runMode = this.runMode;
            return {
                toBe: function (marbles) {
                    var marblesArray = (typeof marbles === 'string') ? [marbles] : marbles;
                    flushTest.ready = true;
                    flushTest.expected = marblesArray.map(function (marbles) {
                        return TestScheduler.parseMarblesAsSubscriptions(marbles, runMode);
                    });
                }
            };
        };
        TestScheduler.prototype.flush = function () {
            var _this = this;
            var hotObservables = this.hotObservables;
            while (hotObservables.length > 0) {
                hotObservables.shift().setup();
            }
            _super.prototype.flush.call(this);
            this.flushTests = this.flushTests.filter(function (test) {
                if (test.ready) {
                    _this.assertDeepEqual(test.actual, test.expected);
                    return false;
                }
                return true;
            });
        };
        TestScheduler.parseMarblesAsSubscriptions = function (marbles, runMode) {
            var _this = this;
            if (runMode === void 0) { runMode = false; }
            if (typeof marbles !== 'string') {
                return new SubscriptionLog(Number.POSITIVE_INFINITY);
            }
            var len = marbles.length;
            var groupStart = -1;
            var subscriptionFrame = Number.POSITIVE_INFINITY;
            var unsubscriptionFrame = Number.POSITIVE_INFINITY;
            var frame = 0;
            var _loop_1 = function (i) {
                var nextFrame = frame;
                var advanceFrameBy = function (count) {
                    nextFrame += count * _this.frameTimeFactor;
                };
                var c = marbles[i];
                switch (c) {
                    case ' ':
                        if (!runMode) {
                            advanceFrameBy(1);
                        }
                        break;
                    case '-':
                        advanceFrameBy(1);
                        break;
                    case '(':
                        groupStart = frame;
                        advanceFrameBy(1);
                        break;
                    case ')':
                        groupStart = -1;
                        advanceFrameBy(1);
                        break;
                    case '^':
                        if (subscriptionFrame !== Number.POSITIVE_INFINITY) {
                            throw new Error('found a second subscription point \'^\' in a ' +
                                'subscription marble diagram. There can only be one.');
                        }
                        subscriptionFrame = groupStart > -1 ? groupStart : frame;
                        advanceFrameBy(1);
                        break;
                    case '!':
                        if (unsubscriptionFrame !== Number.POSITIVE_INFINITY) {
                            throw new Error('found a second subscription point \'^\' in a ' +
                                'subscription marble diagram. There can only be one.');
                        }
                        unsubscriptionFrame = groupStart > -1 ? groupStart : frame;
                        break;
                    default:
                        if (runMode && c.match(/^[0-9]$/)) {
                            if (i === 0 || marbles[i - 1] === ' ') {
                                var buffer = marbles.slice(i);
                                var match = buffer.match(/^([0-9]+(?:\.[0-9]+)?)(ms|s|m) /);
                                if (match) {
                                    i += match[0].length - 1;
                                    var duration = parseFloat(match[1]);
                                    var unit = match[2];
                                    var durationInMs = void 0;
                                    switch (unit) {
                                        case 'ms':
                                            durationInMs = duration;
                                            break;
                                        case 's':
                                            durationInMs = duration * 1000;
                                            break;
                                        case 'm':
                                            durationInMs = duration * 1000 * 60;
                                            break;
                                        default:
                                            break;
                                    }
                                    advanceFrameBy(durationInMs / this_1.frameTimeFactor);
                                    break;
                                }
                            }
                        }
                        throw new Error('there can only be \'^\' and \'!\' markers in a ' +
                            'subscription marble diagram. Found instead \'' + c + '\'.');
                }
                frame = nextFrame;
                out_i_1 = i;
            };
            var this_1 = this, out_i_1;
            for (var i = 0; i < len; i++) {
                _loop_1(i);
                i = out_i_1;
            }
            if (unsubscriptionFrame < 0) {
                return new SubscriptionLog(subscriptionFrame);
            }
            else {
                return new SubscriptionLog(subscriptionFrame, unsubscriptionFrame);
            }
        };
        TestScheduler.parseMarbles = function (marbles, values, errorValue, materializeInnerObservables, runMode) {
            var _this = this;
            if (materializeInnerObservables === void 0) { materializeInnerObservables = false; }
            if (runMode === void 0) { runMode = false; }
            if (marbles.indexOf('!') !== -1) {
                throw new Error('conventional marble diagrams cannot have the ' +
                    'unsubscription marker "!"');
            }
            var len = marbles.length;
            var testMessages = [];
            var subIndex = runMode ? marbles.replace(/^[ ]+/, '').indexOf('^') : marbles.indexOf('^');
            var frame = subIndex === -1 ? 0 : (subIndex * -this.frameTimeFactor);
            var getValue = typeof values !== 'object' ?
                function (x) { return x; } :
                function (x) {
                    if (materializeInnerObservables && values[x] instanceof ColdObservable) {
                        return values[x].messages;
                    }
                    return values[x];
                };
            var groupStart = -1;
            var _loop_2 = function (i) {
                var nextFrame = frame;
                var advanceFrameBy = function (count) {
                    nextFrame += count * _this.frameTimeFactor;
                };
                var notification = void 0;
                var c = marbles[i];
                switch (c) {
                    case ' ':
                        if (!runMode) {
                            advanceFrameBy(1);
                        }
                        break;
                    case '-':
                        advanceFrameBy(1);
                        break;
                    case '(':
                        groupStart = frame;
                        advanceFrameBy(1);
                        break;
                    case ')':
                        groupStart = -1;
                        advanceFrameBy(1);
                        break;
                    case '|':
                        notification = Notification.createComplete();
                        advanceFrameBy(1);
                        break;
                    case '^':
                        advanceFrameBy(1);
                        break;
                    case '#':
                        notification = Notification.createError(errorValue || 'error');
                        advanceFrameBy(1);
                        break;
                    default:
                        if (runMode && c.match(/^[0-9]$/)) {
                            if (i === 0 || marbles[i - 1] === ' ') {
                                var buffer = marbles.slice(i);
                                var match = buffer.match(/^([0-9]+(?:\.[0-9]+)?)(ms|s|m) /);
                                if (match) {
                                    i += match[0].length - 1;
                                    var duration = parseFloat(match[1]);
                                    var unit = match[2];
                                    var durationInMs = void 0;
                                    switch (unit) {
                                        case 'ms':
                                            durationInMs = duration;
                                            break;
                                        case 's':
                                            durationInMs = duration * 1000;
                                            break;
                                        case 'm':
                                            durationInMs = duration * 1000 * 60;
                                            break;
                                        default:
                                            break;
                                    }
                                    advanceFrameBy(durationInMs / this_2.frameTimeFactor);
                                    break;
                                }
                            }
                        }
                        notification = Notification.createNext(getValue(c));
                        advanceFrameBy(1);
                        break;
                }
                if (notification) {
                    testMessages.push({ frame: groupStart > -1 ? groupStart : frame, notification: notification });
                }
                frame = nextFrame;
                out_i_2 = i;
            };
            var this_2 = this, out_i_2;
            for (var i = 0; i < len; i++) {
                _loop_2(i);
                i = out_i_2;
            }
            return testMessages;
        };
        TestScheduler.prototype.run = function (callback) {
            var prevFrameTimeFactor = TestScheduler.frameTimeFactor;
            var prevMaxFrames = this.maxFrames;
            TestScheduler.frameTimeFactor = 1;
            this.maxFrames = Number.POSITIVE_INFINITY;
            this.runMode = true;
            AsyncScheduler.delegate = this;
            var helpers = {
                cold: this.createColdObservable.bind(this),
                hot: this.createHotObservable.bind(this),
                flush: this.flush.bind(this),
                expectObservable: this.expectObservable.bind(this),
                expectSubscriptions: this.expectSubscriptions.bind(this),
            };
            try {
                var ret = callback(helpers);
                this.flush();
                return ret;
            }
            finally {
                TestScheduler.frameTimeFactor = prevFrameTimeFactor;
                this.maxFrames = prevMaxFrames;
                this.runMode = false;
                AsyncScheduler.delegate = undefined;
            }
        };
        return TestScheduler;
    }(VirtualTimeScheduler));



    var _testing = /*#__PURE__*/Object.freeze({
        TestScheduler: TestScheduler
    });

    var __window = typeof window !== 'undefined' && window;
    var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&
        self instanceof WorkerGlobalScope && self;
    var __global = typeof global !== 'undefined' && global;
    var _root = __window || __global || __self;
    (function () {
        if (!_root) {
            throw new Error('RxJS could not find any global context (window, self, global)');
        }
    })();

    function getCORSRequest() {
        if (_root.XMLHttpRequest) {
            return new _root.XMLHttpRequest();
        }
        else if (!!_root.XDomainRequest) {
            return new _root.XDomainRequest();
        }
        else {
            throw new Error('CORS is not supported by your browser');
        }
    }
    function getXMLHttpRequest() {
        if (_root.XMLHttpRequest) {
            return new _root.XMLHttpRequest();
        }
        else {
            var progId = void 0;
            try {
                var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
                for (var i = 0; i < 3; i++) {
                    try {
                        progId = progIds[i];
                        if (new _root.ActiveXObject(progId)) {
                            break;
                        }
                    }
                    catch (e) {
                    }
                }
                return new _root.ActiveXObject(progId);
            }
            catch (e) {
                throw new Error('XMLHttpRequest is not supported by your browser');
            }
        }
    }
    function ajaxGet(url, headers) {
        if (headers === void 0) { headers = null; }
        return new AjaxObservable({ method: 'GET', url: url, headers: headers });
    }
    function ajaxPost(url, body, headers) {
        return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
    }
    function ajaxDelete(url, headers) {
        return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });
    }
    function ajaxPut(url, body, headers) {
        return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
    }
    function ajaxPatch(url, body, headers) {
        return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });
    }
    var mapResponse = map(function (x, index) { return x.response; });
    function ajaxGetJSON(url, headers) {
        return mapResponse(new AjaxObservable({
            method: 'GET',
            url: url,
            responseType: 'json',
            headers: headers
        }));
    }
    var AjaxObservable = (function (_super) {
        __extends(AjaxObservable, _super);
        function AjaxObservable(urlOrRequest) {
            var _this = _super.call(this) || this;
            var request = {
                async: true,
                createXHR: function () {
                    return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();
                },
                crossDomain: true,
                withCredentials: false,
                headers: {},
                method: 'GET',
                responseType: 'json',
                timeout: 0
            };
            if (typeof urlOrRequest === 'string') {
                request.url = urlOrRequest;
            }
            else {
                for (var prop in urlOrRequest) {
                    if (urlOrRequest.hasOwnProperty(prop)) {
                        request[prop] = urlOrRequest[prop];
                    }
                }
            }
            _this.request = request;
            return _this;
        }
        AjaxObservable.prototype._subscribe = function (subscriber) {
            return new AjaxSubscriber(subscriber, this.request);
        };
        AjaxObservable.create = (function () {
            var create = function (urlOrRequest) {
                return new AjaxObservable(urlOrRequest);
            };
            create.get = ajaxGet;
            create.post = ajaxPost;
            create.delete = ajaxDelete;
            create.put = ajaxPut;
            create.patch = ajaxPatch;
            create.getJSON = ajaxGetJSON;
            return create;
        })();
        return AjaxObservable;
    }(Observable));
    var AjaxSubscriber = (function (_super) {
        __extends(AjaxSubscriber, _super);
        function AjaxSubscriber(destination, request) {
            var _this = _super.call(this, destination) || this;
            _this.request = request;
            _this.done = false;
            var headers = request.headers = request.headers || {};
            if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {
                headers['X-Requested-With'] = 'XMLHttpRequest';
            }
            var contentTypeHeader = _this.getHeader(headers, 'Content-Type');
            if (!contentTypeHeader && !(_root.FormData && request.body instanceof _root.FormData) && typeof request.body !== 'undefined') {
                headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
            }
            request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));
            _this.send();
            return _this;
        }
        AjaxSubscriber.prototype.next = function (e) {
            this.done = true;
            var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
            var result;
            try {
                result = new AjaxResponse(e, xhr, request);
            }
            catch (err) {
                return destination.error(err);
            }
            destination.next(result);
        };
        AjaxSubscriber.prototype.send = function () {
            var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
            try {
                var xhr = this.xhr = request.createXHR();
                this.setupEvents(xhr, request);
                if (user) {
                    xhr.open(method, url, async, user, password);
                }
                else {
                    xhr.open(method, url, async);
                }
                if (async) {
                    xhr.timeout = request.timeout;
                    xhr.responseType = request.responseType;
                }
                if ('withCredentials' in xhr) {
                    xhr.withCredentials = !!request.withCredentials;
                }
                this.setHeaders(xhr, headers);
                if (body) {
                    xhr.send(body);
                }
                else {
                    xhr.send();
                }
            }
            catch (err) {
                this.error(err);
            }
        };
        AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
            if (!body || typeof body === 'string') {
                return body;
            }
            else if (_root.FormData && body instanceof _root.FormData) {
                return body;
            }
            if (contentType) {
                var splitIndex = contentType.indexOf(';');
                if (splitIndex !== -1) {
                    contentType = contentType.substring(0, splitIndex);
                }
            }
            switch (contentType) {
                case 'application/x-www-form-urlencoded':
                    return Object.keys(body).map(function (key) { return encodeURIComponent(key) + "=" + encodeURIComponent(body[key]); }).join('&');
                case 'application/json':
                    return JSON.stringify(body);
                default:
                    return body;
            }
        };
        AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
            for (var key in headers) {
                if (headers.hasOwnProperty(key)) {
                    xhr.setRequestHeader(key, headers[key]);
                }
            }
        };
        AjaxSubscriber.prototype.getHeader = function (headers, headerName) {
            for (var key in headers) {
                if (key.toLowerCase() === headerName.toLowerCase()) {
                    return headers[key];
                }
            }
            return undefined;
        };
        AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
            var progressSubscriber = request.progressSubscriber;
            function xhrTimeout(e) {
                var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
                if (progressSubscriber) {
                    progressSubscriber.error(e);
                }
                var error;
                try {
                    error = new AjaxTimeoutError(this, request);
                }
                catch (err) {
                    error = err;
                }
                subscriber.error(error);
            }
            xhr.ontimeout = xhrTimeout;
            xhrTimeout.request = request;
            xhrTimeout.subscriber = this;
            xhrTimeout.progressSubscriber = progressSubscriber;
            if (xhr.upload && 'withCredentials' in xhr) {
                if (progressSubscriber) {
                    var xhrProgress_1;
                    xhrProgress_1 = function (e) {
                        var progressSubscriber = xhrProgress_1.progressSubscriber;
                        progressSubscriber.next(e);
                    };
                    if (_root.XDomainRequest) {
                        xhr.onprogress = xhrProgress_1;
                    }
                    else {
                        xhr.upload.onprogress = xhrProgress_1;
                    }
                    xhrProgress_1.progressSubscriber = progressSubscriber;
                }
                var xhrError_1;
                xhrError_1 = function (e) {
                    var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                    if (progressSubscriber) {
                        progressSubscriber.error(e);
                    }
                    var error;
                    try {
                        error = new AjaxError('ajax error', this, request);
                    }
                    catch (err) {
                        error = err;
                    }
                    subscriber.error(error);
                };
                xhr.onerror = xhrError_1;
                xhrError_1.request = request;
                xhrError_1.subscriber = this;
                xhrError_1.progressSubscriber = progressSubscriber;
            }
            function xhrReadyStateChange(e) {
                return;
            }
            xhr.onreadystatechange = xhrReadyStateChange;
            xhrReadyStateChange.subscriber = this;
            xhrReadyStateChange.progressSubscriber = progressSubscriber;
            xhrReadyStateChange.request = request;
            function xhrLoad(e) {
                var _a = xhrLoad, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
                if (this.readyState === 4) {
                    var status_1 = this.status === 1223 ? 204 : this.status;
                    var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                    if (status_1 === 0) {
                        status_1 = response ? 200 : 0;
                    }
                    if (status_1 < 400) {
                        if (progressSubscriber) {
                            progressSubscriber.complete();
                        }
                        subscriber.next(e);
                        subscriber.complete();
                    }
                    else {
                        if (progressSubscriber) {
                            progressSubscriber.error(e);
                        }
                        var error = void 0;
                        try {
                            error = new AjaxError('ajax error ' + status_1, this, request);
                        }
                        catch (err) {
                            error = err;
                        }
                        subscriber.error(error);
                    }
                }
            }
            xhr.onload = xhrLoad;
            xhrLoad.subscriber = this;
            xhrLoad.progressSubscriber = progressSubscriber;
            xhrLoad.request = request;
        };
        AjaxSubscriber.prototype.unsubscribe = function () {
            var _a = this, done = _a.done, xhr = _a.xhr;
            if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {
                xhr.abort();
            }
            _super.prototype.unsubscribe.call(this);
        };
        return AjaxSubscriber;
    }(Subscriber));
    var AjaxResponse = (function () {
        function AjaxResponse(originalEvent, xhr, request) {
            this.originalEvent = originalEvent;
            this.xhr = xhr;
            this.request = request;
            this.status = xhr.status;
            this.responseType = xhr.responseType || request.responseType;
            this.response = parseXhrResponse(this.responseType, xhr);
        }
        return AjaxResponse;
    }());
    var AjaxErrorImpl = (function () {
        function AjaxErrorImpl(message, xhr, request) {
            Error.call(this);
            this.message = message;
            this.name = 'AjaxError';
            this.xhr = xhr;
            this.request = request;
            this.status = xhr.status;
            this.responseType = xhr.responseType || request.responseType;
            this.response = parseXhrResponse(this.responseType, xhr);
            return this;
        }
        AjaxErrorImpl.prototype = Object.create(Error.prototype);
        return AjaxErrorImpl;
    })();
    var AjaxError = AjaxErrorImpl;
    function parseJson(xhr) {
        if ('response' in xhr) {
            return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
        }
        else {
            return JSON.parse(xhr.responseText || 'null');
        }
    }
    function parseXhrResponse(responseType, xhr) {
        switch (responseType) {
            case 'json':
                return parseJson(xhr);
            case 'xml':
                return xhr.responseXML;
            case 'text':
            default:
                return ('response' in xhr) ? xhr.response : xhr.responseText;
        }
    }
    function AjaxTimeoutErrorImpl(xhr, request) {
        AjaxError.call(this, 'ajax timeout', xhr, request);
        this.name = 'AjaxTimeoutError';
        return this;
    }
    var AjaxTimeoutError = AjaxTimeoutErrorImpl;

    var ajax = (function () { return AjaxObservable.create; })();



    var _ajax = /*#__PURE__*/Object.freeze({
        ajax: ajax,
        AjaxResponse: AjaxResponse,
        AjaxError: AjaxError,
        AjaxTimeoutError: AjaxTimeoutError
    });

    var DEFAULT_WEBSOCKET_CONFIG = {
        url: '',
        deserializer: function (e) { return JSON.parse(e.data); },
        serializer: function (value) { return JSON.stringify(value); },
    };
    var WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';
    var WebSocketSubject = (function (_super) {
        __extends(WebSocketSubject, _super);
        function WebSocketSubject(urlConfigOrSource, destination) {
            var _this = _super.call(this) || this;
            if (urlConfigOrSource instanceof Observable) {
                _this.destination = destination;
                _this.source = urlConfigOrSource;
            }
            else {
                var config = _this._config = __assign({}, DEFAULT_WEBSOCKET_CONFIG);
                _this._output = new Subject();
                if (typeof urlConfigOrSource === 'string') {
                    config.url = urlConfigOrSource;
                }
                else {
                    for (var key in urlConfigOrSource) {
                        if (urlConfigOrSource.hasOwnProperty(key)) {
                            config[key] = urlConfigOrSource[key];
                        }
                    }
                }
                if (!config.WebSocketCtor && WebSocket) {
                    config.WebSocketCtor = WebSocket;
                }
                else if (!config.WebSocketCtor) {
                    throw new Error('no WebSocket constructor can be found');
                }
                _this.destination = new ReplaySubject();
            }
            return _this;
        }
        WebSocketSubject.prototype.lift = function (operator) {
            var sock = new WebSocketSubject(this._config, this.destination);
            sock.operator = operator;
            sock.source = this;
            return sock;
        };
        WebSocketSubject.prototype._resetState = function () {
            this._socket = null;
            if (!this.source) {
                this.destination = new ReplaySubject();
            }
            this._output = new Subject();
        };
        WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {
            var self = this;
            return new Observable(function (observer) {
                try {
                    self.next(subMsg());
                }
                catch (err) {
                    observer.error(err);
                }
                var subscription = self.subscribe(function (x) {
                    try {
                        if (messageFilter(x)) {
                            observer.next(x);
                        }
                    }
                    catch (err) {
                        observer.error(err);
                    }
                }, function (err) { return observer.error(err); }, function () { return observer.complete(); });
                return function () {
                    try {
                        self.next(unsubMsg());
                    }
                    catch (err) {
                        observer.error(err);
                    }
                    subscription.unsubscribe();
                };
            });
        };
        WebSocketSubject.prototype._connectSocket = function () {
            var _this = this;
            var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;
            var observer = this._output;
            var socket = null;
            try {
                socket = protocol ?
                    new WebSocketCtor(url, protocol) :
                    new WebSocketCtor(url);
                this._socket = socket;
                if (binaryType) {
                    this._socket.binaryType = binaryType;
                }
            }
            catch (e) {
                observer.error(e);
                return;
            }
            var subscription = new Subscription(function () {
                _this._socket = null;
                if (socket && socket.readyState === 1) {
                    socket.close();
                }
            });
            socket.onopen = function (e) {
                var _socket = _this._socket;
                if (!_socket) {
                    socket.close();
                    _this._resetState();
                    return;
                }
                var openObserver = _this._config.openObserver;
                if (openObserver) {
                    openObserver.next(e);
                }
                var queue = _this.destination;
                _this.destination = Subscriber.create(function (x) {
                    if (socket.readyState === 1) {
                        try {
                            var serializer = _this._config.serializer;
                            socket.send(serializer(x));
                        }
                        catch (e) {
                            _this.destination.error(e);
                        }
                    }
                }, function (e) {
                    var closingObserver = _this._config.closingObserver;
                    if (closingObserver) {
                        closingObserver.next(undefined);
                    }
                    if (e && e.code) {
                        socket.close(e.code, e.reason);
                    }
                    else {
                        observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));
                    }
                    _this._resetState();
                }, function () {
                    var closingObserver = _this._config.closingObserver;
                    if (closingObserver) {
                        closingObserver.next(undefined);
                    }
                    socket.close();
                    _this._resetState();
                });
                if (queue && queue instanceof ReplaySubject) {
                    subscription.add(queue.subscribe(_this.destination));
                }
            };
            socket.onerror = function (e) {
                _this._resetState();
                observer.error(e);
            };
            socket.onclose = function (e) {
                _this._resetState();
                var closeObserver = _this._config.closeObserver;
                if (closeObserver) {
                    closeObserver.next(e);
                }
                if (e.wasClean) {
                    observer.complete();
                }
                else {
                    observer.error(e);
                }
            };
            socket.onmessage = function (e) {
                try {
                    var deserializer = _this._config.deserializer;
                    observer.next(deserializer(e));
                }
                catch (err) {
                    observer.error(err);
                }
            };
        };
        WebSocketSubject.prototype._subscribe = function (subscriber) {
            var _this = this;
            var source = this.source;
            if (source) {
                return source.subscribe(subscriber);
            }
            if (!this._socket) {
                this._connectSocket();
            }
            this._output.subscribe(subscriber);
            subscriber.add(function () {
                var _socket = _this._socket;
                if (_this._output.observers.length === 0) {
                    if (_socket && _socket.readyState === 1) {
                        _socket.close();
                    }
                    _this._resetState();
                }
            });
            return subscriber;
        };
        WebSocketSubject.prototype.unsubscribe = function () {
            var _socket = this._socket;
            if (_socket && _socket.readyState === 1) {
                _socket.close();
            }
            this._resetState();
            _super.prototype.unsubscribe.call(this);
        };
        return WebSocketSubject;
    }(AnonymousSubject));

    function webSocket(urlConfigOrSource) {
        return new WebSocketSubject(urlConfigOrSource);
    }



    var _webSocket = /*#__PURE__*/Object.freeze({
        webSocket: webSocket,
        WebSocketSubject: WebSocketSubject
    });

    function fromFetch(input, init) {
        return new Observable(function (subscriber) {
            var controller = new AbortController();
            var signal = controller.signal;
            var abortable = true;
            var unsubscribed = false;
            var subscription = new Subscription();
            subscription.add(function () {
                unsubscribed = true;
                if (abortable) {
                    controller.abort();
                }
            });
            var perSubscriberInit;
            if (init) {
                if (init.signal) {
                    if (init.signal.aborted) {
                        controller.abort();
                    }
                    else {
                        var outerSignal_1 = init.signal;
                        var outerSignalHandler_1 = function () {
                            if (!signal.aborted) {
                                controller.abort();
                            }
                        };
                        outerSignal_1.addEventListener('abort', outerSignalHandler_1);
                        subscription.add(function () { return outerSignal_1.removeEventListener('abort', outerSignalHandler_1); });
                    }
                }
                perSubscriberInit = __assign({}, init, { signal: signal });
            }
            else {
                perSubscriberInit = { signal: signal };
            }
            fetch(input, perSubscriberInit).then(function (response) {
                abortable = false;
                subscriber.next(response);
                subscriber.complete();
            }).catch(function (err) {
                abortable = false;
                if (!unsubscribed) {
                    subscriber.error(err);
                }
            });
            return subscription;
        });
    }



    var _fetch = /*#__PURE__*/Object.freeze({
        fromFetch: fromFetch
    });

    var operators = _operators;
    var testing = _testing;
    var ajax$1 = _ajax;
    var webSocket$1 = _webSocket;
    var fetch$1 = _fetch;

    exports.operators = operators;
    exports.testing = testing;
    exports.ajax = ajax$1;
    exports.webSocket = webSocket$1;
    exports.fetch = fetch$1;
    exports.Observable = Observable;
    exports.ConnectableObservable = ConnectableObservable;
    exports.GroupedObservable = GroupedObservable;
    exports.observable = observable;
    exports.Subject = Subject;
    exports.BehaviorSubject = BehaviorSubject;
    exports.ReplaySubject = ReplaySubject;
    exports.AsyncSubject = AsyncSubject;
    exports.asapScheduler = asap;
    exports.asyncScheduler = async;
    exports.queueScheduler = queue;
    exports.animationFrameScheduler = animationFrame;
    exports.VirtualTimeScheduler = VirtualTimeScheduler;
    exports.VirtualAction = VirtualAction;
    exports.Scheduler = Scheduler;
    exports.Subscription = Subscription;
    exports.Subscriber = Subscriber;
    exports.Notification = Notification;
    exports.pipe = pipe;
    exports.noop = noop;
    exports.identity = identity;
    exports.isObservable = isObservable;
    exports.ArgumentOutOfRangeError = ArgumentOutOfRangeError;
    exports.EmptyError = EmptyError;
    exports.ObjectUnsubscribedError = ObjectUnsubscribedError;
    exports.UnsubscriptionError = UnsubscriptionError;
    exports.TimeoutError = TimeoutError;
    exports.bindCallback = bindCallback;
    exports.bindNodeCallback = bindNodeCallback;
    exports.combineLatest = combineLatest;
    exports.concat = concat;
    exports.defer = defer;
    exports.empty = empty$1;
    exports.forkJoin = forkJoin;
    exports.from = from;
    exports.fromEvent = fromEvent;
    exports.fromEventPattern = fromEventPattern;
    exports.generate = generate;
    exports.iif = iif;
    exports.interval = interval;
    exports.merge = merge;
    exports.never = never;
    exports.of = of;
    exports.onErrorResumeNext = onErrorResumeNext;
    exports.pairs = pairs;
    exports.partition = partition;
    exports.race = race;
    exports.range = range;
    exports.throwError = throwError;
    exports.timer = timer;
    exports.using = using;
    exports.zip = zip;
    exports.scheduled = scheduled;
    exports.EMPTY = EMPTY;
    exports.NEVER = NEVER;
    exports.config = config;

    Object.defineProperty(exports, '__esModule', { value: true });

})));




/**
 * @license rxcomp v1.0.0-beta.10
 * (c) 2020 Luca Zampetti <lzampetti@gmail.com>
 * License: MIT
 */

var rxcomp = (function (exports, rxjs, operators) {
  'use strict';

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _setPrototypeOf(o, p) {
    _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
      o.__proto__ = p;
      return o;
    };

    return _setPrototypeOf(o, p);
  }

  function isNativeReflectConstruct() {
    if (typeof Reflect === "undefined" || !Reflect.construct) return false;
    if (Reflect.construct.sham) return false;
    if (typeof Proxy === "function") return true;

    try {
      Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));
      return true;
    } catch (e) {
      return false;
    }
  }

  function _construct(Parent, args, Class) {
    if (isNativeReflectConstruct()) {
      _construct = Reflect.construct;
    } else {
      _construct = function _construct(Parent, args, Class) {
        var a = [null];
        a.push.apply(a, args);
        var Constructor = Function.bind.apply(Parent, a);
        var instance = new Constructor();
        if (Class) _setPrototypeOf(instance, Class.prototype);
        return instance;
      };
    }

    return _construct.apply(null, arguments);
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  var CONTEXTS = {};
  var NODES = {};

  var Factory = function () {
    function Factory() {
      this.rxcompId = -1;
      this.unsubscribe$ = new rxjs.Subject();
      this.changes$ = new rxjs.ReplaySubject(1);
    }

    var _proto = Factory.prototype;

    _proto.onInit = function onInit() {};

    _proto.onChanges = function onChanges(changes) {};

    _proto.onView = function onView() {};

    _proto.onDestroy = function onDestroy() {};

    _proto.pushChanges = function pushChanges() {
      this.changes$.next(this);
      this.onView();
    };

    return Factory;
  }();
  function getContext(instance) {
    return CONTEXTS[instance.rxcompId];
  }

  var Directive = function (_Factory) {
    _inheritsLoose(Directive, _Factory);

    function Directive() {
      return _Factory.apply(this, arguments) || this;
    }

    return Directive;
  }(Factory);

  var ClassDirective = function (_Directive) {
    _inheritsLoose(ClassDirective, _Directive);

    function ClassDirective() {
      var _this;

      _this = _Directive.apply(this, arguments) || this;
      _this.class = '';
      _this.keys = [];
      return _this;
    }

    var _proto = ClassDirective.prototype;

    _proto.onInit = function onInit() {
      var _this2 = this;

      var _getContext = getContext(this),
          node = _getContext.node;

      Array.prototype.slice.call(node.classList).forEach(function (x) {
        return _this2.keys.push(x);
      });
    };

    _proto.onChanges = function onChanges() {
      var _getContext2 = getContext(this),
          node = _getContext2.node;

      var keys = [];
      var object = this.class;

      if (typeof object === 'object') {
        for (var key in object) {
          if (object[key]) {
            keys.push(key);
          }
        }
      } else if (typeof object === 'string') {
        keys = object.split(/\s+/);
      }

      keys = keys.concat(this.keys);
      node.setAttribute('class', keys.join(' '));
    };

    return ClassDirective;
  }(Directive);
  ClassDirective.meta = {
    selector: "[[class]]",
    inputs: ['class']
  };

  var EVENTS = ['mousedown', 'mouseup', 'mousemove', 'click', 'dblclick', 'mouseover', 'mouseout', 'mouseenter', 'mouseleave', 'contextmenu', 'touchstart', 'touchmove', 'touchend', 'keydown', 'keyup', 'input', 'change', 'loaded'];

  var EventDirective = function (_Directive) {
    _inheritsLoose(EventDirective, _Directive);

    function EventDirective() {
      var _this;

      _this = _Directive.apply(this, arguments) || this;
      _this.event = '';
      return _this;
    }

    var _proto = EventDirective.prototype;

    _proto.onInit = function onInit() {
      var _getContext = getContext(this),
          module = _getContext.module,
          node = _getContext.node,
          parentInstance = _getContext.parentInstance,
          selector = _getContext.selector;

      var event = this.event = selector.replace(/\[|\]|\(|\)/g, '');
      var event$ = rxjs.fromEvent(node, event).pipe(operators.shareReplay(1));
      var expression = node.getAttribute("(" + event + ")");

      if (expression) {
        var outputFunction = module.makeFunction(expression, ['$event']);
        event$.pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
          module.resolve(outputFunction, parentInstance, event);
        });
      } else {
        parentInstance[event + "$"] = event$;
      }
    };

    return EventDirective;
  }(Directive);
  EventDirective.meta = {
    selector: "[(" + EVENTS.join(')],[(') + ")]"
  };

  var Structure = function (_Factory) {
    _inheritsLoose(Structure, _Factory);

    function Structure() {
      return _Factory.apply(this, arguments) || this;
    }

    return Structure;
  }(Factory);

  var Component = function (_Factory) {
    _inheritsLoose(Component, _Factory);

    function Component() {
      return _Factory.apply(this, arguments) || this;
    }

    var _proto = Component.prototype;

    _proto.pushChanges = function pushChanges() {
      var _getContext = getContext(this),
          module = _getContext.module,
          node = _getContext.node;

      this.changes$.next(this);
      module.parse(node, this);
      this.onView();
    };

    return Component;
  }(Factory);

  var RESERVED_PROPERTIES = ['constructor', 'rxcompId', 'onInit', 'onChanges', 'onDestroy', 'pushChanges', 'changes$', 'unsubscribe$'];

  var Context = function (_Component) {
    _inheritsLoose(Context, _Component);

    function Context(instance, descriptors) {
      var _this;

      if (descriptors === void 0) {
        descriptors = {};
      }

      _this = _Component.call(this) || this;
      descriptors = Context.mergeDescriptors(instance, instance, descriptors);
      descriptors = Context.mergeDescriptors(Object.getPrototypeOf(instance), instance, descriptors);
      Object.defineProperties(_assertThisInitialized(_this), descriptors);
      return _this;
    }

    Context.mergeDescriptors = function mergeDescriptors(source, instance, descriptors) {
      if (descriptors === void 0) {
        descriptors = {};
      }

      var properties = Object.getOwnPropertyNames(source);

      var _loop = function _loop() {
        var key = properties.shift();

        if (RESERVED_PROPERTIES.indexOf(key) === -1 && !descriptors.hasOwnProperty(key)) {
          var descriptor = Object.getOwnPropertyDescriptor(source, key);

          if (typeof descriptor.value == 'function') {
            descriptor.value = function () {
              for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
                args[_key] = arguments[_key];
              }

              return instance[key].apply(instance, args);
            };
          }

          descriptors[key] = descriptor;
        }
      };

      while (properties.length) {
        _loop();
      }

      return descriptors;
    };

    return Context;
  }(Component);

  var ForItem = function (_Context) {
    _inheritsLoose(ForItem, _Context);

    function ForItem(key, $key, value, $value, index, count, parentInstance) {
      var _this;

      _this = _Context.call(this, parentInstance) || this;
      _this[key] = $key;
      _this[value] = $value;
      _this.index = index;
      _this.count = count;
      return _this;
    }

    _createClass(ForItem, [{
      key: "first",
      get: function get() {
        return this.index === 0;
      }
    }, {
      key: "last",
      get: function get() {
        return this.index === this.count - 1;
      }
    }, {
      key: "even",
      get: function get() {
        return this.index % 2 === 0;
      }
    }, {
      key: "odd",
      get: function get() {
        return !this.even;
      }
    }]);

    return ForItem;
  }(Context);

  var ForStructure = function (_Structure) {
    _inheritsLoose(ForStructure, _Structure);

    function ForStructure() {
      var _this;

      _this = _Structure.apply(this, arguments) || this;
      _this.instances = [];
      return _this;
    }

    var _proto = ForStructure.prototype;

    _proto.onInit = function onInit() {
      var _getContext = getContext(this),
          module = _getContext.module,
          node = _getContext.node;

      var forbegin = document.createComment("*for begin");
      forbegin.rxcompId = node.rxcompId;
      node.parentNode.replaceChild(forbegin, node);
      var forend = this.forend = document.createComment("*for end");
      forbegin.parentNode.insertBefore(forend, forbegin.nextSibling);
      var expression = node.getAttribute('*for');
      node.removeAttribute('*for');
      var token = this.token = this.getExpressionToken(expression);
      this.forFunction = module.makeFunction(token.iterable);
    };

    _proto.onChanges = function onChanges(changes) {
      var context = getContext(this);
      var module = context.module;
      var node = context.node;
      var token = this.token;
      var result = module.resolve(this.forFunction, changes, this) || [];
      var isArray = Array.isArray(result);
      var array = isArray ? result : Object.keys(result);
      var total = array.length;
      var previous = this.instances.length;

      for (var i = 0; i < Math.max(previous, total); i++) {
        if (i < total) {
          var key = isArray ? i : array[i];
          var value = isArray ? array[key] : result[key];

          if (i < previous) {
            var instance = this.instances[i];
            instance[token.key] = key;
            instance[token.value] = value;
          } else {
            var clonedNode = node.cloneNode(true);
            delete clonedNode.rxcompId;
            this.forend.parentNode.insertBefore(clonedNode, this.forend);
            var args = [token.key, key, token.value, value, i, total, context.parentInstance];

            var _instance = module.makeInstance(clonedNode, ForItem, context.selector, context.parentInstance, args);

            if (_instance) {
              var forItemContext = getContext(_instance);
              module.compile(clonedNode, forItemContext.instance);
              this.instances.push(_instance);
            }
          }
        } else {
          var _instance2 = this.instances[i];

          var _getContext2 = getContext(_instance2),
              _node = _getContext2.node;

          _node.parentNode.removeChild(_node);

          module.remove(_node);
        }
      }

      this.instances.length = array.length;
    };

    _proto.getExpressionToken = function getExpressionToken(expression) {
      if (expression === null) {
        throw 'invalid for';
      }

      if (expression.trim().indexOf('let ') === -1 || expression.trim().indexOf(' of ') === -1) {
        throw 'invalid for';
      }

      var expressions = expression.split(';').map(function (x) {
        return x.trim();
      }).filter(function (x) {
        return x !== '';
      });
      var forExpressions = expressions[0].split(' of ').map(function (x) {
        return x.trim();
      });
      var value = forExpressions[0].replace(/\s*let\s*/, '');
      var iterable = forExpressions[1];
      var key = 'index';
      var keyValueMatches = value.match(/\[(.+)\s*,\s*(.+)\]/);

      if (keyValueMatches) {
        key = keyValueMatches[1];
        value = keyValueMatches[2];
      }

      if (expressions.length > 1) {
        var indexExpressions = expressions[1].split(/\s*let\s*|\s*=\s*index/).map(function (x) {
          return x.trim();
        });

        if (indexExpressions.length === 3) {
          key = indexExpressions[1];
        }
      }

      return {
        key: key,
        value: value,
        iterable: iterable
      };
    };

    return ForStructure;
  }(Structure);
  ForStructure.meta = {
    selector: '[*for]'
  };

  var HrefDirective = function (_Directive) {
    _inheritsLoose(HrefDirective, _Directive);

    function HrefDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    _createClass(HrefDirective, [{
      key: "href",
      set: function set(href) {
        if (this.href_ !== href) {
          this.href_ = href;

          var _getContext = getContext(this),
              node = _getContext.node;

          href ? node.setAttribute('href', href) : node.removeAttribute('href');
        }
      },
      get: function get() {
        return this.href_;
      }
    }]);

    return HrefDirective;
  }(Directive);
  HrefDirective.meta = {
    selector: '[[href]]',
    inputs: ['href']
  };

  var IfStructure = function (_Structure) {
    _inheritsLoose(IfStructure, _Structure);

    function IfStructure() {
      return _Structure.apply(this, arguments) || this;
    }

    var _proto = IfStructure.prototype;

    _proto.onInit = function onInit() {
      var _getContext = getContext(this),
          module = _getContext.module,
          node = _getContext.node;

      var ifbegin = this.ifbegin = document.createComment("*if begin");
      ifbegin.rxcompId = node.rxcompId;
      node.parentNode.replaceChild(ifbegin, node);
      var ifend = this.ifend = document.createComment("*if end");
      ifbegin.parentNode.insertBefore(ifend, ifbegin.nextSibling);
      var expression = node.getAttribute('*if');
      this.ifFunction = module.makeFunction(expression);
      var clonedNode = node.cloneNode(true);
      clonedNode.removeAttribute('*if');
      this.clonedNode = clonedNode;
      this.element = clonedNode.cloneNode(true);
    };

    _proto.onChanges = function onChanges(changes) {
      var _getContext2 = getContext(this),
          module = _getContext2.module;

      var value = module.resolve(this.ifFunction, changes, this);
      var element = this.element;

      if (value) {
        if (!element.parentNode) {
          var ifend = this.ifend;
          ifend.parentNode.insertBefore(element, ifend);
          module.compile(element);
        }
      } else {
        if (element.parentNode) {
          module.remove(element, this);
          element.parentNode.removeChild(element);
          this.element = this.clonedNode.cloneNode(true);
        }
      }
    };

    return IfStructure;
  }(Structure);
  IfStructure.meta = {
    selector: '[*if]'
  };

  var InnerHtmlDirective = function (_Directive) {
    _inheritsLoose(InnerHtmlDirective, _Directive);

    function InnerHtmlDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    _createClass(InnerHtmlDirective, [{
      key: "innerHTML",
      set: function set(innerHTML) {
        if (this.innerHTML_ !== innerHTML) {
          this.innerHTML_ = innerHTML;

          var _getContext = getContext(this),
              node = _getContext.node;

          node.innerHTML = innerHTML == undefined ? '' : innerHTML;
        }
      },
      get: function get() {
        return this.innerHTML_;
      }
    }]);

    return InnerHtmlDirective;
  }(Directive);
  InnerHtmlDirective.meta = {
    selector: "[innerHTML]",
    inputs: ['innerHTML']
  };

  var Pipe = function () {
    function Pipe() {}

    Pipe.transform = function transform(value) {
      return value;
    };

    return Pipe;
  }();

  var JsonPipe = function (_Pipe) {
    _inheritsLoose(JsonPipe, _Pipe);

    function JsonPipe() {
      return _Pipe.apply(this, arguments) || this;
    }

    JsonPipe.transform = function transform(value) {
      return JSON.stringify(value, null, '\t');
    };

    return JsonPipe;
  }(Pipe);
  JsonPipe.meta = {
    name: 'json'
  };

  var ID = 0;

  var Module = function () {
    function Module() {}

    var _proto = Module.prototype;

    _proto.compile = function compile(node, parentInstance) {
      var _this = this;

      var componentNode;
      var instances = Module.querySelectorsAll(node, this.meta.selectors, []).map(function (match) {
        if (componentNode && componentNode !== match.node) {
          parentInstance = undefined;
        }

        var instance = _this.makeInstance(match.node, match.factory, match.selector, parentInstance);

        if (match.factory.prototype instanceof Component) {
          componentNode = match.node;
        }

        return instance;
      }).filter(function (x) {
        return x !== undefined;
      });
      return instances;
    };

    _proto.makeInstance = function makeInstance(node, factory, selector, parentInstance, args) {
      var _this2 = this;

      if (parentInstance || node.parentNode) {
        var meta = factory.meta;
        parentInstance = parentInstance || this.getParentInstance(node.parentNode);

        if (!parentInstance) {
          return undefined;
        }

        var instance = _construct(factory, args || []);

        var context = Module.makeContext(this, instance, parentInstance, node, factory, selector);

        if (meta) {
          this.makeHosts(meta, instance, node);
          context.inputs = this.makeInputs(meta, instance);
          context.outputs = this.makeOutputs(meta, instance);

          if (parentInstance instanceof Factory) {
            this.resolveInputsOutputs(instance, parentInstance);
          }
        }

        instance.onInit();

        if (parentInstance instanceof Factory) {
          parentInstance.changes$.pipe(operators.takeUntil(instance.unsubscribe$)).subscribe(function (changes) {
            if (meta) {
              _this2.resolveInputsOutputs(instance, changes);
            }

            instance.onChanges(changes);
            instance.pushChanges();
          });
        }

        return instance;
      } else {
        return undefined;
      }
    };

    _proto.makeFunction = function makeFunction(expression, params) {
      if (params === void 0) {
        params = ['$instance'];
      }

      if (expression) {
        expression = Module.parseExpression(expression);
        var args = params.join(',');
        var expression_func = new Function("with(this) {\n\t\t\t\treturn (function (" + args + ", $$module) {\n\t\t\t\t\tconst $$pipes = $$module.meta.pipes;\n\t\t\t\t\treturn " + expression + ";\n\t\t\t\t}.bind(this)).apply(this, arguments);\n\t\t\t}");
        return expression_func;
      } else {
        return function () {
          return null;
        };
      }
    };

    _proto.resolve = function resolve(expression, parentInstance, payload) {
      return expression.apply(parentInstance, [payload, this]);
    };

    _proto.parse = function parse(node, instance) {
      for (var i = 0; i < node.childNodes.length; i++) {
        var child = node.childNodes[i];

        if (child.nodeType === 1) {
          var element = child;
          var context = getContextByNode(element);

          if (!context) {
            this.parse(element, instance);
          }
        } else if (child.nodeType === 3) {
          var text = child;
          this.parseTextNode(text, instance);
        }
      }
    };

    _proto.remove = function remove(node, keepInstance) {
      var keepContext = keepInstance ? getContext(keepInstance) : undefined;
      Module.traverseDown(node, function (node) {
        var rxcompId = node.rxcompId;

        if (rxcompId) {
          var keepContexts = Module.deleteContext(rxcompId, keepContext);

          if (keepContexts.length === 0) {
            delete node.rxcompId;
          }
        }
      });
      return node;
    };

    _proto.destroy = function destroy() {
      this.remove(this.meta.node);
      this.meta.node.innerHTML = this.meta.nodeInnerHTML;
    };

    _proto.makeContext = function makeContext(instance, parentInstance, node, selector) {
      var context = Module.makeContext(this, instance, parentInstance, node, instance.constructor, selector);
      return context;
    };

    _proto.getInstance = function getInstance(node) {
      if (node instanceof Document) {
        return window;
      }

      var context = getContextByNode(node);

      if (context) {
        return context.instance;
      } else {
        return undefined;
      }
    };

    _proto.getParentInstance = function getParentInstance(node) {
      var _this3 = this;

      return Module.traverseUp(node, function (node) {
        return _this3.getInstance(node);
      });
    };

    _proto.parseTextNode = function parseTextNode(node, instance) {
      var _this4 = this;

      var expressions = node.nodeExpressions;

      if (!expressions) {
        expressions = this.parseTextNodeExpression(node.wholeText);
      }

      var replacedText = expressions.reduce(function (p, c) {
        var text;

        if (typeof c === 'function') {
          text = _this4.resolve(c, instance, instance);

          if (text == undefined) {
            text = '';
          }
        } else {
          text = c;
        }

        return p + text;
      }, '');

      if (node.nodeValue !== replacedText) {
        var textNode = document.createTextNode(replacedText);
        textNode.nodeExpressions = expressions;
        node.parentNode.replaceChild(textNode, node);
      }
    };

    _proto.pushFragment = function pushFragment(nodeValue, from, to, expressions) {
      var fragment = nodeValue.substring(from, to);
      expressions.push(fragment);
    };

    _proto.parseTextNodeExpression = function parseTextNodeExpression(nodeValue) {
      var expressions = [];
      var regex = /\{{2}((([^{}])|(\{([^{}]|(\{.*?\}))+?\}))*?)\}{2}/g;
      var lastIndex = 0,
          matches;

      while ((matches = regex.exec(nodeValue)) !== null) {
        var index = regex.lastIndex - matches[0].length;

        if (index > lastIndex) {
          this.pushFragment(nodeValue, index, lastIndex, expressions);
        }

        lastIndex = regex.lastIndex;
        var expression = this.makeFunction(matches[1]);
        expressions.push(expression);
      }

      var length = nodeValue.length;

      if (length > lastIndex) {
        this.pushFragment(nodeValue, lastIndex, length, expressions);
      }

      return expressions;
    };

    _proto.makeHosts = function makeHosts(meta, instance, node) {
      if (meta.hosts) {
        Object.keys(meta.hosts).forEach(function (key) {
          var factory = meta.hosts[key];
          instance[key] = getHost(instance, factory, node);
        });
      }
    };

    _proto.makeInput = function makeInput(instance, key) {
      var _getContext = getContext(instance),
          node = _getContext.node;

      var input = null,
          expression = null;

      if (node.hasAttribute("[" + key + "]")) {
        expression = node.getAttribute("[" + key + "]");
      } else if (node.hasAttribute(key)) {
        var attribute = node.getAttribute(key).replace(/({{)|(}})|(")/g, function (substring, a, b, c) {
          if (a) {
            return '"+';
          }

          if (b) {
            return '+"';
          }

          if (c) {
            return '\"';
          }

          return '';
        });
        expression = "\"" + attribute + "\"";
      }

      if (expression) {
        input = this.makeFunction(expression);
      }

      return input;
    };

    _proto.makeInputs = function makeInputs(meta, instance) {
      var _this5 = this;

      var inputs = {};

      if (meta.inputs) {
        meta.inputs.forEach(function (key, i) {
          var input = _this5.makeInput(instance, key);

          if (input) {
            inputs[key] = input;
          }
        });
      }

      return inputs;
    };

    _proto.makeOutput = function makeOutput(instance, key) {
      var _this6 = this;

      var context = getContext(instance);
      var node = context.node;
      var parentInstance = context.parentInstance;
      var expression = node.getAttribute("(" + key + ")");
      var outputFunction = expression ? this.makeFunction(expression, ['$event']) : null;
      var output$ = new rxjs.Subject().pipe(operators.tap(function (event) {
        if (outputFunction) {
          _this6.resolve(outputFunction, parentInstance, event);
        }
      }));
      output$.pipe(operators.takeUntil(instance.unsubscribe$)).subscribe();
      instance[key] = output$;
      return output$;
    };

    _proto.makeOutputs = function makeOutputs(meta, instance) {
      var _this7 = this;

      var outputs = {};

      if (meta.outputs) {
        meta.outputs.forEach(function (key) {
          var output = _this7.makeOutput(instance, key);

          if (output) {
            outputs[key] = output;
          }
        });
      }

      return outputs;
    };

    _proto.resolveInputsOutputs = function resolveInputsOutputs(instance, changes) {
      var context = getContext(instance);
      var parentInstance = context.parentInstance;
      var inputs = context.inputs;

      for (var key in inputs) {
        var inputFunction = inputs[key];
        var value = this.resolve(inputFunction, parentInstance, instance);
        instance[key] = value;
      }
    };

    Module.parseExpression = function parseExpression(expression) {
      var l = '┌';
      var r = '┘';
      var rx1 = /(\()([^\(\)]*)(\))/;

      while (expression.match(rx1)) {
        expression = expression.replace(rx1, function (substring) {
          return "" + l + Module.parsePipes(arguments.length <= 2 ? undefined : arguments[2]) + r;
        });
      }

      expression = Module.parsePipes(expression);
      expression = expression.replace(/(┌)|(┘)/g, function (substring) {
        return (arguments.length <= 1 ? undefined : arguments[1]) ? '(' : ')';
      });
      return Module.parseOptionalChaining(expression);
    };

    Module.parsePipes = function parsePipes(expression) {
      var l = '┌';
      var r = '┘';
      var rx1 = /(.*?[^\|])\|([^\|]+)/;

      while (expression.match(rx1)) {
        expression = expression.replace(rx1, function (substring) {
          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
            args[_key - 1] = arguments[_key];
          }

          var value = args[0].trim();
          var params = Module.parsePipeParams(args[1]);
          var func = params.shift().trim();
          return "$$pipes." + func + ".transform" + l + [value].concat(params) + r;
        });
      }

      return expression;
    };

    Module.parsePipeParams = function parsePipeParams(expression) {
      var segments = [];
      var i = 0,
          word = '',
          block = 0;
      var t = expression.length;

      while (i < t) {
        var c = expression.substr(i, 1);

        if (c === '{' || c === '(' || c === '[') {
          block++;
        }

        if (c === '}' || c === ')' || c === ']') {
          block--;
        }

        if (c === ':' && block === 0) {
          if (word.length) {
            segments.push(word.trim());
          }

          word = '';
        } else {
          word += c;
        }

        i++;
      }

      if (word.length) {
        segments.push(word.trim());
      }

      return segments;
    };

    Module.parseOptionalChaining = function parseOptionalChaining(expression) {
      var regex = /(\w+(\?\.))+([\.|\w]+)/g;
      var previous;
      expression = expression.replace(regex, function (substring) {
        var tokens = substring.split('?.');

        for (var i = 0; i < tokens.length - 1; i++) {
          var a = i > 0 ? "(" + tokens[i] + " = " + previous + ")" : tokens[i];
          var b = tokens[i + 1];
          previous = i > 0 ? a + "." + b : "(" + a + " ? " + a + "." + b + " : void 0)";
        }

        return previous || '';
      });
      return expression;
    };

    Module.makeContext = function makeContext(module, instance, parentInstance, node, factory, selector) {
      instance.rxcompId = ++ID;
      var context = {
        module: module,
        instance: instance,
        parentInstance: parentInstance,
        node: node,
        factory: factory,
        selector: selector
      };
      var rxcompNodeId = node.rxcompId = node.rxcompId || instance.rxcompId;
      var nodeContexts = NODES[rxcompNodeId] || (NODES[rxcompNodeId] = []);
      nodeContexts.push(context);
      CONTEXTS[instance.rxcompId] = context;
      return context;
    };

    Module.deleteContext = function deleteContext(id, keepContext) {
      var keepContexts = [];
      var nodeContexts = NODES[id];

      if (nodeContexts) {
        nodeContexts.forEach(function (context) {
          if (context === keepContext) {
            keepContexts.push(keepContext);
          } else {
            var instance = context.instance;
            instance.unsubscribe$.next();
            instance.unsubscribe$.complete();
            instance.onDestroy();
            delete CONTEXTS[instance.rxcompId];
          }
        });

        if (keepContexts.length) {
          NODES[id] = keepContexts;
        } else {
          delete NODES[id];
        }
      }

      return keepContexts;
    };

    Module.matchSelectors = function matchSelectors(node, selectors, results) {
      for (var i = 0; i < selectors.length; i++) {
        var selectorResult = selectors[i](node);

        if (selectorResult) {
          var factory = selectorResult.factory;

          if (factory.prototype instanceof Component && factory.meta.template) {
            node.innerHTML = factory.meta.template;
          }

          results.push(selectorResult);

          if (factory.prototype instanceof Structure) {
            break;
          }
        }
      }

      return results;
    };

    Module.querySelectorsAll = function querySelectorsAll(node, selectors, results) {
      if (node.nodeType === 1) {
        var selectorResults = this.matchSelectors(node, selectors, []);
        results = results.concat(selectorResults);
        var structure = selectorResults.find(function (x) {
          return x.factory.prototype instanceof Structure;
        });

        if (structure) {
          return results;
        }

        var childNodes = node.childNodes;

        for (var i = 0; i < childNodes.length; i++) {
          results = this.querySelectorsAll(childNodes[i], selectors, results);
        }
      }

      return results;
    };

    Module.traverseUp = function traverseUp(node, callback, i) {
      if (i === void 0) {
        i = 0;
      }

      if (!node) {
        return;
      }

      var result = callback(node, i);

      if (result) {
        return result;
      }

      return this.traverseUp(node.parentNode, callback, i + 1);
    };

    Module.traverseDown = function traverseDown(node, callback, i) {
      if (i === void 0) {
        i = 0;
      }

      if (!node) {
        return;
      }

      var result = callback(node, i);

      if (result) {
        return result;
      }

      if (node.nodeType === 1) {
        var j = 0,
            t = node.childNodes.length;

        while (j < t && !result) {
          result = this.traverseDown(node.childNodes[j], callback, i + 1);
          j++;
        }
      }

      return result;
    };

    Module.traversePrevious = function traversePrevious(node, callback, i) {
      if (i === void 0) {
        i = 0;
      }

      if (!node) {
        return;
      }

      var result = callback(node, i);

      if (result) {
        return result;
      }

      return this.traversePrevious(node.previousSibling, callback, i + 1);
    };

    Module.traverseNext = function traverseNext(node, callback, i) {
      if (i === void 0) {
        i = 0;
      }

      if (!node) {
        return;
      }

      var result = callback(node, i);

      if (result) {
        return result;
      }

      return this.traverseNext(node.nextSibling, callback, i + 1);
    };

    return Module;
  }();
  function getContextByNode(node) {
    var context;
    var rxcompId = node.rxcompId;

    if (rxcompId) {
      var nodeContexts = NODES[rxcompId];

      if (nodeContexts) {
        context = nodeContexts.reduce(function (previous, current) {
          if (current.factory.prototype instanceof Component) {
            return current;
          } else if (current.factory.prototype instanceof Context) {
            return previous ? previous : current;
          } else {
            return previous;
          }
        }, undefined);
      }
    }

    return context;
  }
  function getHost(instance, factory, node) {
    if (!node) {
      node = getContext(instance).node;
    }

    if (node.rxcompId) {
      var nodeContexts = NODES[node.rxcompId];

      if (nodeContexts) {
        for (var i = 0; i < nodeContexts.length; i++) {
          var context = nodeContexts[i];

          if (context.instance !== instance) {
            if (context.instance instanceof factory) {
              return context.instance;
            }
          }
        }
      }
    }

    if (node.parentNode) {
      return getHost(instance, factory, node.parentNode);
    } else {
      return undefined;
    }
  }

  var SrcDirective = function (_Directive) {
    _inheritsLoose(SrcDirective, _Directive);

    function SrcDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    _createClass(SrcDirective, [{
      key: "src",
      set: function set(src) {
        if (this.src_ !== src) {
          this.src_ = src;

          var _getContext = getContext(this),
              node = _getContext.node;

          src ? node.setAttribute('src', src) : node.removeAttribute('src');
        }
      },
      get: function get() {
        return this.src_;
      }
    }]);

    return SrcDirective;
  }(Directive);
  SrcDirective.meta = {
    selector: '[[src]]',
    inputs: ['src']
  };

  var StyleDirective = function (_Directive) {
    _inheritsLoose(StyleDirective, _Directive);

    function StyleDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = StyleDirective.prototype;

    _proto.onChanges = function onChanges() {
      var _getContext = getContext(this),
          node = _getContext.node;

      var style = this.style;
      var previousStyle = this.previousStyle;

      if (previousStyle) {
        for (var key in previousStyle) {
          if (!style || !style[key]) {
            var splitted = key.split('.');
            var propertyName = splitted.shift();
            node.style.removeProperty(propertyName);
          }
        }
      }

      if (style) {
        for (var _key in style) {
          if (!previousStyle || previousStyle[_key] !== style[_key]) {
            var _splitted = _key.split('.');

            var _propertyName = _splitted.shift();

            var value = style[_key] + (_splitted.length ? _splitted[0] : '');
            node.style.setProperty(_propertyName, value);
          }
        }
      }

      this.previousStyle = style;
    };

    return StyleDirective;
  }(Directive);
  StyleDirective.meta = {
    selector: "[[style]]",
    inputs: ['style']
  };

  var factories = [ClassDirective, EventDirective, ForStructure, HrefDirective, IfStructure, InnerHtmlDirective, SrcDirective, StyleDirective];
  var pipes = [JsonPipe];

  var CoreModule = function (_Module) {
    _inheritsLoose(CoreModule, _Module);

    function CoreModule() {
      return _Module.apply(this, arguments) || this;
    }

    return CoreModule;
  }(Module);
  CoreModule.meta = {
    declarations: [].concat(factories, pipes),
    exports: [].concat(factories, pipes)
  };

  var ORDER = [Structure, Component, Directive];

  var Platform = function () {
    function Platform() {}

    Platform.bootstrap = function bootstrap(moduleFactory) {
      if (!moduleFactory) {
        throw 'missing moduleFactory';
      }

      if (!moduleFactory.meta) {
        throw 'missing moduleFactory meta';
      }

      if (!moduleFactory.meta.bootstrap) {
        throw 'missing bootstrap';
      }

      if (!moduleFactory.meta.bootstrap.meta) {
        throw 'missing bootstrap meta';
      }

      if (!moduleFactory.meta.bootstrap.meta.selector) {
        throw 'missing bootstrap meta selector';
      }

      var meta = this.resolveMeta(moduleFactory);
      var module = new moduleFactory();
      module.meta = meta;
      var instances = module.compile(meta.node, window);
      var root = instances[0];
      root.pushChanges();
      return module;
    };

    Platform.isBrowser = function isBrowser() {
      return Boolean(window);
    };

    Platform.querySelector = function querySelector(selector) {
      return document.querySelector(selector);
    };

    Platform.resolveMeta = function resolveMeta(moduleFactory) {
      var meta = this.resolveImportedMeta(moduleFactory);
      var bootstrap = moduleFactory.meta.bootstrap;
      var node = this.querySelector(bootstrap.meta.selector);

      if (!node) {
        throw "missing node " + bootstrap.meta.selector;
      }

      var nodeInnerHTML = node.innerHTML;
      var pipes = this.resolvePipes(meta);
      var factories = this.resolveFactories(meta);
      this.sortFactories(factories);
      factories.unshift(bootstrap);
      var selectors = this.unwrapSelectors(factories);
      return {
        factories: factories,
        pipes: pipes,
        selectors: selectors,
        bootstrap: bootstrap,
        node: node,
        nodeInnerHTML: nodeInnerHTML
      };
    };

    Platform.resolveImportedMeta = function resolveImportedMeta(moduleFactory) {
      var _this = this;

      var meta = Object.assign({
        imports: [],
        declarations: [],
        pipes: [],
        exports: []
      }, moduleFactory.meta);
      meta.imports = (moduleFactory.meta.imports || []).map(function (moduleFactory) {
        return _this.resolveImportedMeta(moduleFactory);
      });
      return meta;
    };

    Platform.resolvePipes = function resolvePipes(meta, exported) {
      var _this2 = this;

      var importedPipes = meta.imports.map(function (importMeta) {
        return _this2.resolvePipes(importMeta, true);
      });
      var pipes = {};
      var pipeList = (exported ? meta.exports : meta.declarations).filter(function (x) {
        return x.prototype instanceof Pipe;
      });
      pipeList.forEach(function (pipeFactory) {
        return pipes[pipeFactory.meta.name] = pipeFactory;
      });
      return Object.assign.apply(Object, [{}].concat(importedPipes, [pipes]));
    };

    Platform.resolveFactories = function resolveFactories(meta, exported) {
      var _this3 = this,
          _Array$prototype$conc;

      var importedFactories = meta.imports.map(function (importMeta) {
        return _this3.resolveFactories(importMeta, true);
      });
      var factoryList = (exported ? meta.exports : meta.declarations).filter(function (x) {
        return x.prototype instanceof Factory;
      });
      return (_Array$prototype$conc = Array.prototype.concat).call.apply(_Array$prototype$conc, [factoryList].concat(importedFactories));
    };

    Platform.sortFactories = function sortFactories(factories) {
      factories.sort(function (a, b) {
        var ai = ORDER.reduce(function (p, c, i) {
          return a.prototype instanceof c ? i : p;
        }, -1);
        var bi = ORDER.reduce(function (p, c, i) {
          return b.prototype instanceof c ? i : p;
        }, -1);
        var o = ai - bi;

        if (o === 0) {
          return (a.meta.hosts ? 1 : 0) - (b.meta.hosts ? 1 : 0);
        }

        return o;
      });
    };

    Platform.getExpressions = function getExpressions(selector) {
      var matchers = [];
      selector.replace(/\.([\w\-\_]+)|\[(.+?\]*)(\=)(.*?)\]|\[(.+?\]*)\]|([\w\-\_]+)/g, function (value, c1, a2, u3, v4, a5, e6) {
        if (c1) {
          matchers.push(function (node) {
            return node.classList.contains(c1);
          });
        }

        if (a2) {
          matchers.push(function (node) {
            return node.hasAttribute(a2) && node.getAttribute(a2) === v4 || node.hasAttribute("[" + a2 + "]") && node.getAttribute("[" + a2 + "]") === v4;
          });
        }

        if (a5) {
          matchers.push(function (node) {
            return node.hasAttribute(a5) || node.hasAttribute("[" + a5 + "]");
          });
        }

        if (e6) {
          matchers.push(function (node) {
            return node.nodeName.toLowerCase() === e6.toLowerCase();
          });
        }

        return '';
      });
      return matchers;
    };

    Platform.unwrapSelectors = function unwrapSelectors(factories) {
      var _this4 = this;

      var selectors = [];
      factories.forEach(function (factory) {
        if (factory.meta && factory.meta.selector) {
          factory.meta.selector.split(',').forEach(function (selector) {
            selector = selector.trim();
            var excludes = [];
            var matchSelector = selector.replace(/\:not\((.+?)\)/g, function (value, unmatchSelector) {
              excludes = _this4.getExpressions(unmatchSelector);
              return '';
            });

            var includes = _this4.getExpressions(matchSelector);

            selectors.push(function (node) {
              var included = includes.reduce(function (p, match) {
                return p && match(node);
              }, true);
              var excluded = excludes.reduce(function (p, match) {
                return p || match(node);
              }, false);

              if (included && !excluded) {
                return {
                  node: node,
                  factory: factory,
                  selector: selector
                };
              } else {
                return false;
              }
            });
          });
        }
      });
      return selectors;
    };

    return Platform;
  }();

  var Browser = function (_Platform) {
    _inheritsLoose(Browser, _Platform);

    function Browser() {
      return _Platform.apply(this, arguments) || this;
    }

    return Browser;
  }(Platform);

  exports.Browser = Browser;
  exports.ClassDirective = ClassDirective;
  exports.Component = Component;
  exports.Context = Context;
  exports.CoreModule = CoreModule;
  exports.Directive = Directive;
  exports.EventDirective = EventDirective;
  exports.Factory = Factory;
  exports.ForItem = ForItem;
  exports.ForStructure = ForStructure;
  exports.HrefDirective = HrefDirective;
  exports.IfStructure = IfStructure;
  exports.InnerHtmlDirective = InnerHtmlDirective;
  exports.JsonPipe = JsonPipe;
  exports.Module = Module;
  exports.Pipe = Pipe;
  exports.Platform = Platform;
  exports.SrcDirective = SrcDirective;
  exports.Structure = Structure;
  exports.StyleDirective = StyleDirective;
  exports.getContext = getContext;
  exports.getContextByNode = getContextByNode;
  exports.getHost = getHost;

  return exports;

}({}, rxjs, rxjs.operators));

/**
 * @license rxcomp-form v1.0.0-beta.9
 * (c) 2020 Luca Zampetti <lzampetti@gmail.com>
 * License: MIT
 */

this.rxcomp = this.rxcomp || {};
this.rxcomp.form = (function (exports, rxcomp, rxjs, operators) {
  'use strict';

  function _defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  function _createClass(Constructor, protoProps, staticProps) {
    if (protoProps) _defineProperties(Constructor.prototype, protoProps);
    if (staticProps) _defineProperties(Constructor, staticProps);
    return Constructor;
  }

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  var FormAbstractCollectionDirective = function (_Directive) {
    _inheritsLoose(FormAbstractCollectionDirective, _Directive);

    function FormAbstractCollectionDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormAbstractCollectionDirective.prototype;

    _proto.onChanges = function onChanges(changes) {
      var _getContext = rxcomp.getContext(this),
          node = _getContext.node;

      var flags = this.control.flags;
      Object.keys(flags).forEach(function (key) {
        flags[key] ? node.classList.add(key) : node.classList.remove(key);
      });
    };

    _createClass(FormAbstractCollectionDirective, [{
      key: "control",
      get: function get() {
        return {};
      }
    }]);

    return FormAbstractCollectionDirective;
  }(rxcomp.Directive);
  FormAbstractCollectionDirective.meta = {
    selector: '',
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormArrayDirective = function (_FormAbstractCollecti) {
    _inheritsLoose(FormArrayDirective, _FormAbstractCollecti);

    function FormArrayDirective() {
      return _FormAbstractCollecti.apply(this, arguments) || this;
    }

    _createClass(FormArrayDirective, [{
      key: "control",
      get: function get() {
        if (this.formArray) {
          return this.formArray;
        } else {
          if (!this.host) {
            throw 'missing form collection';
          }

          return this.host.control.get(this.formArrayName);
        }
      }
    }]);

    return FormArrayDirective;
  }(FormAbstractCollectionDirective);
  FormArrayDirective.meta = {
    selector: '[formArray],[formArrayName]',
    inputs: ['formArray', 'formArrayName'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormAbstractDirective = function (_Directive) {
    _inheritsLoose(FormAbstractDirective, _Directive);

    function FormAbstractDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormAbstractDirective.prototype;

    _proto.onInit = function onInit() {
      var _this = this;

      var node = rxcomp.getContext(this).node;
      rxjs.fromEvent(node, 'input').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onChange(event);
      });
      rxjs.fromEvent(node, 'change').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onChange(event);
      });
      rxjs.fromEvent(node, 'blur').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onBlur(event);
      });
    };

    _proto.onChanges = function onChanges(changes) {
      var node = rxcomp.getContext(this).node;

      if (this.formControlName) {
        node.name = this.formControlName;
      }

      var control = this.control;
      var flags = control.flags;
      Object.keys(flags).forEach(function (key) {
        flags[key] ? node.classList.add(key) : node.classList.remove(key);
      });
      this.writeValue(control.value);
    };

    _proto.writeValue = function writeValue(value) {
      var node = rxcomp.getContext(this).node;
      node.value = value == null ? '' : value;
    };

    _proto.onChange = function onChange(event) {
      var node = rxcomp.getContext(this).node;
      this.control.value = node.value === '' ? null : node.value;
    };

    _proto.onBlur = function onBlur(event) {
      this.control.touched = true;
    };

    _proto.setDisabledState = function setDisabledState(disabled) {
      var node = rxcomp.getContext(this).node;
      node.disabled = disabled;
    };

    _createClass(FormAbstractDirective, [{
      key: "control",
      get: function get() {
        if (this.formControl) {
          return this.formControl;
        } else {
          if (!this.host) {
            throw 'missing form collection';
          }

          return this.host.control.get(this.formControlName);
        }
      }
    }]);

    return FormAbstractDirective;
  }(rxcomp.Directive);
  FormAbstractDirective.meta = {
    selector: '',
    inputs: ['formControl', 'formControlName', 'value'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormCheckboxDirective = function (_FormAbstractDirectiv) {
    _inheritsLoose(FormCheckboxDirective, _FormAbstractDirectiv);

    function FormCheckboxDirective() {
      return _FormAbstractDirectiv.apply(this, arguments) || this;
    }

    var _proto = FormCheckboxDirective.prototype;

    _proto.onInit = function onInit() {
      var _this = this;

      var node = rxcomp.getContext(this).node;
      rxjs.fromEvent(node, 'change').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onChange(event);
      });
      rxjs.fromEvent(node, 'blur').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onBlur(event);
      });
    };

    _proto.writeValue = function writeValue(value) {
      var node = rxcomp.getContext(this).node;
      value === this.value ? node.setAttribute('checked', value) : node.removeAttribute('checked');
    };

    _proto.setDisabledState = function setDisabledState(disabled) {
      var node = rxcomp.getContext(this).node;
      node.disabled = disabled;
    };

    _proto.onChange = function onChange(event) {
      var node = rxcomp.getContext(this).node;
      this.control.value = node.checked ? this.value : this.value === true ? false : null;
    };

    _proto.onBlur = function onBlur(event) {
      this.control.touched = true;
    };

    return FormCheckboxDirective;
  }(FormAbstractDirective);
  FormCheckboxDirective.meta = {
    selector: 'input[type=checkbox][formControl],input[type=checkbox][formControlName]',
    inputs: ['formControl', 'formControlName', 'value'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormFieldComponent = function (_Component) {
    _inheritsLoose(FormFieldComponent, _Component);

    function FormFieldComponent() {
      return _Component.apply(this, arguments) || this;
    }

    var _proto = FormFieldComponent.prototype;

    _proto.onChanges = function onChanges(changes) {
      var _getContext = rxcomp.getContext(this),
          node = _getContext.node;

      var flags = this.control.flags;
      Object.keys(flags).forEach(function (key) {
        flags[key] ? node.classList.add(key) : node.classList.remove(key);
      });
    };

    _createClass(FormFieldComponent, [{
      key: "control",
      get: function get() {
        if (this.formField) {
          return this.formField;
        } else {
          if (!this.host) {
            throw 'missing form collection';
          }

          return this.host.control.get(this.formFieldName);
        }
      }
    }]);

    return FormFieldComponent;
  }(rxcomp.Component);
  FormFieldComponent.meta = {
    selector: '[formField],[formFieldName]',
    inputs: ['formField', 'formFieldName'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormGroupDirective = function (_FormAbstractCollecti) {
    _inheritsLoose(FormGroupDirective, _FormAbstractCollecti);

    function FormGroupDirective() {
      return _FormAbstractCollecti.apply(this, arguments) || this;
    }

    _createClass(FormGroupDirective, [{
      key: "control",
      get: function get() {
        if (this.formGroup) {
          return this.formGroup;
        } else {
          if (!this.host) {
            throw 'missing form collection';
          }

          return this.host.control.get(this.formGroupName);
        }
      }
    }]);

    return FormGroupDirective;
  }(FormAbstractCollectionDirective);
  FormGroupDirective.meta = {
    selector: '[formGroup],[formGroupName]',
    inputs: ['formGroup', 'formGroupName'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormInputDirective = function (_FormAbstractDirectiv) {
    _inheritsLoose(FormInputDirective, _FormAbstractDirectiv);

    function FormInputDirective() {
      return _FormAbstractDirectiv.apply(this, arguments) || this;
    }

    var _proto = FormInputDirective.prototype;

    _proto.writeValue = function writeValue(value) {
      var node = rxcomp.getContext(this).node;
      node.value = value == null ? '' : value;
    };

    _proto.onChange = function onChange(event) {
      var node = rxcomp.getContext(this).node;
      this.control.value = node.value === '' ? null : node.value;
    };

    _proto.onBlur = function onBlur(event) {
      this.control.touched = true;
    };

    return FormInputDirective;
  }(FormAbstractDirective);
  FormInputDirective.meta = {
    selector: 'input[type=text][formControl],input[type=text][formControlName],input[type=email][formControl],input[type=email][formControlName],input[type=password][formControl],input[type=password][formControlName],textarea[formControl],textarea[formControlName]',
    inputs: ['formControl', 'formControlName'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormPlaceholderDirective = function (_Directive) {
    _inheritsLoose(FormPlaceholderDirective, _Directive);

    function FormPlaceholderDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormPlaceholderDirective.prototype;

    _proto.onChanges = function onChanges(changes) {
      var node = rxcomp.getContext(this).node;
      node.setAttribute('placeholder', this.placeholder || '');
    };

    return FormPlaceholderDirective;
  }(rxcomp.Directive);
  FormPlaceholderDirective.meta = {
    selector: 'input[placeholder],textarea[placeholder]',
    inputs: ['placeholder']
  };

  var FormRadioDirective = function (_FormAbstractDirectiv) {
    _inheritsLoose(FormRadioDirective, _FormAbstractDirectiv);

    function FormRadioDirective() {
      return _FormAbstractDirectiv.apply(this, arguments) || this;
    }

    var _proto = FormRadioDirective.prototype;

    _proto.onInit = function onInit() {
      var _this = this;

      var node = rxcomp.getContext(this).node;
      rxjs.fromEvent(node, 'change').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onChange(event);
      });
      rxjs.fromEvent(node, 'blur').pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
        return _this.onBlur(event);
      });
    };

    _proto.writeValue = function writeValue(value) {
      var node = rxcomp.getContext(this).node;
      node.checked = node.value === value;
    };

    _proto.setDisabledState = function setDisabledState(disabled) {
      var node = rxcomp.getContext(this).node;
      node.disabled = disabled;
    };

    _proto.onChange = function onChange(event) {
      var node = rxcomp.getContext(this).node;

      if (node.checked) {
        this.control.value = node.value;
      }
    };

    _proto.onBlur = function onBlur(event) {
      this.control.touched = true;
    };

    return FormRadioDirective;
  }(FormAbstractDirective);
  FormRadioDirective.meta = {
    selector: 'input[type=radio][formControl],input[type=radio][formControlName]',
    inputs: ['formControl', 'formControlName'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormSelectDirective = function (_FormAbstractDirectiv) {
    _inheritsLoose(FormSelectDirective, _FormAbstractDirectiv);

    function FormSelectDirective() {
      return _FormAbstractDirectiv.apply(this, arguments) || this;
    }

    var _proto = FormSelectDirective.prototype;

    _proto.writeValue = function writeValue(value) {
      var node = rxcomp.getContext(this).node;
      node.value = value == null ? '' : value;
    };

    _proto.setDisabledState = function setDisabledState(disabled) {
      var node = rxcomp.getContext(this).node;
      node.disabled = disabled;
    };

    _proto.onChange = function onChange(event) {
      var node = rxcomp.getContext(this).node;
      this.control.value = node.value === '' ? null : node.value;
    };

    _proto.onBlur = function onBlur(event) {
      this.control.touched = true;
    };

    return FormSelectDirective;
  }(FormAbstractDirective);
  FormSelectDirective.meta = {
    selector: 'select[formControl],select[formControlName]',
    inputs: ['formControl', 'formControlName'],
    hosts: {
      host: FormAbstractCollectionDirective
    }
  };

  var FormSubmitDirective = function (_Directive) {
    _inheritsLoose(FormSubmitDirective, _Directive);

    function FormSubmitDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormSubmitDirective.prototype;

    _proto.onInit = function onInit() {
      var _getContext = rxcomp.getContext(this),
          module = _getContext.module,
          node = _getContext.node,
          selector = _getContext.selector,
          parentInstance = _getContext.parentInstance;

      var event = this.event = selector.replace(/\[|\]|\(|\)/g, '');
      var form = node;
      var event$ = this.event$ = rxjs.fromEvent(form, 'submit').pipe(operators.tap(function (event) {
        event.preventDefault();
      }), operators.shareReplay(1));
      var expression = node.getAttribute("(" + event + ")");

      if (expression) {
        var outputFunction = module.makeFunction(expression, ['$event']);
        event$.pipe(operators.takeUntil(this.unsubscribe$)).subscribe(function (event) {
          module.resolve(outputFunction, parentInstance, event);
        });
      } else {
        parentInstance[event + "$"] = event$;
      }
    };

    return FormSubmitDirective;
  }(rxcomp.Directive);
  FormSubmitDirective.meta = {
    selector: "[(submit)]"
  };

  var FormValidator = function () {
    function FormValidator(validator, params) {
      this.validator = validator;
      this.params$ = new rxjs.BehaviorSubject(params);
    }

    var _proto = FormValidator.prototype;

    _proto.validate = function validate(value) {
      return this.validator(value, this.params);
    };

    _createClass(FormValidator, [{
      key: "params",
      get: function get() {
        return this.params$.getValue();
      },
      set: function set(params) {
        if (params) {
          var current = this.params;
          var differs = Object.keys(params).reduce(function (flag, key) {
            return flag || !current || current[key] !== params[key];
          }, false);

          if (differs) {
            this.params$.next(params);
          }
        }
      }
    }]);

    return FormValidator;
  }();

  function NullValidator() {
    return new FormValidator(function (value, params) {
      return null;
    });
  }
  function RequiredValidator() {
    return new FormValidator(function (value, params) {
      return value == null || value.length === 0 ? {
        required: true
      } : null;
    });
  }
  function RequiredTrueValidator() {
    return new FormValidator(function (value, params) {
      return value === true ? null : {
        required: true
      };
    });
  }
  function MinValidator(min) {
    return new FormValidator(function (value, params) {
      var min = params.min;

      if (!value || !min) {
        return null;
      }

      value = parseFloat(value);
      return !isNaN(value) && value < min ? {
        min: {
          min: min,
          actual: value
        }
      } : null;
    }, {
      min: min
    });
  }
  function MaxValidator(max) {
    return new FormValidator(function (value, params) {
      var max = params.max;

      if (!value || !max) {
        return null;
      }

      value = parseFloat(value);
      return !isNaN(value) && value > max ? {
        max: {
          max: max,
          actual: value
        }
      } : null;
    }, {
      max: max
    });
  }
  function MinLengthValidator(minlength) {
    return new FormValidator(function (value, params) {
      var minlength = params.minlength;

      if (!value || !minlength) {
        return null;
      }

      var length = value ? value.length : 0;
      return length < minlength ? {
        minlength: {
          requiredLength: minlength,
          actualLength: length
        }
      } : null;
    }, {
      minlength: minlength
    });
  }
  function MaxLengthValidator(maxlength) {
    return new FormValidator(function (value, params) {
      var maxlength = params.maxlength;

      if (!value || !maxlength) {
        return null;
      }

      var length = value ? value.length : 0;
      return length > maxlength ? {
        minlength: {
          requiredLength: maxlength,
          actualLength: length
        }
      } : null;
    }, {
      maxlength: maxlength
    });
  }
  function PatternValidator(pattern) {
    return new FormValidator(function (value, params) {
      var pattern = params.pattern;

      if (!value || !pattern) {
        return null;
      }

      var regex = patternToRegEx(pattern);
      return regex.test(value) ? null : {
        pattern: {
          requiredPattern: regex.toString(),
          actualValue: value
        }
      };
    }, {
      pattern: pattern
    });
  }
  function EmailValidator() {
    var regex = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;
    return new FormValidator(function (value, params) {
      if (!value) {
        return null;
      }

      return regex.test(value) ? null : {
        email: true
      };
    });
  }

  function patternToRegEx(pattern) {
    var regex;

    if (pattern instanceof RegExp) {
      regex = pattern;
    } else if (typeof pattern === 'string') {
      pattern = pattern.charAt(0) === '^' ? pattern : "^" + pattern;
      pattern = pattern.charAt(pattern.length - 1) === '$' ? pattern : pattern + "$";
      regex = new RegExp(pattern);
    }

    return regex || new RegExp('');
  }

  var validators = /*#__PURE__*/Object.freeze({
    __proto__: null,
    NullValidator: NullValidator,
    RequiredValidator: RequiredValidator,
    RequiredTrueValidator: RequiredTrueValidator,
    MinValidator: MinValidator,
    MaxValidator: MaxValidator,
    MinLengthValidator: MinLengthValidator,
    MaxLengthValidator: MaxLengthValidator,
    PatternValidator: PatternValidator,
    EmailValidator: EmailValidator
  });

  var FormEmailDirective = function (_Directive) {
    _inheritsLoose(FormEmailDirective, _Directive);

    function FormEmailDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormEmailDirective.prototype;

    _proto.onInit = function onInit() {
      var validator = this.validator = EmailValidator();

      if (this.host) {
        this.host.control.addValidators(validator);
      }
    };

    return FormEmailDirective;
  }(rxcomp.Directive);
  FormEmailDirective.meta = {
    selector: '[email][formControl],[email][formControlName]',
    inputs: ['email'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormMaxLengthDirective = function (_Directive) {
    _inheritsLoose(FormMaxLengthDirective, _Directive);

    function FormMaxLengthDirective() {
      var _this;

      _this = _Directive.apply(this, arguments) || this;
      _this.maxlength = Number.POSITIVE_INFINITY;
      return _this;
    }

    var _proto = FormMaxLengthDirective.prototype;

    _proto.onInit = function onInit() {
      this.validator = MaxLengthValidator(this.maxlength);

      if (this.host) {
        this.host.control.addValidators(this.validator);
      }
    };

    _proto.onChanges = function onChanges(changes) {
      if (this.validator) {
        this.validator.params = {
          maxlength: this.maxlength
        };
      }
    };

    return FormMaxLengthDirective;
  }(rxcomp.Directive);
  FormMaxLengthDirective.meta = {
    selector: '[maxlength][formControl],[maxlength][formControlName]',
    inputs: ['maxlength'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormMaxDirective = function (_Directive) {
    _inheritsLoose(FormMaxDirective, _Directive);

    function FormMaxDirective() {
      var _this;

      _this = _Directive.apply(this, arguments) || this;
      _this.max = Number.POSITIVE_INFINITY;
      return _this;
    }

    var _proto = FormMaxDirective.prototype;

    _proto.onInit = function onInit() {
      this.validator = MaxValidator(this.max);

      if (this.host) {
        this.host.control.addValidators(this.validator);
      }
    };

    _proto.onChanges = function onChanges(changes) {
      if (this.validator) {
        this.validator.params = {
          max: this.max
        };
      }
    };

    return FormMaxDirective;
  }(rxcomp.Directive);
  FormMaxDirective.meta = {
    selector: '[max][formControl],[max][formControlName]',
    inputs: ['max'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormMinLengthDirective = function (_Directive) {
    _inheritsLoose(FormMinLengthDirective, _Directive);

    function FormMinLengthDirective() {
      var _this;

      _this = _Directive.apply(this, arguments) || this;
      _this.minlength = Number.NEGATIVE_INFINITY;
      return _this;
    }

    var _proto = FormMinLengthDirective.prototype;

    _proto.onInit = function onInit() {
      this.validator = MinLengthValidator(this.minlength);

      if (this.host) {
        this.host.control.addValidators(this.validator);
      }
    };

    _proto.onChanges = function onChanges(changes) {
      if (this.validator) {
        this.validator.params = {
          minlength: this.minlength
        };
      }
    };

    return FormMinLengthDirective;
  }(rxcomp.Directive);
  FormMinLengthDirective.meta = {
    selector: '[minlength][formControl],[minlength][formControlName]',
    inputs: ['minlength'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormMinDirective = function (_Directive) {
    _inheritsLoose(FormMinDirective, _Directive);

    function FormMinDirective() {
      var _this;

      _this = _Directive.apply(this, arguments) || this;
      _this.min = Number.NEGATIVE_INFINITY;
      return _this;
    }

    var _proto = FormMinDirective.prototype;

    _proto.onInit = function onInit() {
      this.validator = MinValidator(this.min);

      if (this.host) {
        this.host.control.addValidators(this.validator);
      }
    };

    _proto.onChanges = function onChanges(changes) {
      if (this.validator) {
        this.validator.params = {
          min: this.min
        };
      }
    };

    return FormMinDirective;
  }(rxcomp.Directive);
  FormMinDirective.meta = {
    selector: '[min][formControl],[min][formControlName]',
    inputs: ['min'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormPatternDirective = function (_Directive) {
    _inheritsLoose(FormPatternDirective, _Directive);

    function FormPatternDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormPatternDirective.prototype;

    _proto.onInit = function onInit() {
      if (this.pattern) {
        this.validator = PatternValidator(this.pattern);

        if (this.host) {
          this.host.control.addValidators(this.validator);
        }
      }
    };

    _proto.onChanges = function onChanges(changes) {
      if (this.validator) {
        this.validator.params = {
          pattern: this.pattern
        };
      }
    };

    return FormPatternDirective;
  }(rxcomp.Directive);
  FormPatternDirective.meta = {
    selector: '[pattern][formControl],[pattern][formControlName]',
    inputs: ['pattern'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormRequiredTrueDirective = function (_Directive) {
    _inheritsLoose(FormRequiredTrueDirective, _Directive);

    function FormRequiredTrueDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormRequiredTrueDirective.prototype;

    _proto.onInit = function onInit() {
      this.validator = RequiredTrueValidator();

      if (this.host) {
        this.host.control.addValidators(this.validator);
      }
    };

    return FormRequiredTrueDirective;
  }(rxcomp.Directive);
  FormRequiredTrueDirective.meta = {
    selector: '[requiredTrue][formControl],[requiredTrue][formControlName]',
    inputs: ['requiredTrue'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var FormRequiredDirective = function (_Directive) {
    _inheritsLoose(FormRequiredDirective, _Directive);

    function FormRequiredDirective() {
      return _Directive.apply(this, arguments) || this;
    }

    var _proto = FormRequiredDirective.prototype;

    _proto.onInit = function onInit() {
      this.validator = RequiredValidator();

      if (this.host) {
        this.host.control.addValidators(this.validator);
      }
    };

    return FormRequiredDirective;
  }(rxcomp.Directive);
  FormRequiredDirective.meta = {
    selector: '[required][formControl],[required][formControlName]',
    inputs: ['required'],
    hosts: {
      host: FormAbstractDirective
    }
  };

  var factories = [FormArrayDirective, FormCheckboxDirective, FormFieldComponent, FormGroupDirective, FormInputDirective, FormPlaceholderDirective, FormRadioDirective, FormSelectDirective, FormSubmitDirective, FormEmailDirective, FormMaxDirective, FormMaxLengthDirective, FormMinDirective, FormMinLengthDirective, FormPatternDirective, FormRequiredDirective, FormRequiredTrueDirective];
  var pipes = [];

  var FormModule = function (_Module) {
    _inheritsLoose(FormModule, _Module);

    function FormModule() {
      return _Module.apply(this, arguments) || this;
    }

    return FormModule;
  }(rxcomp.Module);
  FormModule.meta = {
    declarations: [].concat(factories, pipes),
    exports: [].concat(factories, pipes)
  };

  var FormStatus;

  (function (FormStatus) {
    FormStatus["Pending"] = "pending";
    FormStatus["Valid"] = "valid";
    FormStatus["Invalid"] = "invalid";
    FormStatus["Disabled"] = "disabled";
    FormStatus["Hidden"] = "hidden";
  })(FormStatus || (FormStatus = {}));
  var FormStatus$1 = FormStatus;

  var FormAbstract = function () {
    function FormAbstract(validators) {
      var _this = this;

      this.value_ = undefined;
      this.submitted_ = false;
      this.touched_ = false;
      this.dirty_ = false;
      this.valueSubject = new rxjs.BehaviorSubject(null);
      this.statusSubject = new rxjs.BehaviorSubject(null);
      this.validatorsSubject = new rxjs.ReplaySubject().pipe(operators.switchAll());
      this.value$ = this.valueSubject.pipe(operators.distinctUntilChanged(), operators.skip(1), operators.tap(function () {
        _this.submitted_ = false;
        _this.dirty_ = true;

        _this.statusSubject.next(null);
      }), operators.shareReplay(1));
      this.status$ = rxjs.merge(this.statusSubject, this.validatorsSubject).pipe(operators.switchMap(function () {
        return _this.validate$(_this.value);
      }), operators.shareReplay(1));
      this.changes$ = rxjs.merge(this.value$, this.status$).pipe(operators.map(function () {
        return _this.value;
      }), operators.auditTime(1), operators.shareReplay(1));
      this.validators = validators ? Array.isArray(validators) ? validators : [validators] : [];
    }

    var _proto = FormAbstract.prototype;

    _proto.initSubjects_ = function initSubjects_() {
      this.switchValidators_();
    };

    _proto.switchValidators_ = function switchValidators_() {
      var validatorParams = this.validators.map(function (x) {
        return x.params$;
      });
      var validatorParams$ = validatorParams.length ? rxjs.combineLatest(validatorParams) : rxjs.of(validatorParams);
      this.validatorsSubject.next(validatorParams$);
    };

    _proto.initObservables_ = function initObservables_() {};

    _proto.validate$ = function validate$(value) {
      var _this2 = this;

      if (this.status === FormStatus$1.Disabled || this.status === FormStatus$1.Hidden || this.submitted_ || !this.validators.length) {
        this.errors = {};

        if (this.status === FormStatus$1.Invalid) {
          this.status = FormStatus$1.Valid;
        }

        return rxjs.of(this.errors);
      } else {
        return rxjs.combineLatest(this.validators.map(function (x) {
          var result$ = x.validate(value);
          return rxjs.isObservable(result$) ? result$ : rxjs.of(result$);
        })).pipe(operators.map(function (results) {
          _this2.errors = Object.assign.apply(Object, [{}].concat(results));
          _this2.status = Object.keys(_this2.errors).length === 0 ? FormStatus$1.Valid : FormStatus$1.Invalid;
          return _this2.errors;
        }));
      }
    };

    _proto.reset = function reset(status) {
      this.status = status || FormStatus$1.Pending;
      this.value_ = null;
      this.dirty_ = false;
      this.touched_ = false;
      this.submitted_ = false;
      this.statusSubject.next(null);
    };

    _proto.patch = function patch(value) {
      this.value_ = value;
      this.dirty_ = true;
      this.submitted_ = false;
      this.statusSubject.next(null);
    };

    _proto.addValidators = function addValidators() {
      var _this$validators;

      (_this$validators = this.validators).push.apply(_this$validators, arguments);

      this.switchValidators_();
    };

    _proto.replaceValidators = function replaceValidators() {
      for (var _len = arguments.length, validators = new Array(_len), _key = 0; _key < _len; _key++) {
        validators[_key] = arguments[_key];
      }

      this.validators = validators;
      this.switchValidators_();
    };

    _proto.clearValidators = function clearValidators() {
      this.validators = [];
      this.switchValidators_();
    };

    _createClass(FormAbstract, [{
      key: "pending",
      get: function get() {
        return this.status === FormStatus$1.Pending;
      }
    }, {
      key: "valid",
      get: function get() {
        return this.status !== FormStatus$1.Invalid;
      }
    }, {
      key: "invalid",
      get: function get() {
        return this.status === FormStatus$1.Invalid;
      }
    }, {
      key: "disabled",
      get: function get() {
        return this.status === FormStatus$1.Disabled;
      },
      set: function set(disabled) {
        if (disabled) {
          if (this.status !== FormStatus$1.Disabled) {
            this.status = FormStatus$1.Disabled;
            this.dirty_ = false;
            this.touched_ = false;
            this.submitted_ = false;
            this.statusSubject.next(null);
          }
        } else {
          if (this.status === FormStatus$1.Disabled) {
            this.status = FormStatus$1.Pending;
            this.dirty_ = false;
            this.touched_ = false;
            this.submitted_ = false;
            this.statusSubject.next(null);
          }
        }
      }
    }, {
      key: "enabled",
      get: function get() {
        return this.status !== FormStatus$1.Disabled;
      }
    }, {
      key: "hidden",
      get: function get() {
        return this.status === FormStatus$1.Hidden;
      },
      set: function set(hidden) {
        if (hidden) {
          if (this.status !== FormStatus$1.Hidden) {
            this.status = FormStatus$1.Hidden;
            this.dirty_ = false;
            this.touched_ = false;
            this.submitted_ = false;
            this.statusSubject.next(null);
          }
        } else {
          if (this.status === FormStatus$1.Hidden) {
            this.status = FormStatus$1.Pending;
            this.dirty_ = false;
            this.touched_ = false;
            this.submitted_ = false;
            this.statusSubject.next(null);
          }
        }
      }
    }, {
      key: "visible",
      get: function get() {
        return this.status !== FormStatus$1.Hidden;
      }
    }, {
      key: "submitted",
      get: function get() {
        return this.submitted_;
      },
      set: function set(submitted) {
        this.submitted_ = submitted;
        this.statusSubject.next(null);
      }
    }, {
      key: "dirty",
      get: function get() {
        return this.dirty_;
      }
    }, {
      key: "pristine",
      get: function get() {
        return !this.dirty_;
      }
    }, {
      key: "touched",
      get: function get() {
        return this.touched_;
      },
      set: function set(touched) {
        this.touched_ = touched;
        this.statusSubject.next(null);
      }
    }, {
      key: "untouched",
      get: function get() {
        return !this.touched_;
      }
    }, {
      key: "flags",
      get: function get() {
        return {
          untouched: this.untouched,
          touched: this.touched,
          pristine: this.pristine,
          dirty: this.dirty,
          pending: this.pending,
          enabled: this.enabled,
          disabled: this.disabled,
          hidden: this.hidden,
          visible: this.visible,
          valid: this.valid,
          invalid: this.invalid,
          submitted: this.submitted
        };
      }
    }, {
      key: "value",
      get: function get() {
        return this.value_;
      },
      set: function set(value) {
        this.value_ = value;
        this.valueSubject.next(value);
      }
    }]);

    return FormAbstract;
  }();

  var FormControl = function (_FormAbstract) {
    _inheritsLoose(FormControl, _FormAbstract);

    function FormControl(value, validators) {
      var _this;

      if (value === void 0) {
        value = null;
      }

      _this = _FormAbstract.call(this, validators) || this;
      _this.value_ = value;
      _this.status = FormStatus$1.Pending;
      _this.errors = {};

      _this.initSubjects_();

      _this.initObservables_();

      _this.statusSubject.next(null);

      return _this;
    }

    return FormControl;
  }(FormAbstract);

  var FormAbstractCollection = function (_FormAbstract) {
    _inheritsLoose(FormAbstractCollection, _FormAbstract);

    function FormAbstractCollection(controls, validators) {
      var _this;

      _this = _FormAbstract.call(this, validators) || this;
      _this.changesChildren = new rxjs.BehaviorSubject(undefined);
      _this.controls = controls;

      _this.initControls_();

      _this.initSubjects_();

      _this.initObservables_();

      return _this;
    }

    var _proto = FormAbstractCollection.prototype;

    _proto.initControl_ = function initControl_(controlOrValue, key) {
      var control = controlOrValue instanceof FormAbstract ? controlOrValue : new FormControl(controlOrValue);
      control.addValidators.apply(control, this.validators);
      control.name = key;
      return control;
    };

    _proto.initControls_ = function initControls_() {
      var _this2 = this;

      this.forEach_(function (control, key) {
        _this2.init(control, key);
      });
      return this.controls;
    };

    _proto.initSubjects_ = function initSubjects_() {
      this.changesChildren = this.changesChildren.pipe(operators.switchAll());
      this.switchSubjects_();
    };

    _proto.switchSubjects_ = function switchSubjects_() {
      var changesChildren = this.reduce_(function (result, control) {
        result.push(control.changes$);
        return result;
      }, []);
      var changesChildren$ = changesChildren.length ? rxjs.combineLatest(changesChildren) : rxjs.of(changesChildren);
      this.changesChildren.next(changesChildren$);
    };

    _proto.initObservables_ = function initObservables_() {
      var _this3 = this;

      this.changes$ = this.changesChildren.pipe(operators.map(function () {
        return _this3.value;
      }), operators.shareReplay(1));
    };

    _proto.validate = function validate(value) {
      var errors;

      if (this.status === FormStatus$1.Disabled || this.status === FormStatus$1.Hidden) {
        errors = [];
      } else {
        var errors_ = this.validators.map(function (x) {
          return x.validate(value);
        }).filter(function (x) {
          return x !== null;
        });
        errors = this.reduce_(function (result, control) {
          return result.concat(control.errors);
        }, errors_);
        this.status = errors.length === 0 ? FormStatus$1.Valid : FormStatus$1.Invalid;
      }

      return errors;
    };

    _proto.forEach_ = function forEach_(callback) {
      var _this4 = this;

      Object.keys(this.controls).forEach(function (key) {
        return callback(_this4.controls[key], key);
      });
    };

    _proto.reduce_ = function reduce_(callback, result) {
      this.forEach_(function (control, key) {
        result = callback(result, control, key);
      });
      return result;
    };

    _proto.all_ = function all_(key, value) {
      return this.reduce_(function (result, control) {
        return result && control[key] === value;
      }, true);
    };

    _proto.any_ = function any_(key, value) {
      return this.reduce_(function (result, control) {
        return result || control[key] === value;
      }, false);
    };

    _proto.reset = function reset() {
      this.forEach_(function (control) {
        return control.reset();
      });
    };

    _proto.patch = function patch(value) {
      if (value) {
        this.forEach_(function (control, key) {
          if (value[key] != undefined) {
            control.patch(value[key]);
          }
        });
      }
    };

    _proto.init = function init(control, key) {
      this.controls[key] = this.initControl_(control, key);
    };

    _proto.get = function get(key) {
      return this.controls[key];
    };

    _proto.set = function set(control, key) {
      delete this.controls[key];
      this.controls[key] = this.initControl_(control, key);
      this.switchSubjects_();
    };

    _proto.add = function add(control, key) {
      this.controls[key] = this.initControl_(control, key);
      this.switchSubjects_();
    };

    _proto.remove = function remove(control) {
      var _this5 = this;

      var key = Object.keys(this.controls).find(function (key) {
        return _this5.controls[key] === control ? key : null;
      });

      if (key) {
        this.removeKey(key);
      }
    };

    _proto.removeKey = function removeKey(key) {
      var exhist = this.controls[key] !== undefined;
      delete this.controls[key];

      if (exhist) {
        this.switchSubjects_();
      }
    };

    _proto.addValidators = function addValidators() {
      for (var _len = arguments.length, validators = new Array(_len), _key = 0; _key < _len; _key++) {
        validators[_key] = arguments[_key];
      }

      this.forEach_(function (control) {
        return control.addValidators.apply(control, validators);
      });
    };

    _proto.replaceValidators = function replaceValidators() {
      for (var _len2 = arguments.length, validators = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        validators[_key2] = arguments[_key2];
      }

      this.forEach_(function (control) {
        return control.replaceValidators.apply(control, validators);
      });
    };

    _proto.clearValidators = function clearValidators() {
      this.forEach_(function (control) {
        return control.clearValidators();
      });
    };

    _createClass(FormAbstractCollection, [{
      key: "valid",
      get: function get() {
        return this.all_('valid', true);
      }
    }, {
      key: "invalid",
      get: function get() {
        return this.any_('invalid', true);
      }
    }, {
      key: "pending",
      get: function get() {
        return this.any_('pending', true);
      }
    }, {
      key: "disabled",
      get: function get() {
        return this.all_('disabled', true);
      },
      set: function set(disabled) {
        this.forEach_(function (control) {
          control.disabled = disabled;
        });
      }
    }, {
      key: "enabled",
      get: function get() {
        return this.any_('enabled', true);
      }
    }, {
      key: "hidden",
      get: function get() {
        return this.all_('hidden', true);
      },
      set: function set(hidden) {
        this.forEach_(function (control) {
          control.hidden = hidden;
        });
      }
    }, {
      key: "visible",
      get: function get() {
        return this.any_('visible', true);
      }
    }, {
      key: "submitted",
      get: function get() {
        return this.all_('submitted', true);
      },
      set: function set(submitted) {
        this.forEach_(function (control) {
          control.submitted = submitted;
        });
      }
    }, {
      key: "dirty",
      get: function get() {
        return this.any_('dirty', true);
      }
    }, {
      key: "pristine",
      get: function get() {
        return this.all_('pristine', true);
      }
    }, {
      key: "touched",
      get: function get() {
        return this.all_('touched', true);
      },
      set: function set(touched) {
        this.forEach_(function (control) {
          control.touched = touched;
        });
      }
    }, {
      key: "untouched",
      get: function get() {
        return this.any_('untouched', true);
      }
    }, {
      key: "value",
      get: function get() {
        return this.reduce_(function (result, control, key) {
          result[key] = control.value;
          return result;
        }, {});
      },
      set: function set(value) {
        this.forEach_(function (control, key) {
          control.value = value[key];
        });
      }
    }, {
      key: "errors",
      get: function get() {
        return this.reduce_(function (result, control) {
          return Object.assign(result, control.errors);
        }, {});
      }
    }]);

    return FormAbstractCollection;
  }(FormAbstract);

  var FormArray = function (_FormAbstractCollecti) {
    _inheritsLoose(FormArray, _FormAbstractCollecti);

    function FormArray(controls, validators) {
      if (controls === void 0) {
        controls = [];
      }

      return _FormAbstractCollecti.call(this, controls, validators) || this;
    }

    var _proto = FormArray.prototype;

    _proto.forEach_ = function forEach_(callback) {
      this.controls.forEach(function (control, key) {
        return callback(control, key);
      });
    };

    _proto.init = function init(control, key) {
      this.controls.length = Math.max(this.controls.length, key);
      this.controls[key] = this.initControl_(control, key);
    };

    _proto.set = function set(control, key) {
      this.controls.splice(key, 1, this.initControl_(control, key));
      this.switchSubjects_();
    };

    _proto.add = function add(control, key) {
      this.controls.length = Math.max(this.controls.length, key);
      this.controls[key] = this.initControl_(control, key);
      this.switchSubjects_();
    };

    _proto.push = function push(control) {
      this.controls.push(this.initControl_(control, this.controls.length));
      this.switchSubjects_();
    };

    _proto.insert = function insert(control, key) {
      this.controls.splice(key, 0, this.initControl_(control, key));
      this.switchSubjects_();
    };

    _proto.remove = function remove(control) {
      var key = this.controls.indexOf(control);

      if (key !== -1) {
        this.removeKey(key);
      }
    };

    _proto.removeKey = function removeKey(key) {
      if (this.controls.length > key) {
        this.controls.splice(key, 1);
        this.switchSubjects_();
      }
    };

    _proto.at = function at(key) {
      return this.controls[key];
    };

    _createClass(FormArray, [{
      key: "value",
      get: function get() {
        return this.reduce_(function (result, control, key) {
          result[key] = control.value;
          return result;
        }, []);
      }
    }, {
      key: "length",
      get: function get() {
        return this.controls.length;
      }
    }]);

    return FormArray;
  }(FormAbstractCollection);
  function formArray(controls, validators) {
    if (controls === void 0) {
      controls = [];
    }

    return new FormArray(controls, validators);
  }

  var FormGroup = function (_FormAbstractCollecti) {
    _inheritsLoose(FormGroup, _FormAbstractCollecti);

    function FormGroup(controls, validators) {
      if (controls === void 0) {
        controls = {};
      }

      return _FormAbstractCollecti.call(this, controls, validators) || this;
    }

    return FormGroup;
  }(FormAbstractCollection);
  function formGroup(controls, validators) {
    if (controls === void 0) {
      controls = {};
    }

    return new FormGroup(controls, validators);
  }

  exports.EmailValidator = EmailValidator;
  exports.FormAbstract = FormAbstract;
  exports.FormAbstractCollection = FormAbstractCollection;
  exports.FormAbstractCollectionDirective = FormAbstractCollectionDirective;
  exports.FormArray = FormArray;
  exports.FormArrayDirective = FormArrayDirective;
  exports.FormCheckboxDirective = FormCheckboxDirective;
  exports.FormControl = FormControl;
  exports.FormEmailDirective = FormEmailDirective;
  exports.FormFieldComponent = FormFieldComponent;
  exports.FormGroup = FormGroup;
  exports.FormGroupDirective = FormGroupDirective;
  exports.FormInputDirective = FormInputDirective;
  exports.FormMaxDirective = FormMaxDirective;
  exports.FormMaxLengthDirective = FormMaxLengthDirective;
  exports.FormMinDirective = FormMinDirective;
  exports.FormMinLengthDirective = FormMinLengthDirective;
  exports.FormModule = FormModule;
  exports.FormPatternDirective = FormPatternDirective;
  exports.FormPlaceholderDirective = FormPlaceholderDirective;
  exports.FormRadioDirective = FormRadioDirective;
  exports.FormRequiredDirective = FormRequiredDirective;
  exports.FormRequiredTrueDirective = FormRequiredTrueDirective;
  exports.FormSelectDirective = FormSelectDirective;
  exports.FormStatus = FormStatus$1;
  exports.FormValidator = FormValidator;
  exports.MaxLengthValidator = MaxLengthValidator;
  exports.MaxValidator = MaxValidator;
  exports.MinLengthValidator = MinLengthValidator;
  exports.MinValidator = MinValidator;
  exports.NullValidator = NullValidator;
  exports.PatternValidator = PatternValidator;
  exports.RequiredTrueValidator = RequiredTrueValidator;
  exports.RequiredValidator = RequiredValidator;
  exports.Validators = validators;
  exports.formArray = formArray;
  exports.formGroup = formGroup;

  return exports;

}({}, rxcomp, rxjs, rxjs.operators));

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(global = global || self, factory(global.window = global.window || {}));
}(this, (function (exports) { 'use strict';

	/*!
	 * EasePack 3.2.6
	 * https://greensock.com
	 *
	 * @license Copyright 2008-2020, GreenSock. All rights reserved.
	 * Subject to the terms at https://greensock.com/standard-license or for
	 * Club GreenSock members, the agreement issued with that membership.
	 * @author: Jack Doyle, jack@greensock.com
	*/
	var gsap,
	    _registerEase,
	    _getGSAP = function _getGSAP() {
	  return gsap || typeof window !== "undefined" && (gsap = window.gsap) && gsap.registerPlugin && gsap;
	},
	    _boolean = function _boolean(value, defaultValue) {
	  return !!(typeof value === "undefined" ? defaultValue : value && !~(value + "").indexOf("false"));
	},
	    _initCore = function _initCore(core) {
	  gsap = core || _getGSAP();

	  if (gsap) {
	    _registerEase = gsap.registerEase;

	    var eases = gsap.parseEase(),
	        createConfig = function createConfig(ease) {
	      return function (ratio) {
	        var y = 0.5 + ratio / 2;

	        ease.config = function (p) {
	          return ease(2 * (1 - p) * p * y + p * p);
	        };
	      };
	    },
	        p;

	    for (p in eases) {
	      if (!eases[p].config) {
	        createConfig(eases[p]);
	      }
	    }

	    _registerEase("slow", SlowMo);

	    _registerEase("expoScale", ExpoScaleEase);

	    _registerEase("rough", RoughEase);

	    for (p in EasePack) {
	      p !== "version" && gsap.core.globals(p, EasePack[p]);
	    }
	  }
	},
	    _createSlowMo = function _createSlowMo(linearRatio, power, yoyoMode) {
	  linearRatio = Math.min(1, linearRatio || 0.7);

	  var pow = linearRatio < 1 ? power || power === 0 ? power : 0.7 : 0,
	      p1 = (1 - linearRatio) / 2,
	      p3 = p1 + linearRatio,
	      calcEnd = _boolean(yoyoMode);

	  return function (p) {
	    var r = p + (0.5 - p) * pow;
	    return p < p1 ? calcEnd ? 1 - (p = 1 - p / p1) * p : r - (p = 1 - p / p1) * p * p * p * r : p > p3 ? calcEnd ? p === 1 ? 0 : 1 - (p = (p - p3) / p1) * p : r + (p - r) * (p = (p - p3) / p1) * p * p * p : calcEnd ? 1 : r;
	  };
	},
	    _createExpoScale = function _createExpoScale(start, end, ease) {
	  var p1 = Math.log(end / start),
	      p2 = end - start;
	  ease && (ease = gsap.parseEase(ease));
	  return function (p) {
	    return (start * Math.exp(p1 * (ease ? ease(p) : p)) - start) / p2;
	  };
	},
	    EasePoint = function EasePoint(time, value, next) {
	  this.t = time;
	  this.v = value;

	  if (next) {
	    this.next = next;
	    next.prev = this;
	    this.c = next.v - value;
	    this.gap = next.t - time;
	  }
	},
	    _createRoughEase = function _createRoughEase(vars) {
	  if (typeof vars !== "object") {
	    vars = {
	      points: +vars || 20
	    };
	  }

	  var taper = vars.taper || "none",
	      a = [],
	      cnt = 0,
	      points = (+vars.points || 20) | 0,
	      i = points,
	      randomize = _boolean(vars.randomize, true),
	      clamp = _boolean(vars.clamp),
	      template = gsap ? gsap.parseEase(vars.template) : 0,
	      strength = (+vars.strength || 1) * 0.4,
	      x,
	      y,
	      bump,
	      invX,
	      obj,
	      pnt,
	      recent;

	  while (--i > -1) {
	    x = randomize ? Math.random() : 1 / points * i;
	    y = template ? template(x) : x;

	    if (taper === "none") {
	      bump = strength;
	    } else if (taper === "out") {
	      invX = 1 - x;
	      bump = invX * invX * strength;
	    } else if (taper === "in") {
	      bump = x * x * strength;
	    } else if (x < 0.5) {
	      invX = x * 2;
	      bump = invX * invX * 0.5 * strength;
	    } else {
	      invX = (1 - x) * 2;
	      bump = invX * invX * 0.5 * strength;
	    }

	    if (randomize) {
	      y += Math.random() * bump - bump * 0.5;
	    } else if (i % 2) {
	      y += bump * 0.5;
	    } else {
	      y -= bump * 0.5;
	    }

	    if (clamp) {
	      if (y > 1) {
	        y = 1;
	      } else if (y < 0) {
	        y = 0;
	      }
	    }

	    a[cnt++] = {
	      x: x,
	      y: y
	    };
	  }

	  a.sort(function (a, b) {
	    return a.x - b.x;
	  });
	  pnt = new EasePoint(1, 1, null);
	  i = points;

	  while (i--) {
	    obj = a[i];
	    pnt = new EasePoint(obj.x, obj.y, pnt);
	  }

	  recent = new EasePoint(0, 0, pnt.t ? pnt : pnt.next);
	  return function (p) {
	    var pnt = recent;

	    if (p > pnt.t) {
	      while (pnt.next && p >= pnt.t) {
	        pnt = pnt.next;
	      }

	      pnt = pnt.prev;
	    } else {
	      while (pnt.prev && p <= pnt.t) {
	        pnt = pnt.prev;
	      }
	    }

	    recent = pnt;
	    return pnt.v + (p - pnt.t) / pnt.gap * pnt.c;
	  };
	};

	var SlowMo = _createSlowMo(0.7);
	SlowMo.ease = SlowMo;
	SlowMo.config = _createSlowMo;
	var ExpoScaleEase = _createExpoScale(1, 2);
	ExpoScaleEase.config = _createExpoScale;
	var RoughEase = _createRoughEase();
	RoughEase.ease = RoughEase;
	RoughEase.config = _createRoughEase;
	var EasePack = {
	  SlowMo: SlowMo,
	  RoughEase: RoughEase,
	  ExpoScaleEase: ExpoScaleEase
	};

	for (var p in EasePack) {
	  EasePack[p].register = _initCore;
	  EasePack[p].version = "3.2.6";
	}

	_getGSAP() && gsap.registerPlugin(SlowMo);

	exports.EasePack = EasePack;
	exports.ExpoScaleEase = ExpoScaleEase;
	exports.RoughEase = RoughEase;
	exports.SlowMo = SlowMo;
	exports.default = EasePack;

	Object.defineProperty(exports, '__esModule', { value: true });

})));

(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.window = global.window || {}));
}(this, (function (exports) { 'use strict';

  function _inheritsLoose(subClass, superClass) {
    subClass.prototype = Object.create(superClass.prototype);
    subClass.prototype.constructor = subClass;
    subClass.__proto__ = superClass;
  }

  function _assertThisInitialized(self) {
    if (self === void 0) {
      throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
    }

    return self;
  }

  /*!
   * GSAP 3.2.6
   * https://greensock.com
   *
   * @license Copyright 2008-2020, GreenSock. All rights reserved.
   * Subject to the terms at https://greensock.com/standard-license or for
   * Club GreenSock members, the agreement issued with that membership.
   * @author: Jack Doyle, jack@greensock.com
  */
  var _config = {
    autoSleep: 120,
    force3D: "auto",
    nullTargetWarn: 1,
    units: {
      lineHeight: ""
    }
  },
      _defaults = {
    duration: .5,
    overwrite: false,
    delay: 0
  },
      _bigNum = 1e8,
      _tinyNum = 1 / _bigNum,
      _2PI = Math.PI * 2,
      _HALF_PI = _2PI / 4,
      _gsID = 0,
      _sqrt = Math.sqrt,
      _cos = Math.cos,
      _sin = Math.sin,
      _isString = function _isString(value) {
    return typeof value === "string";
  },
      _isFunction = function _isFunction(value) {
    return typeof value === "function";
  },
      _isNumber = function _isNumber(value) {
    return typeof value === "number";
  },
      _isUndefined = function _isUndefined(value) {
    return typeof value === "undefined";
  },
      _isObject = function _isObject(value) {
    return typeof value === "object";
  },
      _isNotFalse = function _isNotFalse(value) {
    return value !== false;
  },
      _windowExists = function _windowExists() {
    return typeof window !== "undefined";
  },
      _isFuncOrString = function _isFuncOrString(value) {
    return _isFunction(value) || _isString(value);
  },
      _isArray = Array.isArray,
      _strictNumExp = /(?:-?\.?\d|\.)+/gi,
      _numExp = /[-+=.]*\d+[.e\-+]*\d*[e\-\+]*\d*/g,
      _numWithUnitExp = /[-+=.]*\d+[.e-]*\d*[a-z%]*/g,
      _complexStringNumExp = /[-+=.]*\d+(?:\.|e-|e)*\d*/gi,
      _parenthesesExp = /\(([^()]+)\)/i,
      _relExp = /[+-]=-?[\.\d]+/,
      _delimitedValueExp = /[#\-+.]*\b[a-z\d-=+%.]+/gi,
      _globalTimeline,
      _win,
      _coreInitted,
      _doc,
      _globals = {},
      _installScope = {},
      _coreReady,
      _install = function _install(scope) {
    return (_installScope = _merge(scope, _globals)) && gsap;
  },
      _missingPlugin = function _missingPlugin(property, value) {
    return console.warn("Invalid property", property, "set to", value, "Missing plugin? gsap.registerPlugin()");
  },
      _warn = function _warn(message, suppress) {
    return !suppress && console.warn(message);
  },
      _addGlobal = function _addGlobal(name, obj) {
    return name && (_globals[name] = obj) && _installScope && (_installScope[name] = obj) || _globals;
  },
      _emptyFunc = function _emptyFunc() {
    return 0;
  },
      _reservedProps = {},
      _lazyTweens = [],
      _lazyLookup = {},
      _lastRenderedFrame,
      _plugins = {},
      _effects = {},
      _nextGCFrame = 30,
      _harnessPlugins = [],
      _callbackNames = "",
      _harness = function _harness(targets) {
    var target = targets[0],
        harnessPlugin,
        i;

    if (!_isObject(target) && !_isFunction(target)) {
      targets = [targets];
    }

    if (!(harnessPlugin = (target._gsap || {}).harness)) {
      i = _harnessPlugins.length;

      while (i-- && !_harnessPlugins[i].targetTest(target)) {}

      harnessPlugin = _harnessPlugins[i];
    }

    i = targets.length;

    while (i--) {
      targets[i] && (targets[i]._gsap || (targets[i]._gsap = new GSCache(targets[i], harnessPlugin))) || targets.splice(i, 1);
    }

    return targets;
  },
      _getCache = function _getCache(target) {
    return target._gsap || _harness(toArray(target))[0]._gsap;
  },
      _getProperty = function _getProperty(target, property) {
    var currentValue = target[property];
    return _isFunction(currentValue) ? target[property]() : _isUndefined(currentValue) && target.getAttribute(property) || currentValue;
  },
      _forEachName = function _forEachName(names, func) {
    return (names = names.split(",")).forEach(func) || names;
  },
      _round = function _round(value) {
    return Math.round(value * 100000) / 100000 || 0;
  },
      _arrayContainsAny = function _arrayContainsAny(toSearch, toFind) {
    var l = toFind.length,
        i = 0;

    for (; toSearch.indexOf(toFind[i]) < 0 && ++i < l;) {}

    return i < l;
  },
      _parseVars = function _parseVars(params, type, parent) {
    var isLegacy = _isNumber(params[1]),
        varsIndex = (isLegacy ? 2 : 1) + (type < 2 ? 0 : 1),
        vars = params[varsIndex],
        irVars;

    if (isLegacy) {
      vars.duration = params[1];
    }

    vars.parent = parent;

    if (type) {
      irVars = vars;

      while (parent && !("immediateRender" in irVars)) {
        irVars = parent.vars.defaults || {};
        parent = _isNotFalse(parent.vars.inherit) && parent.parent;
      }

      vars.immediateRender = _isNotFalse(irVars.immediateRender);

      if (type < 2) {
        vars.runBackwards = 1;
      } else {
        vars.startAt = params[varsIndex - 1];
      }
    }

    return vars;
  },
      _lazyRender = function _lazyRender() {
    var l = _lazyTweens.length,
        a = _lazyTweens.slice(0),
        i,
        tween;

    _lazyLookup = {};
    _lazyTweens.length = 0;

    for (i = 0; i < l; i++) {
      tween = a[i];

      if (tween && tween._lazy) {
        tween.render(tween._lazy[0], tween._lazy[1], true)._lazy = 0;
      }
    }
  },
      _lazySafeRender = function _lazySafeRender(animation, time, suppressEvents, force) {
    if (_lazyTweens.length) {
      _lazyRender();
    }

    animation.render(time, suppressEvents, force);

    if (_lazyTweens.length) {
      _lazyRender();
    }
  },
      _numericIfPossible = function _numericIfPossible(value) {
    var n = parseFloat(value);
    return (n || n === 0) && (value + "").match(_delimitedValueExp).length < 2 ? n : value;
  },
      _passThrough = function _passThrough(p) {
    return p;
  },
      _setDefaults = function _setDefaults(obj, defaults) {
    for (var p in defaults) {
      if (!(p in obj)) {
        obj[p] = defaults[p];
      }
    }

    return obj;
  },
      _setKeyframeDefaults = function _setKeyframeDefaults(obj, defaults) {
    for (var p in defaults) {
      if (!(p in obj) && p !== "duration" && p !== "ease") {
        obj[p] = defaults[p];
      }
    }
  },
      _merge = function _merge(base, toMerge) {
    for (var p in toMerge) {
      base[p] = toMerge[p];
    }

    return base;
  },
      _mergeDeep = function _mergeDeep(base, toMerge) {
    for (var p in toMerge) {
      base[p] = _isObject(toMerge[p]) ? _mergeDeep(base[p] || (base[p] = {}), toMerge[p]) : toMerge[p];
    }

    return base;
  },
      _copyExcluding = function _copyExcluding(obj, excluding) {
    var copy = {},
        p;

    for (p in obj) {
      if (!(p in excluding)) {
        copy[p] = obj[p];
      }
    }

    return copy;
  },
      _inheritDefaults = function _inheritDefaults(vars) {
    var parent = vars.parent || _globalTimeline,
        func = vars.keyframes ? _setKeyframeDefaults : _setDefaults;

    if (_isNotFalse(vars.inherit)) {
      while (parent) {
        func(vars, parent.vars.defaults);
        parent = parent.parent;
      }
    }

    return vars;
  },
      _arraysMatch = function _arraysMatch(a1, a2) {
    var i = a1.length,
        match = i === a2.length;

    while (match && i-- && a1[i] === a2[i]) {}

    return i < 0;
  },
      _addLinkedListItem = function _addLinkedListItem(parent, child, firstProp, lastProp, sortBy) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }

    if (lastProp === void 0) {
      lastProp = "_last";
    }

    var prev = parent[lastProp],
        t;

    if (sortBy) {
      t = child[sortBy];

      while (prev && prev[sortBy] > t) {
        prev = prev._prev;
      }
    }

    if (prev) {
      child._next = prev._next;
      prev._next = child;
    } else {
      child._next = parent[firstProp];
      parent[firstProp] = child;
    }

    if (child._next) {
      child._next._prev = child;
    } else {
      parent[lastProp] = child;
    }

    child._prev = prev;
    child.parent = child._dp = parent;
    return child;
  },
      _removeLinkedListItem = function _removeLinkedListItem(parent, child, firstProp, lastProp) {
    if (firstProp === void 0) {
      firstProp = "_first";
    }

    if (lastProp === void 0) {
      lastProp = "_last";
    }

    var prev = child._prev,
        next = child._next;

    if (prev) {
      prev._next = next;
    } else if (parent[firstProp] === child) {
      parent[firstProp] = next;
    }

    if (next) {
      next._prev = prev;
    } else if (parent[lastProp] === child) {
      parent[lastProp] = prev;
    }

    child._next = child._prev = child.parent = null;
  },
      _removeFromParent = function _removeFromParent(child, onlyIfParentHasAutoRemove) {
    if (child.parent && (!onlyIfParentHasAutoRemove || child.parent.autoRemoveChildren)) {
      child.parent.remove(child);
    }

    child._act = 0;
  },
      _uncache = function _uncache(animation) {
    var a = animation;

    while (a) {
      a._dirty = 1;
      a = a.parent;
    }

    return animation;
  },
      _recacheAncestors = function _recacheAncestors(animation) {
    var parent = animation.parent;

    while (parent && parent.parent) {
      parent._dirty = 1;
      parent.totalDuration();
      parent = parent.parent;
    }

    return animation;
  },
      _hasNoPausedAncestors = function _hasNoPausedAncestors(animation) {
    return !animation || animation._ts && _hasNoPausedAncestors(animation.parent);
  },
      _elapsedCycleDuration = function _elapsedCycleDuration(animation) {
    return animation._repeat ? _animationCycle(animation._tTime, animation = animation.duration() + animation._rDelay) * animation : 0;
  },
      _animationCycle = function _animationCycle(tTime, cycleDuration) {
    return (tTime /= cycleDuration) && ~~tTime === tTime ? ~~tTime - 1 : ~~tTime;
  },
      _parentToChildTotalTime = function _parentToChildTotalTime(parentTime, child) {
    return (parentTime - child._start) * child._ts + (child._ts >= 0 ? 0 : child._dirty ? child.totalDuration() : child._tDur);
  },
      _setEnd = function _setEnd(animation) {
    return animation._end = _round(animation._start + (animation._tDur / Math.abs(animation._ts || animation._rts || _tinyNum) || 0));
  },
      _postAddChecks = function _postAddChecks(timeline, child) {
    var t;

    if (child._time || child._initted && !child._dur) {
      t = _parentToChildTotalTime(timeline.rawTime(), child);

      if (!child._dur || _clamp(0, child.totalDuration(), t) - child._tTime > _tinyNum) {
        child.render(t, true);
      }
    }

    if (_uncache(timeline)._dp && timeline._initted && timeline._time >= timeline._dur && timeline._ts) {
      if (timeline._dur < timeline.duration()) {
        t = timeline;

        while (t._dp) {
          t.rawTime() >= 0 && t.totalTime(t._tTime);
          t = t._dp;
        }
      }

      timeline._zTime = -_tinyNum;
    }
  },
      _addToTimeline = function _addToTimeline(timeline, child, position, skipChecks) {
    child.parent && _removeFromParent(child);
    child._start = _round(position + child._delay);
    child._end = _round(child._start + (child.totalDuration() / Math.abs(child.timeScale()) || 0));

    _addLinkedListItem(timeline, child, "_first", "_last", timeline._sort ? "_start" : 0);

    timeline._recent = child;
    skipChecks || _postAddChecks(timeline, child);
    return timeline;
  },
      _attemptInitTween = function _attemptInitTween(tween, totalTime, force, suppressEvents) {
    _initTween(tween, totalTime);

    if (!tween._initted) {
      return 1;
    }

    if (!force && tween._pt && (tween._dur && tween.vars.lazy !== false || !tween._dur && tween.vars.lazy) && _lastRenderedFrame !== _ticker.frame) {
      _lazyTweens.push(tween);

      tween._lazy = [totalTime, suppressEvents];
      return 1;
    }
  },
      _renderZeroDurationTween = function _renderZeroDurationTween(tween, totalTime, suppressEvents, force) {
    var prevRatio = tween._zTime < 0 ? 0 : 1,
        ratio = totalTime < 0 ? 0 : 1,
        repeatDelay = tween._rDelay,
        tTime = 0,
        pt,
        iteration,
        prevIteration;

    if (repeatDelay && tween._repeat) {
      tTime = _clamp(0, tween._tDur, totalTime);
      iteration = _animationCycle(tTime, repeatDelay);
      prevIteration = _animationCycle(tween._tTime, repeatDelay);

      if (iteration !== prevIteration) {
        prevRatio = 1 - ratio;

        if (tween.vars.repeatRefresh && tween._initted) {
          tween.invalidate();
        }
      }
    }

    if (!tween._initted && _attemptInitTween(tween, totalTime, force, suppressEvents)) {
      return;
    }

    if (ratio !== prevRatio || force || tween._zTime === _tinyNum || !totalTime && tween._zTime) {
      tween._zTime = totalTime || (suppressEvents ? _tinyNum : 0);
      tween.ratio = ratio;

      if (tween._from) {
        ratio = 1 - ratio;
      }

      tween._time = 0;
      tween._tTime = tTime;
      suppressEvents || _callback(tween, "onStart");
      pt = tween._pt;

      while (pt) {
        pt.r(ratio, pt.d);
        pt = pt._next;
      }

      if (!ratio && tween._startAt && !tween._onUpdate && tween._start) {
        tween._startAt.render(totalTime, true, force);
      }

      tween._onUpdate && (suppressEvents || _callback(tween, "onUpdate"));

      if (tTime && tween._repeat && !suppressEvents && tween.parent) {
        _callback(tween, "onRepeat");
      }

      if ((totalTime >= tween._tDur || totalTime < 0) && tween.ratio === ratio) {
        tween.ratio && _removeFromParent(tween, 1);

        if (!suppressEvents) {
          _callback(tween, tween.ratio ? "onComplete" : "onReverseComplete", true);

          tween._prom && tween._prom();
        }
      }
    }
  },
      _findNextPauseTween = function _findNextPauseTween(animation, prevTime, time) {
    var child;

    if (time > prevTime) {
      child = animation._first;

      while (child && child._start <= time) {
        if (!child._dur && child.data === "isPause" && child._start > prevTime) {
          return child;
        }

        child = child._next;
      }
    } else {
      child = animation._last;

      while (child && child._start >= time) {
        if (!child._dur && child.data === "isPause" && child._start < prevTime) {
          return child;
        }

        child = child._prev;
      }
    }
  },
      _setDuration = function _setDuration(animation, duration, skipUncache) {
    var repeat = animation._repeat,
        dur = _round(duration) || 0;
    animation._dur = dur;
    animation._tDur = !repeat ? dur : repeat < 0 ? 1e12 : _round(dur * (repeat + 1) + animation._rDelay * repeat);

    if (animation._time > dur) {
      animation._time = dur;
      animation._tTime = Math.min(animation._tTime, animation._tDur);
    }

    !skipUncache && _uncache(animation.parent);
    animation.parent && _setEnd(animation);
    return animation;
  },
      _onUpdateTotalDuration = function _onUpdateTotalDuration(animation) {
    return animation instanceof Timeline ? _uncache(animation) : _setDuration(animation, animation._dur);
  },
      _zeroPosition = {
    _start: 0,
    endTime: _emptyFunc
  },
      _parsePosition = function _parsePosition(animation, position) {
    var labels = animation.labels,
        recent = animation._recent || _zeroPosition,
        clippedDuration = animation.duration() >= _bigNum ? recent.endTime(false) : animation._dur,
        i,
        offset;

    if (_isString(position) && (isNaN(position) || position in labels)) {
      i = position.charAt(0);

      if (i === "<" || i === ">") {
        return (i === "<" ? recent._start : recent.endTime(recent._repeat >= 0)) + (parseFloat(position.substr(1)) || 0);
      }

      i = position.indexOf("=");

      if (i < 0) {
        if (!(position in labels)) {
          labels[position] = clippedDuration;
        }

        return labels[position];
      }

      offset = +(position.charAt(i - 1) + position.substr(i + 1));
      return i > 1 ? _parsePosition(animation, position.substr(0, i - 1)) + offset : clippedDuration + offset;
    }

    return position == null ? clippedDuration : +position;
  },
      _conditionalReturn = function _conditionalReturn(value, func) {
    return value || value === 0 ? func(value) : func;
  },
      _clamp = function _clamp(min, max, value) {
    return value < min ? min : value > max ? max : value;
  },
      getUnit = function getUnit(value) {
    return (value + "").substr((parseFloat(value) + "").length);
  },
      clamp = function clamp(min, max, value) {
    return _conditionalReturn(value, function (v) {
      return _clamp(min, max, v);
    });
  },
      _slice = [].slice,
      _isArrayLike = function _isArrayLike(value, nonEmpty) {
    return value && _isObject(value) && "length" in value && (!nonEmpty && !value.length || value.length - 1 in value && _isObject(value[0])) && !value.nodeType && value !== _win;
  },
      _flatten = function _flatten(ar, leaveStrings, accumulator) {
    if (accumulator === void 0) {
      accumulator = [];
    }

    return ar.forEach(function (value) {
      var _accumulator;

      return _isString(value) && !leaveStrings || _isArrayLike(value, 1) ? (_accumulator = accumulator).push.apply(_accumulator, toArray(value)) : accumulator.push(value);
    }) || accumulator;
  },
      toArray = function toArray(value, leaveStrings) {
    return _isString(value) && !leaveStrings && (_coreInitted || !_wake()) ? _slice.call(_doc.querySelectorAll(value), 0) : _isArray(value) ? _flatten(value, leaveStrings) : _isArrayLike(value) ? _slice.call(value, 0) : value ? [value] : [];
  },
      shuffle = function shuffle(a) {
    return a.sort(function () {
      return .5 - Math.random();
    });
  },
      distribute = function distribute(v) {
    if (_isFunction(v)) {
      return v;
    }

    var vars = _isObject(v) ? v : {
      each: v
    },
        ease = _parseEase(vars.ease),
        from = vars.from || 0,
        base = parseFloat(vars.base) || 0,
        cache = {},
        isDecimal = from > 0 && from < 1,
        ratios = isNaN(from) || isDecimal,
        axis = vars.axis,
        ratioX = from,
        ratioY = from;

    if (_isString(from)) {
      ratioX = ratioY = {
        center: .5,
        edges: .5,
        end: 1
      }[from] || 0;
    } else if (!isDecimal && ratios) {
      ratioX = from[0];
      ratioY = from[1];
    }

    return function (i, target, a) {
      var l = (a || vars).length,
          distances = cache[l],
          originX,
          originY,
          x,
          y,
          d,
          j,
          max,
          min,
          wrapAt;

      if (!distances) {
        wrapAt = vars.grid === "auto" ? 0 : (vars.grid || [1, _bigNum])[1];

        if (!wrapAt) {
          max = -_bigNum;

          while (max < (max = a[wrapAt++].getBoundingClientRect().left) && wrapAt < l) {}

          wrapAt--;
        }

        distances = cache[l] = [];
        originX = ratios ? Math.min(wrapAt, l) * ratioX - .5 : from % wrapAt;
        originY = ratios ? l * ratioY / wrapAt - .5 : from / wrapAt | 0;
        max = 0;
        min = _bigNum;

        for (j = 0; j < l; j++) {
          x = j % wrapAt - originX;
          y = originY - (j / wrapAt | 0);
          distances[j] = d = !axis ? _sqrt(x * x + y * y) : Math.abs(axis === "y" ? y : x);

          if (d > max) {
            max = d;
          }

          if (d < min) {
            min = d;
          }
        }

        from === "random" && shuffle(distances);
        distances.max = max - min;
        distances.min = min;
        distances.v = l = (parseFloat(vars.amount) || parseFloat(vars.each) * (wrapAt > l ? l - 1 : !axis ? Math.max(wrapAt, l / wrapAt) : axis === "y" ? l / wrapAt : wrapAt) || 0) * (from === "edges" ? -1 : 1);
        distances.b = l < 0 ? base - l : base;
        distances.u = getUnit(vars.amount || vars.each) || 0;
        ease = ease && l < 0 ? _invertEase(ease) : ease;
      }

      l = (distances[i] - distances.min) / distances.max || 0;
      return _round(distances.b + (ease ? ease(l) : l) * distances.v) + distances.u;
    };
  },
      _roundModifier = function _roundModifier(v) {
    var p = v < 1 ? Math.pow(10, (v + "").length - 2) : 1;
    return function (raw) {
      return ~~(Math.round(parseFloat(raw) / v) * v * p) / p + (_isNumber(raw) ? 0 : getUnit(raw));
    };
  },
      snap = function snap(snapTo, value) {
    var isArray = _isArray(snapTo),
        radius,
        is2D;

    if (!isArray && _isObject(snapTo)) {
      radius = isArray = snapTo.radius || _bigNum;

      if (snapTo.values) {
        snapTo = toArray(snapTo.values);

        if (is2D = !_isNumber(snapTo[0])) {
          radius *= radius;
        }
      } else {
        snapTo = _roundModifier(snapTo.increment);
      }
    }

    return _conditionalReturn(value, !isArray ? _roundModifier(snapTo) : _isFunction(snapTo) ? function (raw) {
      is2D = snapTo(raw);
      return Math.abs(is2D - raw) <= radius ? is2D : raw;
    } : function (raw) {
      var x = parseFloat(is2D ? raw.x : raw),
          y = parseFloat(is2D ? raw.y : 0),
          min = _bigNum,
          closest = 0,
          i = snapTo.length,
          dx,
          dy;

      while (i--) {
        if (is2D) {
          dx = snapTo[i].x - x;
          dy = snapTo[i].y - y;
          dx = dx * dx + dy * dy;
        } else {
          dx = Math.abs(snapTo[i] - x);
        }

        if (dx < min) {
          min = dx;
          closest = i;
        }
      }

      closest = !radius || min <= radius ? snapTo[closest] : raw;
      return is2D || closest === raw || _isNumber(raw) ? closest : closest + getUnit(raw);
    });
  },
      random = function random(min, max, roundingIncrement, returnFunction) {
    return _conditionalReturn(_isArray(min) ? !max : roundingIncrement === true ? !!(roundingIncrement = 0) : !returnFunction, function () {
      return _isArray(min) ? min[~~(Math.random() * min.length)] : (roundingIncrement = roundingIncrement || 1e-5) && (returnFunction = roundingIncrement < 1 ? Math.pow(10, (roundingIncrement + "").length - 2) : 1) && ~~(Math.round((min + Math.random() * (max - min)) / roundingIncrement) * roundingIncrement * returnFunction) / returnFunction;
    });
  },
      pipe = function pipe() {
    for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {
      functions[_key] = arguments[_key];
    }

    return function (value) {
      return functions.reduce(function (v, f) {
        return f(v);
      }, value);
    };
  },
      unitize = function unitize(func, unit) {
    return function (value) {
      return func(parseFloat(value)) + (unit || getUnit(value));
    };
  },
      normalize = function normalize(min, max, value) {
    return mapRange(min, max, 0, 1, value);
  },
      _wrapArray = function _wrapArray(a, wrapper, value) {
    return _conditionalReturn(value, function (index) {
      return a[~~wrapper(index)];
    });
  },
      wrap = function wrap(min, max, value) {
    var range = max - min;
    return _isArray(min) ? _wrapArray(min, wrap(0, min.length), max) : _conditionalReturn(value, function (value) {
      return (range + (value - min) % range) % range + min;
    });
  },
      wrapYoyo = function wrapYoyo(min, max, value) {
    var range = max - min,
        total = range * 2;
    return _isArray(min) ? _wrapArray(min, wrapYoyo(0, min.length - 1), max) : _conditionalReturn(value, function (value) {
      value = (total + (value - min) % total) % total;
      return min + (value > range ? total - value : value);
    });
  },
      _replaceRandom = function _replaceRandom(value) {
    var prev = 0,
        s = "",
        i,
        nums,
        end,
        isArray;

    while (~(i = value.indexOf("random(", prev))) {
      end = value.indexOf(")", i);
      isArray = value.charAt(i + 7) === "[";
      nums = value.substr(i + 7, end - i - 7).match(isArray ? _delimitedValueExp : _strictNumExp);
      s += value.substr(prev, i - prev) + random(isArray ? nums : +nums[0], +nums[1], +nums[2] || 1e-5);
      prev = end + 1;
    }

    return s + value.substr(prev, value.length - prev);
  },
      mapRange = function mapRange(inMin, inMax, outMin, outMax, value) {
    var inRange = inMax - inMin,
        outRange = outMax - outMin;
    return _conditionalReturn(value, function (value) {
      return outMin + (value - inMin) / inRange * outRange;
    });
  },
      interpolate = function interpolate(start, end, progress, mutate) {
    var func = isNaN(start + end) ? 0 : function (p) {
      return (1 - p) * start + p * end;
    };

    if (!func) {
      var isString = _isString(start),
          master = {},
          p,
          i,
          interpolators,
          l,
          il;

      progress === true && (mutate = 1) && (progress = null);

      if (isString) {
        start = {
          p: start
        };
        end = {
          p: end
        };
      } else if (_isArray(start) && !_isArray(end)) {
        interpolators = [];
        l = start.length;
        il = l - 2;

        for (i = 1; i < l; i++) {
          interpolators.push(interpolate(start[i - 1], start[i]));
        }

        l--;

        func = function func(p) {
          p *= l;
          var i = Math.min(il, ~~p);
          return interpolators[i](p - i);
        };

        progress = end;
      } else if (!mutate) {
        start = _merge(_isArray(start) ? [] : {}, start);
      }

      if (!interpolators) {
        for (p in end) {
          _addPropTween.call(master, start, p, "get", end[p]);
        }

        func = function func(p) {
          return _renderPropTweens(p, master) || (isString ? start.p : start);
        };
      }
    }

    return _conditionalReturn(progress, func);
  },
      _getLabelInDirection = function _getLabelInDirection(timeline, fromTime, backward) {
    var labels = timeline.labels,
        min = _bigNum,
        p,
        distance,
        label;

    for (p in labels) {
      distance = labels[p] - fromTime;

      if (distance < 0 === !!backward && distance && min > (distance = Math.abs(distance))) {
        label = p;
        min = distance;
      }
    }

    return label;
  },
      _callback = function _callback(animation, type, executeLazyFirst) {
    var v = animation.vars,
        callback = v[type],
        params,
        scope;

    if (!callback) {
      return;
    }

    params = v[type + "Params"];
    scope = v.callbackScope || animation;
    executeLazyFirst && _lazyTweens.length && _lazyRender();
    return params ? callback.apply(scope, params) : callback.call(scope);
  },
      _interrupt = function _interrupt(animation) {
    _removeFromParent(animation);

    if (animation.progress() < 1) {
      _callback(animation, "onInterrupt");
    }

    return animation;
  },
      _quickTween,
      _createPlugin = function _createPlugin(config) {
    config = !config.name && config["default"] || config;

    var name = config.name,
        isFunc = _isFunction(config),
        Plugin = name && !isFunc && config.init ? function () {
      this._props = [];
    } : config,
        instanceDefaults = {
      init: _emptyFunc,
      render: _renderPropTweens,
      add: _addPropTween,
      kill: _killPropTweensOf,
      modifier: _addPluginModifier,
      rawVars: 0
    },
        statics = {
      targetTest: 0,
      get: 0,
      getSetter: _getSetter,
      aliases: {},
      register: 0
    };

    _wake();

    if (config !== Plugin) {
      if (_plugins[name]) {
        return;
      }

      _setDefaults(Plugin, _setDefaults(_copyExcluding(config, instanceDefaults), statics));

      _merge(Plugin.prototype, _merge(instanceDefaults, _copyExcluding(config, statics)));

      _plugins[Plugin.prop = name] = Plugin;

      if (config.targetTest) {
        _harnessPlugins.push(Plugin);

        _reservedProps[name] = 1;
      }

      name = (name === "css" ? "CSS" : name.charAt(0).toUpperCase() + name.substr(1)) + "Plugin";
    }

    _addGlobal(name, Plugin);

    if (config.register) {
      config.register(gsap, Plugin, PropTween);
    }
  },
      _255 = 255,
      _colorLookup = {
    aqua: [0, _255, _255],
    lime: [0, _255, 0],
    silver: [192, 192, 192],
    black: [0, 0, 0],
    maroon: [128, 0, 0],
    teal: [0, 128, 128],
    blue: [0, 0, _255],
    navy: [0, 0, 128],
    white: [_255, _255, _255],
    olive: [128, 128, 0],
    yellow: [_255, _255, 0],
    orange: [_255, 165, 0],
    gray: [128, 128, 128],
    purple: [128, 0, 128],
    green: [0, 128, 0],
    red: [_255, 0, 0],
    pink: [_255, 192, 203],
    cyan: [0, _255, _255],
    transparent: [_255, _255, _255, 0]
  },
      _hue = function _hue(h, m1, m2) {
    h = h < 0 ? h + 1 : h > 1 ? h - 1 : h;
    return (h * 6 < 1 ? m1 + (m2 - m1) * h * 6 : h < .5 ? m2 : h * 3 < 2 ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * _255 + .5 | 0;
  },
      splitColor = function splitColor(v, toHSL, forceAlpha) {
    var a = !v ? _colorLookup.black : _isNumber(v) ? [v >> 16, v >> 8 & _255, v & _255] : 0,
        r,
        g,
        b,
        h,
        s,
        l,
        max,
        min,
        d,
        wasHSL;

    if (!a) {
      if (v.substr(-1) === ",") {
        v = v.substr(0, v.length - 1);
      }

      if (_colorLookup[v]) {
        a = _colorLookup[v];
      } else if (v.charAt(0) === "#") {
        if (v.length === 4) {
          r = v.charAt(1);
          g = v.charAt(2);
          b = v.charAt(3);
          v = "#" + r + r + g + g + b + b;
        }

        v = parseInt(v.substr(1), 16);
        a = [v >> 16, v >> 8 & _255, v & _255];
      } else if (v.substr(0, 3) === "hsl") {
        a = wasHSL = v.match(_strictNumExp);

        if (!toHSL) {
          h = +a[0] % 360 / 360;
          s = +a[1] / 100;
          l = +a[2] / 100;
          g = l <= .5 ? l * (s + 1) : l + s - l * s;
          r = l * 2 - g;

          if (a.length > 3) {
            a[3] *= 1;
          }

          a[0] = _hue(h + 1 / 3, r, g);
          a[1] = _hue(h, r, g);
          a[2] = _hue(h - 1 / 3, r, g);
        } else if (~v.indexOf("=")) {
          a = v.match(_numExp);
          forceAlpha && a.length < 4 && (a[3] = 1);
          return a;
        }
      } else {
        a = v.match(_strictNumExp) || _colorLookup.transparent;
      }

      a = a.map(Number);
    }

    if (toHSL && !wasHSL) {
      r = a[0] / _255;
      g = a[1] / _255;
      b = a[2] / _255;
      max = Math.max(r, g, b);
      min = Math.min(r, g, b);
      l = (max + min) / 2;

      if (max === min) {
        h = s = 0;
      } else {
        d = max - min;
        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);
        h = max === r ? (g - b) / d + (g < b ? 6 : 0) : max === g ? (b - r) / d + 2 : (r - g) / d + 4;
        h *= 60;
      }

      a[0] = ~~(h + .5);
      a[1] = ~~(s * 100 + .5);
      a[2] = ~~(l * 100 + .5);
    }

    forceAlpha && a.length < 4 && (a[3] = 1);
    return a;
  },
      _colorOrderData = function _colorOrderData(v) {
    var values = [],
        c = [],
        i = -1;
    v.split(_colorExp).forEach(function (v) {
      var a = v.match(_numWithUnitExp) || [];
      values.push.apply(values, a);
      c.push(i += a.length + 1);
    });
    values.c = c;
    return values;
  },
      _formatColors = function _formatColors(s, toHSL, orderMatchData) {
    var result = "",
        colors = (s + result).match(_colorExp),
        type = toHSL ? "hsla(" : "rgba(",
        i = 0,
        c,
        shell,
        d,
        l;

    if (!colors) {
      return s;
    }

    colors = colors.map(function (color) {
      return (color = splitColor(color, toHSL, 1)) && type + (toHSL ? color[0] + "," + color[1] + "%," + color[2] + "%," + color[3] : color.join(",")) + ")";
    });

    if (orderMatchData) {
      d = _colorOrderData(s);
      c = orderMatchData.c;

      if (c.join(result) !== d.c.join(result)) {
        shell = s.replace(_colorExp, "1").split(_numWithUnitExp);
        l = shell.length - 1;

        for (; i < l; i++) {
          result += shell[i] + (~c.indexOf(i) ? colors.shift() || type + "0,0,0,0)" : (d.length ? d : colors.length ? colors : orderMatchData).shift());
        }
      }
    }

    if (!shell) {
      shell = s.split(_colorExp);
      l = shell.length - 1;

      for (; i < l; i++) {
        result += shell[i] + colors[i];
      }
    }

    return result + shell[l];
  },
      _colorExp = function () {
    var s = "(?:\\b(?:(?:rgb|rgba|hsl|hsla)\\(.+?\\))|\\B#(?:[0-9a-f]{3}){1,2}\\b",
        p;

    for (p in _colorLookup) {
      s += "|" + p + "\\b";
    }

    return new RegExp(s + ")", "gi");
  }(),
      _hslExp = /hsl[a]?\(/,
      _colorStringFilter = function _colorStringFilter(a) {
    var combined = a.join(" "),
        toHSL;
    _colorExp.lastIndex = 0;

    if (_colorExp.test(combined)) {
      toHSL = _hslExp.test(combined);
      a[1] = _formatColors(a[1], toHSL);
      a[0] = _formatColors(a[0], toHSL, _colorOrderData(a[1]));
      return true;
    }
  },
      _tickerActive,
      _ticker = function () {
    var _getTime = Date.now,
        _lagThreshold = 500,
        _adjustedLag = 33,
        _startTime = _getTime(),
        _lastUpdate = _startTime,
        _gap = 1 / 240,
        _nextTime = _gap,
        _listeners = [],
        _id,
        _req,
        _raf,
        _self,
        _tick = function _tick(v) {
      var elapsed = _getTime() - _lastUpdate,
          manual = v === true,
          overlap,
          dispatch;

      if (elapsed > _lagThreshold) {
        _startTime += elapsed - _adjustedLag;
      }

      _lastUpdate += elapsed;
      _self.time = (_lastUpdate - _startTime) / 1000;
      overlap = _self.time - _nextTime;

      if (overlap > 0 || manual) {
        _self.frame++;
        _nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);
        dispatch = 1;
      }

      if (!manual) {
        _id = _req(_tick);
      }

      if (dispatch) {
        _listeners.forEach(function (l) {
          return l(_self.time, elapsed, _self.frame, v);
        });
      }
    };

    _self = {
      time: 0,
      frame: 0,
      tick: function tick() {
        _tick(true);
      },
      wake: function wake() {
        if (_coreReady) {
          if (!_coreInitted && _windowExists()) {
            _win = _coreInitted = window;
            _doc = _win.document || {};
            _globals.gsap = gsap;
            (_win.gsapVersions || (_win.gsapVersions = [])).push(gsap.version);

            _install(_installScope || _win.GreenSockGlobals || !_win.gsap && _win || {});

            _raf = _win.requestAnimationFrame;
          }

          _id && _self.sleep();

          _req = _raf || function (f) {
            return setTimeout(f, (_nextTime - _self.time) * 1000 + 1 | 0);
          };

          _tickerActive = 1;

          _tick(2);
        }
      },
      sleep: function sleep() {
        (_raf ? _win.cancelAnimationFrame : clearTimeout)(_id);
        _tickerActive = 0;
        _req = _emptyFunc;
      },
      lagSmoothing: function lagSmoothing(threshold, adjustedLag) {
        _lagThreshold = threshold || 1 / _tinyNum;
        _adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);
      },
      fps: function fps(_fps) {
        _gap = 1 / (_fps || 240);
        _nextTime = _self.time + _gap;
      },
      add: function add(callback) {
        _listeners.indexOf(callback) < 0 && _listeners.push(callback);

        _wake();
      },
      remove: function remove(callback) {
        var i;
        ~(i = _listeners.indexOf(callback)) && _listeners.splice(i, 1);
      },
      _listeners: _listeners
    };
    return _self;
  }(),
      _wake = function _wake() {
    return !_tickerActive && _ticker.wake();
  },
      _easeMap = {},
      _customEaseExp = /^[\d.\-M][\d.\-,\s]/,
      _quotesExp = /["']/g,
      _parseObjectInString = function _parseObjectInString(value) {
    var obj = {},
        split = value.substr(1, value.length - 3).split(":"),
        key = split[0],
        i = 1,
        l = split.length,
        index,
        val,
        parsedVal;

    for (; i < l; i++) {
      val = split[i];
      index = i !== l - 1 ? val.lastIndexOf(",") : val.length;
      parsedVal = val.substr(0, index);
      obj[key] = isNaN(parsedVal) ? parsedVal.replace(_quotesExp, "").trim() : +parsedVal;
      key = val.substr(index + 1).trim();
    }

    return obj;
  },
      _configEaseFromString = function _configEaseFromString(name) {
    var split = (name + "").split("("),
        ease = _easeMap[split[0]];
    return ease && split.length > 1 && ease.config ? ease.config.apply(null, ~name.indexOf("{") ? [_parseObjectInString(split[1])] : _parenthesesExp.exec(name)[1].split(",").map(_numericIfPossible)) : _easeMap._CE && _customEaseExp.test(name) ? _easeMap._CE("", name) : ease;
  },
      _invertEase = function _invertEase(ease) {
    return function (p) {
      return 1 - ease(1 - p);
    };
  },
      _parseEase = function _parseEase(ease, defaultEase) {
    return !ease ? defaultEase : (_isFunction(ease) ? ease : _easeMap[ease] || _configEaseFromString(ease)) || defaultEase;
  },
      _insertEase = function _insertEase(names, easeIn, easeOut, easeInOut) {
    if (easeOut === void 0) {
      easeOut = function easeOut(p) {
        return 1 - easeIn(1 - p);
      };
    }

    if (easeInOut === void 0) {
      easeInOut = function easeInOut(p) {
        return p < .5 ? easeIn(p * 2) / 2 : 1 - easeIn((1 - p) * 2) / 2;
      };
    }

    var ease = {
      easeIn: easeIn,
      easeOut: easeOut,
      easeInOut: easeInOut
    },
        lowercaseName;

    _forEachName(names, function (name) {
      _easeMap[name] = _globals[name] = ease;
      _easeMap[lowercaseName = name.toLowerCase()] = easeOut;

      for (var p in ease) {
        _easeMap[lowercaseName + (p === "easeIn" ? ".in" : p === "easeOut" ? ".out" : ".inOut")] = _easeMap[name + "." + p] = ease[p];
      }
    });

    return ease;
  },
      _easeInOutFromOut = function _easeInOutFromOut(easeOut) {
    return function (p) {
      return p < .5 ? (1 - easeOut(1 - p * 2)) / 2 : .5 + easeOut((p - .5) * 2) / 2;
    };
  },
      _configElastic = function _configElastic(type, amplitude, period) {
    var p1 = amplitude >= 1 ? amplitude : 1,
        p2 = (period || (type ? .3 : .45)) / (amplitude < 1 ? amplitude : 1),
        p3 = p2 / _2PI * (Math.asin(1 / p1) || 0),
        easeOut = function easeOut(p) {
      return p === 1 ? 1 : p1 * Math.pow(2, -10 * p) * _sin((p - p3) * p2) + 1;
    },
        ease = type === "out" ? easeOut : type === "in" ? function (p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);

    p2 = _2PI / p2;

    ease.config = function (amplitude, period) {
      return _configElastic(type, amplitude, period);
    };

    return ease;
  },
      _configBack = function _configBack(type, overshoot) {
    if (overshoot === void 0) {
      overshoot = 1.70158;
    }

    var easeOut = function easeOut(p) {
      return p ? --p * p * ((overshoot + 1) * p + overshoot) + 1 : 0;
    },
        ease = type === "out" ? easeOut : type === "in" ? function (p) {
      return 1 - easeOut(1 - p);
    } : _easeInOutFromOut(easeOut);

    ease.config = function (overshoot) {
      return _configBack(type, overshoot);
    };

    return ease;
  };

  _forEachName("Linear,Quad,Cubic,Quart,Quint,Strong", function (name, i) {
    var power = i < 5 ? i + 1 : i;

    _insertEase(name + ",Power" + (power - 1), i ? function (p) {
      return Math.pow(p, power);
    } : function (p) {
      return p;
    }, function (p) {
      return 1 - Math.pow(1 - p, power);
    }, function (p) {
      return p < .5 ? Math.pow(p * 2, power) / 2 : 1 - Math.pow((1 - p) * 2, power) / 2;
    });
  });

  _easeMap.Linear.easeNone = _easeMap.none = _easeMap.Linear.easeIn;

  _insertEase("Elastic", _configElastic("in"), _configElastic("out"), _configElastic());

  (function (n, c) {
    var n1 = 1 / c,
        n2 = 2 * n1,
        n3 = 2.5 * n1,
        easeOut = function easeOut(p) {
      return p < n1 ? n * p * p : p < n2 ? n * Math.pow(p - 1.5 / c, 2) + .75 : p < n3 ? n * (p -= 2.25 / c) * p + .9375 : n * Math.pow(p - 2.625 / c, 2) + .984375;
    };

    _insertEase("Bounce", function (p) {
      return 1 - easeOut(1 - p);
    }, easeOut);
  })(7.5625, 2.75);

  _insertEase("Expo", function (p) {
    return p ? Math.pow(2, 10 * (p - 1)) : 0;
  });

  _insertEase("Circ", function (p) {
    return -(_sqrt(1 - p * p) - 1);
  });

  _insertEase("Sine", function (p) {
    return -_cos(p * _HALF_PI) + 1;
  });

  _insertEase("Back", _configBack("in"), _configBack("out"), _configBack());

  _easeMap.SteppedEase = _easeMap.steps = _globals.SteppedEase = {
    config: function config(steps, immediateStart) {
      if (steps === void 0) {
        steps = 1;
      }

      var p1 = 1 / steps,
          p2 = steps + (immediateStart ? 0 : 1),
          p3 = immediateStart ? 1 : 0,
          max = 1 - _tinyNum;
      return function (p) {
        return ((p2 * _clamp(0, max, p) | 0) + p3) * p1;
      };
    }
  };
  _defaults.ease = _easeMap["quad.out"];

  _forEachName("onComplete,onUpdate,onStart,onRepeat,onReverseComplete,onInterrupt", function (name) {
    return _callbackNames += name + "," + name + "Params,";
  });

  var GSCache = function GSCache(target, harness) {
    this.id = _gsID++;
    target._gsap = this;
    this.target = target;
    this.harness = harness;
    this.get = harness ? harness.get : _getProperty;
    this.set = harness ? harness.getSetter : _getSetter;
  };
  var Animation = function () {
    function Animation(vars, time) {
      var parent = vars.parent || _globalTimeline;
      this.vars = vars;
      this._delay = +vars.delay || 0;

      if (this._repeat = vars.repeat || 0) {
        this._rDelay = vars.repeatDelay || 0;
        this._yoyo = !!vars.yoyo || !!vars.yoyoEase;
      }

      this._ts = 1;

      _setDuration(this, +vars.duration, 1);

      this.data = vars.data;
      _tickerActive || _ticker.wake();
      parent && _addToTimeline(parent, this, time || time === 0 ? time : parent._time, 1);
      vars.reversed && this.reverse();
      vars.paused && this.paused(true);
    }

    var _proto = Animation.prototype;

    _proto.delay = function delay(value) {
      if (value || value === 0) {
        this.parent && this.parent.smoothChildTiming && this.startTime(this._start + value - this._delay);
        this._delay = value;
        return this;
      }

      return this._delay;
    };

    _proto.duration = function duration(value) {
      return arguments.length ? this.totalDuration(this._repeat > 0 ? value + (value + this._rDelay) * this._repeat : value) : this.totalDuration() && this._dur;
    };

    _proto.totalDuration = function totalDuration(value) {
      if (!arguments.length) {
        return this._tDur;
      }

      this._dirty = 0;
      return _setDuration(this, this._repeat < 0 ? value : (value - this._repeat * this._rDelay) / (this._repeat + 1));
    };

    _proto.totalTime = function totalTime(_totalTime, suppressEvents) {
      _wake();

      if (!arguments.length) {
        return this._tTime;
      }

      var parent = this.parent || this._dp;

      if (parent && parent.smoothChildTiming && this._ts) {
        this._start = _round(parent._time - (this._ts > 0 ? _totalTime / this._ts : ((this._dirty ? this.totalDuration() : this._tDur) - _totalTime) / -this._ts));

        _setEnd(this);

        if (!parent._dirty) {
          _uncache(parent);
        }

        while (parent.parent) {
          if (parent.parent._time !== parent._start + (parent._ts >= 0 ? parent._tTime / parent._ts : (parent.totalDuration() - parent._tTime) / -parent._ts)) {
            parent.totalTime(parent._tTime, true);
          }

          parent = parent.parent;
        }

        if (!this.parent && this._dp.autoRemoveChildren) {
          _addToTimeline(this._dp, this, this._start - this._delay);
        }
      }

      if (this._tTime !== _totalTime || !this._dur && !suppressEvents || this._initted && Math.abs(this._zTime) === _tinyNum) {
        this._ts || (this._pTime = _totalTime);

        _lazySafeRender(this, _totalTime, suppressEvents);
      }

      return this;
    };

    _proto.time = function time(value, suppressEvents) {
      return arguments.length ? this.totalTime(Math.min(this.totalDuration(), value + _elapsedCycleDuration(this)) % this._dur || (value ? this._dur : 0), suppressEvents) : this._time;
    };

    _proto.totalProgress = function totalProgress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.totalDuration() * value, suppressEvents) : this.totalDuration() ? Math.min(1, this._tTime / this._tDur) : this.ratio;
    };

    _proto.progress = function progress(value, suppressEvents) {
      return arguments.length ? this.totalTime(this.duration() * (this._yoyo && !(this.iteration() & 1) ? 1 - value : value) + _elapsedCycleDuration(this), suppressEvents) : this.duration() ? Math.min(1, this._time / this._dur) : this.ratio;
    };

    _proto.iteration = function iteration(value, suppressEvents) {
      var cycleDuration = this.duration() + this._rDelay;

      return arguments.length ? this.totalTime(this._time + (value - 1) * cycleDuration, suppressEvents) : this._repeat ? _animationCycle(this._tTime, cycleDuration) + 1 : 1;
    };

    _proto.timeScale = function timeScale(value) {
      if (!arguments.length) {
        return this._rts === -_tinyNum ? 0 : this._rts;
      }

      if (this._rts === value) {
        return this;
      }

      var tTime = this.parent && this._ts ? _parentToChildTotalTime(this.parent._time, this) : this._tTime;
      this._rts = +value || 0;
      this._ts = this._ps || value === -_tinyNum ? 0 : this._rts;
      return _recacheAncestors(this.totalTime(_clamp(0, this._tDur, tTime), true));
    };

    _proto.paused = function paused(value) {
      if (!arguments.length) {
        return this._ps;
      }

      if (this._ps !== value) {
        this._ps = value;

        if (value) {
          this._pTime = this._tTime || Math.max(-this._delay, this.rawTime());
          this._ts = this._act = 0;
        } else {
          _wake();

          this._ts = this._rts;
          this.totalTime(this.parent && !this.parent.smoothChildTiming ? this.rawTime() : this._tTime || this._pTime, this.progress() === 1 && (this._tTime -= _tinyNum) && Math.abs(this._zTime) !== _tinyNum);
        }
      }

      return this;
    };

    _proto.startTime = function startTime(value) {
      if (arguments.length) {
        this._start = value;
        var parent = this.parent || this._dp;
        parent && (parent._sort || !this.parent) && _addToTimeline(parent, this, value - this._delay);
        return this;
      }

      return this._start;
    };

    _proto.endTime = function endTime(includeRepeats) {
      return this._start + (_isNotFalse(includeRepeats) ? this.totalDuration() : this.duration()) / Math.abs(this._ts);
    };

    _proto.rawTime = function rawTime(wrapRepeats) {
      var parent = this.parent || this._dp;
      return !parent ? this._tTime : wrapRepeats && (!this._ts || this._repeat && this._time && this.totalProgress() < 1) ? this._tTime % (this._dur + this._rDelay) : !this._ts ? this._tTime : _parentToChildTotalTime(parent.rawTime(wrapRepeats), this);
    };

    _proto.repeat = function repeat(value) {
      if (arguments.length) {
        this._repeat = value;
        return _onUpdateTotalDuration(this);
      }

      return this._repeat;
    };

    _proto.repeatDelay = function repeatDelay(value) {
      if (arguments.length) {
        this._rDelay = value;
        return _onUpdateTotalDuration(this);
      }

      return this._rDelay;
    };

    _proto.yoyo = function yoyo(value) {
      if (arguments.length) {
        this._yoyo = value;
        return this;
      }

      return this._yoyo;
    };

    _proto.seek = function seek(position, suppressEvents) {
      return this.totalTime(_parsePosition(this, position), _isNotFalse(suppressEvents));
    };

    _proto.restart = function restart(includeDelay, suppressEvents) {
      return this.play().totalTime(includeDelay ? -this._delay : 0, _isNotFalse(suppressEvents));
    };

    _proto.play = function play(from, suppressEvents) {
      if (from != null) {
        this.seek(from, suppressEvents);
      }

      return this.reversed(false).paused(false);
    };

    _proto.reverse = function reverse(from, suppressEvents) {
      if (from != null) {
        this.seek(from || this.totalDuration(), suppressEvents);
      }

      return this.reversed(true).paused(false);
    };

    _proto.pause = function pause(atTime, suppressEvents) {
      if (atTime != null) {
        this.seek(atTime, suppressEvents);
      }

      return this.paused(true);
    };

    _proto.resume = function resume() {
      return this.paused(false);
    };

    _proto.reversed = function reversed(value) {
      if (arguments.length) {
        if (!!value !== this.reversed()) {
          this.timeScale(-this._rts || (value ? -_tinyNum : 0));
        }

        return this;
      }

      return this._rts < 0;
    };

    _proto.invalidate = function invalidate() {
      this._initted = 0;
      this._zTime = -_tinyNum;
      return this;
    };

    _proto.isActive = function isActive(hasStarted) {
      var parent = this.parent || this._dp,
          start = this._start,
          rawTime;
      return !!(!parent || this._ts && (this._initted || !hasStarted) && parent.isActive(hasStarted) && (rawTime = parent.rawTime(true)) >= start && rawTime < this.endTime(true) - _tinyNum);
    };

    _proto.eventCallback = function eventCallback(type, callback, params) {
      var vars = this.vars;

      if (arguments.length > 1) {
        if (!callback) {
          delete vars[type];
        } else {
          vars[type] = callback;

          if (params) {
            vars[type + "Params"] = params;
          }

          if (type === "onUpdate") {
            this._onUpdate = callback;
          }
        }

        return this;
      }

      return vars[type];
    };

    _proto.then = function then(onFulfilled) {
      var self = this;
      return new Promise(function (resolve) {
        var f = _isFunction(onFulfilled) ? onFulfilled : _passThrough,
            _resolve = function _resolve() {
          var _then = self.then;
          self.then = null;
          _isFunction(f) && (f = f(self)) && (f.then || f === self) && (self.then = _then);
          resolve(f);
          self.then = _then;
        };

        if (self._initted && self.totalProgress() === 1 && self._ts >= 0 || !self._tTime && self._ts < 0) {
          _resolve();
        } else {
          self._prom = _resolve;
        }
      });
    };

    _proto.kill = function kill() {
      _interrupt(this);
    };

    return Animation;
  }();

  _setDefaults(Animation.prototype, {
    _time: 0,
    _start: 0,
    _end: 0,
    _tTime: 0,
    _tDur: 0,
    _dirty: 0,
    _repeat: 0,
    _yoyo: false,
    parent: null,
    _initted: false,
    _rDelay: 0,
    _ts: 1,
    _dp: 0,
    ratio: 0,
    _zTime: -_tinyNum,
    _prom: 0,
    _ps: false,
    _rts: 1
  });

  var Timeline = function (_Animation) {
    _inheritsLoose(Timeline, _Animation);

    function Timeline(vars, time) {
      var _this;

      if (vars === void 0) {
        vars = {};
      }

      _this = _Animation.call(this, vars, time) || this;
      _this.labels = {};
      _this.smoothChildTiming = !!vars.smoothChildTiming;
      _this.autoRemoveChildren = !!vars.autoRemoveChildren;
      _this._sort = _isNotFalse(vars.sortChildren);
      _this.parent && _postAddChecks(_this.parent, _assertThisInitialized(_this));
      return _this;
    }

    var _proto2 = Timeline.prototype;

    _proto2.to = function to(targets, vars, position) {
      new Tween(targets, _parseVars(arguments, 0, this), _parsePosition(this, _isNumber(vars) ? arguments[3] : position));
      return this;
    };

    _proto2.from = function from(targets, vars, position) {
      new Tween(targets, _parseVars(arguments, 1, this), _parsePosition(this, _isNumber(vars) ? arguments[3] : position));
      return this;
    };

    _proto2.fromTo = function fromTo(targets, fromVars, toVars, position) {
      new Tween(targets, _parseVars(arguments, 2, this), _parsePosition(this, _isNumber(fromVars) ? arguments[4] : position));
      return this;
    };

    _proto2.set = function set(targets, vars, position) {
      vars.duration = 0;
      vars.parent = this;
      _inheritDefaults(vars).repeatDelay || (vars.repeat = 0);
      vars.immediateRender = !!vars.immediateRender;
      new Tween(targets, vars, _parsePosition(this, position), 1);
      return this;
    };

    _proto2.call = function call(callback, params, position) {
      return _addToTimeline(this, Tween.delayedCall(0, callback, params), _parsePosition(this, position));
    };

    _proto2.staggerTo = function staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.duration = duration;
      vars.stagger = vars.stagger || stagger;
      vars.onComplete = onCompleteAll;
      vars.onCompleteParams = onCompleteAllParams;
      vars.parent = this;
      new Tween(targets, vars, _parsePosition(this, position));
      return this;
    };

    _proto2.staggerFrom = function staggerFrom(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams) {
      vars.runBackwards = 1;
      _inheritDefaults(vars).immediateRender = _isNotFalse(vars.immediateRender);
      return this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams);
    };

    _proto2.staggerFromTo = function staggerFromTo(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams) {
      toVars.startAt = fromVars;
      _inheritDefaults(toVars).immediateRender = _isNotFalse(toVars.immediateRender);
      return this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams);
    };

    _proto2.render = function render(totalTime, suppressEvents, force) {
      var prevTime = this._time,
          tDur = this._dirty ? this.totalDuration() : this._tDur,
          dur = this._dur,
          tTime = this !== _globalTimeline && totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime,
          crossingStart = this._zTime < 0 !== totalTime < 0 && (this._initted || !dur),
          time,
          child,
          next,
          iteration,
          cycleDuration,
          prevPaused,
          pauseTween,
          timeScale,
          prevStart,
          prevIteration,
          yoyo,
          isYoyo;

      if (tTime !== this._tTime || force || crossingStart) {
        if (prevTime !== this._time && dur) {
          tTime += this._time - prevTime;
          totalTime += this._time - prevTime;
        }

        time = tTime;
        prevStart = this._start;
        timeScale = this._ts;
        prevPaused = !timeScale;

        if (crossingStart) {
          if (!dur) {
            prevTime = this._zTime;
          }

          if (totalTime || !suppressEvents) {
            this._zTime = totalTime;
          }
        }

        if (this._repeat) {
          yoyo = this._yoyo;
          cycleDuration = dur + this._rDelay;
          time = _round(tTime % cycleDuration);

          if (time > dur || tDur === tTime) {
            time = dur;
          }

          iteration = ~~(tTime / cycleDuration);

          if (iteration && iteration === tTime / cycleDuration) {
            time = dur;
            iteration--;
          }

          prevIteration = _animationCycle(this._tTime, cycleDuration);

          if (yoyo && iteration & 1) {
            time = dur - time;
            isYoyo = 1;
          }

          if (iteration !== prevIteration && !this._lock) {
            var rewinding = yoyo && prevIteration & 1,
                doesWrap = rewinding === (yoyo && iteration & 1);

            if (iteration < prevIteration) {
              rewinding = !rewinding;
            }

            prevTime = rewinding ? 0 : dur;
            this._lock = 1;
            this.render(prevTime, suppressEvents, !dur)._lock = 0;

            if (!suppressEvents && this.parent) {
              _callback(this, "onRepeat");
            }

            this.vars.repeatRefresh && !isYoyo && (this.invalidate()._lock = 1);

            if (prevTime !== this._time || prevPaused !== !this._ts) {
              return this;
            }

            if (doesWrap) {
              this._lock = 2;
              prevTime = rewinding ? dur + 0.0001 : -0.0001;
              this.render(prevTime, true);
              this.vars.repeatRefresh && !isYoyo && this.invalidate();
            }

            this._lock = 0;

            if (!this._ts && !prevPaused) {
              return this;
            }
          }
        }

        if (this._hasPause && !this._forcing && this._lock < 2) {
          pauseTween = _findNextPauseTween(this, _round(prevTime), _round(time));

          if (pauseTween) {
            tTime -= time - (time = pauseTween._start);
          }
        }

        this._tTime = tTime;
        this._time = time;
        this._act = !timeScale;

        if (!this._initted) {
          this._onUpdate = this.vars.onUpdate;
          this._initted = 1;
          this._zTime = totalTime;
        }

        if (!prevTime && time && !suppressEvents) {
          _callback(this, "onStart");
        }

        if (time >= prevTime && totalTime >= 0) {
          child = this._first;

          while (child) {
            next = child._next;

            if ((child._act || time >= child._start) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }

              child.render(child._ts > 0 ? (time - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (time - child._start) * child._ts, suppressEvents, force);

              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = -_tinyNum);
                break;
              }
            }

            child = next;
          }
        } else {
          child = this._last;
          var adjustedTime = totalTime < 0 ? totalTime : time;

          while (child) {
            next = child._prev;

            if ((child._act || adjustedTime <= child._end) && child._ts && pauseTween !== child) {
              if (child.parent !== this) {
                return this.render(totalTime, suppressEvents, force);
              }

              child.render(child._ts > 0 ? (adjustedTime - child._start) * child._ts : (child._dirty ? child.totalDuration() : child._tDur) + (adjustedTime - child._start) * child._ts, suppressEvents, force);

              if (time !== this._time || !this._ts && !prevPaused) {
                pauseTween = 0;
                next && (tTime += this._zTime = adjustedTime ? -_tinyNum : _tinyNum);
                break;
              }
            }

            child = next;
          }
        }

        if (pauseTween && !suppressEvents) {
          this.pause();
          pauseTween.render(time >= prevTime ? 0 : -_tinyNum)._zTime = time >= prevTime ? 1 : -1;

          if (this._ts) {
            this._start = prevStart;

            _setEnd(this);

            return this.render(totalTime, suppressEvents, force);
          }
        }

        if (this._onUpdate && !suppressEvents) {
          _callback(this, "onUpdate", true);
        }

        if (tTime === tDur && tDur >= this.totalDuration() || !tTime && this._ts < 0) if (prevStart === this._start || Math.abs(timeScale) !== Math.abs(this._ts)) if (!this._lock) {
          (totalTime || !dur) && (totalTime && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);

          if (!suppressEvents && !(totalTime < 0 && !prevTime)) {
            _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);

            this._prom && this._prom();
          }
        }
      }

      return this;
    };

    _proto2.add = function add(child, position) {
      var _this2 = this;

      if (!_isNumber(position)) {
        position = _parsePosition(this, position);
      }

      if (!(child instanceof Animation)) {
        if (_isArray(child)) {
          child.forEach(function (obj) {
            return _this2.add(obj, position);
          });
          return _uncache(this);
        }

        if (_isString(child)) {
          return this.addLabel(child, position);
        }

        if (_isFunction(child)) {
          child = Tween.delayedCall(0, child);
        } else {
          return this;
        }
      }

      return this !== child ? _addToTimeline(this, child, position) : this;
    };

    _proto2.getChildren = function getChildren(nested, tweens, timelines, ignoreBeforeTime) {
      if (nested === void 0) {
        nested = true;
      }

      if (tweens === void 0) {
        tweens = true;
      }

      if (timelines === void 0) {
        timelines = true;
      }

      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = -_bigNum;
      }

      var a = [],
          child = this._first;

      while (child) {
        if (child._start >= ignoreBeforeTime) {
          if (child instanceof Tween) {
            if (tweens) {
              a.push(child);
            }
          } else {
            if (timelines) {
              a.push(child);
            }

            if (nested) {
              a.push.apply(a, child.getChildren(true, tweens, timelines));
            }
          }
        }

        child = child._next;
      }

      return a;
    };

    _proto2.getById = function getById(id) {
      var animations = this.getChildren(1, 1, 1),
          i = animations.length;

      while (i--) {
        if (animations[i].vars.id === id) {
          return animations[i];
        }
      }
    };

    _proto2.remove = function remove(child) {
      if (_isString(child)) {
        return this.removeLabel(child);
      }

      if (_isFunction(child)) {
        return this.killTweensOf(child);
      }

      _removeLinkedListItem(this, child);

      if (child === this._recent) {
        this._recent = this._last;
      }

      return _uncache(this);
    };

    _proto2.totalTime = function totalTime(_totalTime2, suppressEvents) {
      if (!arguments.length) {
        return this._tTime;
      }

      this._forcing = 1;

      if (!this.parent && !this._dp && this._ts) {
        this._start = _round(_ticker.time - (this._ts > 0 ? _totalTime2 / this._ts : (this.totalDuration() - _totalTime2) / -this._ts));
      }

      _Animation.prototype.totalTime.call(this, _totalTime2, suppressEvents);

      this._forcing = 0;
      return this;
    };

    _proto2.addLabel = function addLabel(label, position) {
      this.labels[label] = _parsePosition(this, position);
      return this;
    };

    _proto2.removeLabel = function removeLabel(label) {
      delete this.labels[label];
      return this;
    };

    _proto2.addPause = function addPause(position, callback, params) {
      var t = Tween.delayedCall(0, callback || _emptyFunc, params);
      t.data = "isPause";
      this._hasPause = 1;
      return _addToTimeline(this, t, _parsePosition(this, position));
    };

    _proto2.removePause = function removePause(position) {
      var child = this._first;
      position = _parsePosition(this, position);

      while (child) {
        if (child._start === position && child.data === "isPause") {
          _removeFromParent(child);
        }

        child = child._next;
      }
    };

    _proto2.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      var tweens = this.getTweensOf(targets, onlyActive),
          i = tweens.length;

      while (i--) {
        _overwritingTween !== tweens[i] && tweens[i].kill(targets, props);
      }

      return this;
    };

    _proto2.getTweensOf = function getTweensOf(targets, onlyActive) {
      var a = [],
          parsedTargets = toArray(targets),
          child = this._first,
          children;

      while (child) {
        if (child instanceof Tween) {
          if (_arrayContainsAny(child._targets, parsedTargets) && (!onlyActive || child.isActive(onlyActive === "started"))) {
            a.push(child);
          }
        } else if ((children = child.getTweensOf(parsedTargets, onlyActive)).length) {
          a.push.apply(a, children);
        }

        child = child._next;
      }

      return a;
    };

    _proto2.tweenTo = function tweenTo(position, vars) {
      vars = vars || {};

      var tl = this,
          endTime = _parsePosition(tl, position),
          _vars = vars,
          startAt = _vars.startAt,
          _onStart = _vars.onStart,
          onStartParams = _vars.onStartParams,
          tween = Tween.to(tl, _setDefaults(vars, {
        ease: "none",
        lazy: false,
        time: endTime,
        duration: vars.duration || Math.abs((endTime - (startAt && "time" in startAt ? startAt.time : tl._time)) / tl.timeScale()) || _tinyNum,
        onStart: function onStart() {
          tl.pause();
          var duration = vars.duration || Math.abs((endTime - tl._time) / tl.timeScale());

          if (tween._dur !== duration) {
            _setDuration(tween, duration).render(tween._time, true, true);
          }

          if (_onStart) {
            _onStart.apply(tween, onStartParams || []);
          }
        }
      }));

      return tween;
    };

    _proto2.tweenFromTo = function tweenFromTo(fromPosition, toPosition, vars) {
      return this.tweenTo(toPosition, _setDefaults({
        startAt: {
          time: _parsePosition(this, fromPosition)
        }
      }, vars));
    };

    _proto2.recent = function recent() {
      return this._recent;
    };

    _proto2.nextLabel = function nextLabel(afterTime) {
      if (afterTime === void 0) {
        afterTime = this._time;
      }

      return _getLabelInDirection(this, _parsePosition(this, afterTime));
    };

    _proto2.previousLabel = function previousLabel(beforeTime) {
      if (beforeTime === void 0) {
        beforeTime = this._time;
      }

      return _getLabelInDirection(this, _parsePosition(this, beforeTime), 1);
    };

    _proto2.currentLabel = function currentLabel(value) {
      return arguments.length ? this.seek(value, true) : this.previousLabel(this._time + _tinyNum);
    };

    _proto2.shiftChildren = function shiftChildren(amount, adjustLabels, ignoreBeforeTime) {
      if (ignoreBeforeTime === void 0) {
        ignoreBeforeTime = 0;
      }

      var child = this._first,
          labels = this.labels,
          p;

      while (child) {
        if (child._start >= ignoreBeforeTime) {
          child._start += amount;
        }

        child = child._next;
      }

      if (adjustLabels) {
        for (p in labels) {
          if (labels[p] >= ignoreBeforeTime) {
            labels[p] += amount;
          }
        }
      }

      return _uncache(this);
    };

    _proto2.invalidate = function invalidate() {
      var child = this._first;
      this._lock = 0;

      while (child) {
        child.invalidate();
        child = child._next;
      }

      return _Animation.prototype.invalidate.call(this);
    };

    _proto2.clear = function clear(includeLabels) {
      if (includeLabels === void 0) {
        includeLabels = true;
      }

      var child = this._first,
          next;

      while (child) {
        next = child._next;
        this.remove(child);
        child = next;
      }

      this._time = this._tTime = 0;

      if (includeLabels) {
        this.labels = {};
      }

      return _uncache(this);
    };

    _proto2.totalDuration = function totalDuration(value) {
      var max = 0,
          self = this,
          child = self._last,
          prevStart = _bigNum,
          prev,
          end,
          start,
          parent;

      if (arguments.length) {
        return self.timeScale((self._repeat < 0 ? self.duration() : self.totalDuration()) / (self.reversed() ? -value : value));
      }

      if (self._dirty) {
        parent = self.parent;

        while (child) {
          prev = child._prev;

          if (child._dirty) {
            child.totalDuration();
          }

          start = child._start;

          if (start > prevStart && self._sort && child._ts && !self._lock) {
            self._lock = 1;
            _addToTimeline(self, child, start - child._delay, 1)._lock = 0;
          } else {
            prevStart = start;
          }

          if (start < 0 && child._ts) {
            max -= start;

            if (!parent && !self._dp || parent && parent.smoothChildTiming) {
              self._start += start / self._ts;
              self._time -= start;
              self._tTime -= start;
            }

            self.shiftChildren(-start, false, -1e20);
            prevStart = 0;
          }

          end = _setEnd(child);

          if (end > max && child._ts) {
            max = end;
          }

          child = prev;
        }

        _setDuration(self, self === _globalTimeline && self._time > max ? self._time : Math.min(_bigNum, max), 1);

        self._dirty = 0;
      }

      return self._tDur;
    };

    Timeline.updateRoot = function updateRoot(time) {
      if (_globalTimeline._ts) {
        _lazySafeRender(_globalTimeline, _parentToChildTotalTime(time, _globalTimeline));

        _lastRenderedFrame = _ticker.frame;
      }

      if (_ticker.frame >= _nextGCFrame) {
        _nextGCFrame += _config.autoSleep || 120;
        var child = _globalTimeline._first;
        if (!child || !child._ts) if (_config.autoSleep && _ticker._listeners.length < 2) {
          while (child && !child._ts) {
            child = child._next;
          }

          if (!child) {
            _ticker.sleep();
          }
        }
      }
    };

    return Timeline;
  }(Animation);

  _setDefaults(Timeline.prototype, {
    _lock: 0,
    _hasPause: 0,
    _forcing: 0
  });

  var _addComplexStringPropTween = function _addComplexStringPropTween(target, prop, start, end, setter, stringFilter, funcParam) {
    var pt = new PropTween(this._pt, target, prop, 0, 1, _renderComplexString, null, setter),
        index = 0,
        matchIndex = 0,
        result,
        startNums,
        color,
        endNum,
        chunk,
        startNum,
        hasRandom,
        a;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";

    if (hasRandom = ~end.indexOf("random(")) {
      end = _replaceRandom(end);
    }

    if (stringFilter) {
      a = [start, end];
      stringFilter(a, target, prop);
      start = a[0];
      end = a[1];
    }

    startNums = start.match(_complexStringNumExp) || [];

    while (result = _complexStringNumExp.exec(end)) {
      endNum = result[0];
      chunk = end.substring(index, result.index);

      if (color) {
        color = (color + 1) % 5;
      } else if (chunk.substr(-5) === "rgba(") {
        color = 1;
      }

      if (endNum !== startNums[matchIndex++]) {
        startNum = parseFloat(startNums[matchIndex - 1]) || 0;
        pt._pt = {
          _next: pt._pt,
          p: chunk || matchIndex === 1 ? chunk : ",",
          s: startNum,
          c: endNum.charAt(1) === "=" ? parseFloat(endNum.substr(2)) * (endNum.charAt(0) === "-" ? -1 : 1) : parseFloat(endNum) - startNum,
          m: color && color < 4 ? Math.round : 0
        };
        index = _complexStringNumExp.lastIndex;
      }
    }

    pt.c = index < end.length ? end.substring(index, end.length) : "";
    pt.fp = funcParam;

    if (_relExp.test(end) || hasRandom) {
      pt.e = 0;
    }

    this._pt = pt;
    return pt;
  },
      _addPropTween = function _addPropTween(target, prop, start, end, index, targets, modifier, stringFilter, funcParam) {
    if (_isFunction(end)) {
      end = end(index || 0, target, targets);
    }

    var currentValue = target[prop],
        parsedStart = start !== "get" ? start : !_isFunction(currentValue) ? currentValue : funcParam ? target[prop.indexOf("set") || !_isFunction(target["get" + prop.substr(3)]) ? prop : "get" + prop.substr(3)](funcParam) : target[prop](),
        setter = !_isFunction(currentValue) ? _setterPlain : funcParam ? _setterFuncWithParam : _setterFunc,
        pt;

    if (_isString(end)) {
      if (~end.indexOf("random(")) {
        end = _replaceRandom(end);
      }

      if (end.charAt(1) === "=") {
        end = parseFloat(parsedStart) + parseFloat(end.substr(2)) * (end.charAt(0) === "-" ? -1 : 1) + (getUnit(parsedStart) || 0);
      }
    }

    if (parsedStart !== end) {
      if (!isNaN(parsedStart + end)) {
        pt = new PropTween(this._pt, target, prop, +parsedStart || 0, end - (parsedStart || 0), typeof currentValue === "boolean" ? _renderBoolean : _renderPlain, 0, setter);

        if (funcParam) {
          pt.fp = funcParam;
        }

        if (modifier) {
          pt.modifier(modifier, this, target);
        }

        return this._pt = pt;
      }

      !currentValue && !(prop in target) && _missingPlugin(prop, end);
      return _addComplexStringPropTween.call(this, target, prop, parsedStart, end, setter, stringFilter || _config.stringFilter, funcParam);
    }
  },
      _processVars = function _processVars(vars, index, target, targets, tween) {
    if (_isFunction(vars)) {
      vars = _parseFuncOrString(vars, tween, index, target, targets);
    }

    if (!_isObject(vars) || vars.style && vars.nodeType || _isArray(vars)) {
      return _isString(vars) ? _parseFuncOrString(vars, tween, index, target, targets) : vars;
    }

    var copy = {},
        p;

    for (p in vars) {
      copy[p] = _parseFuncOrString(vars[p], tween, index, target, targets);
    }

    return copy;
  },
      _checkPlugin = function _checkPlugin(property, vars, tween, index, target, targets) {
    var plugin, pt, ptLookup, i;

    if (_plugins[property] && (plugin = new _plugins[property]()).init(target, plugin.rawVars ? vars[property] : _processVars(vars[property], index, target, targets, tween), tween, index, targets) !== false) {
      tween._pt = pt = new PropTween(tween._pt, target, property, 0, 1, plugin.render, plugin, 0, plugin.priority);

      if (tween !== _quickTween) {
        ptLookup = tween._ptLookup[tween._targets.indexOf(target)];
        i = plugin._props.length;

        while (i--) {
          ptLookup[plugin._props[i]] = pt;
        }
      }
    }

    return plugin;
  },
      _overwritingTween,
      _initTween = function _initTween(tween, time) {
    var vars = tween.vars,
        ease = vars.ease,
        startAt = vars.startAt,
        immediateRender = vars.immediateRender,
        lazy = vars.lazy,
        onUpdate = vars.onUpdate,
        onUpdateParams = vars.onUpdateParams,
        callbackScope = vars.callbackScope,
        runBackwards = vars.runBackwards,
        yoyoEase = vars.yoyoEase,
        keyframes = vars.keyframes,
        autoRevert = vars.autoRevert,
        dur = tween._dur,
        prevStartAt = tween._startAt,
        targets = tween._targets,
        parent = tween.parent,
        fullTargets = parent && parent.data === "nested" ? parent.parent._targets : targets,
        autoOverwrite = tween._overwrite === "auto",
        tl = tween.timeline,
        cleanVars,
        i,
        p,
        pt,
        target,
        hasPriority,
        gsData,
        harness,
        plugin,
        ptLookup,
        index,
        harnessVars;

    if (tl && (!keyframes || !ease)) {
      ease = "none";
    }

    tween._ease = _parseEase(ease, _defaults.ease);
    tween._yEase = yoyoEase ? _invertEase(_parseEase(yoyoEase === true ? ease : yoyoEase, _defaults.ease)) : 0;

    if (yoyoEase && tween._yoyo && !tween._repeat) {
      yoyoEase = tween._yEase;
      tween._yEase = tween._ease;
      tween._ease = yoyoEase;
    }

    if (!tl) {
      if (prevStartAt) {
        prevStartAt.render(-1, true).kill();
      }

      if (startAt) {
        _removeFromParent(tween._startAt = Tween.set(targets, _setDefaults({
          data: "isStart",
          overwrite: false,
          parent: parent,
          immediateRender: true,
          lazy: _isNotFalse(lazy),
          startAt: null,
          delay: 0,
          onUpdate: onUpdate,
          onUpdateParams: onUpdateParams,
          callbackScope: callbackScope,
          stagger: 0
        }, startAt)));

        if (immediateRender) {
          if (time > 0) {
            !autoRevert && (tween._startAt = 0);
          } else if (dur) {
            return;
          }
        }
      } else if (runBackwards && dur) {
        if (prevStartAt) {
          !autoRevert && (tween._startAt = 0);
        } else {
          if (time) {
            immediateRender = false;
          }

          _removeFromParent(tween._startAt = Tween.set(targets, _merge(_copyExcluding(vars, _reservedProps), {
            overwrite: false,
            data: "isFromStart",
            lazy: immediateRender && _isNotFalse(lazy),
            immediateRender: immediateRender,
            stagger: 0,
            parent: parent
          })));

          if (!immediateRender) {
            _initTween(tween._startAt, _tinyNum);
          } else if (!time) {
            return;
          }
        }
      }

      cleanVars = _copyExcluding(vars, _reservedProps);
      tween._pt = 0;
      harness = targets[0] ? _getCache(targets[0]).harness : 0;
      harnessVars = harness && vars[harness.prop];
      lazy = dur && _isNotFalse(lazy) || lazy && !dur;

      for (i = 0; i < targets.length; i++) {
        target = targets[i];
        gsData = target._gsap || _harness(targets)[i]._gsap;
        tween._ptLookup[i] = ptLookup = {};

        if (_lazyLookup[gsData.id]) {
          _lazyRender();
        }

        index = fullTargets === targets ? i : fullTargets.indexOf(target);

        if (harness && (plugin = new harness()).init(target, harnessVars || cleanVars, tween, index, fullTargets) !== false) {
          tween._pt = pt = new PropTween(tween._pt, target, plugin.name, 0, 1, plugin.render, plugin, 0, plugin.priority);

          plugin._props.forEach(function (name) {
            ptLookup[name] = pt;
          });

          if (plugin.priority) {
            hasPriority = 1;
          }
        }

        if (!harness || harnessVars) {
          for (p in cleanVars) {
            if (_plugins[p] && (plugin = _checkPlugin(p, cleanVars, tween, index, target, fullTargets))) {
              if (plugin.priority) {
                hasPriority = 1;
              }
            } else {
              ptLookup[p] = pt = _addPropTween.call(tween, target, p, "get", cleanVars[p], index, fullTargets, 0, vars.stringFilter);
            }
          }
        }

        if (tween._op && tween._op[i]) {
          tween.kill(target, tween._op[i]);
        }

        if (autoOverwrite && tween._pt) {
          _overwritingTween = tween;

          _globalTimeline.killTweensOf(target, ptLookup, "started");

          _overwritingTween = 0;
        }

        if (tween._pt && lazy) {
          _lazyLookup[gsData.id] = 1;
        }
      }

      if (hasPriority) {
        _sortPropTweensByPriority(tween);
      }

      if (tween._onInit) {
        tween._onInit(tween);
      }
    }

    tween._from = !tl && !!vars.runBackwards;
    tween._onUpdate = onUpdate;
    tween._initted = 1;
  },
      _addAliasesToVars = function _addAliasesToVars(targets, vars) {
    var harness = targets[0] ? _getCache(targets[0]).harness : 0,
        propertyAliases = harness && harness.aliases,
        copy,
        p,
        i,
        aliases;

    if (!propertyAliases) {
      return vars;
    }

    copy = _merge({}, vars);

    for (p in propertyAliases) {
      if (p in copy) {
        aliases = propertyAliases[p].split(",");
        i = aliases.length;

        while (i--) {
          copy[aliases[i]] = copy[p];
        }
      }
    }

    return copy;
  },
      _parseFuncOrString = function _parseFuncOrString(value, tween, i, target, targets) {
    return _isFunction(value) ? value.call(tween, i, target, targets) : _isString(value) && ~value.indexOf("random(") ? _replaceRandom(value) : value;
  },
      _staggerTweenProps = _callbackNames + "repeat,repeatDelay,yoyo,repeatRefresh,yoyoEase",
      _staggerPropsToSkip = (_staggerTweenProps + ",id,stagger,delay,duration,paused").split(",");

  var Tween = function (_Animation2) {
    _inheritsLoose(Tween, _Animation2);

    function Tween(targets, vars, time, skipInherit) {
      var _this3;

      if (typeof vars === "number") {
        time.duration = vars;
        vars = time;
        time = null;
      }

      _this3 = _Animation2.call(this, skipInherit ? vars : _inheritDefaults(vars), time) || this;
      var _this3$vars = _this3.vars,
          duration = _this3$vars.duration,
          delay = _this3$vars.delay,
          immediateRender = _this3$vars.immediateRender,
          stagger = _this3$vars.stagger,
          overwrite = _this3$vars.overwrite,
          keyframes = _this3$vars.keyframes,
          defaults = _this3$vars.defaults,
          parent = _this3.parent,
          parsedTargets = (_isArray(targets) ? _isNumber(targets[0]) : "length" in vars) ? [targets] : toArray(targets),
          tl,
          i,
          copy,
          l,
          p,
          curTarget,
          staggerFunc,
          staggerVarsToMerge;
      _this3._targets = parsedTargets.length ? _harness(parsedTargets) : _warn("GSAP target " + targets + " not found. https://greensock.com", !_config.nullTargetWarn) || [];
      _this3._ptLookup = [];
      _this3._overwrite = overwrite;

      if (keyframes || stagger || _isFuncOrString(duration) || _isFuncOrString(delay)) {
        vars = _this3.vars;
        tl = _this3.timeline = new Timeline({
          data: "nested",
          defaults: defaults || {}
        });
        tl.kill();
        tl.parent = _assertThisInitialized(_this3);

        if (keyframes) {
          _setDefaults(tl.vars.defaults, {
            ease: "none"
          });

          keyframes.forEach(function (frame) {
            return tl.to(parsedTargets, frame, ">");
          });
        } else {
          l = parsedTargets.length;
          staggerFunc = stagger ? distribute(stagger) : _emptyFunc;

          if (_isObject(stagger)) {
            for (p in stagger) {
              if (~_staggerTweenProps.indexOf(p)) {
                if (!staggerVarsToMerge) {
                  staggerVarsToMerge = {};
                }

                staggerVarsToMerge[p] = stagger[p];
              }
            }
          }

          for (i = 0; i < l; i++) {
            copy = {};

            for (p in vars) {
              if (_staggerPropsToSkip.indexOf(p) < 0) {
                copy[p] = vars[p];
              }
            }

            copy.stagger = 0;

            if (staggerVarsToMerge) {
              _merge(copy, staggerVarsToMerge);
            }

            if (vars.yoyoEase && !vars.repeat) {
              copy.yoyoEase = vars.yoyoEase;
            }

            curTarget = parsedTargets[i];
            copy.duration = +_parseFuncOrString(duration, _assertThisInitialized(_this3), i, curTarget, parsedTargets);
            copy.delay = (+_parseFuncOrString(delay, _assertThisInitialized(_this3), i, curTarget, parsedTargets) || 0) - _this3._delay;

            if (!stagger && l === 1 && copy.delay) {
              _this3._delay = delay = copy.delay;
              _this3._start += delay;
              copy.delay = 0;
            }

            tl.to(curTarget, copy, staggerFunc(i, curTarget, parsedTargets));
          }

          duration = delay = 0;
        }

        duration || _this3.duration(duration = tl.duration());
      } else {
        _this3.timeline = 0;
      }

      if (overwrite === true) {
        _overwritingTween = _assertThisInitialized(_this3);

        _globalTimeline.killTweensOf(parsedTargets);

        _overwritingTween = 0;
      }

      parent && _postAddChecks(parent, _assertThisInitialized(_this3));

      if (immediateRender || !duration && !keyframes && _this3._start === parent._time && _isNotFalse(immediateRender) && _hasNoPausedAncestors(_assertThisInitialized(_this3)) && parent.data !== "nested") {
        _this3._tTime = -_tinyNum;

        _this3.render(Math.max(0, -delay));
      }

      return _this3;
    }

    var _proto3 = Tween.prototype;

    _proto3.render = function render(totalTime, suppressEvents, force) {
      var prevTime = this._time,
          tDur = this._tDur,
          dur = this._dur,
          tTime = totalTime > tDur - _tinyNum && totalTime >= 0 ? tDur : totalTime < _tinyNum ? 0 : totalTime,
          time,
          pt,
          iteration,
          cycleDuration,
          prevIteration,
          isYoyo,
          ratio,
          timeline,
          yoyoEase;

      if (!dur) {
        _renderZeroDurationTween(this, totalTime, suppressEvents, force);
      } else if (tTime !== this._tTime || !totalTime || force || this._startAt && this._zTime < 0 !== totalTime < 0) {
        time = tTime;
        timeline = this.timeline;

        if (this._repeat) {
          cycleDuration = dur + this._rDelay;
          time = _round(tTime % cycleDuration);

          if (time > dur || tDur === tTime) {
            time = dur;
          }

          iteration = ~~(tTime / cycleDuration);

          if (iteration && iteration === tTime / cycleDuration) {
            time = dur;
            iteration--;
          }

          isYoyo = this._yoyo && iteration & 1;

          if (isYoyo) {
            yoyoEase = this._yEase;
            time = dur - time;
          }

          prevIteration = _animationCycle(this._tTime, cycleDuration);

          if (time === prevTime && !force && this._initted) {
            return this;
          }

          if (iteration !== prevIteration) {
            if (this.vars.repeatRefresh && !isYoyo && !this._lock) {
              this._lock = force = 1;
              this.render(cycleDuration * iteration, true).invalidate()._lock = 0;
            }
          }
        }

        if (!this._initted) {
          if (_attemptInitTween(this, time, force, suppressEvents)) {
            this._tTime = 0;
            return this;
          }

          if (dur !== this._dur) {
            return this.render(totalTime, suppressEvents, force);
          }
        }

        this._tTime = tTime;
        this._time = time;

        if (!this._act && this._ts) {
          this._act = 1;
          this._lazy = 0;
        }

        this.ratio = ratio = (yoyoEase || this._ease)(time / dur);

        if (this._from) {
          this.ratio = ratio = 1 - ratio;
        }

        if (!prevTime && time && !suppressEvents) {
          _callback(this, "onStart");
        }

        pt = this._pt;

        while (pt) {
          pt.r(ratio, pt.d);
          pt = pt._next;
        }

        timeline && timeline.render(totalTime < 0 ? totalTime : !time && isYoyo ? -_tinyNum : timeline._dur * ratio, suppressEvents, force) || this._startAt && (this._zTime = totalTime);

        if (this._onUpdate && !suppressEvents) {
          if (totalTime < 0 && this._startAt) {
            this._startAt.render(totalTime, true, force);
          }

          _callback(this, "onUpdate");
        }

        if (this._repeat) if (iteration !== prevIteration && this.vars.onRepeat && !suppressEvents && this.parent) {
          _callback(this, "onRepeat");
        }

        if ((tTime === this._tDur || !tTime) && this._tTime === tTime) {
          if (totalTime < 0 && this._startAt && !this._onUpdate) {
            this._startAt.render(totalTime, true, force);
          }

          (totalTime || !dur) && (totalTime && this._ts > 0 || !tTime && this._ts < 0) && _removeFromParent(this, 1);

          if (!suppressEvents && !(totalTime < 0 && !prevTime) && !(tTime < tDur && this.timeScale() > 0)) {
            _callback(this, tTime === tDur ? "onComplete" : "onReverseComplete", true);

            this._prom && this._prom();
          }
        }
      }

      return this;
    };

    _proto3.targets = function targets() {
      return this._targets;
    };

    _proto3.invalidate = function invalidate() {
      this._pt = this._op = this._startAt = this._onUpdate = this._act = this._lazy = 0;
      this._ptLookup = [];
      this.timeline && this.timeline.invalidate();
      return _Animation2.prototype.invalidate.call(this);
    };

    _proto3.kill = function kill(targets, vars) {
      if (vars === void 0) {
        vars = "all";
      }

      if (!targets && (!vars || vars === "all")) {
        this._lazy = 0;

        if (this.parent) {
          return _interrupt(this);
        }
      }

      if (this.timeline) {
        this.timeline.killTweensOf(targets, vars, _overwritingTween && _overwritingTween.vars.overwrite !== true);
        return this;
      }

      var parsedTargets = this._targets,
          killingTargets = targets ? toArray(targets) : parsedTargets,
          propTweenLookup = this._ptLookup,
          firstPT = this._pt,
          overwrittenProps,
          curLookup,
          curOverwriteProps,
          props,
          p,
          pt,
          i;

      if ((!vars || vars === "all") && _arraysMatch(parsedTargets, killingTargets)) {
        return _interrupt(this);
      }

      overwrittenProps = this._op = this._op || [];

      if (vars !== "all") {
        if (_isString(vars)) {
          p = {};

          _forEachName(vars, function (name) {
            return p[name] = 1;
          });

          vars = p;
        }

        vars = _addAliasesToVars(parsedTargets, vars);
      }

      i = parsedTargets.length;

      while (i--) {
        if (~killingTargets.indexOf(parsedTargets[i])) {
          curLookup = propTweenLookup[i];

          if (vars === "all") {
            overwrittenProps[i] = vars;
            props = curLookup;
            curOverwriteProps = {};
          } else {
            curOverwriteProps = overwrittenProps[i] = overwrittenProps[i] || {};
            props = vars;
          }

          for (p in props) {
            pt = curLookup && curLookup[p];

            if (pt) {
              if (!("kill" in pt.d) || pt.d.kill(p) === true) {
                _removeLinkedListItem(this, pt, "_pt");
              }

              delete curLookup[p];
            }

            if (curOverwriteProps !== "all") {
              curOverwriteProps[p] = 1;
            }
          }
        }
      }

      if (this._initted && !this._pt && firstPT) {
        _interrupt(this);
      }

      return this;
    };

    Tween.to = function to(targets, vars) {
      return new Tween(targets, vars, arguments[2]);
    };

    Tween.from = function from(targets, vars) {
      return new Tween(targets, _parseVars(arguments, 1));
    };

    Tween.delayedCall = function delayedCall(delay, callback, params, scope) {
      return new Tween(callback, 0, {
        immediateRender: false,
        lazy: false,
        overwrite: false,
        delay: delay,
        onComplete: callback,
        onReverseComplete: callback,
        onCompleteParams: params,
        onReverseCompleteParams: params,
        callbackScope: scope
      });
    };

    Tween.fromTo = function fromTo(targets, fromVars, toVars) {
      return new Tween(targets, _parseVars(arguments, 2));
    };

    Tween.set = function set(targets, vars) {
      vars.duration = 0;
      vars.repeatDelay || (vars.repeat = 0);
      return new Tween(targets, vars);
    };

    Tween.killTweensOf = function killTweensOf(targets, props, onlyActive) {
      return _globalTimeline.killTweensOf(targets, props, onlyActive);
    };

    return Tween;
  }(Animation);

  _setDefaults(Tween.prototype, {
    _targets: [],
    _lazy: 0,
    _startAt: 0,
    _op: 0,
    _onInit: 0
  });

  _forEachName("staggerTo,staggerFrom,staggerFromTo", function (name) {
    Tween[name] = function () {
      var tl = new Timeline(),
          params = _slice.call(arguments, 0);

      params.splice(name === "staggerFromTo" ? 5 : 4, 0, 0);
      return tl[name].apply(tl, params);
    };
  });

  var _setterPlain = function _setterPlain(target, property, value) {
    return target[property] = value;
  },
      _setterFunc = function _setterFunc(target, property, value) {
    return target[property](value);
  },
      _setterFuncWithParam = function _setterFuncWithParam(target, property, value, data) {
    return target[property](data.fp, value);
  },
      _setterAttribute = function _setterAttribute(target, property, value) {
    return target.setAttribute(property, value);
  },
      _getSetter = function _getSetter(target, property) {
    return _isFunction(target[property]) ? _setterFunc : _isUndefined(target[property]) && target.setAttribute ? _setterAttribute : _setterPlain;
  },
      _renderPlain = function _renderPlain(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000, data);
  },
      _renderBoolean = function _renderBoolean(ratio, data) {
    return data.set(data.t, data.p, !!(data.s + data.c * ratio), data);
  },
      _renderComplexString = function _renderComplexString(ratio, data) {
    var pt = data._pt,
        s = "";

    if (!ratio && data.b) {
      s = data.b;
    } else if (ratio === 1 && data.e) {
      s = data.e;
    } else {
      while (pt) {
        s = pt.p + (pt.m ? pt.m(pt.s + pt.c * ratio) : Math.round((pt.s + pt.c * ratio) * 10000) / 10000) + s;
        pt = pt._next;
      }

      s += data.c;
    }

    data.set(data.t, data.p, s, data);
  },
      _renderPropTweens = function _renderPropTweens(ratio, data) {
    var pt = data._pt;

    while (pt) {
      pt.r(ratio, pt.d);
      pt = pt._next;
    }
  },
      _addPluginModifier = function _addPluginModifier(modifier, tween, target, property) {
    var pt = this._pt,
        next;

    while (pt) {
      next = pt._next;

      if (pt.p === property) {
        pt.modifier(modifier, tween, target);
      }

      pt = next;
    }
  },
      _killPropTweensOf = function _killPropTweensOf(property) {
    var pt = this._pt,
        hasNonDependentRemaining,
        next;

    while (pt) {
      next = pt._next;

      if (pt.p === property && !pt.op || pt.op === property) {
        _removeLinkedListItem(this, pt, "_pt");
      } else if (!pt.dep) {
        hasNonDependentRemaining = 1;
      }

      pt = next;
    }

    return !hasNonDependentRemaining;
  },
      _setterWithModifier = function _setterWithModifier(target, property, value, data) {
    data.mSet(target, property, data.m.call(data.tween, value, data.mt), data);
  },
      _sortPropTweensByPriority = function _sortPropTweensByPriority(parent) {
    var pt = parent._pt,
        next,
        pt2,
        first,
        last;

    while (pt) {
      next = pt._next;
      pt2 = first;

      while (pt2 && pt2.pr > pt.pr) {
        pt2 = pt2._next;
      }

      if (pt._prev = pt2 ? pt2._prev : last) {
        pt._prev._next = pt;
      } else {
        first = pt;
      }

      if (pt._next = pt2) {
        pt2._prev = pt;
      } else {
        last = pt;
      }

      pt = next;
    }

    parent._pt = first;
  };

  var PropTween = function () {
    function PropTween(next, target, prop, start, change, renderer, data, setter, priority) {
      this.t = target;
      this.s = start;
      this.c = change;
      this.p = prop;
      this.r = renderer || _renderPlain;
      this.d = data || this;
      this.set = setter || _setterPlain;
      this.pr = priority || 0;
      this._next = next;

      if (next) {
        next._prev = this;
      }
    }

    var _proto4 = PropTween.prototype;

    _proto4.modifier = function modifier(func, tween, target) {
      this.mSet = this.mSet || this.set;
      this.set = _setterWithModifier;
      this.m = func;
      this.mt = target;
      this.tween = tween;
    };

    return PropTween;
  }();

  _forEachName(_callbackNames + "parent,duration,ease,delay,overwrite,runBackwards,startAt,yoyo,immediateRender,repeat,repeatDelay,data,paused,reversed,lazy,callbackScope,stringFilter,id,yoyoEase,stagger,inherit,repeatRefresh,keyframes,autoRevert", function (name) {
    return _reservedProps[name] = 1;
  });

  _globals.TweenMax = _globals.TweenLite = Tween;
  _globals.TimelineLite = _globals.TimelineMax = Timeline;
  _globalTimeline = new Timeline({
    sortChildren: false,
    defaults: _defaults,
    autoRemoveChildren: true,
    id: "root",
    smoothChildTiming: true
  });
  _config.stringFilter = _colorStringFilter;
  var _gsap = {
    registerPlugin: function registerPlugin() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }

      args.forEach(function (config) {
        return _createPlugin(config);
      });
    },
    timeline: function timeline(vars) {
      return new Timeline(vars);
    },
    getTweensOf: function getTweensOf(targets, onlyActive) {
      return _globalTimeline.getTweensOf(targets, onlyActive);
    },
    getProperty: function getProperty(target, property, unit, uncache) {
      if (_isString(target)) {
        target = toArray(target)[0];
      }

      var getter = _getCache(target || {}).get,
          format = unit ? _passThrough : _numericIfPossible;

      if (unit === "native") {
        unit = "";
      }

      return !target ? target : !property ? function (property, unit, uncache) {
        return format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
      } : format((_plugins[property] && _plugins[property].get || getter)(target, property, unit, uncache));
    },
    quickSetter: function quickSetter(target, property, unit) {
      target = toArray(target);

      if (target.length > 1) {
        var setters = target.map(function (t) {
          return gsap.quickSetter(t, property, unit);
        }),
            l = setters.length;
        return function (value) {
          var i = l;

          while (i--) {
            setters[i](value);
          }
        };
      }

      target = target[0] || {};

      var Plugin = _plugins[property],
          cache = _getCache(target),
          setter = Plugin ? function (value) {
        var p = new Plugin();
        _quickTween._pt = 0;
        p.init(target, unit ? value + unit : value, _quickTween, 0, [target]);
        p.render(1, p);
        _quickTween._pt && _renderPropTweens(1, _quickTween);
      } : cache.set(target, property);

      return Plugin ? setter : function (value) {
        return setter(target, property, unit ? value + unit : value, cache, 1);
      };
    },
    isTweening: function isTweening(targets) {
      return _globalTimeline.getTweensOf(targets, true).length > 0;
    },
    defaults: function defaults(value) {
      if (value && value.ease) {
        value.ease = _parseEase(value.ease, _defaults.ease);
      }

      return _mergeDeep(_defaults, value || {});
    },
    config: function config(value) {
      return _mergeDeep(_config, value || {});
    },
    registerEffect: function registerEffect(_ref) {
      var name = _ref.name,
          effect = _ref.effect,
          plugins = _ref.plugins,
          defaults = _ref.defaults,
          extendTimeline = _ref.extendTimeline;
      (plugins || "").split(",").forEach(function (pluginName) {
        return pluginName && !_plugins[pluginName] && !_globals[pluginName] && _warn(name + " effect requires " + pluginName + " plugin.");
      });

      _effects[name] = function (targets, vars, tl) {
        return effect(toArray(targets), _setDefaults(vars || {}, defaults), tl);
      };

      if (extendTimeline) {
        Timeline.prototype[name] = function (targets, vars, position) {
          return this.add(_effects[name](targets, _isObject(vars) ? vars : (position = vars) && {}, this), position);
        };
      }
    },
    registerEase: function registerEase(name, ease) {
      _easeMap[name] = _parseEase(ease);
    },
    parseEase: function parseEase(ease, defaultEase) {
      return arguments.length ? _parseEase(ease, defaultEase) : _easeMap;
    },
    getById: function getById(id) {
      return _globalTimeline.getById(id);
    },
    exportRoot: function exportRoot(vars, includeDelayedCalls) {
      if (vars === void 0) {
        vars = {};
      }

      var tl = new Timeline(vars),
          child,
          next;
      tl.smoothChildTiming = _isNotFalse(vars.smoothChildTiming);

      _globalTimeline.remove(tl);

      tl._dp = 0;
      tl._time = tl._tTime = _globalTimeline._time;
      child = _globalTimeline._first;

      while (child) {
        next = child._next;

        if (includeDelayedCalls || !(!child._dur && child instanceof Tween && child.vars.onComplete === child._targets[0])) {
          _addToTimeline(tl, child, child._start - child._delay);
        }

        child = next;
      }

      _addToTimeline(_globalTimeline, tl, 0);

      return tl;
    },
    utils: {
      wrap: wrap,
      wrapYoyo: wrapYoyo,
      distribute: distribute,
      random: random,
      snap: snap,
      normalize: normalize,
      getUnit: getUnit,
      clamp: clamp,
      splitColor: splitColor,
      toArray: toArray,
      mapRange: mapRange,
      pipe: pipe,
      unitize: unitize,
      interpolate: interpolate,
      shuffle: shuffle
    },
    install: _install,
    effects: _effects,
    ticker: _ticker,
    updateRoot: Timeline.updateRoot,
    plugins: _plugins,
    globalTimeline: _globalTimeline,
    core: {
      PropTween: PropTween,
      globals: _addGlobal,
      Tween: Tween,
      Timeline: Timeline,
      Animation: Animation,
      getCache: _getCache,
      _removeLinkedListItem: _removeLinkedListItem
    }
  };

  _forEachName("to,from,fromTo,delayedCall,set,killTweensOf", function (name) {
    return _gsap[name] = Tween[name];
  });

  _ticker.add(Timeline.updateRoot);

  _quickTween = _gsap.to({}, {
    duration: 0
  });

  var _getPluginPropTween = function _getPluginPropTween(plugin, prop) {
    var pt = plugin._pt;

    while (pt && pt.p !== prop && pt.op !== prop && pt.fp !== prop) {
      pt = pt._next;
    }

    return pt;
  },
      _addModifiers = function _addModifiers(tween, modifiers) {
    var targets = tween._targets,
        p,
        i,
        pt;

    for (p in modifiers) {
      i = targets.length;

      while (i--) {
        pt = tween._ptLookup[i][p];

        if (pt && (pt = pt.d)) {
          if (pt._pt) {
            pt = _getPluginPropTween(pt, p);
          }

          pt && pt.modifier && pt.modifier(modifiers[p], tween, targets[i], p);
        }
      }
    }
  },
      _buildModifierPlugin = function _buildModifierPlugin(name, modifier) {
    return {
      name: name,
      rawVars: 1,
      init: function init(target, vars, tween) {
        tween._onInit = function (tween) {
          var temp, p;

          if (_isString(vars)) {
            temp = {};

            _forEachName(vars, function (name) {
              return temp[name] = 1;
            });

            vars = temp;
          }

          if (modifier) {
            temp = {};

            for (p in vars) {
              temp[p] = modifier(vars[p]);
            }

            vars = temp;
          }

          _addModifiers(tween, vars);
        };
      }
    };
  };

  var gsap = _gsap.registerPlugin({
    name: "attr",
    init: function init(target, vars, tween, index, targets) {
      for (var p in vars) {
        this.add(target, "setAttribute", (target.getAttribute(p) || 0) + "", vars[p], index, targets, 0, 0, p);

        this._props.push(p);
      }
    }
  }, {
    name: "endArray",
    init: function init(target, value) {
      var i = value.length;

      while (i--) {
        this.add(target, i, target[i] || 0, value[i]);
      }
    }
  }, _buildModifierPlugin("roundProps", _roundModifier), _buildModifierPlugin("modifiers"), _buildModifierPlugin("snap", snap)) || _gsap;
  Tween.version = Timeline.version = gsap.version = "3.2.6";
  _coreReady = 1;

  if (_windowExists()) {
    _wake();
  }

  var Power0 = _easeMap.Power0,
      Power1 = _easeMap.Power1,
      Power2 = _easeMap.Power2,
      Power3 = _easeMap.Power3,
      Power4 = _easeMap.Power4,
      Linear = _easeMap.Linear,
      Quad = _easeMap.Quad,
      Cubic = _easeMap.Cubic,
      Quart = _easeMap.Quart,
      Quint = _easeMap.Quint,
      Strong = _easeMap.Strong,
      Elastic = _easeMap.Elastic,
      Back = _easeMap.Back,
      SteppedEase = _easeMap.SteppedEase,
      Bounce = _easeMap.Bounce,
      Sine = _easeMap.Sine,
      Expo = _easeMap.Expo,
      Circ = _easeMap.Circ;

  var _win$1,
      _doc$1,
      _docElement,
      _pluginInitted,
      _tempDiv,
      _tempDivStyler,
      _recentSetterPlugin,
      _windowExists$1 = function _windowExists() {
    return typeof window !== "undefined";
  },
      _transformProps = {},
      _RAD2DEG = 180 / Math.PI,
      _DEG2RAD = Math.PI / 180,
      _atan2 = Math.atan2,
      _bigNum$1 = 1e8,
      _capsExp = /([A-Z])/g,
      _horizontalExp = /(?:left|right|width|margin|padding|x)/i,
      _complexExp = /[\s,\(]\S/,
      _propertyAliases = {
    autoAlpha: "opacity,visibility",
    scale: "scaleX,scaleY",
    alpha: "opacity"
  },
      _renderCSSProp = function _renderCSSProp(ratio, data) {
    return data.set(data.t, data.p, Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
  },
      _renderPropWithEnd = function _renderPropWithEnd(ratio, data) {
    return data.set(data.t, data.p, ratio === 1 ? data.e : Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u, data);
  },
      _renderCSSPropWithBeginning = function _renderCSSPropWithBeginning(ratio, data) {
    return data.set(data.t, data.p, ratio ? Math.round((data.s + data.c * ratio) * 10000) / 10000 + data.u : data.b, data);
  },
      _renderRoundedCSSProp = function _renderRoundedCSSProp(ratio, data) {
    var value = data.s + data.c * ratio;
    data.set(data.t, data.p, ~~(value + (value < 0 ? -.5 : .5)) + data.u, data);
  },
      _renderNonTweeningValue = function _renderNonTweeningValue(ratio, data) {
    return data.set(data.t, data.p, ratio ? data.e : data.b, data);
  },
      _renderNonTweeningValueOnlyAtEnd = function _renderNonTweeningValueOnlyAtEnd(ratio, data) {
    return data.set(data.t, data.p, ratio !== 1 ? data.b : data.e, data);
  },
      _setterCSSStyle = function _setterCSSStyle(target, property, value) {
    return target.style[property] = value;
  },
      _setterCSSProp = function _setterCSSProp(target, property, value) {
    return target.style.setProperty(property, value);
  },
      _setterTransform = function _setterTransform(target, property, value) {
    return target._gsap[property] = value;
  },
      _setterScale = function _setterScale(target, property, value) {
    return target._gsap.scaleX = target._gsap.scaleY = value;
  },
      _setterScaleWithRender = function _setterScaleWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache.scaleX = cache.scaleY = value;
    cache.renderTransform(ratio, cache);
  },
      _setterTransformWithRender = function _setterTransformWithRender(target, property, value, data, ratio) {
    var cache = target._gsap;
    cache[property] = value;
    cache.renderTransform(ratio, cache);
  },
      _transformProp = "transform",
      _transformOriginProp = _transformProp + "Origin",
      _supports3D,
      _createElement = function _createElement(type, ns) {
    var e = _doc$1.createElementNS ? _doc$1.createElementNS((ns || "http://www.w3.org/1999/xhtml").replace(/^https/, "http"), type) : _doc$1.createElement(type);
    return e.style ? e : _doc$1.createElement(type);
  },
      _getComputedProperty = function _getComputedProperty(target, property, skipPrefixFallback) {
    var cs = getComputedStyle(target);
    return cs[property] || cs.getPropertyValue(property.replace(_capsExp, "-$1").toLowerCase()) || cs.getPropertyValue(property) || !skipPrefixFallback && _getComputedProperty(target, _checkPropPrefix(property) || property, 1) || "";
  },
      _prefixes = "O,Moz,ms,Ms,Webkit".split(","),
      _checkPropPrefix = function _checkPropPrefix(property, element, preferPrefix) {
    var e = element || _tempDiv,
        s = e.style,
        i = 5;

    if (property in s && !preferPrefix) {
      return property;
    }

    property = property.charAt(0).toUpperCase() + property.substr(1);

    while (i-- && !(_prefixes[i] + property in s)) {}

    return i < 0 ? null : (i === 3 ? "ms" : i >= 0 ? _prefixes[i] : "") + property;
  },
      _initCore = function _initCore() {
    if (_windowExists$1()) {
      _win$1 = window;
      _doc$1 = _win$1.document;
      _docElement = _doc$1.documentElement;
      _tempDiv = _createElement("div") || {
        style: {}
      };
      _tempDivStyler = _createElement("div");
      _transformProp = _checkPropPrefix(_transformProp);
      _transformOriginProp = _checkPropPrefix(_transformOriginProp);
      _tempDiv.style.cssText = "border-width:0;line-height:0;position:absolute;padding:0";
      _supports3D = !!_checkPropPrefix("perspective");
      _pluginInitted = 1;
    }
  },
      _getBBoxHack = function _getBBoxHack(swapIfPossible) {
    var svg = _createElement("svg", this.ownerSVGElement && this.ownerSVGElement.getAttribute("xmlns") || "http://www.w3.org/2000/svg"),
        oldParent = this.parentNode,
        oldSibling = this.nextSibling,
        oldCSS = this.style.cssText,
        bbox;

    _docElement.appendChild(svg);

    svg.appendChild(this);
    this.style.display = "block";

    if (swapIfPossible) {
      try {
        bbox = this.getBBox();
        this._gsapBBox = this.getBBox;
        this.getBBox = _getBBoxHack;
      } catch (e) {}
    } else if (this._gsapBBox) {
      bbox = this._gsapBBox();
    }

    if (oldParent) {
      if (oldSibling) {
        oldParent.insertBefore(this, oldSibling);
      } else {
        oldParent.appendChild(this);
      }
    }

    _docElement.removeChild(svg);

    this.style.cssText = oldCSS;
    return bbox;
  },
      _getAttributeFallbacks = function _getAttributeFallbacks(target, attributesArray) {
    var i = attributesArray.length;

    while (i--) {
      if (target.hasAttribute(attributesArray[i])) {
        return target.getAttribute(attributesArray[i]);
      }
    }
  },
      _getBBox = function _getBBox(target) {
    var bounds;

    try {
      bounds = target.getBBox();
    } catch (error) {
      bounds = _getBBoxHack.call(target, true);
    }

    bounds && (bounds.width || bounds.height) || target.getBBox === _getBBoxHack || (bounds = _getBBoxHack.call(target, true));
    return bounds && !bounds.width && !bounds.x && !bounds.y ? {
      x: +_getAttributeFallbacks(target, ["x", "cx", "x1"]) || 0,
      y: +_getAttributeFallbacks(target, ["y", "cy", "y1"]) || 0,
      width: 0,
      height: 0
    } : bounds;
  },
      _isSVG = function _isSVG(e) {
    return !!(e.getCTM && (!e.parentNode || e.ownerSVGElement) && _getBBox(e));
  },
      _removeProperty = function _removeProperty(target, property) {
    if (property) {
      var style = target.style;

      if (property in _transformProps) {
        property = _transformProp;
      }

      if (style.removeProperty) {
        if (property.substr(0, 2) === "ms" || property.substr(0, 6) === "webkit") {
          property = "-" + property;
        }

        style.removeProperty(property.replace(_capsExp, "-$1").toLowerCase());
      } else {
        style.removeAttribute(property);
      }
    }
  },
      _addNonTweeningPT = function _addNonTweeningPT(plugin, target, property, beginning, end, onlySetAtEnd) {
    var pt = new PropTween(plugin._pt, target, property, 0, 1, onlySetAtEnd ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue);
    plugin._pt = pt;
    pt.b = beginning;
    pt.e = end;

    plugin._props.push(property);

    return pt;
  },
      _nonConvertibleUnits = {
    deg: 1,
    rad: 1,
    turn: 1
  },
      _convertToUnit = function _convertToUnit(target, property, value, unit) {
    var curValue = parseFloat(value) || 0,
        curUnit = (value + "").trim().substr((curValue + "").length) || "px",
        style = _tempDiv.style,
        horizontal = _horizontalExp.test(property),
        isRootSVG = target.tagName.toLowerCase() === "svg",
        measureProperty = (isRootSVG ? "client" : "offset") + (horizontal ? "Width" : "Height"),
        amount = 100,
        toPixels = unit === "px",
        toPercent = unit === "%",
        px,
        parent,
        cache,
        isSVG;

    if (unit === curUnit || !curValue || _nonConvertibleUnits[unit] || _nonConvertibleUnits[curUnit]) {
      return curValue;
    }

    curUnit !== "px" && !toPixels && (curValue = _convertToUnit(target, property, value, "px"));
    isSVG = target.getCTM && _isSVG(target);

    if (toPercent && (_transformProps[property] || ~property.indexOf("adius"))) {
      return _round(curValue / (isSVG ? target.getBBox()[horizontal ? "width" : "height"] : target[measureProperty]) * amount);
    }

    style[horizontal ? "width" : "height"] = amount + (toPixels ? curUnit : unit);
    parent = ~property.indexOf("adius") || unit === "em" && target.appendChild && !isRootSVG ? target : target.parentNode;

    if (isSVG) {
      parent = (target.ownerSVGElement || {}).parentNode;
    }

    if (!parent || parent === _doc$1 || !parent.appendChild) {
      parent = _doc$1.body;
    }

    cache = parent._gsap;

    if (cache && toPercent && cache.width && horizontal && cache.time === _ticker.time) {
      return _round(curValue / cache.width * amount);
    } else {
      (toPercent || curUnit === "%") && (style.position = _getComputedProperty(target, "position"));
      parent === target && (style.position = "static");
      parent.appendChild(_tempDiv);
      px = _tempDiv[measureProperty];
      parent.removeChild(_tempDiv);
      style.position = "absolute";

      if (horizontal && toPercent) {
        cache = _getCache(parent);
        cache.time = _ticker.time;
        cache.width = parent[measureProperty];
      }
    }

    return _round(toPixels ? px * curValue / amount : px && curValue ? amount / px * curValue : 0);
  },
      _get = function _get(target, property, unit, uncache) {
    var value;

    if (!_pluginInitted) {
      _initCore();
    }

    if (property in _propertyAliases && property !== "transform") {
      property = _propertyAliases[property];

      if (~property.indexOf(",")) {
        property = property.split(",")[0];
      }
    }

    if (_transformProps[property] && property !== "transform") {
      value = _parseTransform(target, uncache);
      value = property !== "transformOrigin" ? value[property] : _firstTwoOnly(_getComputedProperty(target, _transformOriginProp)) + " " + value.zOrigin + "px";
    } else {
      value = target.style[property];

      if (!value || value === "auto" || uncache || ~(value + "").indexOf("calc(")) {
        value = _specialProps[property] && _specialProps[property](target, property, unit) || _getComputedProperty(target, property) || _getProperty(target, property) || (property === "opacity" ? 1 : 0);
      }
    }

    return unit && !~(value + "").indexOf(" ") ? _convertToUnit(target, property, value, unit) + unit : value;
  },
      _tweenComplexCSSString = function _tweenComplexCSSString(target, prop, start, end) {
    if (!start || start === "none") {
      var p = _checkPropPrefix(prop, target, 1),
          s = p && _getComputedProperty(target, p, 1);

      if (s && s !== start) {
        prop = p;
        start = s;
      }
    }

    var pt = new PropTween(this._pt, target.style, prop, 0, 1, _renderComplexString),
        index = 0,
        matchIndex = 0,
        a,
        result,
        startValues,
        startNum,
        color,
        startValue,
        endValue,
        endNum,
        chunk,
        endUnit,
        startUnit,
        relative,
        endValues;
    pt.b = start;
    pt.e = end;
    start += "";
    end += "";

    if (end === "auto") {
      target.style[prop] = end;
      end = _getComputedProperty(target, prop) || end;
      target.style[prop] = start;
    }

    a = [start, end];

    _colorStringFilter(a);

    start = a[0];
    end = a[1];
    startValues = start.match(_numWithUnitExp) || [];
    endValues = end.match(_numWithUnitExp) || [];

    if (endValues.length) {
      while (result = _numWithUnitExp.exec(end)) {
        endValue = result[0];
        chunk = end.substring(index, result.index);

        if (color) {
          color = (color + 1) % 5;
        } else if (chunk.substr(-5) === "rgba(" || chunk.substr(-5) === "hsla(") {
          color = 1;
        }

        if (endValue !== (startValue = startValues[matchIndex++] || "")) {
          startNum = parseFloat(startValue) || 0;
          startUnit = startValue.substr((startNum + "").length);
          relative = endValue.charAt(1) === "=" ? +(endValue.charAt(0) + "1") : 0;

          if (relative) {
            endValue = endValue.substr(2);
          }

          endNum = parseFloat(endValue);
          endUnit = endValue.substr((endNum + "").length);
          index = _numWithUnitExp.lastIndex - endUnit.length;

          if (!endUnit) {
            endUnit = endUnit || _config.units[prop] || startUnit;

            if (index === end.length) {
              end += endUnit;
              pt.e += endUnit;
            }
          }

          if (startUnit !== endUnit) {
            startNum = _convertToUnit(target, prop, startValue, endUnit) || 0;
          }

          pt._pt = {
            _next: pt._pt,
            p: chunk || matchIndex === 1 ? chunk : ",",
            s: startNum,
            c: relative ? relative * endNum : endNum - startNum,
            m: color && color < 4 ? Math.round : 0
          };
        }
      }

      pt.c = index < end.length ? end.substring(index, end.length) : "";
    } else {
      pt.r = prop === "display" && end === "none" ? _renderNonTweeningValueOnlyAtEnd : _renderNonTweeningValue;
    }

    if (_relExp.test(end)) {
      pt.e = 0;
    }

    this._pt = pt;
    return pt;
  },
      _keywordToPercent = {
    top: "0%",
    bottom: "100%",
    left: "0%",
    right: "100%",
    center: "50%"
  },
      _convertKeywordsToPercentages = function _convertKeywordsToPercentages(value) {
    var split = value.split(" "),
        x = split[0],
        y = split[1] || "50%";

    if (x === "top" || x === "bottom" || y === "left" || y === "right") {
      value = x;
      x = y;
      y = value;
    }

    split[0] = _keywordToPercent[x] || x;
    split[1] = _keywordToPercent[y] || y;
    return split.join(" ");
  },
      _renderClearProps = function _renderClearProps(ratio, data) {
    if (data.tween && data.tween._time === data.tween._dur) {
      var target = data.t,
          style = target.style,
          props = data.u,
          cache = target._gsap,
          prop,
          clearTransforms,
          i;

      if (props === "all" || props === true) {
        style.cssText = "";
        clearTransforms = 1;
      } else {
        props = props.split(",");
        i = props.length;

        while (--i > -1) {
          prop = props[i];

          if (_transformProps[prop]) {
            clearTransforms = 1;
            prop = prop === "transformOrigin" ? _transformOriginProp : _transformProp;
          }

          _removeProperty(target, prop);
        }
      }

      if (clearTransforms) {
        _removeProperty(target, _transformProp);

        if (cache) {
          cache.svg && target.removeAttribute("transform");

          _parseTransform(target, 1);

          cache.uncache = 1;
        }
      }
    }
  },
      _specialProps = {
    clearProps: function clearProps(plugin, target, property, endValue, tween) {
      if (tween.data !== "isFromStart") {
        var pt = plugin._pt = new PropTween(plugin._pt, target, property, 0, 0, _renderClearProps);
        pt.u = endValue;
        pt.pr = -10;
        pt.tween = tween;

        plugin._props.push(property);

        return 1;
      }
    }
  },
      _identity2DMatrix = [1, 0, 0, 1, 0, 0],
      _rotationalProperties = {},
      _isNullTransform = function _isNullTransform(value) {
    return value === "matrix(1, 0, 0, 1, 0, 0)" || value === "none" || !value;
  },
      _getComputedTransformMatrixAsArray = function _getComputedTransformMatrixAsArray(target) {
    var matrixString = _getComputedProperty(target, _transformProp);

    return _isNullTransform(matrixString) ? _identity2DMatrix : matrixString.substr(7).match(_numExp).map(_round);
  },
      _getMatrix = function _getMatrix(target, force2D) {
    var cache = target._gsap || _getCache(target),
        style = target.style,
        matrix = _getComputedTransformMatrixAsArray(target),
        parent,
        nextSibling,
        temp,
        addedToDOM;

    if (cache.svg && target.getAttribute("transform")) {
      temp = target.transform.baseVal.consolidate().matrix;
      matrix = [temp.a, temp.b, temp.c, temp.d, temp.e, temp.f];
      return matrix.join(",") === "1,0,0,1,0,0" ? _identity2DMatrix : matrix;
    } else if (matrix === _identity2DMatrix && !target.offsetParent && target !== _docElement && !cache.svg) {
      temp = style.display;
      style.display = "block";
      parent = target.parentNode;

      if (!parent || !target.offsetParent) {
        addedToDOM = 1;
        nextSibling = target.nextSibling;

        _docElement.appendChild(target);
      }

      matrix = _getComputedTransformMatrixAsArray(target);

      if (temp) {
        style.display = temp;
      } else {
        _removeProperty(target, "display");
      }

      if (addedToDOM) {
        if (nextSibling) {
          parent.insertBefore(target, nextSibling);
        } else if (parent) {
          parent.appendChild(target);
        } else {
          _docElement.removeChild(target);
        }
      }
    }

    return force2D && matrix.length > 6 ? [matrix[0], matrix[1], matrix[4], matrix[5], matrix[12], matrix[13]] : matrix;
  },
      _applySVGOrigin = function _applySVGOrigin(target, origin, originIsAbsolute, smooth, matrixArray, pluginToAddPropTweensTo) {
    var cache = target._gsap,
        matrix = matrixArray || _getMatrix(target, true),
        xOriginOld = cache.xOrigin || 0,
        yOriginOld = cache.yOrigin || 0,
        xOffsetOld = cache.xOffset || 0,
        yOffsetOld = cache.yOffset || 0,
        a = matrix[0],
        b = matrix[1],
        c = matrix[2],
        d = matrix[3],
        tx = matrix[4],
        ty = matrix[5],
        originSplit = origin.split(" "),
        xOrigin = parseFloat(originSplit[0]) || 0,
        yOrigin = parseFloat(originSplit[1]) || 0,
        bounds,
        determinant,
        x,
        y;

    if (!originIsAbsolute) {
      bounds = _getBBox(target);
      xOrigin = bounds.x + (~originSplit[0].indexOf("%") ? xOrigin / 100 * bounds.width : xOrigin);
      yOrigin = bounds.y + (~(originSplit[1] || originSplit[0]).indexOf("%") ? yOrigin / 100 * bounds.height : yOrigin);
    } else if (matrix !== _identity2DMatrix && (determinant = a * d - b * c)) {
      x = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + (c * ty - d * tx) / determinant;
      y = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - (a * ty - b * tx) / determinant;
      xOrigin = x;
      yOrigin = y;
    }

    if (smooth || smooth !== false && cache.smooth) {
      tx = xOrigin - xOriginOld;
      ty = yOrigin - yOriginOld;
      cache.xOffset = xOffsetOld + (tx * a + ty * c) - tx;
      cache.yOffset = yOffsetOld + (tx * b + ty * d) - ty;
    } else {
      cache.xOffset = cache.yOffset = 0;
    }

    cache.xOrigin = xOrigin;
    cache.yOrigin = yOrigin;
    cache.smooth = !!smooth;
    cache.origin = origin;
    cache.originIsAbsolute = !!originIsAbsolute;
    target.style[_transformOriginProp] = "0px 0px";

    if (pluginToAddPropTweensTo) {
      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOrigin", xOriginOld, xOrigin);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOrigin", yOriginOld, yOrigin);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "xOffset", xOffsetOld, cache.xOffset);

      _addNonTweeningPT(pluginToAddPropTweensTo, cache, "yOffset", yOffsetOld, cache.yOffset);
    }

    target.setAttribute("data-svg-origin", xOrigin + " " + yOrigin);
  },
      _parseTransform = function _parseTransform(target, uncache) {
    var cache = target._gsap || new GSCache(target);

    if ("x" in cache && !uncache && !cache.uncache) {
      return cache;
    }

    var style = target.style,
        invertedScaleX = cache.scaleX < 0,
        px = "px",
        deg = "deg",
        origin = _getComputedProperty(target, _transformOriginProp) || "0",
        x,
        y,
        z,
        scaleX,
        scaleY,
        rotation,
        rotationX,
        rotationY,
        skewX,
        skewY,
        perspective,
        xOrigin,
        yOrigin,
        matrix,
        angle,
        cos,
        sin,
        a,
        b,
        c,
        d,
        a12,
        a22,
        t1,
        t2,
        t3,
        a13,
        a23,
        a33,
        a42,
        a43,
        a32;
    x = y = z = rotation = rotationX = rotationY = skewX = skewY = perspective = 0;
    scaleX = scaleY = 1;
    cache.svg = !!(target.getCTM && _isSVG(target));
    matrix = _getMatrix(target, cache.svg);

    if (cache.svg) {
      t1 = !cache.uncache && target.getAttribute("data-svg-origin");

      _applySVGOrigin(target, t1 || origin, !!t1 || cache.originIsAbsolute, cache.smooth !== false, matrix);
    }

    xOrigin = cache.xOrigin || 0;
    yOrigin = cache.yOrigin || 0;

    if (matrix !== _identity2DMatrix) {
      a = matrix[0];
      b = matrix[1];
      c = matrix[2];
      d = matrix[3];
      x = a12 = matrix[4];
      y = a22 = matrix[5];

      if (matrix.length === 6) {
        scaleX = Math.sqrt(a * a + b * b);
        scaleY = Math.sqrt(d * d + c * c);
        rotation = a || b ? _atan2(b, a) * _RAD2DEG : 0;
        skewX = c || d ? _atan2(c, d) * _RAD2DEG + rotation : 0;
        skewX && (scaleY *= Math.cos(skewX * _DEG2RAD));

        if (cache.svg) {
          x -= xOrigin - (xOrigin * a + yOrigin * c);
          y -= yOrigin - (xOrigin * b + yOrigin * d);
        }
      } else {
        a32 = matrix[6];
        a42 = matrix[7];
        a13 = matrix[8];
        a23 = matrix[9];
        a33 = matrix[10];
        a43 = matrix[11];
        x = matrix[12];
        y = matrix[13];
        z = matrix[14];
        angle = _atan2(a32, a33);
        rotationX = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a12 * cos + a13 * sin;
          t2 = a22 * cos + a23 * sin;
          t3 = a32 * cos + a33 * sin;
          a13 = a12 * -sin + a13 * cos;
          a23 = a22 * -sin + a23 * cos;
          a33 = a32 * -sin + a33 * cos;
          a43 = a42 * -sin + a43 * cos;
          a12 = t1;
          a22 = t2;
          a32 = t3;
        }

        angle = _atan2(-c, a33);
        rotationY = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(-angle);
          sin = Math.sin(-angle);
          t1 = a * cos - a13 * sin;
          t2 = b * cos - a23 * sin;
          t3 = c * cos - a33 * sin;
          a43 = d * sin + a43 * cos;
          a = t1;
          b = t2;
          c = t3;
        }

        angle = _atan2(b, a);
        rotation = angle * _RAD2DEG;

        if (angle) {
          cos = Math.cos(angle);
          sin = Math.sin(angle);
          t1 = a * cos + b * sin;
          t2 = a12 * cos + a22 * sin;
          b = b * cos - a * sin;
          a22 = a22 * cos - a12 * sin;
          a = t1;
          a12 = t2;
        }

        if (rotationX && Math.abs(rotationX) + Math.abs(rotation) > 359.9) {
          rotationX = rotation = 0;
          rotationY = 180 - rotationY;
        }

        scaleX = _round(Math.sqrt(a * a + b * b + c * c));
        scaleY = _round(Math.sqrt(a22 * a22 + a32 * a32));
        angle = _atan2(a12, a22);
        skewX = Math.abs(angle) > 0.0002 ? angle * _RAD2DEG : 0;
        perspective = a43 ? 1 / (a43 < 0 ? -a43 : a43) : 0;
      }

      if (cache.svg) {
        matrix = target.getAttribute("transform");
        cache.forceCSS = target.setAttribute("transform", "") || !_isNullTransform(_getComputedProperty(target, _transformProp));
        matrix && target.setAttribute("transform", matrix);
      }
    }

    if (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {
      if (invertedScaleX) {
        scaleX *= -1;
        skewX += rotation <= 0 ? 180 : -180;
        rotation += rotation <= 0 ? 180 : -180;
      } else {
        scaleY *= -1;
        skewX += skewX <= 0 ? 180 : -180;
      }
    }

    cache.x = ((cache.xPercent = x && Math.round(target.offsetWidth / 2) === Math.round(-x) ? -50 : 0) ? 0 : x) + px;
    cache.y = ((cache.yPercent = y && Math.round(target.offsetHeight / 2) === Math.round(-y) ? -50 : 0) ? 0 : y) + px;
    cache.z = z + px;
    cache.scaleX = _round(scaleX);
    cache.scaleY = _round(scaleY);
    cache.rotation = _round(rotation) + deg;
    cache.rotationX = _round(rotationX) + deg;
    cache.rotationY = _round(rotationY) + deg;
    cache.skewX = skewX + deg;
    cache.skewY = skewY + deg;
    cache.transformPerspective = perspective + px;

    if (cache.zOrigin = parseFloat(origin.split(" ")[2]) || 0) {
      style[_transformOriginProp] = _firstTwoOnly(origin);
    }

    cache.xOffset = cache.yOffset = 0;
    cache.force3D = _config.force3D;
    cache.renderTransform = cache.svg ? _renderSVGTransforms : _supports3D ? _renderCSSTransforms : _renderNon3DTransforms;
    cache.uncache = 0;
    return cache;
  },
      _firstTwoOnly = function _firstTwoOnly(value) {
    return (value = value.split(" "))[0] + " " + value[1];
  },
      _addPxTranslate = function _addPxTranslate(target, start, value) {
    var unit = getUnit(start);
    return _round(parseFloat(start) + parseFloat(_convertToUnit(target, "x", value + "px", unit))) + unit;
  },
      _renderNon3DTransforms = function _renderNon3DTransforms(ratio, cache) {
    cache.z = "0px";
    cache.rotationY = cache.rotationX = "0deg";
    cache.force3D = 0;

    _renderCSSTransforms(ratio, cache);
  },
      _zeroDeg = "0deg",
      _zeroPx = "0px",
      _endParenthesis = ") ",
      _renderCSSTransforms = function _renderCSSTransforms(ratio, cache) {
    var _ref = cache || this,
        xPercent = _ref.xPercent,
        yPercent = _ref.yPercent,
        x = _ref.x,
        y = _ref.y,
        z = _ref.z,
        rotation = _ref.rotation,
        rotationY = _ref.rotationY,
        rotationX = _ref.rotationX,
        skewX = _ref.skewX,
        skewY = _ref.skewY,
        scaleX = _ref.scaleX,
        scaleY = _ref.scaleY,
        transformPerspective = _ref.transformPerspective,
        force3D = _ref.force3D,
        target = _ref.target,
        zOrigin = _ref.zOrigin,
        transforms = "",
        use3D = force3D === "auto" && ratio && ratio !== 1 || force3D === true;

    if (zOrigin && (rotationX !== _zeroDeg || rotationY !== _zeroDeg)) {
      var angle = parseFloat(rotationY) * _DEG2RAD,
          a13 = Math.sin(angle),
          a33 = Math.cos(angle),
          cos;

      angle = parseFloat(rotationX) * _DEG2RAD;
      cos = Math.cos(angle);
      x = _addPxTranslate(target, x, a13 * cos * -zOrigin);
      y = _addPxTranslate(target, y, -Math.sin(angle) * -zOrigin);
      z = _addPxTranslate(target, z, a33 * cos * -zOrigin + zOrigin);
    }

    if (transformPerspective !== _zeroPx) {
      transforms += "perspective(" + transformPerspective + _endParenthesis;
    }

    if (xPercent || yPercent) {
      transforms += "translate(" + xPercent + "%, " + yPercent + "%) ";
    }

    if (use3D || x !== _zeroPx || y !== _zeroPx || z !== _zeroPx) {
      transforms += z !== _zeroPx || use3D ? "translate3d(" + x + ", " + y + ", " + z + ") " : "translate(" + x + ", " + y + _endParenthesis;
    }

    if (rotation !== _zeroDeg) {
      transforms += "rotate(" + rotation + _endParenthesis;
    }

    if (rotationY !== _zeroDeg) {
      transforms += "rotateY(" + rotationY + _endParenthesis;
    }

    if (rotationX !== _zeroDeg) {
      transforms += "rotateX(" + rotationX + _endParenthesis;
    }

    if (skewX !== _zeroDeg || skewY !== _zeroDeg) {
      transforms += "skew(" + skewX + ", " + skewY + _endParenthesis;
    }

    if (scaleX !== 1 || scaleY !== 1) {
      transforms += "scale(" + scaleX + ", " + scaleY + _endParenthesis;
    }

    target.style[_transformProp] = transforms || "translate(0, 0)";
  },
      _renderSVGTransforms = function _renderSVGTransforms(ratio, cache) {
    var _ref2 = cache || this,
        xPercent = _ref2.xPercent,
        yPercent = _ref2.yPercent,
        x = _ref2.x,
        y = _ref2.y,
        rotation = _ref2.rotation,
        skewX = _ref2.skewX,
        skewY = _ref2.skewY,
        scaleX = _ref2.scaleX,
        scaleY = _ref2.scaleY,
        target = _ref2.target,
        xOrigin = _ref2.xOrigin,
        yOrigin = _ref2.yOrigin,
        xOffset = _ref2.xOffset,
        yOffset = _ref2.yOffset,
        forceCSS = _ref2.forceCSS,
        tx = parseFloat(x),
        ty = parseFloat(y),
        a11,
        a21,
        a12,
        a22,
        temp;

    rotation = parseFloat(rotation);
    skewX = parseFloat(skewX);
    skewY = parseFloat(skewY);

    if (skewY) {
      skewY = parseFloat(skewY);
      skewX += skewY;
      rotation += skewY;
    }

    if (rotation || skewX) {
      rotation *= _DEG2RAD;
      skewX *= _DEG2RAD;
      a11 = Math.cos(rotation) * scaleX;
      a21 = Math.sin(rotation) * scaleX;
      a12 = Math.sin(rotation - skewX) * -scaleY;
      a22 = Math.cos(rotation - skewX) * scaleY;

      if (skewX) {
        skewY *= _DEG2RAD;
        temp = Math.tan(skewX - skewY);
        temp = Math.sqrt(1 + temp * temp);
        a12 *= temp;
        a22 *= temp;

        if (skewY) {
          temp = Math.tan(skewY);
          temp = Math.sqrt(1 + temp * temp);
          a11 *= temp;
          a21 *= temp;
        }
      }

      a11 = _round(a11);
      a21 = _round(a21);
      a12 = _round(a12);
      a22 = _round(a22);
    } else {
      a11 = scaleX;
      a22 = scaleY;
      a21 = a12 = 0;
    }

    if (tx && !~(x + "").indexOf("px") || ty && !~(y + "").indexOf("px")) {
      tx = _convertToUnit(target, "x", x, "px");
      ty = _convertToUnit(target, "y", y, "px");
    }

    if (xOrigin || yOrigin || xOffset || yOffset) {
      tx = _round(tx + xOrigin - (xOrigin * a11 + yOrigin * a12) + xOffset);
      ty = _round(ty + yOrigin - (xOrigin * a21 + yOrigin * a22) + yOffset);
    }

    if (xPercent || yPercent) {
      temp = target.getBBox();
      tx = _round(tx + xPercent / 100 * temp.width);
      ty = _round(ty + yPercent / 100 * temp.height);
    }

    temp = "matrix(" + a11 + "," + a21 + "," + a12 + "," + a22 + "," + tx + "," + ty + ")";
    target.setAttribute("transform", temp);

    if (forceCSS) {
      target.style[_transformProp] = temp;
    }
  },
      _addRotationalPropTween = function _addRotationalPropTween(plugin, target, property, startNum, endValue, relative) {
    var cap = 360,
        isString = _isString(endValue),
        endNum = parseFloat(endValue) * (isString && ~endValue.indexOf("rad") ? _RAD2DEG : 1),
        change = relative ? endNum * relative : endNum - startNum,
        finalValue = startNum + change + "deg",
        direction,
        pt;

    if (isString) {
      direction = endValue.split("_")[1];

      if (direction === "short") {
        change %= cap;

        if (change !== change % (cap / 2)) {
          change += change < 0 ? cap : -cap;
        }
      }

      if (direction === "cw" && change < 0) {
        change = (change + cap * _bigNum$1) % cap - ~~(change / cap) * cap;
      } else if (direction === "ccw" && change > 0) {
        change = (change - cap * _bigNum$1) % cap - ~~(change / cap) * cap;
      }
    }

    plugin._pt = pt = new PropTween(plugin._pt, target, property, startNum, change, _renderPropWithEnd);
    pt.e = finalValue;
    pt.u = "deg";

    plugin._props.push(property);

    return pt;
  },
      _addRawTransformPTs = function _addRawTransformPTs(plugin, transforms, target) {
    var style = _tempDivStyler.style,
        startCache = target._gsap,
        exclude = "perspective,force3D,transformOrigin,svgOrigin",
        endCache,
        p,
        startValue,
        endValue,
        startNum,
        endNum,
        startUnit,
        endUnit;
    style.cssText = getComputedStyle(target).cssText + ";position:absolute;display:block;";
    style[_transformProp] = transforms;

    _doc$1.body.appendChild(_tempDivStyler);

    endCache = _parseTransform(_tempDivStyler, 1);

    for (p in _transformProps) {
      startValue = startCache[p];
      endValue = endCache[p];

      if (startValue !== endValue && exclude.indexOf(p) < 0) {
        startUnit = getUnit(startValue);
        endUnit = getUnit(endValue);
        startNum = startUnit !== endUnit ? _convertToUnit(target, p, startValue, endUnit) : parseFloat(startValue);
        endNum = parseFloat(endValue);
        plugin._pt = new PropTween(plugin._pt, startCache, p, startNum, endNum - startNum, _renderCSSProp);
        plugin._pt.u = endUnit || 0;

        plugin._props.push(p);
      }
    }

    _doc$1.body.removeChild(_tempDivStyler);
  };

  _forEachName("padding,margin,Width,Radius", function (name, index) {
    var t = "Top",
        r = "Right",
        b = "Bottom",
        l = "Left",
        props = (index < 3 ? [t, r, b, l] : [t + l, t + r, b + r, b + l]).map(function (side) {
      return index < 2 ? name + side : "border" + side + name;
    });

    _specialProps[index > 1 ? "border" + name : name] = function (plugin, target, property, endValue, tween) {
      var a, vars;

      if (arguments.length < 4) {
        a = props.map(function (prop) {
          return _get(plugin, prop, property);
        });
        vars = a.join(" ");
        return vars.split(a[0]).length === 5 ? a[0] : vars;
      }

      a = (endValue + "").split(" ");
      vars = {};
      props.forEach(function (prop, i) {
        return vars[prop] = a[i] = a[i] || a[(i - 1) / 2 | 0];
      });
      plugin.init(target, vars, tween);
    };
  });

  var CSSPlugin = {
    name: "css",
    register: _initCore,
    targetTest: function targetTest(target) {
      return target.style && target.nodeType;
    },
    init: function init(target, vars, tween, index, targets) {
      var props = this._props,
          style = target.style,
          startValue,
          endValue,
          endNum,
          startNum,
          type,
          specialProp,
          p,
          startUnit,
          endUnit,
          relative,
          isTransformRelated,
          transformPropTween,
          cache,
          smooth,
          hasPriority;

      if (!_pluginInitted) {
        _initCore();
      }

      for (p in vars) {
        if (p === "autoRound") {
          continue;
        }

        endValue = vars[p];

        if (_plugins[p] && _checkPlugin(p, vars, tween, index, target, targets)) {
          continue;
        }

        type = typeof endValue;
        specialProp = _specialProps[p];

        if (type === "function") {
          endValue = endValue.call(tween, index, target, targets);
          type = typeof endValue;
        }

        if (type === "string" && ~endValue.indexOf("random(")) {
          endValue = _replaceRandom(endValue);
        }

        if (specialProp) {
          if (specialProp(this, target, p, endValue, tween)) {
            hasPriority = 1;
          }
        } else if (p.substr(0, 2) === "--") {
          this.add(style, "setProperty", getComputedStyle(target).getPropertyValue(p) + "", endValue + "", index, targets, 0, 0, p);
        } else {
          startValue = _get(target, p);
          startNum = parseFloat(startValue);
          relative = type === "string" && endValue.charAt(1) === "=" ? +(endValue.charAt(0) + "1") : 0;

          if (relative) {
            endValue = endValue.substr(2);
          }

          endNum = parseFloat(endValue);

          if (p in _propertyAliases) {
            if (p === "autoAlpha") {
              if (startNum === 1 && _get(target, "visibility") === "hidden" && endNum) {
                startNum = 0;
              }

              _addNonTweeningPT(this, style, "visibility", startNum ? "inherit" : "hidden", endNum ? "inherit" : "hidden", !endNum);
            }

            if (p !== "scale" && p !== "transform") {
              p = _propertyAliases[p];

              if (~p.indexOf(",")) {
                p = p.split(",")[0];
              }
            }
          }

          isTransformRelated = p in _transformProps;

          if (isTransformRelated) {
            if (!transformPropTween) {
              cache = target._gsap;
              cache.renderTransform || _parseTransform(target);
              smooth = vars.smoothOrigin !== false && cache.smooth;
              transformPropTween = this._pt = new PropTween(this._pt, style, _transformProp, 0, 1, cache.renderTransform, cache, 0, -1);
              transformPropTween.dep = 1;
            }

            if (p === "scale") {
              this._pt = new PropTween(this._pt, cache, "scaleY", cache.scaleY, relative ? relative * endNum : endNum - cache.scaleY);
              props.push("scaleY", p);
              p += "X";
            } else if (p === "transformOrigin") {
              endValue = _convertKeywordsToPercentages(endValue);

              if (cache.svg) {
                _applySVGOrigin(target, endValue, 0, smooth, 0, this);
              } else {
                endUnit = parseFloat(endValue.split(" ")[2]) || 0;

                if (endUnit !== cache.zOrigin) {
                  _addNonTweeningPT(this, cache, "zOrigin", cache.zOrigin, endUnit);
                }

                _addNonTweeningPT(this, style, p, _firstTwoOnly(startValue), _firstTwoOnly(endValue));
              }

              continue;
            } else if (p === "svgOrigin") {
              _applySVGOrigin(target, endValue, 1, smooth, 0, this);

              continue;
            } else if (p in _rotationalProperties) {
              _addRotationalPropTween(this, cache, p, startNum, endValue, relative);

              continue;
            } else if (p === "smoothOrigin") {
              _addNonTweeningPT(this, cache, "smooth", cache.smooth, endValue);

              continue;
            } else if (p === "force3D") {
              cache[p] = endValue;
              continue;
            } else if (p === "transform") {
              _addRawTransformPTs(this, endValue, target);

              continue;
            }
          } else if (!(p in style)) {
            p = _checkPropPrefix(p) || p;
          }

          if (isTransformRelated || (endNum || endNum === 0) && (startNum || startNum === 0) && !_complexExp.test(endValue) && p in style) {
            startUnit = (startValue + "").substr((startNum + "").length);
            endNum || (endNum = 0);
            endUnit = (endValue + "").substr((endNum + "").length) || (p in _config.units ? _config.units[p] : startUnit);

            if (startUnit !== endUnit) {
              startNum = _convertToUnit(target, p, startValue, endUnit);
            }

            this._pt = new PropTween(this._pt, isTransformRelated ? cache : style, p, startNum, relative ? relative * endNum : endNum - startNum, endUnit === "px" && vars.autoRound !== false && !isTransformRelated ? _renderRoundedCSSProp : _renderCSSProp);
            this._pt.u = endUnit || 0;

            if (startUnit !== endUnit) {
              this._pt.b = startValue;
              this._pt.r = _renderCSSPropWithBeginning;
            }
          } else if (!(p in style)) {
            if (p in target) {
              this.add(target, p, target[p], endValue, index, targets);
            } else {
              _missingPlugin(p, endValue);

              continue;
            }
          } else {
            _tweenComplexCSSString.call(this, target, p, startValue, endValue);
          }

          props.push(p);
        }
      }

      if (hasPriority) {
        _sortPropTweensByPriority(this);
      }
    },
    get: _get,
    aliases: _propertyAliases,
    getSetter: function getSetter(target, property, plugin) {
      var p = _propertyAliases[property];
      p && p.indexOf(",") < 0 && (property = p);
      return property in _transformProps && property !== _transformOriginProp && (target._gsap.x || _get(target, "x")) ? plugin && _recentSetterPlugin === plugin ? property === "scale" ? _setterScale : _setterTransform : (_recentSetterPlugin = plugin || {}) && (property === "scale" ? _setterScaleWithRender : _setterTransformWithRender) : target.style && !_isUndefined(target.style[property]) ? _setterCSSStyle : ~property.indexOf("-") ? _setterCSSProp : _getSetter(target, property);
    },
    core: {
      _removeProperty: _removeProperty,
      _getMatrix: _getMatrix
    }
  };
  gsap.utils.checkPrefix = _checkPropPrefix;

  (function (positionAndScale, rotation, others, aliases) {
    var all = _forEachName(positionAndScale + "," + rotation + "," + others, function (name) {
      _transformProps[name] = 1;
    });

    _forEachName(rotation, function (name) {
      _config.units[name] = "deg";
      _rotationalProperties[name] = 1;
    });

    _propertyAliases[all[13]] = positionAndScale + "," + rotation;

    _forEachName(aliases, function (name) {
      var split = name.split(":");
      _propertyAliases[split[1]] = all[split[0]];
    });
  })("x,y,z,scale,scaleX,scaleY,xPercent,yPercent", "rotation,rotationX,rotationY,skewX,skewY", "transform,transformOrigin,svgOrigin,force3D,smoothOrigin,transformPerspective", "0:translateX,1:translateY,2:translateZ,8:rotate,8:rotationZ,8:rotateZ,9:rotateX,10:rotateY");

  _forEachName("x,y,z,top,right,bottom,left,width,height,fontSize,padding,margin,perspective", function (name) {
    _config.units[name] = "px";
  });

  gsap.registerPlugin(CSSPlugin);

  var gsapWithCSS = gsap.registerPlugin(CSSPlugin) || gsap,
      TweenMaxWithCSS = gsapWithCSS.core.Tween;

  exports.Back = Back;
  exports.Bounce = Bounce;
  exports.CSSPlugin = CSSPlugin;
  exports.Circ = Circ;
  exports.Cubic = Cubic;
  exports.Elastic = Elastic;
  exports.Expo = Expo;
  exports.Linear = Linear;
  exports.Power0 = Power0;
  exports.Power1 = Power1;
  exports.Power2 = Power2;
  exports.Power3 = Power3;
  exports.Power4 = Power4;
  exports.Quad = Quad;
  exports.Quart = Quart;
  exports.Quint = Quint;
  exports.Sine = Sine;
  exports.SteppedEase = SteppedEase;
  exports.Strong = Strong;
  exports.TimelineLite = Timeline;
  exports.TimelineMax = Timeline;
  exports.TweenLite = Tween;
  exports.TweenMax = TweenMaxWithCSS;
  exports.default = gsapWithCSS;
  exports.gsap = gsapWithCSS;

  if (typeof(window) === 'undefined' || window !== exports) {Object.defineProperty(exports, '__esModule', { value: true });} else {delete window.default;}

})));

(function (global, factory) {
	typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
	typeof define === 'function' && define.amd ? define(['exports'], factory) :
	(global = global || self, factory(global.THREE = {}));
}(this, (function (exports) { 'use strict';

	// Polyfills

	if ( Number.EPSILON === undefined ) {

		Number.EPSILON = Math.pow( 2, - 52 );

	}

	if ( Number.isInteger === undefined ) {

		// Missing in IE
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger

		Number.isInteger = function ( value ) {

			return typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;

		};

	}

	//

	if ( Math.sign === undefined ) {

		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign

		Math.sign = function ( x ) {

			return ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;

		};

	}

	if ( 'name' in Function.prototype === false ) {

		// Missing in IE
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name

		Object.defineProperty( Function.prototype, 'name', {

			get: function () {

				return this.toString().match( /^\s*function\s*([^\(\s]*)/ )[ 1 ];

			}

		} );

	}

	if ( Object.assign === undefined ) {

		// Missing in IE
		// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign

		Object.assign = function ( target ) {

			if ( target === undefined || target === null ) {

				throw new TypeError( 'Cannot convert undefined or null to object' );

			}

			var output = Object( target );

			for ( var index = 1; index < arguments.length; index ++ ) {

				var source = arguments[ index ];

				if ( source !== undefined && source !== null ) {

					for ( var nextKey in source ) {

						if ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {

							output[ nextKey ] = source[ nextKey ];

						}

					}

				}

			}

			return output;

		};

	}

	var REVISION = '115';
	var MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };
	var TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };
	var CullFaceNone = 0;
	var CullFaceBack = 1;
	var CullFaceFront = 2;
	var CullFaceFrontBack = 3;
	var FrontFaceDirectionCW = 0;
	var FrontFaceDirectionCCW = 1;
	var BasicShadowMap = 0;
	var PCFShadowMap = 1;
	var PCFSoftShadowMap = 2;
	var VSMShadowMap = 3;
	var FrontSide = 0;
	var BackSide = 1;
	var DoubleSide = 2;
	var FlatShading = 1;
	var SmoothShading = 2;
	var NoBlending = 0;
	var NormalBlending = 1;
	var AdditiveBlending = 2;
	var SubtractiveBlending = 3;
	var MultiplyBlending = 4;
	var CustomBlending = 5;
	var AddEquation = 100;
	var SubtractEquation = 101;
	var ReverseSubtractEquation = 102;
	var MinEquation = 103;
	var MaxEquation = 104;
	var ZeroFactor = 200;
	var OneFactor = 201;
	var SrcColorFactor = 202;
	var OneMinusSrcColorFactor = 203;
	var SrcAlphaFactor = 204;
	var OneMinusSrcAlphaFactor = 205;
	var DstAlphaFactor = 206;
	var OneMinusDstAlphaFactor = 207;
	var DstColorFactor = 208;
	var OneMinusDstColorFactor = 209;
	var SrcAlphaSaturateFactor = 210;
	var NeverDepth = 0;
	var AlwaysDepth = 1;
	var LessDepth = 2;
	var LessEqualDepth = 3;
	var EqualDepth = 4;
	var GreaterEqualDepth = 5;
	var GreaterDepth = 6;
	var NotEqualDepth = 7;
	var MultiplyOperation = 0;
	var MixOperation = 1;
	var AddOperation = 2;
	var NoToneMapping = 0;
	var LinearToneMapping = 1;
	var ReinhardToneMapping = 2;
	var Uncharted2ToneMapping = 3;
	var CineonToneMapping = 4;
	var ACESFilmicToneMapping = 5;

	var UVMapping = 300;
	var CubeReflectionMapping = 301;
	var CubeRefractionMapping = 302;
	var EquirectangularReflectionMapping = 303;
	var EquirectangularRefractionMapping = 304;
	var SphericalReflectionMapping = 305;
	var CubeUVReflectionMapping = 306;
	var CubeUVRefractionMapping = 307;
	var RepeatWrapping = 1000;
	var ClampToEdgeWrapping = 1001;
	var MirroredRepeatWrapping = 1002;
	var NearestFilter = 1003;
	var NearestMipmapNearestFilter = 1004;
	var NearestMipMapNearestFilter = 1004;
	var NearestMipmapLinearFilter = 1005;
	var NearestMipMapLinearFilter = 1005;
	var LinearFilter = 1006;
	var LinearMipmapNearestFilter = 1007;
	var LinearMipMapNearestFilter = 1007;
	var LinearMipmapLinearFilter = 1008;
	var LinearMipMapLinearFilter = 1008;
	var UnsignedByteType = 1009;
	var ByteType = 1010;
	var ShortType = 1011;
	var UnsignedShortType = 1012;
	var IntType = 1013;
	var UnsignedIntType = 1014;
	var FloatType = 1015;
	var HalfFloatType = 1016;
	var UnsignedShort4444Type = 1017;
	var UnsignedShort5551Type = 1018;
	var UnsignedShort565Type = 1019;
	var UnsignedInt248Type = 1020;
	var AlphaFormat = 1021;
	var RGBFormat = 1022;
	var RGBAFormat = 1023;
	var LuminanceFormat = 1024;
	var LuminanceAlphaFormat = 1025;
	var RGBEFormat = RGBAFormat;
	var DepthFormat = 1026;
	var DepthStencilFormat = 1027;
	var RedFormat = 1028;
	var RedIntegerFormat = 1029;
	var RGFormat = 1030;
	var RGIntegerFormat = 1031;
	var RGBIntegerFormat = 1032;
	var RGBAIntegerFormat = 1033;

	var RGB_S3TC_DXT1_Format = 33776;
	var RGBA_S3TC_DXT1_Format = 33777;
	var RGBA_S3TC_DXT3_Format = 33778;
	var RGBA_S3TC_DXT5_Format = 33779;
	var RGB_PVRTC_4BPPV1_Format = 35840;
	var RGB_PVRTC_2BPPV1_Format = 35841;
	var RGBA_PVRTC_4BPPV1_Format = 35842;
	var RGBA_PVRTC_2BPPV1_Format = 35843;
	var RGB_ETC1_Format = 36196;
	var RGB_ETC2_Format = 37492;
	var RGBA_ETC2_EAC_Format = 37496;
	var RGBA_ASTC_4x4_Format = 37808;
	var RGBA_ASTC_5x4_Format = 37809;
	var RGBA_ASTC_5x5_Format = 37810;
	var RGBA_ASTC_6x5_Format = 37811;
	var RGBA_ASTC_6x6_Format = 37812;
	var RGBA_ASTC_8x5_Format = 37813;
	var RGBA_ASTC_8x6_Format = 37814;
	var RGBA_ASTC_8x8_Format = 37815;
	var RGBA_ASTC_10x5_Format = 37816;
	var RGBA_ASTC_10x6_Format = 37817;
	var RGBA_ASTC_10x8_Format = 37818;
	var RGBA_ASTC_10x10_Format = 37819;
	var RGBA_ASTC_12x10_Format = 37820;
	var RGBA_ASTC_12x12_Format = 37821;
	var RGBA_BPTC_Format = 36492;
	var SRGB8_ALPHA8_ASTC_4x4_Format = 37840;
	var SRGB8_ALPHA8_ASTC_5x4_Format = 37841;
	var SRGB8_ALPHA8_ASTC_5x5_Format = 37842;
	var SRGB8_ALPHA8_ASTC_6x5_Format = 37843;
	var SRGB8_ALPHA8_ASTC_6x6_Format = 37844;
	var SRGB8_ALPHA8_ASTC_8x5_Format = 37845;
	var SRGB8_ALPHA8_ASTC_8x6_Format = 37846;
	var SRGB8_ALPHA8_ASTC_8x8_Format = 37847;
	var SRGB8_ALPHA8_ASTC_10x5_Format = 37848;
	var SRGB8_ALPHA8_ASTC_10x6_Format = 37849;
	var SRGB8_ALPHA8_ASTC_10x8_Format = 37850;
	var SRGB8_ALPHA8_ASTC_10x10_Format = 37851;
	var SRGB8_ALPHA8_ASTC_12x10_Format = 37852;
	var SRGB8_ALPHA8_ASTC_12x12_Format = 37853;
	var LoopOnce = 2200;
	var LoopRepeat = 2201;
	var LoopPingPong = 2202;
	var InterpolateDiscrete = 2300;
	var InterpolateLinear = 2301;
	var InterpolateSmooth = 2302;
	var ZeroCurvatureEnding = 2400;
	var ZeroSlopeEnding = 2401;
	var WrapAroundEnding = 2402;
	var TrianglesDrawMode = 0;
	var TriangleStripDrawMode = 1;
	var TriangleFanDrawMode = 2;
	var LinearEncoding = 3000;
	var sRGBEncoding = 3001;
	var GammaEncoding = 3007;
	var RGBEEncoding = 3002;
	var LogLuvEncoding = 3003;
	var RGBM7Encoding = 3004;
	var RGBM16Encoding = 3005;
	var RGBDEncoding = 3006;
	var BasicDepthPacking = 3200;
	var RGBADepthPacking = 3201;
	var TangentSpaceNormalMap = 0;
	var ObjectSpaceNormalMap = 1;

	var ZeroStencilOp = 0;
	var KeepStencilOp = 7680;
	var ReplaceStencilOp = 7681;
	var IncrementStencilOp = 7682;
	var DecrementStencilOp = 7683;
	var IncrementWrapStencilOp = 34055;
	var DecrementWrapStencilOp = 34056;
	var InvertStencilOp = 5386;

	var NeverStencilFunc = 512;
	var LessStencilFunc = 513;
	var EqualStencilFunc = 514;
	var LessEqualStencilFunc = 515;
	var GreaterStencilFunc = 516;
	var NotEqualStencilFunc = 517;
	var GreaterEqualStencilFunc = 518;
	var AlwaysStencilFunc = 519;

	var StaticDrawUsage = 35044;
	var DynamicDrawUsage = 35048;
	var StreamDrawUsage = 35040;
	var StaticReadUsage = 35045;
	var DynamicReadUsage = 35049;
	var StreamReadUsage = 35041;
	var StaticCopyUsage = 35046;
	var DynamicCopyUsage = 35050;
	var StreamCopyUsage = 35042;

	/**
	 * https://github.com/mrdoob/eventdispatcher.js/
	 */

	function EventDispatcher() {}

	Object.assign( EventDispatcher.prototype, {

		addEventListener: function ( type, listener ) {

			if ( this._listeners === undefined ) { this._listeners = {}; }

			var listeners = this._listeners;

			if ( listeners[ type ] === undefined ) {

				listeners[ type ] = [];

			}

			if ( listeners[ type ].indexOf( listener ) === - 1 ) {

				listeners[ type ].push( listener );

			}

		},

		hasEventListener: function ( type, listener ) {

			if ( this._listeners === undefined ) { return false; }

			var listeners = this._listeners;

			return listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;

		},

		removeEventListener: function ( type, listener ) {

			if ( this._listeners === undefined ) { return; }

			var listeners = this._listeners;
			var listenerArray = listeners[ type ];

			if ( listenerArray !== undefined ) {

				var index = listenerArray.indexOf( listener );

				if ( index !== - 1 ) {

					listenerArray.splice( index, 1 );

				}

			}

		},

		dispatchEvent: function ( event ) {

			if ( this._listeners === undefined ) { return; }

			var listeners = this._listeners;
			var listenerArray = listeners[ event.type ];

			if ( listenerArray !== undefined ) {

				event.target = this;

				// Make a copy, in case listeners are removed while iterating.
				var array = listenerArray.slice( 0 );

				for ( var i = 0, l = array.length; i < l; i ++ ) {

					array[ i ].call( this, event );

				}

			}

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 * @author WestLangley / http://github.com/WestLangley
	 * @author thezwap
	 */

	var _lut = [];

	for ( var i = 0; i < 256; i ++ ) {

		_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );

	}

	var MathUtils = {

		DEG2RAD: Math.PI / 180,
		RAD2DEG: 180 / Math.PI,

		generateUUID: function () {

			// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136

			var d0 = Math.random() * 0xffffffff | 0;
			var d1 = Math.random() * 0xffffffff | 0;
			var d2 = Math.random() * 0xffffffff | 0;
			var d3 = Math.random() * 0xffffffff | 0;
			var uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +
				_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +
				_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +
				_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];

			// .toUpperCase() here flattens concatenated strings to save heap memory space.
			return uuid.toUpperCase();

		},

		clamp: function ( value, min, max ) {

			return Math.max( min, Math.min( max, value ) );

		},

		// compute euclidian modulo of m % n
		// https://en.wikipedia.org/wiki/Modulo_operation

		euclideanModulo: function ( n, m ) {

			return ( ( n % m ) + m ) % m;

		},

		// Linear mapping from range <a1, a2> to range <b1, b2>

		mapLinear: function ( x, a1, a2, b1, b2 ) {

			return b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );

		},

		// https://en.wikipedia.org/wiki/Linear_interpolation

		lerp: function ( x, y, t ) {

			return ( 1 - t ) * x + t * y;

		},

		// http://en.wikipedia.org/wiki/Smoothstep

		smoothstep: function ( x, min, max ) {

			if ( x <= min ) { return 0; }
			if ( x >= max ) { return 1; }

			x = ( x - min ) / ( max - min );

			return x * x * ( 3 - 2 * x );

		},

		smootherstep: function ( x, min, max ) {

			if ( x <= min ) { return 0; }
			if ( x >= max ) { return 1; }

			x = ( x - min ) / ( max - min );

			return x * x * x * ( x * ( x * 6 - 15 ) + 10 );

		},

		// Random integer from <low, high> interval

		randInt: function ( low, high ) {

			return low + Math.floor( Math.random() * ( high - low + 1 ) );

		},

		// Random float from <low, high> interval

		randFloat: function ( low, high ) {

			return low + Math.random() * ( high - low );

		},

		// Random float from <-range/2, range/2> interval

		randFloatSpread: function ( range ) {

			return range * ( 0.5 - Math.random() );

		},

		degToRad: function ( degrees ) {

			return degrees * MathUtils.DEG2RAD;

		},

		radToDeg: function ( radians ) {

			return radians * MathUtils.RAD2DEG;

		},

		isPowerOfTwo: function ( value ) {

			return ( value & ( value - 1 ) ) === 0 && value !== 0;

		},

		ceilPowerOfTwo: function ( value ) {

			return Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );

		},

		floorPowerOfTwo: function ( value ) {

			return Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );

		},

		setQuaternionFromProperEuler: function ( q, a, b, c, order ) {

			// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles

			// rotations are applied to the axes in the order specified by 'order'
			// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'
			// angles are in radians

			var cos = Math.cos;
			var sin = Math.sin;

			var c2 = cos( b / 2 );
			var s2 = sin( b / 2 );

			var c13 = cos( ( a + c ) / 2 );
			var s13 = sin( ( a + c ) / 2 );

			var c1_3 = cos( ( a - c ) / 2 );
			var s1_3 = sin( ( a - c ) / 2 );

			var c3_1 = cos( ( c - a ) / 2 );
			var s3_1 = sin( ( c - a ) / 2 );

			if ( order === 'XYX' ) {

				q.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );

			} else if ( order === 'YZY' ) {

				q.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );

			} else if ( order === 'ZXZ' ) {

				q.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );

			} else if ( order === 'XZX' ) {

				q.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );

			} else if ( order === 'YXY' ) {

				q.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );

			} else if ( order === 'ZYZ' ) {

				q.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );

			} else {

				console.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order.' );

			}

		}

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author philogb / http://blog.thejit.org/
	 * @author egraether / http://egraether.com/
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 */

	function Vector2( x, y ) {

		this.x = x || 0;
		this.y = y || 0;

	}

	Object.defineProperties( Vector2.prototype, {

		"width": {

			get: function () {

				return this.x;

			},

			set: function ( value ) {

				this.x = value;

			}

		},

		"height": {

			get: function () {

				return this.y;

			},

			set: function ( value ) {

				this.y = value;

			}

		}

	} );

	Object.assign( Vector2.prototype, {

		isVector2: true,

		set: function ( x, y ) {

			this.x = x;
			this.y = y;

			return this;

		},

		setScalar: function ( scalar ) {

			this.x = scalar;
			this.y = scalar;

			return this;

		},

		setX: function ( x ) {

			this.x = x;

			return this;

		},

		setY: function ( y ) {

			this.y = y;

			return this;

		},

		setComponent: function ( index, value ) {

			switch ( index ) {

				case 0: this.x = value; break;
				case 1: this.y = value; break;
				default: throw new Error( 'index is out of range: ' + index );

			}

			return this;

		},

		getComponent: function ( index ) {

			switch ( index ) {

				case 0: return this.x;
				case 1: return this.y;
				default: throw new Error( 'index is out of range: ' + index );

			}

		},

		clone: function () {

			return new this.constructor( this.x, this.y );

		},

		copy: function ( v ) {

			this.x = v.x;
			this.y = v.y;

			return this;

		},

		add: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
				return this.addVectors( v, w );

			}

			this.x += v.x;
			this.y += v.y;

			return this;

		},

		addScalar: function ( s ) {

			this.x += s;
			this.y += s;

			return this;

		},

		addVectors: function ( a, b ) {

			this.x = a.x + b.x;
			this.y = a.y + b.y;

			return this;

		},

		addScaledVector: function ( v, s ) {

			this.x += v.x * s;
			this.y += v.y * s;

			return this;

		},

		sub: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
				return this.subVectors( v, w );

			}

			this.x -= v.x;
			this.y -= v.y;

			return this;

		},

		subScalar: function ( s ) {

			this.x -= s;
			this.y -= s;

			return this;

		},

		subVectors: function ( a, b ) {

			this.x = a.x - b.x;
			this.y = a.y - b.y;

			return this;

		},

		multiply: function ( v ) {

			this.x *= v.x;
			this.y *= v.y;

			return this;

		},

		multiplyScalar: function ( scalar ) {

			this.x *= scalar;
			this.y *= scalar;

			return this;

		},

		divide: function ( v ) {

			this.x /= v.x;
			this.y /= v.y;

			return this;

		},

		divideScalar: function ( scalar ) {

			return this.multiplyScalar( 1 / scalar );

		},

		applyMatrix3: function ( m ) {

			var x = this.x, y = this.y;
			var e = m.elements;

			this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];
			this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];

			return this;

		},

		min: function ( v ) {

			this.x = Math.min( this.x, v.x );
			this.y = Math.min( this.y, v.y );

			return this;

		},

		max: function ( v ) {

			this.x = Math.max( this.x, v.x );
			this.y = Math.max( this.y, v.y );

			return this;

		},

		clamp: function ( min, max ) {

			// assumes min < max, componentwise

			this.x = Math.max( min.x, Math.min( max.x, this.x ) );
			this.y = Math.max( min.y, Math.min( max.y, this.y ) );

			return this;

		},

		clampScalar: function ( minVal, maxVal ) {

			this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
			this.y = Math.max( minVal, Math.min( maxVal, this.y ) );

			return this;

		},

		clampLength: function ( min, max ) {

			var length = this.length();

			return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

		},

		floor: function () {

			this.x = Math.floor( this.x );
			this.y = Math.floor( this.y );

			return this;

		},

		ceil: function () {

			this.x = Math.ceil( this.x );
			this.y = Math.ceil( this.y );

			return this;

		},

		round: function () {

			this.x = Math.round( this.x );
			this.y = Math.round( this.y );

			return this;

		},

		roundToZero: function () {

			this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
			this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );

			return this;

		},

		negate: function () {

			this.x = - this.x;
			this.y = - this.y;

			return this;

		},

		dot: function ( v ) {

			return this.x * v.x + this.y * v.y;

		},

		cross: function ( v ) {

			return this.x * v.y - this.y * v.x;

		},

		lengthSq: function () {

			return this.x * this.x + this.y * this.y;

		},

		length: function () {

			return Math.sqrt( this.x * this.x + this.y * this.y );

		},

		manhattanLength: function () {

			return Math.abs( this.x ) + Math.abs( this.y );

		},

		normalize: function () {

			return this.divideScalar( this.length() || 1 );

		},

		angle: function () {

			// computes the angle in radians with respect to the positive x-axis

			var angle = Math.atan2( - this.y, - this.x ) + Math.PI;

			return angle;

		},

		distanceTo: function ( v ) {

			return Math.sqrt( this.distanceToSquared( v ) );

		},

		distanceToSquared: function ( v ) {

			var dx = this.x - v.x, dy = this.y - v.y;
			return dx * dx + dy * dy;

		},

		manhattanDistanceTo: function ( v ) {

			return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );

		},

		setLength: function ( length ) {

			return this.normalize().multiplyScalar( length );

		},

		lerp: function ( v, alpha ) {

			this.x += ( v.x - this.x ) * alpha;
			this.y += ( v.y - this.y ) * alpha;

			return this;

		},

		lerpVectors: function ( v1, v2, alpha ) {

			return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );

		},

		equals: function ( v ) {

			return ( ( v.x === this.x ) && ( v.y === this.y ) );

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this.x = array[ offset ];
			this.y = array[ offset + 1 ];

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			array[ offset ] = this.x;
			array[ offset + 1 ] = this.y;

			return array;

		},

		fromBufferAttribute: function ( attribute, index, offset ) {

			if ( offset !== undefined ) {

				console.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );

			}

			this.x = attribute.getX( index );
			this.y = attribute.getY( index );

			return this;

		},

		rotateAround: function ( center, angle ) {

			var c = Math.cos( angle ), s = Math.sin( angle );

			var x = this.x - center.x;
			var y = this.y - center.y;

			this.x = x * c - y * s + center.x;
			this.y = x * s + y * c + center.y;

			return this;

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author WestLangley / http://github.com/WestLangley
	 * @author bhouston / http://clara.io
	 * @author tschw
	 */

	function Matrix3() {

		this.elements = [

			1, 0, 0,
			0, 1, 0,
			0, 0, 1

		];

		if ( arguments.length > 0 ) {

			console.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );

		}

	}

	Object.assign( Matrix3.prototype, {

		isMatrix3: true,

		set: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {

			var te = this.elements;

			te[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;
			te[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;
			te[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;

			return this;

		},

		identity: function () {

			this.set(

				1, 0, 0,
				0, 1, 0,
				0, 0, 1

			);

			return this;

		},

		clone: function () {

			return new this.constructor().fromArray( this.elements );

		},

		copy: function ( m ) {

			var te = this.elements;
			var me = m.elements;

			te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];
			te[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];
			te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];

			return this;

		},

		extractBasis: function ( xAxis, yAxis, zAxis ) {

			xAxis.setFromMatrix3Column( this, 0 );
			yAxis.setFromMatrix3Column( this, 1 );
			zAxis.setFromMatrix3Column( this, 2 );

			return this;

		},

		setFromMatrix4: function ( m ) {

			var me = m.elements;

			this.set(

				me[ 0 ], me[ 4 ], me[ 8 ],
				me[ 1 ], me[ 5 ], me[ 9 ],
				me[ 2 ], me[ 6 ], me[ 10 ]

			);

			return this;

		},

		multiply: function ( m ) {

			return this.multiplyMatrices( this, m );

		},

		premultiply: function ( m ) {

			return this.multiplyMatrices( m, this );

		},

		multiplyMatrices: function ( a, b ) {

			var ae = a.elements;
			var be = b.elements;
			var te = this.elements;

			var a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];
			var a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];
			var a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];

			var b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];
			var b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];
			var b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];

			te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;
			te[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;
			te[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;

			te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;
			te[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;
			te[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;

			te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;
			te[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;
			te[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;

			return this;

		},

		multiplyScalar: function ( s ) {

			var te = this.elements;

			te[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;
			te[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;
			te[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;

			return this;

		},

		determinant: function () {

			var te = this.elements;

			var a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],
				d = te[ 3 ], e = te[ 4 ], f = te[ 5 ],
				g = te[ 6 ], h = te[ 7 ], i = te[ 8 ];

			return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;

		},

		getInverse: function ( matrix, throwOnDegenerate ) {

			if ( throwOnDegenerate !== undefined ) {

				console.warn( "THREE.Matrix3: .getInverse() can no longer be configured to throw on degenerate." );

			}

			var me = matrix.elements,
				te = this.elements,

				n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],
				n12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],
				n13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],

				t11 = n33 * n22 - n32 * n23,
				t12 = n32 * n13 - n33 * n12,
				t13 = n23 * n12 - n22 * n13,

				det = n11 * t11 + n21 * t12 + n31 * t13;

			if ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }

			var detInv = 1 / det;

			te[ 0 ] = t11 * detInv;
			te[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;
			te[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;

			te[ 3 ] = t12 * detInv;
			te[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;
			te[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;

			te[ 6 ] = t13 * detInv;
			te[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;
			te[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;

			return this;

		},

		transpose: function () {

			var tmp, m = this.elements;

			tmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;
			tmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;
			tmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;

			return this;

		},

		getNormalMatrix: function ( matrix4 ) {

			return this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();

		},

		transposeIntoArray: function ( r ) {

			var m = this.elements;

			r[ 0 ] = m[ 0 ];
			r[ 1 ] = m[ 3 ];
			r[ 2 ] = m[ 6 ];
			r[ 3 ] = m[ 1 ];
			r[ 4 ] = m[ 4 ];
			r[ 5 ] = m[ 7 ];
			r[ 6 ] = m[ 2 ];
			r[ 7 ] = m[ 5 ];
			r[ 8 ] = m[ 8 ];

			return this;

		},

		setUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {

			var c = Math.cos( rotation );
			var s = Math.sin( rotation );

			this.set(
				sx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,
				- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,
				0, 0, 1
			);

		},

		scale: function ( sx, sy ) {

			var te = this.elements;

			te[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;
			te[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;

			return this;

		},

		rotate: function ( theta ) {

			var c = Math.cos( theta );
			var s = Math.sin( theta );

			var te = this.elements;

			var a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];
			var a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];

			te[ 0 ] = c * a11 + s * a21;
			te[ 3 ] = c * a12 + s * a22;
			te[ 6 ] = c * a13 + s * a23;

			te[ 1 ] = - s * a11 + c * a21;
			te[ 4 ] = - s * a12 + c * a22;
			te[ 7 ] = - s * a13 + c * a23;

			return this;

		},

		translate: function ( tx, ty ) {

			var te = this.elements;

			te[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];
			te[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];

			return this;

		},

		equals: function ( matrix ) {

			var te = this.elements;
			var me = matrix.elements;

			for ( var i = 0; i < 9; i ++ ) {

				if ( te[ i ] !== me[ i ] ) { return false; }

			}

			return true;

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			for ( var i = 0; i < 9; i ++ ) {

				this.elements[ i ] = array[ i + offset ];

			}

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			var te = this.elements;

			array[ offset ] = te[ 0 ];
			array[ offset + 1 ] = te[ 1 ];
			array[ offset + 2 ] = te[ 2 ];

			array[ offset + 3 ] = te[ 3 ];
			array[ offset + 4 ] = te[ 4 ];
			array[ offset + 5 ] = te[ 5 ];

			array[ offset + 6 ] = te[ 6 ];
			array[ offset + 7 ] = te[ 7 ];
			array[ offset + 8 ] = te[ 8 ];

			return array;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 * @author szimek / https://github.com/szimek/
	 */

	var _canvas;

	var ImageUtils = {

		getDataURL: function ( image ) {

			var canvas;

			if ( typeof HTMLCanvasElement == 'undefined' ) {

				return image.src;

			} else if ( image instanceof HTMLCanvasElement ) {

				canvas = image;

			} else {

				if ( _canvas === undefined ) { _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); }

				_canvas.width = image.width;
				_canvas.height = image.height;

				var context = _canvas.getContext( '2d' );

				if ( image instanceof ImageData ) {

					context.putImageData( image, 0, 0 );

				} else {

					context.drawImage( image, 0, 0, image.width, image.height );

				}

				canvas = _canvas;

			}

			if ( canvas.width > 2048 || canvas.height > 2048 ) {

				return canvas.toDataURL( 'image/jpeg', 0.6 );

			} else {

				return canvas.toDataURL( 'image/png' );

			}

		}

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 * @author szimek / https://github.com/szimek/
	 */

	var textureId = 0;

	function Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {

		Object.defineProperty( this, 'id', { value: textureId ++ } );

		this.uuid = MathUtils.generateUUID();

		this.name = '';

		this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;
		this.mipmaps = [];

		this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;

		this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;
		this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;

		this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;
		this.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;

		this.anisotropy = anisotropy !== undefined ? anisotropy : 1;

		this.format = format !== undefined ? format : RGBAFormat;
		this.internalFormat = null;
		this.type = type !== undefined ? type : UnsignedByteType;

		this.offset = new Vector2( 0, 0 );
		this.repeat = new Vector2( 1, 1 );
		this.center = new Vector2( 0, 0 );
		this.rotation = 0;

		this.matrixAutoUpdate = true;
		this.matrix = new Matrix3();

		this.generateMipmaps = true;
		this.premultiplyAlpha = false;
		this.flipY = true;
		this.unpackAlignment = 4;	// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)

		// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.
		//
		// Also changing the encoding after already used by a Material will not automatically make the Material
		// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.
		this.encoding = encoding !== undefined ? encoding : LinearEncoding;

		this.version = 0;
		this.onUpdate = null;

	}

	Texture.DEFAULT_IMAGE = undefined;
	Texture.DEFAULT_MAPPING = UVMapping;

	Texture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: Texture,

		isTexture: true,

		updateMatrix: function () {

			this.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( source ) {

			this.name = source.name;

			this.image = source.image;
			this.mipmaps = source.mipmaps.slice( 0 );

			this.mapping = source.mapping;

			this.wrapS = source.wrapS;
			this.wrapT = source.wrapT;

			this.magFilter = source.magFilter;
			this.minFilter = source.minFilter;

			this.anisotropy = source.anisotropy;

			this.format = source.format;
			this.internalFormat = source.internalFormat;
			this.type = source.type;

			this.offset.copy( source.offset );
			this.repeat.copy( source.repeat );
			this.center.copy( source.center );
			this.rotation = source.rotation;

			this.matrixAutoUpdate = source.matrixAutoUpdate;
			this.matrix.copy( source.matrix );

			this.generateMipmaps = source.generateMipmaps;
			this.premultiplyAlpha = source.premultiplyAlpha;
			this.flipY = source.flipY;
			this.unpackAlignment = source.unpackAlignment;
			this.encoding = source.encoding;

			return this;

		},

		toJSON: function ( meta ) {

			var isRootObject = ( meta === undefined || typeof meta === 'string' );

			if ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {

				return meta.textures[ this.uuid ];

			}

			var output = {

				metadata: {
					version: 4.5,
					type: 'Texture',
					generator: 'Texture.toJSON'
				},

				uuid: this.uuid,
				name: this.name,

				mapping: this.mapping,

				repeat: [ this.repeat.x, this.repeat.y ],
				offset: [ this.offset.x, this.offset.y ],
				center: [ this.center.x, this.center.y ],
				rotation: this.rotation,

				wrap: [ this.wrapS, this.wrapT ],

				format: this.format,
				type: this.type,
				encoding: this.encoding,

				minFilter: this.minFilter,
				magFilter: this.magFilter,
				anisotropy: this.anisotropy,

				flipY: this.flipY,

				premultiplyAlpha: this.premultiplyAlpha,
				unpackAlignment: this.unpackAlignment

			};

			if ( this.image !== undefined ) {

				// TODO: Move to THREE.Image

				var image = this.image;

				if ( image.uuid === undefined ) {

					image.uuid = MathUtils.generateUUID(); // UGH

				}

				if ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {

					var url;

					if ( Array.isArray( image ) ) {

						// process array of images e.g. CubeTexture

						url = [];

						for ( var i = 0, l = image.length; i < l; i ++ ) {

							url.push( ImageUtils.getDataURL( image[ i ] ) );

						}

					} else {

						// process single image

						url = ImageUtils.getDataURL( image );

					}

					meta.images[ image.uuid ] = {
						uuid: image.uuid,
						url: url
					};

				}

				output.image = image.uuid;

			}

			if ( ! isRootObject ) {

				meta.textures[ this.uuid ] = output;

			}

			return output;

		},

		dispose: function () {

			this.dispatchEvent( { type: 'dispose' } );

		},

		transformUv: function ( uv ) {

			if ( this.mapping !== UVMapping ) { return uv; }

			uv.applyMatrix3( this.matrix );

			if ( uv.x < 0 || uv.x > 1 ) {

				switch ( this.wrapS ) {

					case RepeatWrapping:

						uv.x = uv.x - Math.floor( uv.x );
						break;

					case ClampToEdgeWrapping:

						uv.x = uv.x < 0 ? 0 : 1;
						break;

					case MirroredRepeatWrapping:

						if ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {

							uv.x = Math.ceil( uv.x ) - uv.x;

						} else {

							uv.x = uv.x - Math.floor( uv.x );

						}
						break;

				}

			}

			if ( uv.y < 0 || uv.y > 1 ) {

				switch ( this.wrapT ) {

					case RepeatWrapping:

						uv.y = uv.y - Math.floor( uv.y );
						break;

					case ClampToEdgeWrapping:

						uv.y = uv.y < 0 ? 0 : 1;
						break;

					case MirroredRepeatWrapping:

						if ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {

							uv.y = Math.ceil( uv.y ) - uv.y;

						} else {

							uv.y = uv.y - Math.floor( uv.y );

						}
						break;

				}

			}

			if ( this.flipY ) {

				uv.y = 1 - uv.y;

			}

			return uv;

		}

	} );

	Object.defineProperty( Texture.prototype, "needsUpdate", {

		set: function ( value ) {

			if ( value === true ) { this.version ++; }

		}

	} );

	/**
	 * @author supereggbert / http://www.paulbrunt.co.uk/
	 * @author philogb / http://blog.thejit.org/
	 * @author mikael emtinger / http://gomo.se/
	 * @author egraether / http://egraether.com/
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function Vector4( x, y, z, w ) {

		this.x = x || 0;
		this.y = y || 0;
		this.z = z || 0;
		this.w = ( w !== undefined ) ? w : 1;

	}

	Object.defineProperties( Vector4.prototype, {

		"width": {

			get: function () {

				return this.z;

			},

			set: function ( value ) {

				this.z = value;

			}

		},

		"height": {

			get: function () {

				return this.w;

			},

			set: function ( value ) {

				this.w = value;

			}

		}

	} );

	Object.assign( Vector4.prototype, {

		isVector4: true,

		set: function ( x, y, z, w ) {

			this.x = x;
			this.y = y;
			this.z = z;
			this.w = w;

			return this;

		},

		setScalar: function ( scalar ) {

			this.x = scalar;
			this.y = scalar;
			this.z = scalar;
			this.w = scalar;

			return this;

		},

		setX: function ( x ) {

			this.x = x;

			return this;

		},

		setY: function ( y ) {

			this.y = y;

			return this;

		},

		setZ: function ( z ) {

			this.z = z;

			return this;

		},

		setW: function ( w ) {

			this.w = w;

			return this;

		},

		setComponent: function ( index, value ) {

			switch ( index ) {

				case 0: this.x = value; break;
				case 1: this.y = value; break;
				case 2: this.z = value; break;
				case 3: this.w = value; break;
				default: throw new Error( 'index is out of range: ' + index );

			}

			return this;

		},

		getComponent: function ( index ) {

			switch ( index ) {

				case 0: return this.x;
				case 1: return this.y;
				case 2: return this.z;
				case 3: return this.w;
				default: throw new Error( 'index is out of range: ' + index );

			}

		},

		clone: function () {

			return new this.constructor( this.x, this.y, this.z, this.w );

		},

		copy: function ( v ) {

			this.x = v.x;
			this.y = v.y;
			this.z = v.z;
			this.w = ( v.w !== undefined ) ? v.w : 1;

			return this;

		},

		add: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
				return this.addVectors( v, w );

			}

			this.x += v.x;
			this.y += v.y;
			this.z += v.z;
			this.w += v.w;

			return this;

		},

		addScalar: function ( s ) {

			this.x += s;
			this.y += s;
			this.z += s;
			this.w += s;

			return this;

		},

		addVectors: function ( a, b ) {

			this.x = a.x + b.x;
			this.y = a.y + b.y;
			this.z = a.z + b.z;
			this.w = a.w + b.w;

			return this;

		},

		addScaledVector: function ( v, s ) {

			this.x += v.x * s;
			this.y += v.y * s;
			this.z += v.z * s;
			this.w += v.w * s;

			return this;

		},

		sub: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
				return this.subVectors( v, w );

			}

			this.x -= v.x;
			this.y -= v.y;
			this.z -= v.z;
			this.w -= v.w;

			return this;

		},

		subScalar: function ( s ) {

			this.x -= s;
			this.y -= s;
			this.z -= s;
			this.w -= s;

			return this;

		},

		subVectors: function ( a, b ) {

			this.x = a.x - b.x;
			this.y = a.y - b.y;
			this.z = a.z - b.z;
			this.w = a.w - b.w;

			return this;

		},

		multiplyScalar: function ( scalar ) {

			this.x *= scalar;
			this.y *= scalar;
			this.z *= scalar;
			this.w *= scalar;

			return this;

		},

		applyMatrix4: function ( m ) {

			var x = this.x, y = this.y, z = this.z, w = this.w;
			var e = m.elements;

			this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;
			this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;
			this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;
			this.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;

			return this;

		},

		divideScalar: function ( scalar ) {

			return this.multiplyScalar( 1 / scalar );

		},

		setAxisAngleFromQuaternion: function ( q ) {

			// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm

			// q is assumed to be normalized

			this.w = 2 * Math.acos( q.w );

			var s = Math.sqrt( 1 - q.w * q.w );

			if ( s < 0.0001 ) {

				this.x = 1;
				this.y = 0;
				this.z = 0;

			} else {

				this.x = q.x / s;
				this.y = q.y / s;
				this.z = q.z / s;

			}

			return this;

		},

		setAxisAngleFromRotationMatrix: function ( m ) {

			// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm

			// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

			var angle, x, y, z,		// variables for result
				epsilon = 0.01,		// margin to allow for rounding errors
				epsilon2 = 0.1,		// margin to distinguish between 0 and 180 degrees

				te = m.elements,

				m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
				m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
				m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

			if ( ( Math.abs( m12 - m21 ) < epsilon ) &&
			     ( Math.abs( m13 - m31 ) < epsilon ) &&
			     ( Math.abs( m23 - m32 ) < epsilon ) ) {

				// singularity found
				// first check for identity matrix which must have +1 for all terms
				// in leading diagonal and zero in other terms

				if ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&
				     ( Math.abs( m13 + m31 ) < epsilon2 ) &&
				     ( Math.abs( m23 + m32 ) < epsilon2 ) &&
				     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {

					// this singularity is identity matrix so angle = 0

					this.set( 1, 0, 0, 0 );

					return this; // zero angle, arbitrary axis

				}

				// otherwise this singularity is angle = 180

				angle = Math.PI;

				var xx = ( m11 + 1 ) / 2;
				var yy = ( m22 + 1 ) / 2;
				var zz = ( m33 + 1 ) / 2;
				var xy = ( m12 + m21 ) / 4;
				var xz = ( m13 + m31 ) / 4;
				var yz = ( m23 + m32 ) / 4;

				if ( ( xx > yy ) && ( xx > zz ) ) {

					// m11 is the largest diagonal term

					if ( xx < epsilon ) {

						x = 0;
						y = 0.707106781;
						z = 0.707106781;

					} else {

						x = Math.sqrt( xx );
						y = xy / x;
						z = xz / x;

					}

				} else if ( yy > zz ) {

					// m22 is the largest diagonal term

					if ( yy < epsilon ) {

						x = 0.707106781;
						y = 0;
						z = 0.707106781;

					} else {

						y = Math.sqrt( yy );
						x = xy / y;
						z = yz / y;

					}

				} else {

					// m33 is the largest diagonal term so base result on this

					if ( zz < epsilon ) {

						x = 0.707106781;
						y = 0.707106781;
						z = 0;

					} else {

						z = Math.sqrt( zz );
						x = xz / z;
						y = yz / z;

					}

				}

				this.set( x, y, z, angle );

				return this; // return 180 deg rotation

			}

			// as we have reached here there are no singularities so we can handle normally

			var s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +
			                   ( m13 - m31 ) * ( m13 - m31 ) +
			                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize

			if ( Math.abs( s ) < 0.001 ) { s = 1; }

			// prevent divide by zero, should not happen if matrix is orthogonal and should be
			// caught by singularity test above, but I've left it in just in case

			this.x = ( m32 - m23 ) / s;
			this.y = ( m13 - m31 ) / s;
			this.z = ( m21 - m12 ) / s;
			this.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );

			return this;

		},

		min: function ( v ) {

			this.x = Math.min( this.x, v.x );
			this.y = Math.min( this.y, v.y );
			this.z = Math.min( this.z, v.z );
			this.w = Math.min( this.w, v.w );

			return this;

		},

		max: function ( v ) {

			this.x = Math.max( this.x, v.x );
			this.y = Math.max( this.y, v.y );
			this.z = Math.max( this.z, v.z );
			this.w = Math.max( this.w, v.w );

			return this;

		},

		clamp: function ( min, max ) {

			// assumes min < max, componentwise

			this.x = Math.max( min.x, Math.min( max.x, this.x ) );
			this.y = Math.max( min.y, Math.min( max.y, this.y ) );
			this.z = Math.max( min.z, Math.min( max.z, this.z ) );
			this.w = Math.max( min.w, Math.min( max.w, this.w ) );

			return this;

		},

		clampScalar: function ( minVal, maxVal ) {

			this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
			this.y = Math.max( minVal, Math.min( maxVal, this.y ) );
			this.z = Math.max( minVal, Math.min( maxVal, this.z ) );
			this.w = Math.max( minVal, Math.min( maxVal, this.w ) );

			return this;

		},

		clampLength: function ( min, max ) {

			var length = this.length();

			return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

		},

		floor: function () {

			this.x = Math.floor( this.x );
			this.y = Math.floor( this.y );
			this.z = Math.floor( this.z );
			this.w = Math.floor( this.w );

			return this;

		},

		ceil: function () {

			this.x = Math.ceil( this.x );
			this.y = Math.ceil( this.y );
			this.z = Math.ceil( this.z );
			this.w = Math.ceil( this.w );

			return this;

		},

		round: function () {

			this.x = Math.round( this.x );
			this.y = Math.round( this.y );
			this.z = Math.round( this.z );
			this.w = Math.round( this.w );

			return this;

		},

		roundToZero: function () {

			this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
			this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
			this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );
			this.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );

			return this;

		},

		negate: function () {

			this.x = - this.x;
			this.y = - this.y;
			this.z = - this.z;
			this.w = - this.w;

			return this;

		},

		dot: function ( v ) {

			return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;

		},

		lengthSq: function () {

			return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;

		},

		length: function () {

			return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );

		},

		manhattanLength: function () {

			return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );

		},

		normalize: function () {

			return this.divideScalar( this.length() || 1 );

		},

		setLength: function ( length ) {

			return this.normalize().multiplyScalar( length );

		},

		lerp: function ( v, alpha ) {

			this.x += ( v.x - this.x ) * alpha;
			this.y += ( v.y - this.y ) * alpha;
			this.z += ( v.z - this.z ) * alpha;
			this.w += ( v.w - this.w ) * alpha;

			return this;

		},

		lerpVectors: function ( v1, v2, alpha ) {

			return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );

		},

		equals: function ( v ) {

			return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this.x = array[ offset ];
			this.y = array[ offset + 1 ];
			this.z = array[ offset + 2 ];
			this.w = array[ offset + 3 ];

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			array[ offset ] = this.x;
			array[ offset + 1 ] = this.y;
			array[ offset + 2 ] = this.z;
			array[ offset + 3 ] = this.w;

			return array;

		},

		fromBufferAttribute: function ( attribute, index, offset ) {

			if ( offset !== undefined ) {

				console.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );

			}

			this.x = attribute.getX( index );
			this.y = attribute.getY( index );
			this.z = attribute.getZ( index );
			this.w = attribute.getW( index );

			return this;

		}

	} );

	/**
	 * @author szimek / https://github.com/szimek/
	 * @author alteredq / http://alteredqualia.com/
	 * @author Marius Kintel / https://github.com/kintel
	 */

	/*
	 In options, we can specify:
	 * Texture parameters for an auto-generated target texture
	 * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers
	*/
	function WebGLRenderTarget( width, height, options ) {

		this.width = width;
		this.height = height;

		this.scissor = new Vector4( 0, 0, width, height );
		this.scissorTest = false;

		this.viewport = new Vector4( 0, 0, width, height );

		options = options || {};

		this.texture = new Texture( undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );

		this.texture.image = {};
		this.texture.image.width = width;
		this.texture.image.height = height;

		this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;
		this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;

		this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;
		this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;
		this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;

	}

	WebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: WebGLRenderTarget,

		isWebGLRenderTarget: true,

		setSize: function ( width, height ) {

			if ( this.width !== width || this.height !== height ) {

				this.width = width;
				this.height = height;

				this.texture.image.width = width;
				this.texture.image.height = height;

				this.dispose();

			}

			this.viewport.set( 0, 0, width, height );
			this.scissor.set( 0, 0, width, height );

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( source ) {

			this.width = source.width;
			this.height = source.height;

			this.viewport.copy( source.viewport );

			this.texture = source.texture.clone();

			this.depthBuffer = source.depthBuffer;
			this.stencilBuffer = source.stencilBuffer;
			this.depthTexture = source.depthTexture;

			return this;

		},

		dispose: function () {

			this.dispatchEvent( { type: 'dispose' } );

		}

	} );

	/**
	 * @author Mugen87 / https://github.com/Mugen87
	 * @author Matt DesLauriers / @mattdesl
	 */

	function WebGLMultisampleRenderTarget( width, height, options ) {

		WebGLRenderTarget.call( this, width, height, options );

		this.samples = 4;

	}

	WebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {

		constructor: WebGLMultisampleRenderTarget,

		isWebGLMultisampleRenderTarget: true,

		copy: function ( source ) {

			WebGLRenderTarget.prototype.copy.call( this, source );

			this.samples = source.samples;

			return this;

		}

	} );

	/**
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 * @author WestLangley / http://github.com/WestLangley
	 * @author bhouston / http://clara.io
	 */

	function Quaternion( x, y, z, w ) {

		this._x = x || 0;
		this._y = y || 0;
		this._z = z || 0;
		this._w = ( w !== undefined ) ? w : 1;

	}

	Object.assign( Quaternion, {

		slerp: function ( qa, qb, qm, t ) {

			return qm.copy( qa ).slerp( qb, t );

		},

		slerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {

			// fuzz-free, array-based Quaternion SLERP operation

			var x0 = src0[ srcOffset0 + 0 ],
				y0 = src0[ srcOffset0 + 1 ],
				z0 = src0[ srcOffset0 + 2 ],
				w0 = src0[ srcOffset0 + 3 ],

				x1 = src1[ srcOffset1 + 0 ],
				y1 = src1[ srcOffset1 + 1 ],
				z1 = src1[ srcOffset1 + 2 ],
				w1 = src1[ srcOffset1 + 3 ];

			if ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {

				var s = 1 - t,

					cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,

					dir = ( cos >= 0 ? 1 : - 1 ),
					sqrSin = 1 - cos * cos;

				// Skip the Slerp for tiny steps to avoid numeric problems:
				if ( sqrSin > Number.EPSILON ) {

					var sin = Math.sqrt( sqrSin ),
						len = Math.atan2( sin, cos * dir );

					s = Math.sin( s * len ) / sin;
					t = Math.sin( t * len ) / sin;

				}

				var tDir = t * dir;

				x0 = x0 * s + x1 * tDir;
				y0 = y0 * s + y1 * tDir;
				z0 = z0 * s + z1 * tDir;
				w0 = w0 * s + w1 * tDir;

				// Normalize in case we just did a lerp:
				if ( s === 1 - t ) {

					var f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );

					x0 *= f;
					y0 *= f;
					z0 *= f;
					w0 *= f;

				}

			}

			dst[ dstOffset ] = x0;
			dst[ dstOffset + 1 ] = y0;
			dst[ dstOffset + 2 ] = z0;
			dst[ dstOffset + 3 ] = w0;

		}

	} );

	Object.defineProperties( Quaternion.prototype, {

		x: {

			get: function () {

				return this._x;

			},

			set: function ( value ) {

				this._x = value;
				this._onChangeCallback();

			}

		},

		y: {

			get: function () {

				return this._y;

			},

			set: function ( value ) {

				this._y = value;
				this._onChangeCallback();

			}

		},

		z: {

			get: function () {

				return this._z;

			},

			set: function ( value ) {

				this._z = value;
				this._onChangeCallback();

			}

		},

		w: {

			get: function () {

				return this._w;

			},

			set: function ( value ) {

				this._w = value;
				this._onChangeCallback();

			}

		}

	} );

	Object.assign( Quaternion.prototype, {

		isQuaternion: true,

		set: function ( x, y, z, w ) {

			this._x = x;
			this._y = y;
			this._z = z;
			this._w = w;

			this._onChangeCallback();

			return this;

		},

		clone: function () {

			return new this.constructor( this._x, this._y, this._z, this._w );

		},

		copy: function ( quaternion ) {

			this._x = quaternion.x;
			this._y = quaternion.y;
			this._z = quaternion.z;
			this._w = quaternion.w;

			this._onChangeCallback();

			return this;

		},

		setFromEuler: function ( euler, update ) {

			if ( ! ( euler && euler.isEuler ) ) {

				throw new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );

			}

			var x = euler._x, y = euler._y, z = euler._z, order = euler.order;

			// http://www.mathworks.com/matlabcentral/fileexchange/
			// 	20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/
			//	content/SpinCalc.m

			var cos = Math.cos;
			var sin = Math.sin;

			var c1 = cos( x / 2 );
			var c2 = cos( y / 2 );
			var c3 = cos( z / 2 );

			var s1 = sin( x / 2 );
			var s2 = sin( y / 2 );
			var s3 = sin( z / 2 );

			if ( order === 'XYZ' ) {

				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;

			} else if ( order === 'YXZ' ) {

				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;

			} else if ( order === 'ZXY' ) {

				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;

			} else if ( order === 'ZYX' ) {

				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;

			} else if ( order === 'YZX' ) {

				this._x = s1 * c2 * c3 + c1 * s2 * s3;
				this._y = c1 * s2 * c3 + s1 * c2 * s3;
				this._z = c1 * c2 * s3 - s1 * s2 * c3;
				this._w = c1 * c2 * c3 - s1 * s2 * s3;

			} else if ( order === 'XZY' ) {

				this._x = s1 * c2 * c3 - c1 * s2 * s3;
				this._y = c1 * s2 * c3 - s1 * c2 * s3;
				this._z = c1 * c2 * s3 + s1 * s2 * c3;
				this._w = c1 * c2 * c3 + s1 * s2 * s3;

			}

			if ( update !== false ) { this._onChangeCallback(); }

			return this;

		},

		setFromAxisAngle: function ( axis, angle ) {

			// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm

			// assumes axis is normalized

			var halfAngle = angle / 2, s = Math.sin( halfAngle );

			this._x = axis.x * s;
			this._y = axis.y * s;
			this._z = axis.z * s;
			this._w = Math.cos( halfAngle );

			this._onChangeCallback();

			return this;

		},

		setFromRotationMatrix: function ( m ) {

			// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm

			// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

			var te = m.elements,

				m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],
				m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],
				m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],

				trace = m11 + m22 + m33,
				s;

			if ( trace > 0 ) {

				s = 0.5 / Math.sqrt( trace + 1.0 );

				this._w = 0.25 / s;
				this._x = ( m32 - m23 ) * s;
				this._y = ( m13 - m31 ) * s;
				this._z = ( m21 - m12 ) * s;

			} else if ( m11 > m22 && m11 > m33 ) {

				s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );

				this._w = ( m32 - m23 ) / s;
				this._x = 0.25 * s;
				this._y = ( m12 + m21 ) / s;
				this._z = ( m13 + m31 ) / s;

			} else if ( m22 > m33 ) {

				s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );

				this._w = ( m13 - m31 ) / s;
				this._x = ( m12 + m21 ) / s;
				this._y = 0.25 * s;
				this._z = ( m23 + m32 ) / s;

			} else {

				s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );

				this._w = ( m21 - m12 ) / s;
				this._x = ( m13 + m31 ) / s;
				this._y = ( m23 + m32 ) / s;
				this._z = 0.25 * s;

			}

			this._onChangeCallback();

			return this;

		},

		setFromUnitVectors: function ( vFrom, vTo ) {

			// assumes direction vectors vFrom and vTo are normalized

			var EPS = 0.000001;

			var r = vFrom.dot( vTo ) + 1;

			if ( r < EPS ) {

				r = 0;

				if ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {

					this._x = - vFrom.y;
					this._y = vFrom.x;
					this._z = 0;
					this._w = r;

				} else {

					this._x = 0;
					this._y = - vFrom.z;
					this._z = vFrom.y;
					this._w = r;

				}

			} else {

				// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3

				this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;
				this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;
				this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;
				this._w = r;

			}

			return this.normalize();

		},

		angleTo: function ( q ) {

			return 2 * Math.acos( Math.abs( MathUtils.clamp( this.dot( q ), - 1, 1 ) ) );

		},

		rotateTowards: function ( q, step ) {

			var angle = this.angleTo( q );

			if ( angle === 0 ) { return this; }

			var t = Math.min( 1, step / angle );

			this.slerp( q, t );

			return this;

		},

		inverse: function () {

			// quaternion is assumed to have unit length

			return this.conjugate();

		},

		conjugate: function () {

			this._x *= - 1;
			this._y *= - 1;
			this._z *= - 1;

			this._onChangeCallback();

			return this;

		},

		dot: function ( v ) {

			return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;

		},

		lengthSq: function () {

			return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;

		},

		length: function () {

			return Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );

		},

		normalize: function () {

			var l = this.length();

			if ( l === 0 ) {

				this._x = 0;
				this._y = 0;
				this._z = 0;
				this._w = 1;

			} else {

				l = 1 / l;

				this._x = this._x * l;
				this._y = this._y * l;
				this._z = this._z * l;
				this._w = this._w * l;

			}

			this._onChangeCallback();

			return this;

		},

		multiply: function ( q, p ) {

			if ( p !== undefined ) {

				console.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );
				return this.multiplyQuaternions( q, p );

			}

			return this.multiplyQuaternions( this, q );

		},

		premultiply: function ( q ) {

			return this.multiplyQuaternions( q, this );

		},

		multiplyQuaternions: function ( a, b ) {

			// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm

			var qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;
			var qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;

			this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;
			this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;
			this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;
			this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;

			this._onChangeCallback();

			return this;

		},

		slerp: function ( qb, t ) {

			if ( t === 0 ) { return this; }
			if ( t === 1 ) { return this.copy( qb ); }

			var x = this._x, y = this._y, z = this._z, w = this._w;

			// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/

			var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;

			if ( cosHalfTheta < 0 ) {

				this._w = - qb._w;
				this._x = - qb._x;
				this._y = - qb._y;
				this._z = - qb._z;

				cosHalfTheta = - cosHalfTheta;

			} else {

				this.copy( qb );

			}

			if ( cosHalfTheta >= 1.0 ) {

				this._w = w;
				this._x = x;
				this._y = y;
				this._z = z;

				return this;

			}

			var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;

			if ( sqrSinHalfTheta <= Number.EPSILON ) {

				var s = 1 - t;
				this._w = s * w + t * this._w;
				this._x = s * x + t * this._x;
				this._y = s * y + t * this._y;
				this._z = s * z + t * this._z;

				this.normalize();
				this._onChangeCallback();

				return this;

			}

			var sinHalfTheta = Math.sqrt( sqrSinHalfTheta );
			var halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );
			var ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,
				ratioB = Math.sin( t * halfTheta ) / sinHalfTheta;

			this._w = ( w * ratioA + this._w * ratioB );
			this._x = ( x * ratioA + this._x * ratioB );
			this._y = ( y * ratioA + this._y * ratioB );
			this._z = ( z * ratioA + this._z * ratioB );

			this._onChangeCallback();

			return this;

		},

		equals: function ( quaternion ) {

			return ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this._x = array[ offset ];
			this._y = array[ offset + 1 ];
			this._z = array[ offset + 2 ];
			this._w = array[ offset + 3 ];

			this._onChangeCallback();

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			array[ offset ] = this._x;
			array[ offset + 1 ] = this._y;
			array[ offset + 2 ] = this._z;
			array[ offset + 3 ] = this._w;

			return array;

		},

		fromBufferAttribute: function ( attribute, index ) {

			this._x = attribute.getX( index );
			this._y = attribute.getY( index );
			this._z = attribute.getZ( index );
			this._w = attribute.getW( index );

			return this;

		},

		_onChange: function ( callback ) {

			this._onChangeCallback = callback;

			return this;

		},

		_onChangeCallback: function () {}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author kile / http://kile.stravaganza.org/
	 * @author philogb / http://blog.thejit.org/
	 * @author mikael emtinger / http://gomo.se/
	 * @author egraether / http://egraether.com/
	 * @author WestLangley / http://github.com/WestLangley
	 */

	var _vector = new Vector3();
	var _quaternion = new Quaternion();

	function Vector3( x, y, z ) {

		this.x = x || 0;
		this.y = y || 0;
		this.z = z || 0;

	}

	Object.assign( Vector3.prototype, {

		isVector3: true,

		set: function ( x, y, z ) {

			this.x = x;
			this.y = y;
			this.z = z;

			return this;

		},

		setScalar: function ( scalar ) {

			this.x = scalar;
			this.y = scalar;
			this.z = scalar;

			return this;

		},

		setX: function ( x ) {

			this.x = x;

			return this;

		},

		setY: function ( y ) {

			this.y = y;

			return this;

		},

		setZ: function ( z ) {

			this.z = z;

			return this;

		},

		setComponent: function ( index, value ) {

			switch ( index ) {

				case 0: this.x = value; break;
				case 1: this.y = value; break;
				case 2: this.z = value; break;
				default: throw new Error( 'index is out of range: ' + index );

			}

			return this;

		},

		getComponent: function ( index ) {

			switch ( index ) {

				case 0: return this.x;
				case 1: return this.y;
				case 2: return this.z;
				default: throw new Error( 'index is out of range: ' + index );

			}

		},

		clone: function () {

			return new this.constructor( this.x, this.y, this.z );

		},

		copy: function ( v ) {

			this.x = v.x;
			this.y = v.y;
			this.z = v.z;

			return this;

		},

		add: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );
				return this.addVectors( v, w );

			}

			this.x += v.x;
			this.y += v.y;
			this.z += v.z;

			return this;

		},

		addScalar: function ( s ) {

			this.x += s;
			this.y += s;
			this.z += s;

			return this;

		},

		addVectors: function ( a, b ) {

			this.x = a.x + b.x;
			this.y = a.y + b.y;
			this.z = a.z + b.z;

			return this;

		},

		addScaledVector: function ( v, s ) {

			this.x += v.x * s;
			this.y += v.y * s;
			this.z += v.z * s;

			return this;

		},

		sub: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );
				return this.subVectors( v, w );

			}

			this.x -= v.x;
			this.y -= v.y;
			this.z -= v.z;

			return this;

		},

		subScalar: function ( s ) {

			this.x -= s;
			this.y -= s;
			this.z -= s;

			return this;

		},

		subVectors: function ( a, b ) {

			this.x = a.x - b.x;
			this.y = a.y - b.y;
			this.z = a.z - b.z;

			return this;

		},

		multiply: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );
				return this.multiplyVectors( v, w );

			}

			this.x *= v.x;
			this.y *= v.y;
			this.z *= v.z;

			return this;

		},

		multiplyScalar: function ( scalar ) {

			this.x *= scalar;
			this.y *= scalar;
			this.z *= scalar;

			return this;

		},

		multiplyVectors: function ( a, b ) {

			this.x = a.x * b.x;
			this.y = a.y * b.y;
			this.z = a.z * b.z;

			return this;

		},

		applyEuler: function ( euler ) {

			if ( ! ( euler && euler.isEuler ) ) {

				console.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );

			}

			return this.applyQuaternion( _quaternion.setFromEuler( euler ) );

		},

		applyAxisAngle: function ( axis, angle ) {

			return this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );

		},

		applyMatrix3: function ( m ) {

			var x = this.x, y = this.y, z = this.z;
			var e = m.elements;

			this.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;
			this.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;
			this.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;

			return this;

		},

		applyNormalMatrix: function ( m ) {

			return this.applyMatrix3( m ).normalize();

		},

		applyMatrix4: function ( m ) {

			var x = this.x, y = this.y, z = this.z;
			var e = m.elements;

			var w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );

			this.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;
			this.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;
			this.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;

			return this;

		},

		applyQuaternion: function ( q ) {

			var x = this.x, y = this.y, z = this.z;
			var qx = q.x, qy = q.y, qz = q.z, qw = q.w;

			// calculate quat * vector

			var ix = qw * x + qy * z - qz * y;
			var iy = qw * y + qz * x - qx * z;
			var iz = qw * z + qx * y - qy * x;
			var iw = - qx * x - qy * y - qz * z;

			// calculate result * inverse quat

			this.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;
			this.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;
			this.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;

			return this;

		},

		project: function ( camera ) {

			return this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );

		},

		unproject: function ( camera ) {

			return this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );

		},

		transformDirection: function ( m ) {

			// input: THREE.Matrix4 affine matrix
			// vector interpreted as a direction

			var x = this.x, y = this.y, z = this.z;
			var e = m.elements;

			this.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;
			this.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;
			this.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;

			return this.normalize();

		},

		divide: function ( v ) {

			this.x /= v.x;
			this.y /= v.y;
			this.z /= v.z;

			return this;

		},

		divideScalar: function ( scalar ) {

			return this.multiplyScalar( 1 / scalar );

		},

		min: function ( v ) {

			this.x = Math.min( this.x, v.x );
			this.y = Math.min( this.y, v.y );
			this.z = Math.min( this.z, v.z );

			return this;

		},

		max: function ( v ) {

			this.x = Math.max( this.x, v.x );
			this.y = Math.max( this.y, v.y );
			this.z = Math.max( this.z, v.z );

			return this;

		},

		clamp: function ( min, max ) {

			// assumes min < max, componentwise

			this.x = Math.max( min.x, Math.min( max.x, this.x ) );
			this.y = Math.max( min.y, Math.min( max.y, this.y ) );
			this.z = Math.max( min.z, Math.min( max.z, this.z ) );

			return this;

		},

		clampScalar: function ( minVal, maxVal ) {

			this.x = Math.max( minVal, Math.min( maxVal, this.x ) );
			this.y = Math.max( minVal, Math.min( maxVal, this.y ) );
			this.z = Math.max( minVal, Math.min( maxVal, this.z ) );

			return this;

		},

		clampLength: function ( min, max ) {

			var length = this.length();

			return this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );

		},

		floor: function () {

			this.x = Math.floor( this.x );
			this.y = Math.floor( this.y );
			this.z = Math.floor( this.z );

			return this;

		},

		ceil: function () {

			this.x = Math.ceil( this.x );
			this.y = Math.ceil( this.y );
			this.z = Math.ceil( this.z );

			return this;

		},

		round: function () {

			this.x = Math.round( this.x );
			this.y = Math.round( this.y );
			this.z = Math.round( this.z );

			return this;

		},

		roundToZero: function () {

			this.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );
			this.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );
			this.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );

			return this;

		},

		negate: function () {

			this.x = - this.x;
			this.y = - this.y;
			this.z = - this.z;

			return this;

		},

		dot: function ( v ) {

			return this.x * v.x + this.y * v.y + this.z * v.z;

		},

		// TODO lengthSquared?

		lengthSq: function () {

			return this.x * this.x + this.y * this.y + this.z * this.z;

		},

		length: function () {

			return Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );

		},

		manhattanLength: function () {

			return Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );

		},

		normalize: function () {

			return this.divideScalar( this.length() || 1 );

		},

		setLength: function ( length ) {

			return this.normalize().multiplyScalar( length );

		},

		lerp: function ( v, alpha ) {

			this.x += ( v.x - this.x ) * alpha;
			this.y += ( v.y - this.y ) * alpha;
			this.z += ( v.z - this.z ) * alpha;

			return this;

		},

		lerpVectors: function ( v1, v2, alpha ) {

			return this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );

		},

		cross: function ( v, w ) {

			if ( w !== undefined ) {

				console.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );
				return this.crossVectors( v, w );

			}

			return this.crossVectors( this, v );

		},

		crossVectors: function ( a, b ) {

			var ax = a.x, ay = a.y, az = a.z;
			var bx = b.x, by = b.y, bz = b.z;

			this.x = ay * bz - az * by;
			this.y = az * bx - ax * bz;
			this.z = ax * by - ay * bx;

			return this;

		},

		projectOnVector: function ( v ) {

			var denominator = v.lengthSq();

			if ( denominator === 0 ) { return this.set( 0, 0, 0 ); }

			var scalar = v.dot( this ) / denominator;

			return this.copy( v ).multiplyScalar( scalar );

		},

		projectOnPlane: function ( planeNormal ) {

			_vector.copy( this ).projectOnVector( planeNormal );

			return this.sub( _vector );

		},

		reflect: function ( normal ) {

			// reflect incident vector off plane orthogonal to normal
			// normal is assumed to have unit length

			return this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );

		},

		angleTo: function ( v ) {

			var denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );

			if ( denominator === 0 ) { return Math.PI / 2; }

			var theta = this.dot( v ) / denominator;

			// clamp, to handle numerical problems

			return Math.acos( MathUtils.clamp( theta, - 1, 1 ) );

		},

		distanceTo: function ( v ) {

			return Math.sqrt( this.distanceToSquared( v ) );

		},

		distanceToSquared: function ( v ) {

			var dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;

			return dx * dx + dy * dy + dz * dz;

		},

		manhattanDistanceTo: function ( v ) {

			return Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );

		},

		setFromSpherical: function ( s ) {

			return this.setFromSphericalCoords( s.radius, s.phi, s.theta );

		},

		setFromSphericalCoords: function ( radius, phi, theta ) {

			var sinPhiRadius = Math.sin( phi ) * radius;

			this.x = sinPhiRadius * Math.sin( theta );
			this.y = Math.cos( phi ) * radius;
			this.z = sinPhiRadius * Math.cos( theta );

			return this;

		},

		setFromCylindrical: function ( c ) {

			return this.setFromCylindricalCoords( c.radius, c.theta, c.y );

		},

		setFromCylindricalCoords: function ( radius, theta, y ) {

			this.x = radius * Math.sin( theta );
			this.y = y;
			this.z = radius * Math.cos( theta );

			return this;

		},

		setFromMatrixPosition: function ( m ) {

			var e = m.elements;

			this.x = e[ 12 ];
			this.y = e[ 13 ];
			this.z = e[ 14 ];

			return this;

		},

		setFromMatrixScale: function ( m ) {

			var sx = this.setFromMatrixColumn( m, 0 ).length();
			var sy = this.setFromMatrixColumn( m, 1 ).length();
			var sz = this.setFromMatrixColumn( m, 2 ).length();

			this.x = sx;
			this.y = sy;
			this.z = sz;

			return this;

		},

		setFromMatrixColumn: function ( m, index ) {

			return this.fromArray( m.elements, index * 4 );

		},

		setFromMatrix3Column: function ( m, index ) {

			return this.fromArray( m.elements, index * 3 );

		},

		equals: function ( v ) {

			return ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this.x = array[ offset ];
			this.y = array[ offset + 1 ];
			this.z = array[ offset + 2 ];

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			array[ offset ] = this.x;
			array[ offset + 1 ] = this.y;
			array[ offset + 2 ] = this.z;

			return array;

		},

		fromBufferAttribute: function ( attribute, index, offset ) {

			if ( offset !== undefined ) {

				console.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );

			}

			this.x = attribute.getX( index );
			this.y = attribute.getY( index );
			this.z = attribute.getZ( index );

			return this;

		}

	} );

	var _v1 = new Vector3();
	var _m1 = new Matrix4();
	var _zero = new Vector3( 0, 0, 0 );
	var _one = new Vector3( 1, 1, 1 );
	var _x = new Vector3();
	var _y = new Vector3();
	var _z = new Vector3();

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author supereggbert / http://www.paulbrunt.co.uk/
	 * @author philogb / http://blog.thejit.org/
	 * @author jordi_ros / http://plattsoft.com
	 * @author D1plo1d / http://github.com/D1plo1d
	 * @author alteredq / http://alteredqualia.com/
	 * @author mikael emtinger / http://gomo.se/
	 * @author timknip / http://www.floorplanner.com/
	 * @author bhouston / http://clara.io
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function Matrix4() {

		this.elements = [

			1, 0, 0, 0,
			0, 1, 0, 0,
			0, 0, 1, 0,
			0, 0, 0, 1

		];

		if ( arguments.length > 0 ) {

			console.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );

		}

	}

	Object.assign( Matrix4.prototype, {

		isMatrix4: true,

		set: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {

			var te = this.elements;

			te[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;
			te[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;
			te[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;
			te[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;

			return this;

		},

		identity: function () {

			this.set(

				1, 0, 0, 0,
				0, 1, 0, 0,
				0, 0, 1, 0,
				0, 0, 0, 1

			);

			return this;

		},

		clone: function () {

			return new Matrix4().fromArray( this.elements );

		},

		copy: function ( m ) {

			var te = this.elements;
			var me = m.elements;

			te[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];
			te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];
			te[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];
			te[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];

			return this;

		},

		copyPosition: function ( m ) {

			var te = this.elements, me = m.elements;

			te[ 12 ] = me[ 12 ];
			te[ 13 ] = me[ 13 ];
			te[ 14 ] = me[ 14 ];

			return this;

		},

		extractBasis: function ( xAxis, yAxis, zAxis ) {

			xAxis.setFromMatrixColumn( this, 0 );
			yAxis.setFromMatrixColumn( this, 1 );
			zAxis.setFromMatrixColumn( this, 2 );

			return this;

		},

		makeBasis: function ( xAxis, yAxis, zAxis ) {

			this.set(
				xAxis.x, yAxis.x, zAxis.x, 0,
				xAxis.y, yAxis.y, zAxis.y, 0,
				xAxis.z, yAxis.z, zAxis.z, 0,
				0, 0, 0, 1
			);

			return this;

		},

		extractRotation: function ( m ) {

			// this method does not support reflection matrices

			var te = this.elements;
			var me = m.elements;

			var scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();
			var scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();
			var scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();

			te[ 0 ] = me[ 0 ] * scaleX;
			te[ 1 ] = me[ 1 ] * scaleX;
			te[ 2 ] = me[ 2 ] * scaleX;
			te[ 3 ] = 0;

			te[ 4 ] = me[ 4 ] * scaleY;
			te[ 5 ] = me[ 5 ] * scaleY;
			te[ 6 ] = me[ 6 ] * scaleY;
			te[ 7 ] = 0;

			te[ 8 ] = me[ 8 ] * scaleZ;
			te[ 9 ] = me[ 9 ] * scaleZ;
			te[ 10 ] = me[ 10 ] * scaleZ;
			te[ 11 ] = 0;

			te[ 12 ] = 0;
			te[ 13 ] = 0;
			te[ 14 ] = 0;
			te[ 15 ] = 1;

			return this;

		},

		makeRotationFromEuler: function ( euler ) {

			if ( ! ( euler && euler.isEuler ) ) {

				console.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );

			}

			var te = this.elements;

			var x = euler.x, y = euler.y, z = euler.z;
			var a = Math.cos( x ), b = Math.sin( x );
			var c = Math.cos( y ), d = Math.sin( y );
			var e = Math.cos( z ), f = Math.sin( z );

			if ( euler.order === 'XYZ' ) {

				var ae = a * e, af = a * f, be = b * e, bf = b * f;

				te[ 0 ] = c * e;
				te[ 4 ] = - c * f;
				te[ 8 ] = d;

				te[ 1 ] = af + be * d;
				te[ 5 ] = ae - bf * d;
				te[ 9 ] = - b * c;

				te[ 2 ] = bf - ae * d;
				te[ 6 ] = be + af * d;
				te[ 10 ] = a * c;

			} else if ( euler.order === 'YXZ' ) {

				var ce = c * e, cf = c * f, de = d * e, df = d * f;

				te[ 0 ] = ce + df * b;
				te[ 4 ] = de * b - cf;
				te[ 8 ] = a * d;

				te[ 1 ] = a * f;
				te[ 5 ] = a * e;
				te[ 9 ] = - b;

				te[ 2 ] = cf * b - de;
				te[ 6 ] = df + ce * b;
				te[ 10 ] = a * c;

			} else if ( euler.order === 'ZXY' ) {

				var ce = c * e, cf = c * f, de = d * e, df = d * f;

				te[ 0 ] = ce - df * b;
				te[ 4 ] = - a * f;
				te[ 8 ] = de + cf * b;

				te[ 1 ] = cf + de * b;
				te[ 5 ] = a * e;
				te[ 9 ] = df - ce * b;

				te[ 2 ] = - a * d;
				te[ 6 ] = b;
				te[ 10 ] = a * c;

			} else if ( euler.order === 'ZYX' ) {

				var ae = a * e, af = a * f, be = b * e, bf = b * f;

				te[ 0 ] = c * e;
				te[ 4 ] = be * d - af;
				te[ 8 ] = ae * d + bf;

				te[ 1 ] = c * f;
				te[ 5 ] = bf * d + ae;
				te[ 9 ] = af * d - be;

				te[ 2 ] = - d;
				te[ 6 ] = b * c;
				te[ 10 ] = a * c;

			} else if ( euler.order === 'YZX' ) {

				var ac = a * c, ad = a * d, bc = b * c, bd = b * d;

				te[ 0 ] = c * e;
				te[ 4 ] = bd - ac * f;
				te[ 8 ] = bc * f + ad;

				te[ 1 ] = f;
				te[ 5 ] = a * e;
				te[ 9 ] = - b * e;

				te[ 2 ] = - d * e;
				te[ 6 ] = ad * f + bc;
				te[ 10 ] = ac - bd * f;

			} else if ( euler.order === 'XZY' ) {

				var ac = a * c, ad = a * d, bc = b * c, bd = b * d;

				te[ 0 ] = c * e;
				te[ 4 ] = - f;
				te[ 8 ] = d * e;

				te[ 1 ] = ac * f + bd;
				te[ 5 ] = a * e;
				te[ 9 ] = ad * f - bc;

				te[ 2 ] = bc * f - ad;
				te[ 6 ] = b * e;
				te[ 10 ] = bd * f + ac;

			}

			// bottom row
			te[ 3 ] = 0;
			te[ 7 ] = 0;
			te[ 11 ] = 0;

			// last column
			te[ 12 ] = 0;
			te[ 13 ] = 0;
			te[ 14 ] = 0;
			te[ 15 ] = 1;

			return this;

		},

		makeRotationFromQuaternion: function ( q ) {

			return this.compose( _zero, q, _one );

		},

		lookAt: function ( eye, target, up ) {

			var te = this.elements;

			_z.subVectors( eye, target );

			if ( _z.lengthSq() === 0 ) {

				// eye and target are in the same position

				_z.z = 1;

			}

			_z.normalize();
			_x.crossVectors( up, _z );

			if ( _x.lengthSq() === 0 ) {

				// up and z are parallel

				if ( Math.abs( up.z ) === 1 ) {

					_z.x += 0.0001;

				} else {

					_z.z += 0.0001;

				}

				_z.normalize();
				_x.crossVectors( up, _z );

			}

			_x.normalize();
			_y.crossVectors( _z, _x );

			te[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;
			te[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;
			te[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;

			return this;

		},

		multiply: function ( m, n ) {

			if ( n !== undefined ) {

				console.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );
				return this.multiplyMatrices( m, n );

			}

			return this.multiplyMatrices( this, m );

		},

		premultiply: function ( m ) {

			return this.multiplyMatrices( m, this );

		},

		multiplyMatrices: function ( a, b ) {

			var ae = a.elements;
			var be = b.elements;
			var te = this.elements;

			var a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];
			var a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];
			var a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];
			var a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];

			var b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];
			var b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];
			var b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];
			var b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];

			te[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
			te[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
			te[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
			te[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;

			te[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
			te[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
			te[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
			te[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;

			te[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
			te[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
			te[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
			te[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;

			te[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
			te[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
			te[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
			te[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

			return this;

		},

		multiplyScalar: function ( s ) {

			var te = this.elements;

			te[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;
			te[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;
			te[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;
			te[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;

			return this;

		},

		determinant: function () {

			var te = this.elements;

			var n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];
			var n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];
			var n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];
			var n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];

			//TODO: make this more efficient
			//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )

			return (
				n41 * (
					+ n14 * n23 * n32
					 - n13 * n24 * n32
					 - n14 * n22 * n33
					 + n12 * n24 * n33
					 + n13 * n22 * n34
					 - n12 * n23 * n34
				) +
				n42 * (
					+ n11 * n23 * n34
					 - n11 * n24 * n33
					 + n14 * n21 * n33
					 - n13 * n21 * n34
					 + n13 * n24 * n31
					 - n14 * n23 * n31
				) +
				n43 * (
					+ n11 * n24 * n32
					 - n11 * n22 * n34
					 - n14 * n21 * n32
					 + n12 * n21 * n34
					 + n14 * n22 * n31
					 - n12 * n24 * n31
				) +
				n44 * (
					- n13 * n22 * n31
					 - n11 * n23 * n32
					 + n11 * n22 * n33
					 + n13 * n21 * n32
					 - n12 * n21 * n33
					 + n12 * n23 * n31
				)

			);

		},

		transpose: function () {

			var te = this.elements;
			var tmp;

			tmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;
			tmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;
			tmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;

			tmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;
			tmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;
			tmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;

			return this;

		},

		setPosition: function ( x, y, z ) {

			var te = this.elements;

			if ( x.isVector3 ) {

				te[ 12 ] = x.x;
				te[ 13 ] = x.y;
				te[ 14 ] = x.z;

			} else {

				te[ 12 ] = x;
				te[ 13 ] = y;
				te[ 14 ] = z;

			}

			return this;

		},

		getInverse: function ( m, throwOnDegenerate ) {

			if ( throwOnDegenerate !== undefined ) {

				console.warn( "THREE.Matrix4: .getInverse() can no longer be configured to throw on degenerate." );

			}

			// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm
			var te = this.elements,
				me = m.elements,

				n11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],
				n12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],
				n13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],
				n14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],

				t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,
				t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,
				t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,
				t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;

			var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;

			if ( det === 0 ) { return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ); }

			var detInv = 1 / det;

			te[ 0 ] = t11 * detInv;
			te[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;
			te[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;
			te[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;

			te[ 4 ] = t12 * detInv;
			te[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;
			te[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;
			te[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;

			te[ 8 ] = t13 * detInv;
			te[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;
			te[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;
			te[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;

			te[ 12 ] = t14 * detInv;
			te[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;
			te[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;
			te[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;

			return this;

		},

		scale: function ( v ) {

			var te = this.elements;
			var x = v.x, y = v.y, z = v.z;

			te[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;
			te[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;
			te[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;
			te[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;

			return this;

		},

		getMaxScaleOnAxis: function () {

			var te = this.elements;

			var scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];
			var scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];
			var scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];

			return Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );

		},

		makeTranslation: function ( x, y, z ) {

			this.set(

				1, 0, 0, x,
				0, 1, 0, y,
				0, 0, 1, z,
				0, 0, 0, 1

			);

			return this;

		},

		makeRotationX: function ( theta ) {

			var c = Math.cos( theta ), s = Math.sin( theta );

			this.set(

				1, 0, 0, 0,
				0, c, - s, 0,
				0, s, c, 0,
				0, 0, 0, 1

			);

			return this;

		},

		makeRotationY: function ( theta ) {

			var c = Math.cos( theta ), s = Math.sin( theta );

			this.set(

				 c, 0, s, 0,
				 0, 1, 0, 0,
				- s, 0, c, 0,
				 0, 0, 0, 1

			);

			return this;

		},

		makeRotationZ: function ( theta ) {

			var c = Math.cos( theta ), s = Math.sin( theta );

			this.set(

				c, - s, 0, 0,
				s, c, 0, 0,
				0, 0, 1, 0,
				0, 0, 0, 1

			);

			return this;

		},

		makeRotationAxis: function ( axis, angle ) {

			// Based on http://www.gamedev.net/reference/articles/article1199.asp

			var c = Math.cos( angle );
			var s = Math.sin( angle );
			var t = 1 - c;
			var x = axis.x, y = axis.y, z = axis.z;
			var tx = t * x, ty = t * y;

			this.set(

				tx * x + c, tx * y - s * z, tx * z + s * y, 0,
				tx * y + s * z, ty * y + c, ty * z - s * x, 0,
				tx * z - s * y, ty * z + s * x, t * z * z + c, 0,
				0, 0, 0, 1

			);

			 return this;

		},

		makeScale: function ( x, y, z ) {

			this.set(

				x, 0, 0, 0,
				0, y, 0, 0,
				0, 0, z, 0,
				0, 0, 0, 1

			);

			return this;

		},

		makeShear: function ( x, y, z ) {

			this.set(

				1, y, z, 0,
				x, 1, z, 0,
				x, y, 1, 0,
				0, 0, 0, 1

			);

			return this;

		},

		compose: function ( position, quaternion, scale ) {

			var te = this.elements;

			var x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;
			var x2 = x + x,	y2 = y + y, z2 = z + z;
			var xx = x * x2, xy = x * y2, xz = x * z2;
			var yy = y * y2, yz = y * z2, zz = z * z2;
			var wx = w * x2, wy = w * y2, wz = w * z2;

			var sx = scale.x, sy = scale.y, sz = scale.z;

			te[ 0 ] = ( 1 - ( yy + zz ) ) * sx;
			te[ 1 ] = ( xy + wz ) * sx;
			te[ 2 ] = ( xz - wy ) * sx;
			te[ 3 ] = 0;

			te[ 4 ] = ( xy - wz ) * sy;
			te[ 5 ] = ( 1 - ( xx + zz ) ) * sy;
			te[ 6 ] = ( yz + wx ) * sy;
			te[ 7 ] = 0;

			te[ 8 ] = ( xz + wy ) * sz;
			te[ 9 ] = ( yz - wx ) * sz;
			te[ 10 ] = ( 1 - ( xx + yy ) ) * sz;
			te[ 11 ] = 0;

			te[ 12 ] = position.x;
			te[ 13 ] = position.y;
			te[ 14 ] = position.z;
			te[ 15 ] = 1;

			return this;

		},

		decompose: function ( position, quaternion, scale ) {

			var te = this.elements;

			var sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();
			var sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();
			var sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();

			// if determine is negative, we need to invert one scale
			var det = this.determinant();
			if ( det < 0 ) { sx = - sx; }

			position.x = te[ 12 ];
			position.y = te[ 13 ];
			position.z = te[ 14 ];

			// scale the rotation part
			_m1.copy( this );

			var invSX = 1 / sx;
			var invSY = 1 / sy;
			var invSZ = 1 / sz;

			_m1.elements[ 0 ] *= invSX;
			_m1.elements[ 1 ] *= invSX;
			_m1.elements[ 2 ] *= invSX;

			_m1.elements[ 4 ] *= invSY;
			_m1.elements[ 5 ] *= invSY;
			_m1.elements[ 6 ] *= invSY;

			_m1.elements[ 8 ] *= invSZ;
			_m1.elements[ 9 ] *= invSZ;
			_m1.elements[ 10 ] *= invSZ;

			quaternion.setFromRotationMatrix( _m1 );

			scale.x = sx;
			scale.y = sy;
			scale.z = sz;

			return this;

		},

		makePerspective: function ( left, right, top, bottom, near, far ) {

			if ( far === undefined ) {

				console.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );

			}

			var te = this.elements;
			var x = 2 * near / ( right - left );
			var y = 2 * near / ( top - bottom );

			var a = ( right + left ) / ( right - left );
			var b = ( top + bottom ) / ( top - bottom );
			var c = - ( far + near ) / ( far - near );
			var d = - 2 * far * near / ( far - near );

			te[ 0 ] = x;	te[ 4 ] = 0;	te[ 8 ] = a;	te[ 12 ] = 0;
			te[ 1 ] = 0;	te[ 5 ] = y;	te[ 9 ] = b;	te[ 13 ] = 0;
			te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = c;	te[ 14 ] = d;
			te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = - 1;	te[ 15 ] = 0;

			return this;

		},

		makeOrthographic: function ( left, right, top, bottom, near, far ) {

			var te = this.elements;
			var w = 1.0 / ( right - left );
			var h = 1.0 / ( top - bottom );
			var p = 1.0 / ( far - near );

			var x = ( right + left ) * w;
			var y = ( top + bottom ) * h;
			var z = ( far + near ) * p;

			te[ 0 ] = 2 * w;	te[ 4 ] = 0;	te[ 8 ] = 0;	te[ 12 ] = - x;
			te[ 1 ] = 0;	te[ 5 ] = 2 * h;	te[ 9 ] = 0;	te[ 13 ] = - y;
			te[ 2 ] = 0;	te[ 6 ] = 0;	te[ 10 ] = - 2 * p;	te[ 14 ] = - z;
			te[ 3 ] = 0;	te[ 7 ] = 0;	te[ 11 ] = 0;	te[ 15 ] = 1;

			return this;

		},

		equals: function ( matrix ) {

			var te = this.elements;
			var me = matrix.elements;

			for ( var i = 0; i < 16; i ++ ) {

				if ( te[ i ] !== me[ i ] ) { return false; }

			}

			return true;

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			for ( var i = 0; i < 16; i ++ ) {

				this.elements[ i ] = array[ i + offset ];

			}

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			var te = this.elements;

			array[ offset ] = te[ 0 ];
			array[ offset + 1 ] = te[ 1 ];
			array[ offset + 2 ] = te[ 2 ];
			array[ offset + 3 ] = te[ 3 ];

			array[ offset + 4 ] = te[ 4 ];
			array[ offset + 5 ] = te[ 5 ];
			array[ offset + 6 ] = te[ 6 ];
			array[ offset + 7 ] = te[ 7 ];

			array[ offset + 8 ] = te[ 8 ];
			array[ offset + 9 ] = te[ 9 ];
			array[ offset + 10 ] = te[ 10 ];
			array[ offset + 11 ] = te[ 11 ];

			array[ offset + 12 ] = te[ 12 ];
			array[ offset + 13 ] = te[ 13 ];
			array[ offset + 14 ] = te[ 14 ];
			array[ offset + 15 ] = te[ 15 ];

			return array;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author WestLangley / http://github.com/WestLangley
	 * @author bhouston / http://clara.io
	 */

	var _matrix = new Matrix4();
	var _quaternion$1 = new Quaternion();

	function Euler( x, y, z, order ) {

		this._x = x || 0;
		this._y = y || 0;
		this._z = z || 0;
		this._order = order || Euler.DefaultOrder;

	}

	Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];

	Euler.DefaultOrder = 'XYZ';

	Object.defineProperties( Euler.prototype, {

		x: {

			get: function () {

				return this._x;

			},

			set: function ( value ) {

				this._x = value;
				this._onChangeCallback();

			}

		},

		y: {

			get: function () {

				return this._y;

			},

			set: function ( value ) {

				this._y = value;
				this._onChangeCallback();

			}

		},

		z: {

			get: function () {

				return this._z;

			},

			set: function ( value ) {

				this._z = value;
				this._onChangeCallback();

			}

		},

		order: {

			get: function () {

				return this._order;

			},

			set: function ( value ) {

				this._order = value;
				this._onChangeCallback();

			}

		}

	} );

	Object.assign( Euler.prototype, {

		isEuler: true,

		set: function ( x, y, z, order ) {

			this._x = x;
			this._y = y;
			this._z = z;
			this._order = order || this._order;

			this._onChangeCallback();

			return this;

		},

		clone: function () {

			return new this.constructor( this._x, this._y, this._z, this._order );

		},

		copy: function ( euler ) {

			this._x = euler._x;
			this._y = euler._y;
			this._z = euler._z;
			this._order = euler._order;

			this._onChangeCallback();

			return this;

		},

		setFromRotationMatrix: function ( m, order, update ) {

			var clamp = MathUtils.clamp;

			// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

			var te = m.elements;
			var m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];
			var m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];
			var m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];

			order = order || this._order;

			if ( order === 'XYZ' ) {

				this._y = Math.asin( clamp( m13, - 1, 1 ) );

				if ( Math.abs( m13 ) < 0.9999999 ) {

					this._x = Math.atan2( - m23, m33 );
					this._z = Math.atan2( - m12, m11 );

				} else {

					this._x = Math.atan2( m32, m22 );
					this._z = 0;

				}

			} else if ( order === 'YXZ' ) {

				this._x = Math.asin( - clamp( m23, - 1, 1 ) );

				if ( Math.abs( m23 ) < 0.9999999 ) {

					this._y = Math.atan2( m13, m33 );
					this._z = Math.atan2( m21, m22 );

				} else {

					this._y = Math.atan2( - m31, m11 );
					this._z = 0;

				}

			} else if ( order === 'ZXY' ) {

				this._x = Math.asin( clamp( m32, - 1, 1 ) );

				if ( Math.abs( m32 ) < 0.9999999 ) {

					this._y = Math.atan2( - m31, m33 );
					this._z = Math.atan2( - m12, m22 );

				} else {

					this._y = 0;
					this._z = Math.atan2( m21, m11 );

				}

			} else if ( order === 'ZYX' ) {

				this._y = Math.asin( - clamp( m31, - 1, 1 ) );

				if ( Math.abs( m31 ) < 0.9999999 ) {

					this._x = Math.atan2( m32, m33 );
					this._z = Math.atan2( m21, m11 );

				} else {

					this._x = 0;
					this._z = Math.atan2( - m12, m22 );

				}

			} else if ( order === 'YZX' ) {

				this._z = Math.asin( clamp( m21, - 1, 1 ) );

				if ( Math.abs( m21 ) < 0.9999999 ) {

					this._x = Math.atan2( - m23, m22 );
					this._y = Math.atan2( - m31, m11 );

				} else {

					this._x = 0;
					this._y = Math.atan2( m13, m33 );

				}

			} else if ( order === 'XZY' ) {

				this._z = Math.asin( - clamp( m12, - 1, 1 ) );

				if ( Math.abs( m12 ) < 0.9999999 ) {

					this._x = Math.atan2( m32, m22 );
					this._y = Math.atan2( m13, m11 );

				} else {

					this._x = Math.atan2( - m23, m33 );
					this._y = 0;

				}

			} else {

				console.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );

			}

			this._order = order;

			if ( update !== false ) { this._onChangeCallback(); }

			return this;

		},

		setFromQuaternion: function ( q, order, update ) {

			_matrix.makeRotationFromQuaternion( q );

			return this.setFromRotationMatrix( _matrix, order, update );

		},

		setFromVector3: function ( v, order ) {

			return this.set( v.x, v.y, v.z, order || this._order );

		},

		reorder: function ( newOrder ) {

			// WARNING: this discards revolution information -bhouston

			_quaternion$1.setFromEuler( this );

			return this.setFromQuaternion( _quaternion$1, newOrder );

		},

		equals: function ( euler ) {

			return ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );

		},

		fromArray: function ( array ) {

			this._x = array[ 0 ];
			this._y = array[ 1 ];
			this._z = array[ 2 ];
			if ( array[ 3 ] !== undefined ) { this._order = array[ 3 ]; }

			this._onChangeCallback();

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			array[ offset ] = this._x;
			array[ offset + 1 ] = this._y;
			array[ offset + 2 ] = this._z;
			array[ offset + 3 ] = this._order;

			return array;

		},

		toVector3: function ( optionalResult ) {

			if ( optionalResult ) {

				return optionalResult.set( this._x, this._y, this._z );

			} else {

				return new Vector3( this._x, this._y, this._z );

			}

		},

		_onChange: function ( callback ) {

			this._onChangeCallback = callback;

			return this;

		},

		_onChangeCallback: function () {}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function Layers() {

		this.mask = 1 | 0;

	}

	Object.assign( Layers.prototype, {

		set: function ( channel ) {

			this.mask = 1 << channel | 0;

		},

		enable: function ( channel ) {

			this.mask |= 1 << channel | 0;

		},

		enableAll: function () {

			this.mask = 0xffffffff | 0;

		},

		toggle: function ( channel ) {

			this.mask ^= 1 << channel | 0;

		},

		disable: function ( channel ) {

			this.mask &= ~ ( 1 << channel | 0 );

		},

		disableAll: function () {

			this.mask = 0;

		},

		test: function ( layers ) {

			return ( this.mask & layers.mask ) !== 0;

		}

	} );

	var _object3DId = 0;

	var _v1$1 = new Vector3();
	var _q1 = new Quaternion();
	var _m1$1 = new Matrix4();
	var _target = new Vector3();

	var _position = new Vector3();
	var _scale = new Vector3();
	var _quaternion$2 = new Quaternion();

	var _xAxis = new Vector3( 1, 0, 0 );
	var _yAxis = new Vector3( 0, 1, 0 );
	var _zAxis = new Vector3( 0, 0, 1 );

	var _addedEvent = { type: 'added' };
	var _removedEvent = { type: 'removed' };

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 * @author WestLangley / http://github.com/WestLangley
	 * @author elephantatwork / www.elephantatwork.ch
	 */

	function Object3D() {

		Object.defineProperty( this, 'id', { value: _object3DId ++ } );

		this.uuid = MathUtils.generateUUID();

		this.name = '';
		this.type = 'Object3D';

		this.parent = null;
		this.children = [];

		this.up = Object3D.DefaultUp.clone();

		var position = new Vector3();
		var rotation = new Euler();
		var quaternion = new Quaternion();
		var scale = new Vector3( 1, 1, 1 );

		function onRotationChange() {

			quaternion.setFromEuler( rotation, false );

		}

		function onQuaternionChange() {

			rotation.setFromQuaternion( quaternion, undefined, false );

		}

		rotation._onChange( onRotationChange );
		quaternion._onChange( onQuaternionChange );

		Object.defineProperties( this, {
			position: {
				configurable: true,
				enumerable: true,
				value: position
			},
			rotation: {
				configurable: true,
				enumerable: true,
				value: rotation
			},
			quaternion: {
				configurable: true,
				enumerable: true,
				value: quaternion
			},
			scale: {
				configurable: true,
				enumerable: true,
				value: scale
			},
			modelViewMatrix: {
				value: new Matrix4()
			},
			normalMatrix: {
				value: new Matrix3()
			}
		} );

		this.matrix = new Matrix4();
		this.matrixWorld = new Matrix4();

		this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;
		this.matrixWorldNeedsUpdate = false;

		this.layers = new Layers();
		this.visible = true;

		this.castShadow = false;
		this.receiveShadow = false;

		this.frustumCulled = true;
		this.renderOrder = 0;

		this.userData = {};

	}

	Object3D.DefaultUp = new Vector3( 0, 1, 0 );
	Object3D.DefaultMatrixAutoUpdate = true;

	Object3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: Object3D,

		isObject3D: true,

		onBeforeRender: function () {},
		onAfterRender: function () {},

		applyMatrix4: function ( matrix ) {

			if ( this.matrixAutoUpdate ) { this.updateMatrix(); }

			this.matrix.premultiply( matrix );

			this.matrix.decompose( this.position, this.quaternion, this.scale );

		},

		applyQuaternion: function ( q ) {

			this.quaternion.premultiply( q );

			return this;

		},

		setRotationFromAxisAngle: function ( axis, angle ) {

			// assumes axis is normalized

			this.quaternion.setFromAxisAngle( axis, angle );

		},

		setRotationFromEuler: function ( euler ) {

			this.quaternion.setFromEuler( euler, true );

		},

		setRotationFromMatrix: function ( m ) {

			// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)

			this.quaternion.setFromRotationMatrix( m );

		},

		setRotationFromQuaternion: function ( q ) {

			// assumes q is normalized

			this.quaternion.copy( q );

		},

		rotateOnAxis: function ( axis, angle ) {

			// rotate object on axis in object space
			// axis is assumed to be normalized

			_q1.setFromAxisAngle( axis, angle );

			this.quaternion.multiply( _q1 );

			return this;

		},

		rotateOnWorldAxis: function ( axis, angle ) {

			// rotate object on axis in world space
			// axis is assumed to be normalized
			// method assumes no rotated parent

			_q1.setFromAxisAngle( axis, angle );

			this.quaternion.premultiply( _q1 );

			return this;

		},

		rotateX: function ( angle ) {

			return this.rotateOnAxis( _xAxis, angle );

		},

		rotateY: function ( angle ) {

			return this.rotateOnAxis( _yAxis, angle );

		},

		rotateZ: function ( angle ) {

			return this.rotateOnAxis( _zAxis, angle );

		},

		translateOnAxis: function ( axis, distance ) {

			// translate object by distance along axis in object space
			// axis is assumed to be normalized

			_v1$1.copy( axis ).applyQuaternion( this.quaternion );

			this.position.add( _v1$1.multiplyScalar( distance ) );

			return this;

		},

		translateX: function ( distance ) {

			return this.translateOnAxis( _xAxis, distance );

		},

		translateY: function ( distance ) {

			return this.translateOnAxis( _yAxis, distance );

		},

		translateZ: function ( distance ) {

			return this.translateOnAxis( _zAxis, distance );

		},

		localToWorld: function ( vector ) {

			return vector.applyMatrix4( this.matrixWorld );

		},

		worldToLocal: function ( vector ) {

			return vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );

		},

		lookAt: function ( x, y, z ) {

			// This method does not support objects having non-uniformly-scaled parent(s)

			if ( x.isVector3 ) {

				_target.copy( x );

			} else {

				_target.set( x, y, z );

			}

			var parent = this.parent;

			this.updateWorldMatrix( true, false );

			_position.setFromMatrixPosition( this.matrixWorld );

			if ( this.isCamera || this.isLight ) {

				_m1$1.lookAt( _position, _target, this.up );

			} else {

				_m1$1.lookAt( _target, _position, this.up );

			}

			this.quaternion.setFromRotationMatrix( _m1$1 );

			if ( parent ) {

				_m1$1.extractRotation( parent.matrixWorld );
				_q1.setFromRotationMatrix( _m1$1 );
				this.quaternion.premultiply( _q1.inverse() );

			}

		},

		add: function ( object ) {

			if ( arguments.length > 1 ) {

				for ( var i = 0; i < arguments.length; i ++ ) {

					this.add( arguments[ i ] );

				}

				return this;

			}

			if ( object === this ) {

				console.error( "THREE.Object3D.add: object can't be added as a child of itself.", object );
				return this;

			}

			if ( ( object && object.isObject3D ) ) {

				if ( object.parent !== null ) {

					object.parent.remove( object );

				}

				object.parent = this;
				this.children.push( object );

				object.dispatchEvent( _addedEvent );

			} else {

				console.error( "THREE.Object3D.add: object not an instance of THREE.Object3D.", object );

			}

			return this;

		},

		remove: function ( object ) {

			if ( arguments.length > 1 ) {

				for ( var i = 0; i < arguments.length; i ++ ) {

					this.remove( arguments[ i ] );

				}

				return this;

			}

			var index = this.children.indexOf( object );

			if ( index !== - 1 ) {

				object.parent = null;
				this.children.splice( index, 1 );

				object.dispatchEvent( _removedEvent );

			}

			return this;

		},

		attach: function ( object ) {

			// adds object as a child of this, while maintaining the object's world transform

			this.updateWorldMatrix( true, false );

			_m1$1.getInverse( this.matrixWorld );

			if ( object.parent !== null ) {

				object.parent.updateWorldMatrix( true, false );

				_m1$1.multiply( object.parent.matrixWorld );

			}

			object.applyMatrix4( _m1$1 );

			object.updateWorldMatrix( false, false );

			this.add( object );

			return this;

		},

		getObjectById: function ( id ) {

			return this.getObjectByProperty( 'id', id );

		},

		getObjectByName: function ( name ) {

			return this.getObjectByProperty( 'name', name );

		},

		getObjectByProperty: function ( name, value ) {

			if ( this[ name ] === value ) { return this; }

			for ( var i = 0, l = this.children.length; i < l; i ++ ) {

				var child = this.children[ i ];
				var object = child.getObjectByProperty( name, value );

				if ( object !== undefined ) {

					return object;

				}

			}

			return undefined;

		},

		getWorldPosition: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );
				target = new Vector3();

			}

			this.updateMatrixWorld( true );

			return target.setFromMatrixPosition( this.matrixWorld );

		},

		getWorldQuaternion: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );
				target = new Quaternion();

			}

			this.updateMatrixWorld( true );

			this.matrixWorld.decompose( _position, target, _scale );

			return target;

		},

		getWorldScale: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Object3D: .getWorldScale() target is now required' );
				target = new Vector3();

			}

			this.updateMatrixWorld( true );

			this.matrixWorld.decompose( _position, _quaternion$2, target );

			return target;

		},

		getWorldDirection: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );
				target = new Vector3();

			}

			this.updateMatrixWorld( true );

			var e = this.matrixWorld.elements;

			return target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();

		},

		raycast: function () {},

		traverse: function ( callback ) {

			callback( this );

			var children = this.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].traverse( callback );

			}

		},

		traverseVisible: function ( callback ) {

			if ( this.visible === false ) { return; }

			callback( this );

			var children = this.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].traverseVisible( callback );

			}

		},

		traverseAncestors: function ( callback ) {

			var parent = this.parent;

			if ( parent !== null ) {

				callback( parent );

				parent.traverseAncestors( callback );

			}

		},

		updateMatrix: function () {

			this.matrix.compose( this.position, this.quaternion, this.scale );

			this.matrixWorldNeedsUpdate = true;

		},

		updateMatrixWorld: function ( force ) {

			if ( this.matrixAutoUpdate ) { this.updateMatrix(); }

			if ( this.matrixWorldNeedsUpdate || force ) {

				if ( this.parent === null ) {

					this.matrixWorld.copy( this.matrix );

				} else {

					this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

				}

				this.matrixWorldNeedsUpdate = false;

				force = true;

			}

			// update children

			var children = this.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].updateMatrixWorld( force );

			}

		},

		updateWorldMatrix: function ( updateParents, updateChildren ) {

			var parent = this.parent;

			if ( updateParents === true && parent !== null ) {

				parent.updateWorldMatrix( true, false );

			}

			if ( this.matrixAutoUpdate ) { this.updateMatrix(); }

			if ( this.parent === null ) {

				this.matrixWorld.copy( this.matrix );

			} else {

				this.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );

			}

			// update children

			if ( updateChildren === true ) {

				var children = this.children;

				for ( var i = 0, l = children.length; i < l; i ++ ) {

					children[ i ].updateWorldMatrix( false, true );

				}

			}

		},

		toJSON: function ( meta ) {

			// meta is a string when called from JSON.stringify
			var isRootObject = ( meta === undefined || typeof meta === 'string' );

			var output = {};

			// meta is a hash used to collect geometries, materials.
			// not providing it implies that this is the root object
			// being serialized.
			if ( isRootObject ) {

				// initialize meta obj
				meta = {
					geometries: {},
					materials: {},
					textures: {},
					images: {},
					shapes: {}
				};

				output.metadata = {
					version: 4.5,
					type: 'Object',
					generator: 'Object3D.toJSON'
				};

			}

			// standard Object3D serialization

			var object = {};

			object.uuid = this.uuid;
			object.type = this.type;

			if ( this.name !== '' ) { object.name = this.name; }
			if ( this.castShadow === true ) { object.castShadow = true; }
			if ( this.receiveShadow === true ) { object.receiveShadow = true; }
			if ( this.visible === false ) { object.visible = false; }
			if ( this.frustumCulled === false ) { object.frustumCulled = false; }
			if ( this.renderOrder !== 0 ) { object.renderOrder = this.renderOrder; }
			if ( JSON.stringify( this.userData ) !== '{}' ) { object.userData = this.userData; }

			object.layers = this.layers.mask;
			object.matrix = this.matrix.toArray();

			if ( this.matrixAutoUpdate === false ) { object.matrixAutoUpdate = false; }

			// object specific properties

			if ( this.isInstancedMesh ) {

				object.type = 'InstancedMesh';
				object.count = this.count;
				object.instanceMatrix = this.instanceMatrix.toJSON();

			}

			//

			function serialize( library, element ) {

				if ( library[ element.uuid ] === undefined ) {

					library[ element.uuid ] = element.toJSON( meta );

				}

				return element.uuid;

			}

			if ( this.isMesh || this.isLine || this.isPoints ) {

				object.geometry = serialize( meta.geometries, this.geometry );

				var parameters = this.geometry.parameters;

				if ( parameters !== undefined && parameters.shapes !== undefined ) {

					var shapes = parameters.shapes;

					if ( Array.isArray( shapes ) ) {

						for ( var i = 0, l = shapes.length; i < l; i ++ ) {

							var shape = shapes[ i ];

							serialize( meta.shapes, shape );

						}

					} else {

						serialize( meta.shapes, shapes );

					}

				}

			}

			if ( this.material !== undefined ) {

				if ( Array.isArray( this.material ) ) {

					var uuids = [];

					for ( var i = 0, l = this.material.length; i < l; i ++ ) {

						uuids.push( serialize( meta.materials, this.material[ i ] ) );

					}

					object.material = uuids;

				} else {

					object.material = serialize( meta.materials, this.material );

				}

			}

			//

			if ( this.children.length > 0 ) {

				object.children = [];

				for ( var i = 0; i < this.children.length; i ++ ) {

					object.children.push( this.children[ i ].toJSON( meta ).object );

				}

			}

			if ( isRootObject ) {

				var geometries = extractFromCache( meta.geometries );
				var materials = extractFromCache( meta.materials );
				var textures = extractFromCache( meta.textures );
				var images = extractFromCache( meta.images );
				var shapes = extractFromCache( meta.shapes );

				if ( geometries.length > 0 ) { output.geometries = geometries; }
				if ( materials.length > 0 ) { output.materials = materials; }
				if ( textures.length > 0 ) { output.textures = textures; }
				if ( images.length > 0 ) { output.images = images; }
				if ( shapes.length > 0 ) { output.shapes = shapes; }

			}

			output.object = object;

			return output;

			// extract data from the cache hash
			// remove metadata on each item
			// and return as array
			function extractFromCache( cache ) {

				var values = [];
				for ( var key in cache ) {

					var data = cache[ key ];
					delete data.metadata;
					values.push( data );

				}
				return values;

			}

		},

		clone: function ( recursive ) {

			return new this.constructor().copy( this, recursive );

		},

		copy: function ( source, recursive ) {

			if ( recursive === undefined ) { recursive = true; }

			this.name = source.name;

			this.up.copy( source.up );

			this.position.copy( source.position );
			this.quaternion.copy( source.quaternion );
			this.scale.copy( source.scale );

			this.matrix.copy( source.matrix );
			this.matrixWorld.copy( source.matrixWorld );

			this.matrixAutoUpdate = source.matrixAutoUpdate;
			this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;

			this.layers.mask = source.layers.mask;
			this.visible = source.visible;

			this.castShadow = source.castShadow;
			this.receiveShadow = source.receiveShadow;

			this.frustumCulled = source.frustumCulled;
			this.renderOrder = source.renderOrder;

			this.userData = JSON.parse( JSON.stringify( source.userData ) );

			if ( recursive === true ) {

				for ( var i = 0; i < source.children.length; i ++ ) {

					var child = source.children[ i ];
					this.add( child.clone() );

				}

			}

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function Scene() {

		Object3D.call( this );

		this.type = 'Scene';

		this.background = null;
		this.environment = null;
		this.fog = null;

		this.overrideMaterial = null;

		this.autoUpdate = true; // checked by the renderer

		if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

			__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef

		}

	}

	Scene.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Scene,

		isScene: true,

		copy: function ( source, recursive ) {

			Object3D.prototype.copy.call( this, source, recursive );

			if ( source.background !== null ) { this.background = source.background.clone(); }
			if ( source.environment !== null ) { this.environment = source.environment.clone(); }
			if ( source.fog !== null ) { this.fog = source.fog.clone(); }

			if ( source.overrideMaterial !== null ) { this.overrideMaterial = source.overrideMaterial.clone(); }

			this.autoUpdate = source.autoUpdate;
			this.matrixAutoUpdate = source.matrixAutoUpdate;

			return this;

		},

		toJSON: function ( meta ) {

			var data = Object3D.prototype.toJSON.call( this, meta );

			if ( this.background !== null ) { data.object.background = this.background.toJSON( meta ); }
			if ( this.environment !== null ) { data.object.environment = this.environment.toJSON( meta ); }
			if ( this.fog !== null ) { data.object.fog = this.fog.toJSON(); }

			return data;

		},

		dispose: function () {

			this.dispatchEvent( { type: 'dispose' } );

		}

	} );

	var _points = [
		new Vector3(),
		new Vector3(),
		new Vector3(),
		new Vector3(),
		new Vector3(),
		new Vector3(),
		new Vector3(),
		new Vector3()
	];

	var _vector$1 = new Vector3();

	var _box = new Box3();

	// triangle centered vertices

	var _v0 = new Vector3();
	var _v1$2 = new Vector3();
	var _v2 = new Vector3();

	// triangle edge vectors

	var _f0 = new Vector3();
	var _f1 = new Vector3();
	var _f2 = new Vector3();

	var _center = new Vector3();
	var _extents = new Vector3();
	var _triangleNormal = new Vector3();
	var _testAxis = new Vector3();

	/**
	 * @author bhouston / http://clara.io
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function Box3( min, max ) {

		this.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );
		this.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );

	}


	Object.assign( Box3.prototype, {

		isBox3: true,

		set: function ( min, max ) {

			this.min.copy( min );
			this.max.copy( max );

			return this;

		},

		setFromArray: function ( array ) {

			var minX = + Infinity;
			var minY = + Infinity;
			var minZ = + Infinity;

			var maxX = - Infinity;
			var maxY = - Infinity;
			var maxZ = - Infinity;

			for ( var i = 0, l = array.length; i < l; i += 3 ) {

				var x = array[ i ];
				var y = array[ i + 1 ];
				var z = array[ i + 2 ];

				if ( x < minX ) { minX = x; }
				if ( y < minY ) { minY = y; }
				if ( z < minZ ) { minZ = z; }

				if ( x > maxX ) { maxX = x; }
				if ( y > maxY ) { maxY = y; }
				if ( z > maxZ ) { maxZ = z; }

			}

			this.min.set( minX, minY, minZ );
			this.max.set( maxX, maxY, maxZ );

			return this;

		},

		setFromBufferAttribute: function ( attribute ) {

			var minX = + Infinity;
			var minY = + Infinity;
			var minZ = + Infinity;

			var maxX = - Infinity;
			var maxY = - Infinity;
			var maxZ = - Infinity;

			for ( var i = 0, l = attribute.count; i < l; i ++ ) {

				var x = attribute.getX( i );
				var y = attribute.getY( i );
				var z = attribute.getZ( i );

				if ( x < minX ) { minX = x; }
				if ( y < minY ) { minY = y; }
				if ( z < minZ ) { minZ = z; }

				if ( x > maxX ) { maxX = x; }
				if ( y > maxY ) { maxY = y; }
				if ( z > maxZ ) { maxZ = z; }

			}

			this.min.set( minX, minY, minZ );
			this.max.set( maxX, maxY, maxZ );

			return this;

		},

		setFromPoints: function ( points ) {

			this.makeEmpty();

			for ( var i = 0, il = points.length; i < il; i ++ ) {

				this.expandByPoint( points[ i ] );

			}

			return this;

		},

		setFromCenterAndSize: function ( center, size ) {

			var halfSize = _vector$1.copy( size ).multiplyScalar( 0.5 );

			this.min.copy( center ).sub( halfSize );
			this.max.copy( center ).add( halfSize );

			return this;

		},

		setFromObject: function ( object ) {

			this.makeEmpty();

			return this.expandByObject( object );

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( box ) {

			this.min.copy( box.min );
			this.max.copy( box.max );

			return this;

		},

		makeEmpty: function () {

			this.min.x = this.min.y = this.min.z = + Infinity;
			this.max.x = this.max.y = this.max.z = - Infinity;

			return this;

		},

		isEmpty: function () {

			// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

			return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );

		},

		getCenter: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Box3: .getCenter() target is now required' );
				target = new Vector3();

			}

			return this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

		},

		getSize: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Box3: .getSize() target is now required' );
				target = new Vector3();

			}

			return this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );

		},

		expandByPoint: function ( point ) {

			this.min.min( point );
			this.max.max( point );

			return this;

		},

		expandByVector: function ( vector ) {

			this.min.sub( vector );
			this.max.add( vector );

			return this;

		},

		expandByScalar: function ( scalar ) {

			this.min.addScalar( - scalar );
			this.max.addScalar( scalar );

			return this;

		},

		expandByObject: function ( object ) {

			// Computes the world-axis-aligned bounding box of an object (including its children),
			// accounting for both the object's, and children's, world transforms

			object.updateWorldMatrix( false, false );

			var geometry = object.geometry;

			if ( geometry !== undefined ) {

				if ( geometry.boundingBox === null ) {

					geometry.computeBoundingBox();

				}

				_box.copy( geometry.boundingBox );
				_box.applyMatrix4( object.matrixWorld );

				this.union( _box );

			}

			var children = object.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				this.expandByObject( children[ i ] );

			}

			return this;

		},

		containsPoint: function ( point ) {

			return point.x < this.min.x || point.x > this.max.x ||
				point.y < this.min.y || point.y > this.max.y ||
				point.z < this.min.z || point.z > this.max.z ? false : true;

		},

		containsBox: function ( box ) {

			return this.min.x <= box.min.x && box.max.x <= this.max.x &&
				this.min.y <= box.min.y && box.max.y <= this.max.y &&
				this.min.z <= box.min.z && box.max.z <= this.max.z;

		},

		getParameter: function ( point, target ) {

			// This can potentially have a divide by zero if the box
			// has a size dimension of 0.

			if ( target === undefined ) {

				console.warn( 'THREE.Box3: .getParameter() target is now required' );
				target = new Vector3();

			}

			return target.set(
				( point.x - this.min.x ) / ( this.max.x - this.min.x ),
				( point.y - this.min.y ) / ( this.max.y - this.min.y ),
				( point.z - this.min.z ) / ( this.max.z - this.min.z )
			);

		},

		intersectsBox: function ( box ) {

			// using 6 splitting planes to rule out intersections.
			return box.max.x < this.min.x || box.min.x > this.max.x ||
				box.max.y < this.min.y || box.min.y > this.max.y ||
				box.max.z < this.min.z || box.min.z > this.max.z ? false : true;

		},

		intersectsSphere: function ( sphere ) {

			// Find the point on the AABB closest to the sphere center.
			this.clampPoint( sphere.center, _vector$1 );

			// If that point is inside the sphere, the AABB and sphere intersect.
			return _vector$1.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );

		},

		intersectsPlane: function ( plane ) {

			// We compute the minimum and maximum dot product values. If those values
			// are on the same side (back or front) of the plane, then there is no intersection.

			var min, max;

			if ( plane.normal.x > 0 ) {

				min = plane.normal.x * this.min.x;
				max = plane.normal.x * this.max.x;

			} else {

				min = plane.normal.x * this.max.x;
				max = plane.normal.x * this.min.x;

			}

			if ( plane.normal.y > 0 ) {

				min += plane.normal.y * this.min.y;
				max += plane.normal.y * this.max.y;

			} else {

				min += plane.normal.y * this.max.y;
				max += plane.normal.y * this.min.y;

			}

			if ( plane.normal.z > 0 ) {

				min += plane.normal.z * this.min.z;
				max += plane.normal.z * this.max.z;

			} else {

				min += plane.normal.z * this.max.z;
				max += plane.normal.z * this.min.z;

			}

			return ( min <= - plane.constant && max >= - plane.constant );

		},

		intersectsTriangle: function ( triangle ) {

			if ( this.isEmpty() ) {

				return false;

			}

			// compute box center and extents
			this.getCenter( _center );
			_extents.subVectors( this.max, _center );

			// translate triangle to aabb origin
			_v0.subVectors( triangle.a, _center );
			_v1$2.subVectors( triangle.b, _center );
			_v2.subVectors( triangle.c, _center );

			// compute edge vectors for triangle
			_f0.subVectors( _v1$2, _v0 );
			_f1.subVectors( _v2, _v1$2 );
			_f2.subVectors( _v0, _v2 );

			// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb
			// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation
			// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)
			var axes = [
				0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,
				_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,
				- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0
			];
			if ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {

				return false;

			}

			// test 3 face normals from the aabb
			axes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];
			if ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {

				return false;

			}

			// finally testing the face normal of the triangle
			// use already existing triangle edge vectors here
			_triangleNormal.crossVectors( _f0, _f1 );
			axes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];

			return satForAxes( axes, _v0, _v1$2, _v2, _extents );

		},

		clampPoint: function ( point, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Box3: .clampPoint() target is now required' );
				target = new Vector3();

			}

			return target.copy( point ).clamp( this.min, this.max );

		},

		distanceToPoint: function ( point ) {

			var clampedPoint = _vector$1.copy( point ).clamp( this.min, this.max );

			return clampedPoint.sub( point ).length();

		},

		getBoundingSphere: function ( target ) {

			if ( target === undefined ) {

				console.error( 'THREE.Box3: .getBoundingSphere() target is now required' );
				//target = new Sphere(); // removed to avoid cyclic dependency

			}

			this.getCenter( target.center );

			target.radius = this.getSize( _vector$1 ).length() * 0.5;

			return target;

		},

		intersect: function ( box ) {

			this.min.max( box.min );
			this.max.min( box.max );

			// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.
			if ( this.isEmpty() ) { this.makeEmpty(); }

			return this;

		},

		union: function ( box ) {

			this.min.min( box.min );
			this.max.max( box.max );

			return this;

		},

		applyMatrix4: function ( matrix ) {

			// transform of empty box is an empty box.
			if ( this.isEmpty() ) { return this; }

			// NOTE: I am using a binary pattern to specify all 2^3 combinations below
			_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000
			_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001
			_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010
			_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011
			_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100
			_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101
			_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110
			_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111

			this.setFromPoints( _points );

			return this;

		},

		translate: function ( offset ) {

			this.min.add( offset );
			this.max.add( offset );

			return this;

		},

		equals: function ( box ) {

			return box.min.equals( this.min ) && box.max.equals( this.max );

		}

	} );

	function satForAxes( axes, v0, v1, v2, extents ) {

		var i, j;

		for ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {

			_testAxis.fromArray( axes, i );
			// project the aabb onto the seperating axis
			var r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );
			// project all 3 vertices of the triangle onto the seperating axis
			var p0 = v0.dot( _testAxis );
			var p1 = v1.dot( _testAxis );
			var p2 = v2.dot( _testAxis );
			// actual test, basically see if either of the most extreme of the triangle points intersects r
			if ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {

				// points of the projected triangle are outside the projected half-length of the aabb
				// the axis is seperating and we can exit
				return false;

			}

		}

		return true;

	}

	var _box$1 = new Box3();

	/**
	 * @author bhouston / http://clara.io
	 * @author mrdoob / http://mrdoob.com/
	 */

	function Sphere( center, radius ) {

		this.center = ( center !== undefined ) ? center : new Vector3();
		this.radius = ( radius !== undefined ) ? radius : 0;

	}

	Object.assign( Sphere.prototype, {

		set: function ( center, radius ) {

			this.center.copy( center );
			this.radius = radius;

			return this;

		},

		setFromPoints: function ( points, optionalCenter ) {

			var center = this.center;

			if ( optionalCenter !== undefined ) {

				center.copy( optionalCenter );

			} else {

				_box$1.setFromPoints( points ).getCenter( center );

			}

			var maxRadiusSq = 0;

			for ( var i = 0, il = points.length; i < il; i ++ ) {

				maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );

			}

			this.radius = Math.sqrt( maxRadiusSq );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( sphere ) {

			this.center.copy( sphere.center );
			this.radius = sphere.radius;

			return this;

		},

		empty: function () {

			return ( this.radius <= 0 );

		},

		containsPoint: function ( point ) {

			return ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );

		},

		distanceToPoint: function ( point ) {

			return ( point.distanceTo( this.center ) - this.radius );

		},

		intersectsSphere: function ( sphere ) {

			var radiusSum = this.radius + sphere.radius;

			return sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );

		},

		intersectsBox: function ( box ) {

			return box.intersectsSphere( this );

		},

		intersectsPlane: function ( plane ) {

			return Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;

		},

		clampPoint: function ( point, target ) {

			var deltaLengthSq = this.center.distanceToSquared( point );

			if ( target === undefined ) {

				console.warn( 'THREE.Sphere: .clampPoint() target is now required' );
				target = new Vector3();

			}

			target.copy( point );

			if ( deltaLengthSq > ( this.radius * this.radius ) ) {

				target.sub( this.center ).normalize();
				target.multiplyScalar( this.radius ).add( this.center );

			}

			return target;

		},

		getBoundingBox: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );
				target = new Box3();

			}

			target.set( this.center, this.center );
			target.expandByScalar( this.radius );

			return target;

		},

		applyMatrix4: function ( matrix ) {

			this.center.applyMatrix4( matrix );
			this.radius = this.radius * matrix.getMaxScaleOnAxis();

			return this;

		},

		translate: function ( offset ) {

			this.center.add( offset );

			return this;

		},

		equals: function ( sphere ) {

			return sphere.center.equals( this.center ) && ( sphere.radius === this.radius );

		}

	} );

	var _vector$2 = new Vector3();
	var _segCenter = new Vector3();
	var _segDir = new Vector3();
	var _diff = new Vector3();

	var _edge1 = new Vector3();
	var _edge2 = new Vector3();
	var _normal = new Vector3();

	/**
	 * @author bhouston / http://clara.io
	 */

	function Ray( origin, direction ) {

		this.origin = ( origin !== undefined ) ? origin : new Vector3();
		this.direction = ( direction !== undefined ) ? direction : new Vector3( 0, 0, - 1 );

	}

	Object.assign( Ray.prototype, {

		set: function ( origin, direction ) {

			this.origin.copy( origin );
			this.direction.copy( direction );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( ray ) {

			this.origin.copy( ray.origin );
			this.direction.copy( ray.direction );

			return this;

		},

		at: function ( t, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Ray: .at() target is now required' );
				target = new Vector3();

			}

			return target.copy( this.direction ).multiplyScalar( t ).add( this.origin );

		},

		lookAt: function ( v ) {

			this.direction.copy( v ).sub( this.origin ).normalize();

			return this;

		},

		recast: function ( t ) {

			this.origin.copy( this.at( t, _vector$2 ) );

			return this;

		},

		closestPointToPoint: function ( point, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );
				target = new Vector3();

			}

			target.subVectors( point, this.origin );

			var directionDistance = target.dot( this.direction );

			if ( directionDistance < 0 ) {

				return target.copy( this.origin );

			}

			return target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

		},

		distanceToPoint: function ( point ) {

			return Math.sqrt( this.distanceSqToPoint( point ) );

		},

		distanceSqToPoint: function ( point ) {

			var directionDistance = _vector$2.subVectors( point, this.origin ).dot( this.direction );

			// point behind the ray

			if ( directionDistance < 0 ) {

				return this.origin.distanceToSquared( point );

			}

			_vector$2.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );

			return _vector$2.distanceToSquared( point );

		},

		distanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {

			// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h
			// It returns the min distance between the ray and the segment
			// defined by v0 and v1
			// It can also set two optional targets :
			// - The closest point on the ray
			// - The closest point on the segment

			_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );
			_segDir.copy( v1 ).sub( v0 ).normalize();
			_diff.copy( this.origin ).sub( _segCenter );

			var segExtent = v0.distanceTo( v1 ) * 0.5;
			var a01 = - this.direction.dot( _segDir );
			var b0 = _diff.dot( this.direction );
			var b1 = - _diff.dot( _segDir );
			var c = _diff.lengthSq();
			var det = Math.abs( 1 - a01 * a01 );
			var s0, s1, sqrDist, extDet;

			if ( det > 0 ) {

				// The ray and segment are not parallel.

				s0 = a01 * b1 - b0;
				s1 = a01 * b0 - b1;
				extDet = segExtent * det;

				if ( s0 >= 0 ) {

					if ( s1 >= - extDet ) {

						if ( s1 <= extDet ) {

							// region 0
							// Minimum at interior points of ray and segment.

							var invDet = 1 / det;
							s0 *= invDet;
							s1 *= invDet;
							sqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;

						} else {

							// region 1

							s1 = segExtent;
							s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
							sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

						}

					} else {

						// region 5

						s1 = - segExtent;
						s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					}

				} else {

					if ( s1 <= - extDet ) {

						// region 4

						s0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );
						s1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					} else if ( s1 <= extDet ) {

						// region 3

						s0 = 0;
						s1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );
						sqrDist = s1 * ( s1 + 2 * b1 ) + c;

					} else {

						// region 2

						s0 = Math.max( 0, - ( a01 * segExtent + b0 ) );
						s1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );
						sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

					}

				}

			} else {

				// Ray and segment are parallel.

				s1 = ( a01 > 0 ) ? - segExtent : segExtent;
				s0 = Math.max( 0, - ( a01 * s1 + b0 ) );
				sqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;

			}

			if ( optionalPointOnRay ) {

				optionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );

			}

			if ( optionalPointOnSegment ) {

				optionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );

			}

			return sqrDist;

		},

		intersectSphere: function ( sphere, target ) {

			_vector$2.subVectors( sphere.center, this.origin );
			var tca = _vector$2.dot( this.direction );
			var d2 = _vector$2.dot( _vector$2 ) - tca * tca;
			var radius2 = sphere.radius * sphere.radius;

			if ( d2 > radius2 ) { return null; }

			var thc = Math.sqrt( radius2 - d2 );

			// t0 = first intersect point - entrance on front of sphere
			var t0 = tca - thc;

			// t1 = second intersect point - exit point on back of sphere
			var t1 = tca + thc;

			// test to see if both t0 and t1 are behind the ray - if so, return null
			if ( t0 < 0 && t1 < 0 ) { return null; }

			// test to see if t0 is behind the ray:
			// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,
			// in order to always return an intersect point that is in front of the ray.
			if ( t0 < 0 ) { return this.at( t1, target ); }

			// else t0 is in front of the ray, so return the first collision point scaled by t0
			return this.at( t0, target );

		},

		intersectsSphere: function ( sphere ) {

			return this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );

		},

		distanceToPlane: function ( plane ) {

			var denominator = plane.normal.dot( this.direction );

			if ( denominator === 0 ) {

				// line is coplanar, return origin
				if ( plane.distanceToPoint( this.origin ) === 0 ) {

					return 0;

				}

				// Null is preferable to undefined since undefined means.... it is undefined

				return null;

			}

			var t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;

			// Return if the ray never intersects the plane

			return t >= 0 ? t : null;

		},

		intersectPlane: function ( plane, target ) {

			var t = this.distanceToPlane( plane );

			if ( t === null ) {

				return null;

			}

			return this.at( t, target );

		},

		intersectsPlane: function ( plane ) {

			// check if the ray lies on the plane first

			var distToPoint = plane.distanceToPoint( this.origin );

			if ( distToPoint === 0 ) {

				return true;

			}

			var denominator = plane.normal.dot( this.direction );

			if ( denominator * distToPoint < 0 ) {

				return true;

			}

			// ray origin is behind the plane (and is pointing behind it)

			return false;

		},

		intersectBox: function ( box, target ) {

			var tmin, tmax, tymin, tymax, tzmin, tzmax;

			var invdirx = 1 / this.direction.x,
				invdiry = 1 / this.direction.y,
				invdirz = 1 / this.direction.z;

			var origin = this.origin;

			if ( invdirx >= 0 ) {

				tmin = ( box.min.x - origin.x ) * invdirx;
				tmax = ( box.max.x - origin.x ) * invdirx;

			} else {

				tmin = ( box.max.x - origin.x ) * invdirx;
				tmax = ( box.min.x - origin.x ) * invdirx;

			}

			if ( invdiry >= 0 ) {

				tymin = ( box.min.y - origin.y ) * invdiry;
				tymax = ( box.max.y - origin.y ) * invdiry;

			} else {

				tymin = ( box.max.y - origin.y ) * invdiry;
				tymax = ( box.min.y - origin.y ) * invdiry;

			}

			if ( ( tmin > tymax ) || ( tymin > tmax ) ) { return null; }

			// These lines also handle the case where tmin or tmax is NaN
			// (result of 0 * Infinity). x !== x returns true if x is NaN

			if ( tymin > tmin || tmin !== tmin ) { tmin = tymin; }

			if ( tymax < tmax || tmax !== tmax ) { tmax = tymax; }

			if ( invdirz >= 0 ) {

				tzmin = ( box.min.z - origin.z ) * invdirz;
				tzmax = ( box.max.z - origin.z ) * invdirz;

			} else {

				tzmin = ( box.max.z - origin.z ) * invdirz;
				tzmax = ( box.min.z - origin.z ) * invdirz;

			}

			if ( ( tmin > tzmax ) || ( tzmin > tmax ) ) { return null; }

			if ( tzmin > tmin || tmin !== tmin ) { tmin = tzmin; }

			if ( tzmax < tmax || tmax !== tmax ) { tmax = tzmax; }

			//return point closest to the ray (positive side)

			if ( tmax < 0 ) { return null; }

			return this.at( tmin >= 0 ? tmin : tmax, target );

		},

		intersectsBox: function ( box ) {

			return this.intersectBox( box, _vector$2 ) !== null;

		},

		intersectTriangle: function ( a, b, c, backfaceCulling, target ) {

			// Compute the offset origin, edges, and normal.

			// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h

			_edge1.subVectors( b, a );
			_edge2.subVectors( c, a );
			_normal.crossVectors( _edge1, _edge2 );

			// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,
			// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by
			//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))
			//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))
			//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)
			var DdN = this.direction.dot( _normal );
			var sign;

			if ( DdN > 0 ) {

				if ( backfaceCulling ) { return null; }
				sign = 1;

			} else if ( DdN < 0 ) {

				sign = - 1;
				DdN = - DdN;

			} else {

				return null;

			}

			_diff.subVectors( this.origin, a );
			var DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );

			// b1 < 0, no intersection
			if ( DdQxE2 < 0 ) {

				return null;

			}

			var DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );

			// b2 < 0, no intersection
			if ( DdE1xQ < 0 ) {

				return null;

			}

			// b1+b2 > 1, no intersection
			if ( DdQxE2 + DdE1xQ > DdN ) {

				return null;

			}

			// Line intersects triangle, check if ray does.
			var QdN = - sign * _diff.dot( _normal );

			// t < 0, no intersection
			if ( QdN < 0 ) {

				return null;

			}

			// Ray intersects triangle.
			return this.at( QdN / DdN, target );

		},

		applyMatrix4: function ( matrix4 ) {

			this.origin.applyMatrix4( matrix4 );
			this.direction.transformDirection( matrix4 );

			return this;

		},

		equals: function ( ray ) {

			return ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );

		}

	} );

	/**
	 * @author bhouston / http://clara.io
	 */

	var _vector1 = new Vector3();
	var _vector2 = new Vector3();
	var _normalMatrix = new Matrix3();

	function Plane( normal, constant ) {

		// normal is assumed to be normalized

		this.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );
		this.constant = ( constant !== undefined ) ? constant : 0;

	}

	Object.assign( Plane.prototype, {

		isPlane: true,

		set: function ( normal, constant ) {

			this.normal.copy( normal );
			this.constant = constant;

			return this;

		},

		setComponents: function ( x, y, z, w ) {

			this.normal.set( x, y, z );
			this.constant = w;

			return this;

		},

		setFromNormalAndCoplanarPoint: function ( normal, point ) {

			this.normal.copy( normal );
			this.constant = - point.dot( this.normal );

			return this;

		},

		setFromCoplanarPoints: function ( a, b, c ) {

			var normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();

			// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?

			this.setFromNormalAndCoplanarPoint( normal, a );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( plane ) {

			this.normal.copy( plane.normal );
			this.constant = plane.constant;

			return this;

		},

		normalize: function () {

			// Note: will lead to a divide by zero if the plane is invalid.

			var inverseNormalLength = 1.0 / this.normal.length();
			this.normal.multiplyScalar( inverseNormalLength );
			this.constant *= inverseNormalLength;

			return this;

		},

		negate: function () {

			this.constant *= - 1;
			this.normal.negate();

			return this;

		},

		distanceToPoint: function ( point ) {

			return this.normal.dot( point ) + this.constant;

		},

		distanceToSphere: function ( sphere ) {

			return this.distanceToPoint( sphere.center ) - sphere.radius;

		},

		projectPoint: function ( point, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Plane: .projectPoint() target is now required' );
				target = new Vector3();

			}

			return target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );

		},

		intersectLine: function ( line, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Plane: .intersectLine() target is now required' );
				target = new Vector3();

			}

			var direction = line.delta( _vector1 );

			var denominator = this.normal.dot( direction );

			if ( denominator === 0 ) {

				// line is coplanar, return origin
				if ( this.distanceToPoint( line.start ) === 0 ) {

					return target.copy( line.start );

				}

				// Unsure if this is the correct method to handle this case.
				return undefined;

			}

			var t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;

			if ( t < 0 || t > 1 ) {

				return undefined;

			}

			return target.copy( direction ).multiplyScalar( t ).add( line.start );

		},

		intersectsLine: function ( line ) {

			// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.

			var startSign = this.distanceToPoint( line.start );
			var endSign = this.distanceToPoint( line.end );

			return ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );

		},

		intersectsBox: function ( box ) {

			return box.intersectsPlane( this );

		},

		intersectsSphere: function ( sphere ) {

			return sphere.intersectsPlane( this );

		},

		coplanarPoint: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Plane: .coplanarPoint() target is now required' );
				target = new Vector3();

			}

			return target.copy( this.normal ).multiplyScalar( - this.constant );

		},

		applyMatrix4: function ( matrix, optionalNormalMatrix ) {

			var normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );

			var referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );

			var normal = this.normal.applyMatrix3( normalMatrix ).normalize();

			this.constant = - referencePoint.dot( normal );

			return this;

		},

		translate: function ( offset ) {

			this.constant -= offset.dot( this.normal );

			return this;

		},

		equals: function ( plane ) {

			return plane.normal.equals( this.normal ) && ( plane.constant === this.constant );

		}

	} );

	/**
	 * @author bhouston / http://clara.io
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _v0$1 = new Vector3();
	var _v1$3 = new Vector3();
	var _v2$1 = new Vector3();
	var _v3 = new Vector3();

	var _vab = new Vector3();
	var _vac = new Vector3();
	var _vbc = new Vector3();
	var _vap = new Vector3();
	var _vbp = new Vector3();
	var _vcp = new Vector3();

	function Triangle( a, b, c ) {

		this.a = ( a !== undefined ) ? a : new Vector3();
		this.b = ( b !== undefined ) ? b : new Vector3();
		this.c = ( c !== undefined ) ? c : new Vector3();

	}

	Object.assign( Triangle, {

		getNormal: function ( a, b, c, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Triangle: .getNormal() target is now required' );
				target = new Vector3();

			}

			target.subVectors( c, b );
			_v0$1.subVectors( a, b );
			target.cross( _v0$1 );

			var targetLengthSq = target.lengthSq();
			if ( targetLengthSq > 0 ) {

				return target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );

			}

			return target.set( 0, 0, 0 );

		},

		// static/instance method to calculate barycentric coordinates
		// based on: http://www.blackpawn.com/texts/pointinpoly/default.html
		getBarycoord: function ( point, a, b, c, target ) {

			_v0$1.subVectors( c, a );
			_v1$3.subVectors( b, a );
			_v2$1.subVectors( point, a );

			var dot00 = _v0$1.dot( _v0$1 );
			var dot01 = _v0$1.dot( _v1$3 );
			var dot02 = _v0$1.dot( _v2$1 );
			var dot11 = _v1$3.dot( _v1$3 );
			var dot12 = _v1$3.dot( _v2$1 );

			var denom = ( dot00 * dot11 - dot01 * dot01 );

			if ( target === undefined ) {

				console.warn( 'THREE.Triangle: .getBarycoord() target is now required' );
				target = new Vector3();

			}

			// collinear or singular triangle
			if ( denom === 0 ) {

				// arbitrary location outside of triangle?
				// not sure if this is the best idea, maybe should be returning undefined
				return target.set( - 2, - 1, - 1 );

			}

			var invDenom = 1 / denom;
			var u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;
			var v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;

			// barycentric coordinates must always sum to 1
			return target.set( 1 - u - v, v, u );

		},

		containsPoint: function ( point, a, b, c ) {

			Triangle.getBarycoord( point, a, b, c, _v3 );

			return ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );

		},

		getUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {

			this.getBarycoord( point, p1, p2, p3, _v3 );

			target.set( 0, 0 );
			target.addScaledVector( uv1, _v3.x );
			target.addScaledVector( uv2, _v3.y );
			target.addScaledVector( uv3, _v3.z );

			return target;

		},

		isFrontFacing: function ( a, b, c, direction ) {

			_v0$1.subVectors( c, b );
			_v1$3.subVectors( a, b );

			// strictly front facing
			return ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;

		}

	} );

	Object.assign( Triangle.prototype, {

		set: function ( a, b, c ) {

			this.a.copy( a );
			this.b.copy( b );
			this.c.copy( c );

			return this;

		},

		setFromPointsAndIndices: function ( points, i0, i1, i2 ) {

			this.a.copy( points[ i0 ] );
			this.b.copy( points[ i1 ] );
			this.c.copy( points[ i2 ] );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( triangle ) {

			this.a.copy( triangle.a );
			this.b.copy( triangle.b );
			this.c.copy( triangle.c );

			return this;

		},

		getArea: function () {

			_v0$1.subVectors( this.c, this.b );
			_v1$3.subVectors( this.a, this.b );

			return _v0$1.cross( _v1$3 ).length() * 0.5;

		},

		getMidpoint: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Triangle: .getMidpoint() target is now required' );
				target = new Vector3();

			}

			return target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );

		},

		getNormal: function ( target ) {

			return Triangle.getNormal( this.a, this.b, this.c, target );

		},

		getPlane: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Triangle: .getPlane() target is now required' );
				target = new Plane();

			}

			return target.setFromCoplanarPoints( this.a, this.b, this.c );

		},

		getBarycoord: function ( point, target ) {

			return Triangle.getBarycoord( point, this.a, this.b, this.c, target );

		},

		getUV: function ( point, uv1, uv2, uv3, target ) {

			return Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );

		},

		containsPoint: function ( point ) {

			return Triangle.containsPoint( point, this.a, this.b, this.c );

		},

		isFrontFacing: function ( direction ) {

			return Triangle.isFrontFacing( this.a, this.b, this.c, direction );

		},

		intersectsBox: function ( box ) {

			return box.intersectsTriangle( this );

		},

		closestPointToPoint: function ( p, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );
				target = new Vector3();

			}

			var a = this.a, b = this.b, c = this.c;
			var v, w;

			// algorithm thanks to Real-Time Collision Detection by Christer Ericson,
			// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,
			// under the accompanying license; see chapter 5.1.5 for detailed explanation.
			// basically, we're distinguishing which of the voronoi regions of the triangle
			// the point lies in with the minimum amount of redundant computation.

			_vab.subVectors( b, a );
			_vac.subVectors( c, a );
			_vap.subVectors( p, a );
			var d1 = _vab.dot( _vap );
			var d2 = _vac.dot( _vap );
			if ( d1 <= 0 && d2 <= 0 ) {

				// vertex region of A; barycentric coords (1, 0, 0)
				return target.copy( a );

			}

			_vbp.subVectors( p, b );
			var d3 = _vab.dot( _vbp );
			var d4 = _vac.dot( _vbp );
			if ( d3 >= 0 && d4 <= d3 ) {

				// vertex region of B; barycentric coords (0, 1, 0)
				return target.copy( b );

			}

			var vc = d1 * d4 - d3 * d2;
			if ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {

				v = d1 / ( d1 - d3 );
				// edge region of AB; barycentric coords (1-v, v, 0)
				return target.copy( a ).addScaledVector( _vab, v );

			}

			_vcp.subVectors( p, c );
			var d5 = _vab.dot( _vcp );
			var d6 = _vac.dot( _vcp );
			if ( d6 >= 0 && d5 <= d6 ) {

				// vertex region of C; barycentric coords (0, 0, 1)
				return target.copy( c );

			}

			var vb = d5 * d2 - d1 * d6;
			if ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {

				w = d2 / ( d2 - d6 );
				// edge region of AC; barycentric coords (1-w, 0, w)
				return target.copy( a ).addScaledVector( _vac, w );

			}

			var va = d3 * d6 - d5 * d4;
			if ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {

				_vbc.subVectors( c, b );
				w = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );
				// edge region of BC; barycentric coords (0, 1-w, w)
				return target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC

			}

			// face region
			var denom = 1 / ( va + vb + vc );
			// u = va * denom
			v = vb * denom;
			w = vc * denom;

			return target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );

		},

		equals: function ( triangle ) {

			return triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,
		'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,
		'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,
		'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,
		'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,
		'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,
		'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,
		'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,
		'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,
		'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,
		'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,
		'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,
		'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,
		'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,
		'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,
		'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,
		'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,
		'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,
		'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,
		'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,
		'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,
		'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,
		'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,
		'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };

	var _hslA = { h: 0, s: 0, l: 0 };
	var _hslB = { h: 0, s: 0, l: 0 };

	function Color( r, g, b ) {

		if ( g === undefined && b === undefined ) {

			// r is THREE.Color, hex or string
			return this.set( r );

		}

		return this.setRGB( r, g, b );

	}

	function hue2rgb( p, q, t ) {

		if ( t < 0 ) { t += 1; }
		if ( t > 1 ) { t -= 1; }
		if ( t < 1 / 6 ) { return p + ( q - p ) * 6 * t; }
		if ( t < 1 / 2 ) { return q; }
		if ( t < 2 / 3 ) { return p + ( q - p ) * 6 * ( 2 / 3 - t ); }
		return p;

	}

	function SRGBToLinear( c ) {

		return ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );

	}

	function LinearToSRGB( c ) {

		return ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;

	}

	Object.assign( Color.prototype, {

		isColor: true,

		r: 1, g: 1, b: 1,

		set: function ( value ) {

			if ( value && value.isColor ) {

				this.copy( value );

			} else if ( typeof value === 'number' ) {

				this.setHex( value );

			} else if ( typeof value === 'string' ) {

				this.setStyle( value );

			}

			return this;

		},

		setScalar: function ( scalar ) {

			this.r = scalar;
			this.g = scalar;
			this.b = scalar;

			return this;

		},

		setHex: function ( hex ) {

			hex = Math.floor( hex );

			this.r = ( hex >> 16 & 255 ) / 255;
			this.g = ( hex >> 8 & 255 ) / 255;
			this.b = ( hex & 255 ) / 255;

			return this;

		},

		setRGB: function ( r, g, b ) {

			this.r = r;
			this.g = g;
			this.b = b;

			return this;

		},

		setHSL: function ( h, s, l ) {

			// h,s,l ranges are in 0.0 - 1.0
			h = MathUtils.euclideanModulo( h, 1 );
			s = MathUtils.clamp( s, 0, 1 );
			l = MathUtils.clamp( l, 0, 1 );

			if ( s === 0 ) {

				this.r = this.g = this.b = l;

			} else {

				var p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );
				var q = ( 2 * l ) - p;

				this.r = hue2rgb( q, p, h + 1 / 3 );
				this.g = hue2rgb( q, p, h );
				this.b = hue2rgb( q, p, h - 1 / 3 );

			}

			return this;

		},

		setStyle: function ( style ) {

			function handleAlpha( string ) {

				if ( string === undefined ) { return; }

				if ( parseFloat( string ) < 1 ) {

					console.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );

				}

			}


			var m;

			if ( m = /^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec( style ) ) {

				// rgb / hsl

				var color;
				var name = m[ 1 ];
				var components = m[ 2 ];

				switch ( name ) {

					case 'rgb':
					case 'rgba':

						if ( color = /^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {

							// rgb(255,0,0) rgba(255,0,0,0.5)
							this.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;
							this.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;
							this.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;

							handleAlpha( color[ 5 ] );

							return this;

						}

						if ( color = /^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {

							// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)
							this.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;
							this.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;
							this.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;

							handleAlpha( color[ 5 ] );

							return this;

						}

						break;

					case 'hsl':
					case 'hsla':

						if ( color = /^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec( components ) ) {

							// hsl(120,50%,50%) hsla(120,50%,50%,0.5)
							var h = parseFloat( color[ 1 ] ) / 360;
							var s = parseInt( color[ 2 ], 10 ) / 100;
							var l = parseInt( color[ 3 ], 10 ) / 100;

							handleAlpha( color[ 5 ] );

							return this.setHSL( h, s, l );

						}

						break;

				}

			} else if ( m = /^\#([A-Fa-f0-9]+)$/.exec( style ) ) {

				// hex color

				var hex = m[ 1 ];
				var size = hex.length;

				if ( size === 3 ) {

					// #ff0
					this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;
					this.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;
					this.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;

					return this;

				} else if ( size === 6 ) {

					// #ff0000
					this.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;
					this.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;
					this.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;

					return this;

				}

			}

			if ( style && style.length > 0 ) {

				return this.setColorName( style );

			}

			return this;

		},

		setColorName: function ( style ) {

			// color keywords
			var hex = _colorKeywords[ style ];

			if ( hex !== undefined ) {

				// red
				this.setHex( hex );

			} else {

				// unknown color
				console.warn( 'THREE.Color: Unknown color ' + style );

			}

			return this;

		},

		clone: function () {

			return new this.constructor( this.r, this.g, this.b );

		},

		copy: function ( color ) {

			this.r = color.r;
			this.g = color.g;
			this.b = color.b;

			return this;

		},

		copyGammaToLinear: function ( color, gammaFactor ) {

			if ( gammaFactor === undefined ) { gammaFactor = 2.0; }

			this.r = Math.pow( color.r, gammaFactor );
			this.g = Math.pow( color.g, gammaFactor );
			this.b = Math.pow( color.b, gammaFactor );

			return this;

		},

		copyLinearToGamma: function ( color, gammaFactor ) {

			if ( gammaFactor === undefined ) { gammaFactor = 2.0; }

			var safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;

			this.r = Math.pow( color.r, safeInverse );
			this.g = Math.pow( color.g, safeInverse );
			this.b = Math.pow( color.b, safeInverse );

			return this;

		},

		convertGammaToLinear: function ( gammaFactor ) {

			this.copyGammaToLinear( this, gammaFactor );

			return this;

		},

		convertLinearToGamma: function ( gammaFactor ) {

			this.copyLinearToGamma( this, gammaFactor );

			return this;

		},

		copySRGBToLinear: function ( color ) {

			this.r = SRGBToLinear( color.r );
			this.g = SRGBToLinear( color.g );
			this.b = SRGBToLinear( color.b );

			return this;

		},

		copyLinearToSRGB: function ( color ) {

			this.r = LinearToSRGB( color.r );
			this.g = LinearToSRGB( color.g );
			this.b = LinearToSRGB( color.b );

			return this;

		},

		convertSRGBToLinear: function () {

			this.copySRGBToLinear( this );

			return this;

		},

		convertLinearToSRGB: function () {

			this.copyLinearToSRGB( this );

			return this;

		},

		getHex: function () {

			return ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;

		},

		getHexString: function () {

			return ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );

		},

		getHSL: function ( target ) {

			// h,s,l ranges are in 0.0 - 1.0

			if ( target === undefined ) {

				console.warn( 'THREE.Color: .getHSL() target is now required' );
				target = { h: 0, s: 0, l: 0 };

			}

			var r = this.r, g = this.g, b = this.b;

			var max = Math.max( r, g, b );
			var min = Math.min( r, g, b );

			var hue, saturation;
			var lightness = ( min + max ) / 2.0;

			if ( min === max ) {

				hue = 0;
				saturation = 0;

			} else {

				var delta = max - min;

				saturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );

				switch ( max ) {

					case r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;
					case g: hue = ( b - r ) / delta + 2; break;
					case b: hue = ( r - g ) / delta + 4; break;

				}

				hue /= 6;

			}

			target.h = hue;
			target.s = saturation;
			target.l = lightness;

			return target;

		},

		getStyle: function () {

			return 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';

		},

		offsetHSL: function ( h, s, l ) {

			this.getHSL( _hslA );

			_hslA.h += h; _hslA.s += s; _hslA.l += l;

			this.setHSL( _hslA.h, _hslA.s, _hslA.l );

			return this;

		},

		add: function ( color ) {

			this.r += color.r;
			this.g += color.g;
			this.b += color.b;

			return this;

		},

		addColors: function ( color1, color2 ) {

			this.r = color1.r + color2.r;
			this.g = color1.g + color2.g;
			this.b = color1.b + color2.b;

			return this;

		},

		addScalar: function ( s ) {

			this.r += s;
			this.g += s;
			this.b += s;

			return this;

		},

		sub: function ( color ) {

			this.r = Math.max( 0, this.r - color.r );
			this.g = Math.max( 0, this.g - color.g );
			this.b = Math.max( 0, this.b - color.b );

			return this;

		},

		multiply: function ( color ) {

			this.r *= color.r;
			this.g *= color.g;
			this.b *= color.b;

			return this;

		},

		multiplyScalar: function ( s ) {

			this.r *= s;
			this.g *= s;
			this.b *= s;

			return this;

		},

		lerp: function ( color, alpha ) {

			this.r += ( color.r - this.r ) * alpha;
			this.g += ( color.g - this.g ) * alpha;
			this.b += ( color.b - this.b ) * alpha;

			return this;

		},

		lerpHSL: function ( color, alpha ) {

			this.getHSL( _hslA );
			color.getHSL( _hslB );

			var h = MathUtils.lerp( _hslA.h, _hslB.h, alpha );
			var s = MathUtils.lerp( _hslA.s, _hslB.s, alpha );
			var l = MathUtils.lerp( _hslA.l, _hslB.l, alpha );

			this.setHSL( h, s, l );

			return this;

		},

		equals: function ( c ) {

			return ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this.r = array[ offset ];
			this.g = array[ offset + 1 ];
			this.b = array[ offset + 2 ];

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			array[ offset ] = this.r;
			array[ offset + 1 ] = this.g;
			array[ offset + 2 ] = this.b;

			return array;

		},

		toJSON: function () {

			return this.getHex();

		}

	} );

	Color.NAMES = _colorKeywords;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 */

	function Face3( a, b, c, normal, color, materialIndex ) {

		this.a = a;
		this.b = b;
		this.c = c;

		this.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();
		this.vertexNormals = Array.isArray( normal ) ? normal : [];

		this.color = ( color && color.isColor ) ? color : new Color();
		this.vertexColors = Array.isArray( color ) ? color : [];

		this.materialIndex = materialIndex !== undefined ? materialIndex : 0;

	}

	Object.assign( Face3.prototype, {

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( source ) {

			this.a = source.a;
			this.b = source.b;
			this.c = source.c;

			this.normal.copy( source.normal );
			this.color.copy( source.color );

			this.materialIndex = source.materialIndex;

			for ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {

				this.vertexNormals[ i ] = source.vertexNormals[ i ].clone();

			}

			for ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {

				this.vertexColors[ i ] = source.vertexColors[ i ].clone();

			}

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 */

	var materialId = 0;

	function Material() {

		Object.defineProperty( this, 'id', { value: materialId ++ } );

		this.uuid = MathUtils.generateUUID();

		this.name = '';
		this.type = 'Material';

		this.fog = true;

		this.blending = NormalBlending;
		this.side = FrontSide;
		this.flatShading = false;
		this.vertexColors = false;

		this.opacity = 1;
		this.transparent = false;

		this.blendSrc = SrcAlphaFactor;
		this.blendDst = OneMinusSrcAlphaFactor;
		this.blendEquation = AddEquation;
		this.blendSrcAlpha = null;
		this.blendDstAlpha = null;
		this.blendEquationAlpha = null;

		this.depthFunc = LessEqualDepth;
		this.depthTest = true;
		this.depthWrite = true;

		this.stencilWriteMask = 0xff;
		this.stencilFunc = AlwaysStencilFunc;
		this.stencilRef = 0;
		this.stencilFuncMask = 0xff;
		this.stencilFail = KeepStencilOp;
		this.stencilZFail = KeepStencilOp;
		this.stencilZPass = KeepStencilOp;
		this.stencilWrite = false;

		this.clippingPlanes = null;
		this.clipIntersection = false;
		this.clipShadows = false;

		this.shadowSide = null;

		this.colorWrite = true;

		this.precision = null; // override the renderer's default precision for this material

		this.polygonOffset = false;
		this.polygonOffsetFactor = 0;
		this.polygonOffsetUnits = 0;

		this.dithering = false;

		this.alphaTest = 0;
		this.premultipliedAlpha = false;

		this.visible = true;

		this.toneMapped = true;

		this.userData = {};

		this.version = 0;

	}

	Material.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: Material,

		isMaterial: true,

		onBeforeCompile: function () {},

		setValues: function ( values ) {

			if ( values === undefined ) { return; }

			for ( var key in values ) {

				var newValue = values[ key ];

				if ( newValue === undefined ) {

					console.warn( "THREE.Material: '" + key + "' parameter is undefined." );
					continue;

				}

				// for backward compatability if shading is set in the constructor
				if ( key === 'shading' ) {

					console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );
					this.flatShading = ( newValue === FlatShading ) ? true : false;
					continue;

				}

				var currentValue = this[ key ];

				if ( currentValue === undefined ) {

					console.warn( "THREE." + this.type + ": '" + key + "' is not a property of this material." );
					continue;

				}

				if ( currentValue && currentValue.isColor ) {

					currentValue.set( newValue );

				} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {

					currentValue.copy( newValue );

				} else {

					this[ key ] = newValue;

				}

			}

		},

		toJSON: function ( meta ) {

			var isRoot = ( meta === undefined || typeof meta === 'string' );

			if ( isRoot ) {

				meta = {
					textures: {},
					images: {}
				};

			}

			var data = {
				metadata: {
					version: 4.5,
					type: 'Material',
					generator: 'Material.toJSON'
				}
			};

			// standard Material serialization
			data.uuid = this.uuid;
			data.type = this.type;

			if ( this.name !== '' ) { data.name = this.name; }

			if ( this.color && this.color.isColor ) { data.color = this.color.getHex(); }

			if ( this.roughness !== undefined ) { data.roughness = this.roughness; }
			if ( this.metalness !== undefined ) { data.metalness = this.metalness; }

			if ( this.sheen && this.sheen.isColor ) { data.sheen = this.sheen.getHex(); }
			if ( this.emissive && this.emissive.isColor ) { data.emissive = this.emissive.getHex(); }
			if ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) { data.emissiveIntensity = this.emissiveIntensity; }

			if ( this.specular && this.specular.isColor ) { data.specular = this.specular.getHex(); }
			if ( this.shininess !== undefined ) { data.shininess = this.shininess; }
			if ( this.clearcoat !== undefined ) { data.clearcoat = this.clearcoat; }
			if ( this.clearcoatRoughness !== undefined ) { data.clearcoatRoughness = this.clearcoatRoughness; }

			if ( this.clearcoatMap && this.clearcoatMap.isTexture ) {

				data.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;

			}

			if ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {

				data.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;

			}

			if ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {

				data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;
				data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();

			}

			if ( this.map && this.map.isTexture ) { data.map = this.map.toJSON( meta ).uuid; }
			if ( this.matcap && this.matcap.isTexture ) { data.matcap = this.matcap.toJSON( meta ).uuid; }
			if ( this.alphaMap && this.alphaMap.isTexture ) { data.alphaMap = this.alphaMap.toJSON( meta ).uuid; }
			if ( this.lightMap && this.lightMap.isTexture ) { data.lightMap = this.lightMap.toJSON( meta ).uuid; }

			if ( this.aoMap && this.aoMap.isTexture ) {

				data.aoMap = this.aoMap.toJSON( meta ).uuid;
				data.aoMapIntensity = this.aoMapIntensity;

			}

			if ( this.bumpMap && this.bumpMap.isTexture ) {

				data.bumpMap = this.bumpMap.toJSON( meta ).uuid;
				data.bumpScale = this.bumpScale;

			}

			if ( this.normalMap && this.normalMap.isTexture ) {

				data.normalMap = this.normalMap.toJSON( meta ).uuid;
				data.normalMapType = this.normalMapType;
				data.normalScale = this.normalScale.toArray();

			}

			if ( this.displacementMap && this.displacementMap.isTexture ) {

				data.displacementMap = this.displacementMap.toJSON( meta ).uuid;
				data.displacementScale = this.displacementScale;
				data.displacementBias = this.displacementBias;

			}

			if ( this.roughnessMap && this.roughnessMap.isTexture ) { data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid; }
			if ( this.metalnessMap && this.metalnessMap.isTexture ) { data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid; }

			if ( this.emissiveMap && this.emissiveMap.isTexture ) { data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid; }
			if ( this.specularMap && this.specularMap.isTexture ) { data.specularMap = this.specularMap.toJSON( meta ).uuid; }

			if ( this.envMap && this.envMap.isTexture ) {

				data.envMap = this.envMap.toJSON( meta ).uuid;
				data.reflectivity = this.reflectivity; // Scale behind envMap
				data.refractionRatio = this.refractionRatio;

				if ( this.combine !== undefined ) { data.combine = this.combine; }
				if ( this.envMapIntensity !== undefined ) { data.envMapIntensity = this.envMapIntensity; }

			}

			if ( this.gradientMap && this.gradientMap.isTexture ) {

				data.gradientMap = this.gradientMap.toJSON( meta ).uuid;

			}

			if ( this.size !== undefined ) { data.size = this.size; }
			if ( this.sizeAttenuation !== undefined ) { data.sizeAttenuation = this.sizeAttenuation; }

			if ( this.blending !== NormalBlending ) { data.blending = this.blending; }
			if ( this.flatShading === true ) { data.flatShading = this.flatShading; }
			if ( this.side !== FrontSide ) { data.side = this.side; }
			if ( this.vertexColors ) { data.vertexColors = true; }

			if ( this.opacity < 1 ) { data.opacity = this.opacity; }
			if ( this.transparent === true ) { data.transparent = this.transparent; }

			data.depthFunc = this.depthFunc;
			data.depthTest = this.depthTest;
			data.depthWrite = this.depthWrite;

			data.stencilWrite = this.stencilWrite;
			data.stencilWriteMask = this.stencilWriteMask;
			data.stencilFunc = this.stencilFunc;
			data.stencilRef = this.stencilRef;
			data.stencilFuncMask = this.stencilFuncMask;
			data.stencilFail = this.stencilFail;
			data.stencilZFail = this.stencilZFail;
			data.stencilZPass = this.stencilZPass;

			// rotation (SpriteMaterial)
			if ( this.rotation && this.rotation !== 0 ) { data.rotation = this.rotation; }

			if ( this.polygonOffset === true ) { data.polygonOffset = true; }
			if ( this.polygonOffsetFactor !== 0 ) { data.polygonOffsetFactor = this.polygonOffsetFactor; }
			if ( this.polygonOffsetUnits !== 0 ) { data.polygonOffsetUnits = this.polygonOffsetUnits; }

			if ( this.linewidth && this.linewidth !== 1 ) { data.linewidth = this.linewidth; }
			if ( this.dashSize !== undefined ) { data.dashSize = this.dashSize; }
			if ( this.gapSize !== undefined ) { data.gapSize = this.gapSize; }
			if ( this.scale !== undefined ) { data.scale = this.scale; }

			if ( this.dithering === true ) { data.dithering = true; }

			if ( this.alphaTest > 0 ) { data.alphaTest = this.alphaTest; }
			if ( this.premultipliedAlpha === true ) { data.premultipliedAlpha = this.premultipliedAlpha; }

			if ( this.wireframe === true ) { data.wireframe = this.wireframe; }
			if ( this.wireframeLinewidth > 1 ) { data.wireframeLinewidth = this.wireframeLinewidth; }
			if ( this.wireframeLinecap !== 'round' ) { data.wireframeLinecap = this.wireframeLinecap; }
			if ( this.wireframeLinejoin !== 'round' ) { data.wireframeLinejoin = this.wireframeLinejoin; }

			if ( this.morphTargets === true ) { data.morphTargets = true; }
			if ( this.morphNormals === true ) { data.morphNormals = true; }
			if ( this.skinning === true ) { data.skinning = true; }

			if ( this.visible === false ) { data.visible = false; }

			if ( this.toneMapped === false ) { data.toneMapped = false; }

			if ( JSON.stringify( this.userData ) !== '{}' ) { data.userData = this.userData; }

			// TODO: Copied from Object3D.toJSON

			function extractFromCache( cache ) {

				var values = [];

				for ( var key in cache ) {

					var data = cache[ key ];
					delete data.metadata;
					values.push( data );

				}

				return values;

			}

			if ( isRoot ) {

				var textures = extractFromCache( meta.textures );
				var images = extractFromCache( meta.images );

				if ( textures.length > 0 ) { data.textures = textures; }
				if ( images.length > 0 ) { data.images = images; }

			}

			return data;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( source ) {

			this.name = source.name;

			this.fog = source.fog;

			this.blending = source.blending;
			this.side = source.side;
			this.flatShading = source.flatShading;
			this.vertexColors = source.vertexColors;

			this.opacity = source.opacity;
			this.transparent = source.transparent;

			this.blendSrc = source.blendSrc;
			this.blendDst = source.blendDst;
			this.blendEquation = source.blendEquation;
			this.blendSrcAlpha = source.blendSrcAlpha;
			this.blendDstAlpha = source.blendDstAlpha;
			this.blendEquationAlpha = source.blendEquationAlpha;

			this.depthFunc = source.depthFunc;
			this.depthTest = source.depthTest;
			this.depthWrite = source.depthWrite;

			this.stencilWriteMask = source.stencilWriteMask;
			this.stencilFunc = source.stencilFunc;
			this.stencilRef = source.stencilRef;
			this.stencilFuncMask = source.stencilFuncMask;
			this.stencilFail = source.stencilFail;
			this.stencilZFail = source.stencilZFail;
			this.stencilZPass = source.stencilZPass;
			this.stencilWrite = source.stencilWrite;

			var srcPlanes = source.clippingPlanes,
				dstPlanes = null;

			if ( srcPlanes !== null ) {

				var n = srcPlanes.length;
				dstPlanes = new Array( n );

				for ( var i = 0; i !== n; ++ i )
					{ dstPlanes[ i ] = srcPlanes[ i ].clone(); }

			}

			this.clippingPlanes = dstPlanes;
			this.clipIntersection = source.clipIntersection;
			this.clipShadows = source.clipShadows;

			this.shadowSide = source.shadowSide;

			this.colorWrite = source.colorWrite;

			this.precision = source.precision;

			this.polygonOffset = source.polygonOffset;
			this.polygonOffsetFactor = source.polygonOffsetFactor;
			this.polygonOffsetUnits = source.polygonOffsetUnits;

			this.dithering = source.dithering;

			this.alphaTest = source.alphaTest;
			this.premultipliedAlpha = source.premultipliedAlpha;

			this.visible = source.visible;

			this.toneMapped = source.toneMapped;

			this.userData = JSON.parse( JSON.stringify( source.userData ) );

			return this;

		},

		dispose: function () {

			this.dispatchEvent( { type: 'dispose' } );

		}

	} );

	Object.defineProperty( Material.prototype, 'needsUpdate', {

		set: function ( value ) {

			if ( value === true ) { this.version ++; }

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  opacity: <float>,
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  lightMap: new THREE.Texture( <Image> ),
	 *  lightMapIntensity: <float>
	 *
	 *  aoMap: new THREE.Texture( <Image> ),
	 *  aoMapIntensity: <float>
	 *
	 *  specularMap: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
	 *  combine: THREE.Multiply,
	 *  reflectivity: <float>,
	 *  refractionRatio: <float>,
	 *
	 *  depthTest: <bool>,
	 *  depthWrite: <bool>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>
	 * }
	 */

	function MeshBasicMaterial( parameters ) {

		Material.call( this );

		this.type = 'MeshBasicMaterial';

		this.color = new Color( 0xffffff ); // emissive

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;

		this.setValues( parameters );

	}

	MeshBasicMaterial.prototype = Object.create( Material.prototype );
	MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;

	MeshBasicMaterial.prototype.isMeshBasicMaterial = true;

	MeshBasicMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;

		return this;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _vector$3 = new Vector3();

	function BufferAttribute( array, itemSize, normalized ) {

		if ( Array.isArray( array ) ) {

			throw new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );

		}

		this.name = '';

		this.array = array;
		this.itemSize = itemSize;
		this.count = array !== undefined ? array.length / itemSize : 0;
		this.normalized = normalized === true;

		this.usage = StaticDrawUsage;
		this.updateRange = { offset: 0, count: - 1 };

		this.version = 0;

	}

	Object.defineProperty( BufferAttribute.prototype, 'needsUpdate', {

		set: function ( value ) {

			if ( value === true ) { this.version ++; }

		}

	} );

	Object.assign( BufferAttribute.prototype, {

		isBufferAttribute: true,

		onUploadCallback: function () {},

		setUsage: function ( value ) {

			this.usage = value;

			return this;

		},

		copy: function ( source ) {

			this.name = source.name;
			this.array = new source.array.constructor( source.array );
			this.itemSize = source.itemSize;
			this.count = source.count;
			this.normalized = source.normalized;

			this.usage = source.usage;

			return this;

		},

		copyAt: function ( index1, attribute, index2 ) {

			index1 *= this.itemSize;
			index2 *= attribute.itemSize;

			for ( var i = 0, l = this.itemSize; i < l; i ++ ) {

				this.array[ index1 + i ] = attribute.array[ index2 + i ];

			}

			return this;

		},

		copyArray: function ( array ) {

			this.array.set( array );

			return this;

		},

		copyColorsArray: function ( colors ) {

			var array = this.array, offset = 0;

			for ( var i = 0, l = colors.length; i < l; i ++ ) {

				var color = colors[ i ];

				if ( color === undefined ) {

					console.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );
					color = new Color();

				}

				array[ offset ++ ] = color.r;
				array[ offset ++ ] = color.g;
				array[ offset ++ ] = color.b;

			}

			return this;

		},

		copyVector2sArray: function ( vectors ) {

			var array = this.array, offset = 0;

			for ( var i = 0, l = vectors.length; i < l; i ++ ) {

				var vector = vectors[ i ];

				if ( vector === undefined ) {

					console.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );
					vector = new Vector2();

				}

				array[ offset ++ ] = vector.x;
				array[ offset ++ ] = vector.y;

			}

			return this;

		},

		copyVector3sArray: function ( vectors ) {

			var array = this.array, offset = 0;

			for ( var i = 0, l = vectors.length; i < l; i ++ ) {

				var vector = vectors[ i ];

				if ( vector === undefined ) {

					console.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );
					vector = new Vector3();

				}

				array[ offset ++ ] = vector.x;
				array[ offset ++ ] = vector.y;
				array[ offset ++ ] = vector.z;

			}

			return this;

		},

		copyVector4sArray: function ( vectors ) {

			var array = this.array, offset = 0;

			for ( var i = 0, l = vectors.length; i < l; i ++ ) {

				var vector = vectors[ i ];

				if ( vector === undefined ) {

					console.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );
					vector = new Vector4();

				}

				array[ offset ++ ] = vector.x;
				array[ offset ++ ] = vector.y;
				array[ offset ++ ] = vector.z;
				array[ offset ++ ] = vector.w;

			}

			return this;

		},

		applyMatrix3: function ( m ) {

			for ( var i = 0, l = this.count; i < l; i ++ ) {

				_vector$3.x = this.getX( i );
				_vector$3.y = this.getY( i );
				_vector$3.z = this.getZ( i );

				_vector$3.applyMatrix3( m );

				this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

			}

			return this;

		},

		applyMatrix4: function ( m ) {

			for ( var i = 0, l = this.count; i < l; i ++ ) {

				_vector$3.x = this.getX( i );
				_vector$3.y = this.getY( i );
				_vector$3.z = this.getZ( i );

				_vector$3.applyMatrix4( m );

				this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

			}

			return this;

		},

		applyNormalMatrix: function ( m ) {

			for ( var i = 0, l = this.count; i < l; i ++ ) {

				_vector$3.x = this.getX( i );
				_vector$3.y = this.getY( i );
				_vector$3.z = this.getZ( i );

				_vector$3.applyNormalMatrix( m );

				this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

			}

			return this;

		},

		transformDirection: function ( m ) {

			for ( var i = 0, l = this.count; i < l; i ++ ) {

				_vector$3.x = this.getX( i );
				_vector$3.y = this.getY( i );
				_vector$3.z = this.getZ( i );

				_vector$3.transformDirection( m );

				this.setXYZ( i, _vector$3.x, _vector$3.y, _vector$3.z );

			}

			return this;

		},

		set: function ( value, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this.array.set( value, offset );

			return this;

		},

		getX: function ( index ) {

			return this.array[ index * this.itemSize ];

		},

		setX: function ( index, x ) {

			this.array[ index * this.itemSize ] = x;

			return this;

		},

		getY: function ( index ) {

			return this.array[ index * this.itemSize + 1 ];

		},

		setY: function ( index, y ) {

			this.array[ index * this.itemSize + 1 ] = y;

			return this;

		},

		getZ: function ( index ) {

			return this.array[ index * this.itemSize + 2 ];

		},

		setZ: function ( index, z ) {

			this.array[ index * this.itemSize + 2 ] = z;

			return this;

		},

		getW: function ( index ) {

			return this.array[ index * this.itemSize + 3 ];

		},

		setW: function ( index, w ) {

			this.array[ index * this.itemSize + 3 ] = w;

			return this;

		},

		setXY: function ( index, x, y ) {

			index *= this.itemSize;

			this.array[ index + 0 ] = x;
			this.array[ index + 1 ] = y;

			return this;

		},

		setXYZ: function ( index, x, y, z ) {

			index *= this.itemSize;

			this.array[ index + 0 ] = x;
			this.array[ index + 1 ] = y;
			this.array[ index + 2 ] = z;

			return this;

		},

		setXYZW: function ( index, x, y, z, w ) {

			index *= this.itemSize;

			this.array[ index + 0 ] = x;
			this.array[ index + 1 ] = y;
			this.array[ index + 2 ] = z;
			this.array[ index + 3 ] = w;

			return this;

		},

		onUpload: function ( callback ) {

			this.onUploadCallback = callback;

			return this;

		},

		clone: function () {

			return new this.constructor( this.array, this.itemSize ).copy( this );

		},

		toJSON: function () {

			return {
				itemSize: this.itemSize,
				type: this.array.constructor.name,
				array: Array.prototype.slice.call( this.array ),
				normalized: this.normalized
			};

		}

	} );

	//

	function Int8BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );

	}

	Int8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;


	function Uint8BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );

	}

	Uint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;


	function Uint8ClampedBufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );

	}

	Uint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;


	function Int16BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );

	}

	Int16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;


	function Uint16BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );

	}

	Uint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;


	function Int32BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );

	}

	Int32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;


	function Uint32BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );

	}

	Uint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;


	function Float32BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );

	}

	Float32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;


	function Float64BufferAttribute( array, itemSize, normalized ) {

		BufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );

	}

	Float64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );
	Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function DirectGeometry() {

		this.vertices = [];
		this.normals = [];
		this.colors = [];
		this.uvs = [];
		this.uvs2 = [];

		this.groups = [];

		this.morphTargets = {};

		this.skinWeights = [];
		this.skinIndices = [];

		// this.lineDistances = [];

		this.boundingBox = null;
		this.boundingSphere = null;

		// update flags

		this.verticesNeedUpdate = false;
		this.normalsNeedUpdate = false;
		this.colorsNeedUpdate = false;
		this.uvsNeedUpdate = false;
		this.groupsNeedUpdate = false;

	}

	Object.assign( DirectGeometry.prototype, {

		computeGroups: function ( geometry ) {

			var group;
			var groups = [];
			var materialIndex = undefined;

			var faces = geometry.faces;

			for ( var i = 0; i < faces.length; i ++ ) {

				var face = faces[ i ];

				// materials

				if ( face.materialIndex !== materialIndex ) {

					materialIndex = face.materialIndex;

					if ( group !== undefined ) {

						group.count = ( i * 3 ) - group.start;
						groups.push( group );

					}

					group = {
						start: i * 3,
						materialIndex: materialIndex
					};

				}

			}

			if ( group !== undefined ) {

				group.count = ( i * 3 ) - group.start;
				groups.push( group );

			}

			this.groups = groups;

		},

		fromGeometry: function ( geometry ) {

			var faces = geometry.faces;
			var vertices = geometry.vertices;
			var faceVertexUvs = geometry.faceVertexUvs;

			var hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;
			var hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;

			// morphs

			var morphTargets = geometry.morphTargets;
			var morphTargetsLength = morphTargets.length;

			var morphTargetsPosition;

			if ( morphTargetsLength > 0 ) {

				morphTargetsPosition = [];

				for ( var i = 0; i < morphTargetsLength; i ++ ) {

					morphTargetsPosition[ i ] = {
						name: morphTargets[ i ].name,
					 	data: []
					};

				}

				this.morphTargets.position = morphTargetsPosition;

			}

			var morphNormals = geometry.morphNormals;
			var morphNormalsLength = morphNormals.length;

			var morphTargetsNormal;

			if ( morphNormalsLength > 0 ) {

				morphTargetsNormal = [];

				for ( var i = 0; i < morphNormalsLength; i ++ ) {

					morphTargetsNormal[ i ] = {
						name: morphNormals[ i ].name,
					 	data: []
					};

				}

				this.morphTargets.normal = morphTargetsNormal;

			}

			// skins

			var skinIndices = geometry.skinIndices;
			var skinWeights = geometry.skinWeights;

			var hasSkinIndices = skinIndices.length === vertices.length;
			var hasSkinWeights = skinWeights.length === vertices.length;

			//

			if ( vertices.length > 0 && faces.length === 0 ) {

				console.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );

			}

			for ( var i = 0; i < faces.length; i ++ ) {

				var face = faces[ i ];

				this.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );

				var vertexNormals = face.vertexNormals;

				if ( vertexNormals.length === 3 ) {

					this.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );

				} else {

					var normal = face.normal;

					this.normals.push( normal, normal, normal );

				}

				var vertexColors = face.vertexColors;

				if ( vertexColors.length === 3 ) {

					this.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );

				} else {

					var color = face.color;

					this.colors.push( color, color, color );

				}

				if ( hasFaceVertexUv === true ) {

					var vertexUvs = faceVertexUvs[ 0 ][ i ];

					if ( vertexUvs !== undefined ) {

						this.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );

					} else {

						console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );

						this.uvs.push( new Vector2(), new Vector2(), new Vector2() );

					}

				}

				if ( hasFaceVertexUv2 === true ) {

					var vertexUvs = faceVertexUvs[ 1 ][ i ];

					if ( vertexUvs !== undefined ) {

						this.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );

					} else {

						console.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );

						this.uvs2.push( new Vector2(), new Vector2(), new Vector2() );

					}

				}

				// morphs

				for ( var j = 0; j < morphTargetsLength; j ++ ) {

					var morphTarget = morphTargets[ j ].vertices;

					morphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );

				}

				for ( var j = 0; j < morphNormalsLength; j ++ ) {

					var morphNormal = morphNormals[ j ].vertexNormals[ i ];

					morphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );

				}

				// skins

				if ( hasSkinIndices ) {

					this.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );

				}

				if ( hasSkinWeights ) {

					this.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );

				}

			}

			this.computeGroups( geometry );

			this.verticesNeedUpdate = geometry.verticesNeedUpdate;
			this.normalsNeedUpdate = geometry.normalsNeedUpdate;
			this.colorsNeedUpdate = geometry.colorsNeedUpdate;
			this.uvsNeedUpdate = geometry.uvsNeedUpdate;
			this.groupsNeedUpdate = geometry.groupsNeedUpdate;

			if ( geometry.boundingSphere !== null ) {

				this.boundingSphere = geometry.boundingSphere.clone();

			}

			if ( geometry.boundingBox !== null ) {

				this.boundingBox = geometry.boundingBox.clone();

			}

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function arrayMax( array ) {

		if ( array.length === 0 ) { return - Infinity; }

		var max = array[ 0 ];

		for ( var i = 1, l = array.length; i < l; ++ i ) {

			if ( array[ i ] > max ) { max = array[ i ]; }

		}

		return max;

	}

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id

	var _m1$2 = new Matrix4();
	var _obj = new Object3D();
	var _offset = new Vector3();
	var _box$2 = new Box3();
	var _boxMorphTargets = new Box3();
	var _vector$4 = new Vector3();

	function BufferGeometry() {

		Object.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );

		this.uuid = MathUtils.generateUUID();

		this.name = '';
		this.type = 'BufferGeometry';

		this.index = null;
		this.attributes = {};

		this.morphAttributes = {};
		this.morphTargetsRelative = false;

		this.groups = [];

		this.boundingBox = null;
		this.boundingSphere = null;

		this.drawRange = { start: 0, count: Infinity };

		this.userData = {};

	}

	BufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: BufferGeometry,

		isBufferGeometry: true,

		getIndex: function () {

			return this.index;

		},

		setIndex: function ( index ) {

			if ( Array.isArray( index ) ) {

				this.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );

			} else {

				this.index = index;

			}

		},

		getAttribute: function ( name ) {

			return this.attributes[ name ];

		},

		setAttribute: function ( name, attribute ) {

			this.attributes[ name ] = attribute;

			return this;

		},

		deleteAttribute: function ( name ) {

			delete this.attributes[ name ];

			return this;

		},

		addGroup: function ( start, count, materialIndex ) {

			this.groups.push( {

				start: start,
				count: count,
				materialIndex: materialIndex !== undefined ? materialIndex : 0

			} );

		},

		clearGroups: function () {

			this.groups = [];

		},

		setDrawRange: function ( start, count ) {

			this.drawRange.start = start;
			this.drawRange.count = count;

		},

		applyMatrix4: function ( matrix ) {

			var position = this.attributes.position;

			if ( position !== undefined ) {

				position.applyMatrix4( matrix );

				position.needsUpdate = true;

			}

			var normal = this.attributes.normal;

			if ( normal !== undefined ) {

				var normalMatrix = new Matrix3().getNormalMatrix( matrix );

				normal.applyNormalMatrix( normalMatrix );

				normal.needsUpdate = true;

			}

			var tangent = this.attributes.tangent;

			if ( tangent !== undefined ) {

				tangent.transformDirection( matrix );

				tangent.needsUpdate = true;

			}

			if ( this.boundingBox !== null ) {

				this.computeBoundingBox();

			}

			if ( this.boundingSphere !== null ) {

				this.computeBoundingSphere();

			}

			return this;

		},

		rotateX: function ( angle ) {

			// rotate geometry around world x-axis

			_m1$2.makeRotationX( angle );

			this.applyMatrix4( _m1$2 );

			return this;

		},

		rotateY: function ( angle ) {

			// rotate geometry around world y-axis

			_m1$2.makeRotationY( angle );

			this.applyMatrix4( _m1$2 );

			return this;

		},

		rotateZ: function ( angle ) {

			// rotate geometry around world z-axis

			_m1$2.makeRotationZ( angle );

			this.applyMatrix4( _m1$2 );

			return this;

		},

		translate: function ( x, y, z ) {

			// translate geometry

			_m1$2.makeTranslation( x, y, z );

			this.applyMatrix4( _m1$2 );

			return this;

		},

		scale: function ( x, y, z ) {

			// scale geometry

			_m1$2.makeScale( x, y, z );

			this.applyMatrix4( _m1$2 );

			return this;

		},

		lookAt: function ( vector ) {

			_obj.lookAt( vector );

			_obj.updateMatrix();

			this.applyMatrix4( _obj.matrix );

			return this;

		},

		center: function () {

			this.computeBoundingBox();

			this.boundingBox.getCenter( _offset ).negate();

			this.translate( _offset.x, _offset.y, _offset.z );

			return this;

		},

		setFromObject: function ( object ) {

			// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );

			var geometry = object.geometry;

			if ( object.isPoints || object.isLine ) {

				var positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );
				var colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );

				this.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );
				this.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );

				if ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {

					var lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );

					this.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );

				}

				if ( geometry.boundingSphere !== null ) {

					this.boundingSphere = geometry.boundingSphere.clone();

				}

				if ( geometry.boundingBox !== null ) {

					this.boundingBox = geometry.boundingBox.clone();

				}

			} else if ( object.isMesh ) {

				if ( geometry && geometry.isGeometry ) {

					this.fromGeometry( geometry );

				}

			}

			return this;

		},

		setFromPoints: function ( points ) {

			var position = [];

			for ( var i = 0, l = points.length; i < l; i ++ ) {

				var point = points[ i ];
				position.push( point.x, point.y, point.z || 0 );

			}

			this.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );

			return this;

		},

		updateFromObject: function ( object ) {

			var geometry = object.geometry;

			if ( object.isMesh ) {

				var direct = geometry.__directGeometry;

				if ( geometry.elementsNeedUpdate === true ) {

					direct = undefined;
					geometry.elementsNeedUpdate = false;

				}

				if ( direct === undefined ) {

					return this.fromGeometry( geometry );

				}

				direct.verticesNeedUpdate = geometry.verticesNeedUpdate;
				direct.normalsNeedUpdate = geometry.normalsNeedUpdate;
				direct.colorsNeedUpdate = geometry.colorsNeedUpdate;
				direct.uvsNeedUpdate = geometry.uvsNeedUpdate;
				direct.groupsNeedUpdate = geometry.groupsNeedUpdate;

				geometry.verticesNeedUpdate = false;
				geometry.normalsNeedUpdate = false;
				geometry.colorsNeedUpdate = false;
				geometry.uvsNeedUpdate = false;
				geometry.groupsNeedUpdate = false;

				geometry = direct;

			}

			var attribute;

			if ( geometry.verticesNeedUpdate === true ) {

				attribute = this.attributes.position;

				if ( attribute !== undefined ) {

					attribute.copyVector3sArray( geometry.vertices );
					attribute.needsUpdate = true;

				}

				geometry.verticesNeedUpdate = false;

			}

			if ( geometry.normalsNeedUpdate === true ) {

				attribute = this.attributes.normal;

				if ( attribute !== undefined ) {

					attribute.copyVector3sArray( geometry.normals );
					attribute.needsUpdate = true;

				}

				geometry.normalsNeedUpdate = false;

			}

			if ( geometry.colorsNeedUpdate === true ) {

				attribute = this.attributes.color;

				if ( attribute !== undefined ) {

					attribute.copyColorsArray( geometry.colors );
					attribute.needsUpdate = true;

				}

				geometry.colorsNeedUpdate = false;

			}

			if ( geometry.uvsNeedUpdate ) {

				attribute = this.attributes.uv;

				if ( attribute !== undefined ) {

					attribute.copyVector2sArray( geometry.uvs );
					attribute.needsUpdate = true;

				}

				geometry.uvsNeedUpdate = false;

			}

			if ( geometry.lineDistancesNeedUpdate ) {

				attribute = this.attributes.lineDistance;

				if ( attribute !== undefined ) {

					attribute.copyArray( geometry.lineDistances );
					attribute.needsUpdate = true;

				}

				geometry.lineDistancesNeedUpdate = false;

			}

			if ( geometry.groupsNeedUpdate ) {

				geometry.computeGroups( object.geometry );
				this.groups = geometry.groups;

				geometry.groupsNeedUpdate = false;

			}

			return this;

		},

		fromGeometry: function ( geometry ) {

			geometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );

			return this.fromDirectGeometry( geometry.__directGeometry );

		},

		fromDirectGeometry: function ( geometry ) {

			var positions = new Float32Array( geometry.vertices.length * 3 );
			this.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );

			if ( geometry.normals.length > 0 ) {

				var normals = new Float32Array( geometry.normals.length * 3 );
				this.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );

			}

			if ( geometry.colors.length > 0 ) {

				var colors = new Float32Array( geometry.colors.length * 3 );
				this.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );

			}

			if ( geometry.uvs.length > 0 ) {

				var uvs = new Float32Array( geometry.uvs.length * 2 );
				this.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );

			}

			if ( geometry.uvs2.length > 0 ) {

				var uvs2 = new Float32Array( geometry.uvs2.length * 2 );
				this.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );

			}

			// groups

			this.groups = geometry.groups;

			// morphs

			for ( var name in geometry.morphTargets ) {

				var array = [];
				var morphTargets = geometry.morphTargets[ name ];

				for ( var i = 0, l = morphTargets.length; i < l; i ++ ) {

					var morphTarget = morphTargets[ i ];

					var attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );
					attribute.name = morphTarget.name;

					array.push( attribute.copyVector3sArray( morphTarget.data ) );

				}

				this.morphAttributes[ name ] = array;

			}

			// skinning

			if ( geometry.skinIndices.length > 0 ) {

				var skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );
				this.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );

			}

			if ( geometry.skinWeights.length > 0 ) {

				var skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );
				this.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );

			}

			//

			if ( geometry.boundingSphere !== null ) {

				this.boundingSphere = geometry.boundingSphere.clone();

			}

			if ( geometry.boundingBox !== null ) {

				this.boundingBox = geometry.boundingBox.clone();

			}

			return this;

		},

		computeBoundingBox: function () {

			if ( this.boundingBox === null ) {

				this.boundingBox = new Box3();

			}

			var position = this.attributes.position;
			var morphAttributesPosition = this.morphAttributes.position;

			if ( position !== undefined ) {

				this.boundingBox.setFromBufferAttribute( position );

				// process morph attributes if present

				if ( morphAttributesPosition ) {

					for ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

						var morphAttribute = morphAttributesPosition[ i ];
						_box$2.setFromBufferAttribute( morphAttribute );

						if ( this.morphTargetsRelative ) {

							_vector$4.addVectors( this.boundingBox.min, _box$2.min );
							this.boundingBox.expandByPoint( _vector$4 );

							_vector$4.addVectors( this.boundingBox.max, _box$2.max );
							this.boundingBox.expandByPoint( _vector$4 );

						} else {

							this.boundingBox.expandByPoint( _box$2.min );
							this.boundingBox.expandByPoint( _box$2.max );

						}

					}

				}

			} else {

				this.boundingBox.makeEmpty();

			}

			if ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {

				console.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.', this );

			}

		},

		computeBoundingSphere: function () {

			if ( this.boundingSphere === null ) {

				this.boundingSphere = new Sphere();

			}

			var position = this.attributes.position;
			var morphAttributesPosition = this.morphAttributes.position;

			if ( position ) {

				// first, find the center of the bounding sphere

				var center = this.boundingSphere.center;

				_box$2.setFromBufferAttribute( position );

				// process morph attributes if present

				if ( morphAttributesPosition ) {

					for ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

						var morphAttribute = morphAttributesPosition[ i ];
						_boxMorphTargets.setFromBufferAttribute( morphAttribute );

						if ( this.morphTargetsRelative ) {

							_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );
							_box$2.expandByPoint( _vector$4 );

							_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );
							_box$2.expandByPoint( _vector$4 );

						} else {

							_box$2.expandByPoint( _boxMorphTargets.min );
							_box$2.expandByPoint( _boxMorphTargets.max );

						}

					}

				}

				_box$2.getCenter( center );

				// second, try to find a boundingSphere with a radius smaller than the
				// boundingSphere of the boundingBox: sqrt(3) smaller in the best case

				var maxRadiusSq = 0;

				for ( var i = 0, il = position.count; i < il; i ++ ) {

					_vector$4.fromBufferAttribute( position, i );

					maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );

				}

				// process morph attributes if present

				if ( morphAttributesPosition ) {

					for ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {

						var morphAttribute = morphAttributesPosition[ i ];
						var morphTargetsRelative = this.morphTargetsRelative;

						for ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {

							_vector$4.fromBufferAttribute( morphAttribute, j );

							if ( morphTargetsRelative ) {

								_offset.fromBufferAttribute( position, j );
								_vector$4.add( _offset );

							}

							maxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );

						}

					}

				}

				this.boundingSphere.radius = Math.sqrt( maxRadiusSq );

				if ( isNaN( this.boundingSphere.radius ) ) {

					console.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.', this );

				}

			}

		},

		computeFaceNormals: function () {

			// backwards compatibility

		},

		computeVertexNormals: function () {

			var index = this.index;
			var attributes = this.attributes;

			if ( attributes.position ) {

				var positions = attributes.position.array;

				if ( attributes.normal === undefined ) {

					this.setAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );

				} else {

					// reset existing normals to zero

					var array = attributes.normal.array;

					for ( var i = 0, il = array.length; i < il; i ++ ) {

						array[ i ] = 0;

					}

				}

				var normals = attributes.normal.array;

				var vA, vB, vC;
				var pA = new Vector3(), pB = new Vector3(), pC = new Vector3();
				var cb = new Vector3(), ab = new Vector3();

				// indexed elements

				if ( index ) {

					var indices = index.array;

					for ( var i = 0, il = index.count; i < il; i += 3 ) {

						vA = indices[ i + 0 ] * 3;
						vB = indices[ i + 1 ] * 3;
						vC = indices[ i + 2 ] * 3;

						pA.fromArray( positions, vA );
						pB.fromArray( positions, vB );
						pC.fromArray( positions, vC );

						cb.subVectors( pC, pB );
						ab.subVectors( pA, pB );
						cb.cross( ab );

						normals[ vA ] += cb.x;
						normals[ vA + 1 ] += cb.y;
						normals[ vA + 2 ] += cb.z;

						normals[ vB ] += cb.x;
						normals[ vB + 1 ] += cb.y;
						normals[ vB + 2 ] += cb.z;

						normals[ vC ] += cb.x;
						normals[ vC + 1 ] += cb.y;
						normals[ vC + 2 ] += cb.z;

					}

				} else {

					// non-indexed elements (unconnected triangle soup)

					for ( var i = 0, il = positions.length; i < il; i += 9 ) {

						pA.fromArray( positions, i );
						pB.fromArray( positions, i + 3 );
						pC.fromArray( positions, i + 6 );

						cb.subVectors( pC, pB );
						ab.subVectors( pA, pB );
						cb.cross( ab );

						normals[ i ] = cb.x;
						normals[ i + 1 ] = cb.y;
						normals[ i + 2 ] = cb.z;

						normals[ i + 3 ] = cb.x;
						normals[ i + 4 ] = cb.y;
						normals[ i + 5 ] = cb.z;

						normals[ i + 6 ] = cb.x;
						normals[ i + 7 ] = cb.y;
						normals[ i + 8 ] = cb.z;

					}

				}

				this.normalizeNormals();

				attributes.normal.needsUpdate = true;

			}

		},

		merge: function ( geometry, offset ) {

			if ( ! ( geometry && geometry.isBufferGeometry ) ) {

				console.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );
				return;

			}

			if ( offset === undefined ) {

				offset = 0;

				console.warn(
					'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '
					+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'
				);

			}

			var attributes = this.attributes;

			for ( var key in attributes ) {

				if ( geometry.attributes[ key ] === undefined ) { continue; }

				var attribute1 = attributes[ key ];
				var attributeArray1 = attribute1.array;

				var attribute2 = geometry.attributes[ key ];
				var attributeArray2 = attribute2.array;

				var attributeOffset = attribute2.itemSize * offset;
				var length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );

				for ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {

					attributeArray1[ j ] = attributeArray2[ i ];

				}

			}

			return this;

		},

		normalizeNormals: function () {

			var normals = this.attributes.normal;

			for ( var i = 0, il = normals.count; i < il; i ++ ) {

				_vector$4.x = normals.getX( i );
				_vector$4.y = normals.getY( i );
				_vector$4.z = normals.getZ( i );

				_vector$4.normalize();

				normals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );

			}

		},

		toNonIndexed: function () {

			function convertBufferAttribute( attribute, indices ) {

				var array = attribute.array;
				var itemSize = attribute.itemSize;

				var array2 = new array.constructor( indices.length * itemSize );

				var index = 0, index2 = 0;

				for ( var i = 0, l = indices.length; i < l; i ++ ) {

					index = indices[ i ] * itemSize;

					for ( var j = 0; j < itemSize; j ++ ) {

						array2[ index2 ++ ] = array[ index ++ ];

					}

				}

				return new BufferAttribute( array2, itemSize );

			}

			//

			if ( this.index === null ) {

				console.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );
				return this;

			}

			var geometry2 = new BufferGeometry();

			var indices = this.index.array;
			var attributes = this.attributes;

			// attributes

			for ( var name in attributes ) {

				var attribute = attributes[ name ];

				var newAttribute = convertBufferAttribute( attribute, indices );

				geometry2.setAttribute( name, newAttribute );

			}

			// morph attributes

			var morphAttributes = this.morphAttributes;

			for ( name in morphAttributes ) {

				var morphArray = [];
				var morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

				for ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {

					var attribute = morphAttribute[ i ];

					var newAttribute = convertBufferAttribute( attribute, indices );

					morphArray.push( newAttribute );

				}

				geometry2.morphAttributes[ name ] = morphArray;

			}

			geometry2.morphTargetsRelative = this.morphTargetsRelative;

			// groups

			var groups = this.groups;

			for ( var i = 0, l = groups.length; i < l; i ++ ) {

				var group = groups[ i ];
				geometry2.addGroup( group.start, group.count, group.materialIndex );

			}

			return geometry2;

		},

		toJSON: function () {

			var data = {
				metadata: {
					version: 4.5,
					type: 'BufferGeometry',
					generator: 'BufferGeometry.toJSON'
				}
			};

			// standard BufferGeometry serialization

			data.uuid = this.uuid;
			data.type = this.type;
			if ( this.name !== '' ) { data.name = this.name; }
			if ( Object.keys( this.userData ).length > 0 ) { data.userData = this.userData; }

			if ( this.parameters !== undefined ) {

				var parameters = this.parameters;

				for ( var key in parameters ) {

					if ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }

				}

				return data;

			}

			data.data = { attributes: {} };

			var index = this.index;

			if ( index !== null ) {

				data.data.index = {
					type: index.array.constructor.name,
					array: Array.prototype.slice.call( index.array )
				};

			}

			var attributes = this.attributes;

			for ( var key in attributes ) {

				var attribute = attributes[ key ];

				var attributeData = attribute.toJSON();

				if ( attribute.name !== '' ) { attributeData.name = attribute.name; }

				data.data.attributes[ key ] = attributeData;

			}

			var morphAttributes = {};
			var hasMorphAttributes = false;

			for ( var key in this.morphAttributes ) {

				var attributeArray = this.morphAttributes[ key ];

				var array = [];

				for ( var i = 0, il = attributeArray.length; i < il; i ++ ) {

					var attribute = attributeArray[ i ];

					var attributeData = attribute.toJSON();

					if ( attribute.name !== '' ) { attributeData.name = attribute.name; }

					array.push( attributeData );

				}

				if ( array.length > 0 ) {

					morphAttributes[ key ] = array;

					hasMorphAttributes = true;

				}

			}

			if ( hasMorphAttributes ) {

				data.data.morphAttributes = morphAttributes;
				data.data.morphTargetsRelative = this.morphTargetsRelative;

			}

			var groups = this.groups;

			if ( groups.length > 0 ) {

				data.data.groups = JSON.parse( JSON.stringify( groups ) );

			}

			var boundingSphere = this.boundingSphere;

			if ( boundingSphere !== null ) {

				data.data.boundingSphere = {
					center: boundingSphere.center.toArray(),
					radius: boundingSphere.radius
				};

			}

			return data;

		},

		clone: function () {

			/*
			 // Handle primitives

			 var parameters = this.parameters;

			 if ( parameters !== undefined ) {

			 var values = [];

			 for ( var key in parameters ) {

			 values.push( parameters[ key ] );

			 }

			 var geometry = Object.create( this.constructor.prototype );
			 this.constructor.apply( geometry, values );
			 return geometry;

			 }

			 return new this.constructor().copy( this );
			 */

			return new BufferGeometry().copy( this );

		},

		copy: function ( source ) {

			var name, i, l;

			// reset

			this.index = null;
			this.attributes = {};
			this.morphAttributes = {};
			this.groups = [];
			this.boundingBox = null;
			this.boundingSphere = null;

			// name

			this.name = source.name;

			// index

			var index = source.index;

			if ( index !== null ) {

				this.setIndex( index.clone() );

			}

			// attributes

			var attributes = source.attributes;

			for ( name in attributes ) {

				var attribute = attributes[ name ];
				this.setAttribute( name, attribute.clone() );

			}

			// morph attributes

			var morphAttributes = source.morphAttributes;

			for ( name in morphAttributes ) {

				var array = [];
				var morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes

				for ( i = 0, l = morphAttribute.length; i < l; i ++ ) {

					array.push( morphAttribute[ i ].clone() );

				}

				this.morphAttributes[ name ] = array;

			}

			this.morphTargetsRelative = source.morphTargetsRelative;

			// groups

			var groups = source.groups;

			for ( i = 0, l = groups.length; i < l; i ++ ) {

				var group = groups[ i ];
				this.addGroup( group.start, group.count, group.materialIndex );

			}

			// bounding box

			var boundingBox = source.boundingBox;

			if ( boundingBox !== null ) {

				this.boundingBox = boundingBox.clone();

			}

			// bounding sphere

			var boundingSphere = source.boundingSphere;

			if ( boundingSphere !== null ) {

				this.boundingSphere = boundingSphere.clone();

			}

			// draw range

			this.drawRange.start = source.drawRange.start;
			this.drawRange.count = source.drawRange.count;

			// user data

			this.userData = source.userData;

			return this;

		},

		dispose: function () {

			this.dispatchEvent( { type: 'dispose' } );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 * @author mikael emtinger / http://gomo.se/
	 * @author jonobr1 / http://jonobr1.com/
	 */

	var _inverseMatrix = new Matrix4();
	var _ray = new Ray();
	var _sphere = new Sphere();

	var _vA = new Vector3();
	var _vB = new Vector3();
	var _vC = new Vector3();

	var _tempA = new Vector3();
	var _tempB = new Vector3();
	var _tempC = new Vector3();

	var _morphA = new Vector3();
	var _morphB = new Vector3();
	var _morphC = new Vector3();

	var _uvA = new Vector2();
	var _uvB = new Vector2();
	var _uvC = new Vector2();

	var _intersectionPoint = new Vector3();
	var _intersectionPointWorld = new Vector3();

	function Mesh( geometry, material ) {

		Object3D.call( this );

		this.type = 'Mesh';

		this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
		this.material = material !== undefined ? material : new MeshBasicMaterial();

		this.updateMorphTargets();

	}

	Mesh.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Mesh,

		isMesh: true,

		copy: function ( source ) {

			Object3D.prototype.copy.call( this, source );

			if ( source.morphTargetInfluences !== undefined ) {

				this.morphTargetInfluences = source.morphTargetInfluences.slice();

			}

			if ( source.morphTargetDictionary !== undefined ) {

				this.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );

			}

			return this;

		},

		updateMorphTargets: function () {

			var geometry = this.geometry;
			var m, ml, name;

			if ( geometry.isBufferGeometry ) {

				var morphAttributes = geometry.morphAttributes;
				var keys = Object.keys( morphAttributes );

				if ( keys.length > 0 ) {

					var morphAttribute = morphAttributes[ keys[ 0 ] ];

					if ( morphAttribute !== undefined ) {

						this.morphTargetInfluences = [];
						this.morphTargetDictionary = {};

						for ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

							name = morphAttribute[ m ].name || String( m );

							this.morphTargetInfluences.push( 0 );
							this.morphTargetDictionary[ name ] = m;

						}

					}

				}

			} else {

				var morphTargets = geometry.morphTargets;

				if ( morphTargets !== undefined && morphTargets.length > 0 ) {

					console.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

				}

			}

		},

		raycast: function ( raycaster, intersects ) {

			var geometry = this.geometry;
			var material = this.material;
			var matrixWorld = this.matrixWorld;

			if ( material === undefined ) { return; }

			// Checking boundingSphere distance to ray

			if ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }

			_sphere.copy( geometry.boundingSphere );
			_sphere.applyMatrix4( matrixWorld );

			if ( raycaster.ray.intersectsSphere( _sphere ) === false ) { return; }

			//

			_inverseMatrix.getInverse( matrixWorld );
			_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );

			// Check boundingBox before continuing

			if ( geometry.boundingBox !== null ) {

				if ( _ray.intersectsBox( geometry.boundingBox ) === false ) { return; }

			}

			var intersection;

			if ( geometry.isBufferGeometry ) {

				var a, b, c;
				var index = geometry.index;
				var position = geometry.attributes.position;
				var morphPosition = geometry.morphAttributes.position;
				var morphTargetsRelative = geometry.morphTargetsRelative;
				var uv = geometry.attributes.uv;
				var uv2 = geometry.attributes.uv2;
				var groups = geometry.groups;
				var drawRange = geometry.drawRange;
				var i, j, il, jl;
				var group, groupMaterial;
				var start, end;

				if ( index !== null ) {

					// indexed buffer geometry

					if ( Array.isArray( material ) ) {

						for ( i = 0, il = groups.length; i < il; i ++ ) {

							group = groups[ i ];
							groupMaterial = material[ group.materialIndex ];

							start = Math.max( group.start, drawRange.start );
							end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );

							for ( j = start, jl = end; j < jl; j += 3 ) {

								a = index.getX( j );
								b = index.getX( j + 1 );
								c = index.getX( j + 2 );

								intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

								if ( intersection ) {

									intersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics
									intersection.face.materialIndex = group.materialIndex;
									intersects.push( intersection );

								}

							}

						}

					} else {

						start = Math.max( 0, drawRange.start );
						end = Math.min( index.count, ( drawRange.start + drawRange.count ) );

						for ( i = start, il = end; i < il; i += 3 ) {

							a = index.getX( i );
							b = index.getX( i + 1 );
							c = index.getX( i + 2 );

							intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

							if ( intersection ) {

								intersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics
								intersects.push( intersection );

							}

						}

					}

				} else if ( position !== undefined ) {

					// non-indexed buffer geometry

					if ( Array.isArray( material ) ) {

						for ( i = 0, il = groups.length; i < il; i ++ ) {

							group = groups[ i ];
							groupMaterial = material[ group.materialIndex ];

							start = Math.max( group.start, drawRange.start );
							end = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );

							for ( j = start, jl = end; j < jl; j += 3 ) {

								a = j;
								b = j + 1;
								c = j + 2;

								intersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

								if ( intersection ) {

									intersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics
									intersection.face.materialIndex = group.materialIndex;
									intersects.push( intersection );

								}

							}

						}

					} else {

						start = Math.max( 0, drawRange.start );
						end = Math.min( position.count, ( drawRange.start + drawRange.count ) );

						for ( i = start, il = end; i < il; i += 3 ) {

							a = i;
							b = i + 1;
							c = i + 2;

							intersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );

							if ( intersection ) {

								intersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics
								intersects.push( intersection );

							}

						}

					}

				}

			} else if ( geometry.isGeometry ) {

				var fvA, fvB, fvC;
				var isMultiMaterial = Array.isArray( material );

				var vertices = geometry.vertices;
				var faces = geometry.faces;
				var uvs;

				var faceVertexUvs = geometry.faceVertexUvs[ 0 ];
				if ( faceVertexUvs.length > 0 ) { uvs = faceVertexUvs; }

				for ( var f = 0, fl = faces.length; f < fl; f ++ ) {

					var face = faces[ f ];
					var faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;

					if ( faceMaterial === undefined ) { continue; }

					fvA = vertices[ face.a ];
					fvB = vertices[ face.b ];
					fvC = vertices[ face.c ];

					intersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );

					if ( intersection ) {

						if ( uvs && uvs[ f ] ) {

							var uvs_f = uvs[ f ];
							_uvA.copy( uvs_f[ 0 ] );
							_uvB.copy( uvs_f[ 1 ] );
							_uvC.copy( uvs_f[ 2 ] );

							intersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );

						}

						intersection.face = face;
						intersection.faceIndex = f;
						intersects.push( intersection );

					}

				}

			}

		},

		clone: function () {

			return new this.constructor( this.geometry, this.material ).copy( this );

		}

	} );

	function checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {

		var intersect;

		if ( material.side === BackSide ) {

			intersect = ray.intersectTriangle( pC, pB, pA, true, point );

		} else {

			intersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );

		}

		if ( intersect === null ) { return null; }

		_intersectionPointWorld.copy( point );
		_intersectionPointWorld.applyMatrix4( object.matrixWorld );

		var distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );

		if ( distance < raycaster.near || distance > raycaster.far ) { return null; }

		return {
			distance: distance,
			point: _intersectionPointWorld.clone(),
			object: object
		};

	}

	function checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {

		_vA.fromBufferAttribute( position, a );
		_vB.fromBufferAttribute( position, b );
		_vC.fromBufferAttribute( position, c );

		var morphInfluences = object.morphTargetInfluences;

		if ( material.morphTargets && morphPosition && morphInfluences ) {

			_morphA.set( 0, 0, 0 );
			_morphB.set( 0, 0, 0 );
			_morphC.set( 0, 0, 0 );

			for ( var i = 0, il = morphPosition.length; i < il; i ++ ) {

				var influence = morphInfluences[ i ];
				var morphAttribute = morphPosition[ i ];

				if ( influence === 0 ) { continue; }

				_tempA.fromBufferAttribute( morphAttribute, a );
				_tempB.fromBufferAttribute( morphAttribute, b );
				_tempC.fromBufferAttribute( morphAttribute, c );

				if ( morphTargetsRelative ) {

					_morphA.addScaledVector( _tempA, influence );
					_morphB.addScaledVector( _tempB, influence );
					_morphC.addScaledVector( _tempC, influence );

				} else {

					_morphA.addScaledVector( _tempA.sub( _vA ), influence );
					_morphB.addScaledVector( _tempB.sub( _vB ), influence );
					_morphC.addScaledVector( _tempC.sub( _vC ), influence );

				}

			}

			_vA.add( _morphA );
			_vB.add( _morphB );
			_vC.add( _morphC );

		}

		var intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );

		if ( intersection ) {

			if ( uv ) {

				_uvA.fromBufferAttribute( uv, a );
				_uvB.fromBufferAttribute( uv, b );
				_uvC.fromBufferAttribute( uv, c );

				intersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );

			}

			if ( uv2 ) {

				_uvA.fromBufferAttribute( uv2, a );
				_uvB.fromBufferAttribute( uv2, b );
				_uvC.fromBufferAttribute( uv2, c );

				intersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );

			}

			var face = new Face3( a, b, c );
			Triangle.getNormal( _vA, _vB, _vC, face.normal );

			intersection.face = face;

		}

		return intersection;

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author kile / http://kile.stravaganza.org/
	 * @author alteredq / http://alteredqualia.com/
	 * @author mikael emtinger / http://gomo.se/
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * @author bhouston / http://clara.io
	 */

	var _geometryId = 0; // Geometry uses even numbers as Id
	var _m1$3 = new Matrix4();
	var _obj$1 = new Object3D();
	var _offset$1 = new Vector3();

	function Geometry() {

		Object.defineProperty( this, 'id', { value: _geometryId += 2 } );

		this.uuid = MathUtils.generateUUID();

		this.name = '';
		this.type = 'Geometry';

		this.vertices = [];
		this.colors = [];
		this.faces = [];
		this.faceVertexUvs = [[]];

		this.morphTargets = [];
		this.morphNormals = [];

		this.skinWeights = [];
		this.skinIndices = [];

		this.lineDistances = [];

		this.boundingBox = null;
		this.boundingSphere = null;

		// update flags

		this.elementsNeedUpdate = false;
		this.verticesNeedUpdate = false;
		this.uvsNeedUpdate = false;
		this.normalsNeedUpdate = false;
		this.colorsNeedUpdate = false;
		this.lineDistancesNeedUpdate = false;
		this.groupsNeedUpdate = false;

	}

	Geometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: Geometry,

		isGeometry: true,

		applyMatrix4: function ( matrix ) {

			var normalMatrix = new Matrix3().getNormalMatrix( matrix );

			for ( var i = 0, il = this.vertices.length; i < il; i ++ ) {

				var vertex = this.vertices[ i ];
				vertex.applyMatrix4( matrix );

			}

			for ( var i = 0, il = this.faces.length; i < il; i ++ ) {

				var face = this.faces[ i ];
				face.normal.applyMatrix3( normalMatrix ).normalize();

				for ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {

					face.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();

				}

			}

			if ( this.boundingBox !== null ) {

				this.computeBoundingBox();

			}

			if ( this.boundingSphere !== null ) {

				this.computeBoundingSphere();

			}

			this.verticesNeedUpdate = true;
			this.normalsNeedUpdate = true;

			return this;

		},

		rotateX: function ( angle ) {

			// rotate geometry around world x-axis

			_m1$3.makeRotationX( angle );

			this.applyMatrix4( _m1$3 );

			return this;

		},

		rotateY: function ( angle ) {

			// rotate geometry around world y-axis

			_m1$3.makeRotationY( angle );

			this.applyMatrix4( _m1$3 );

			return this;

		},

		rotateZ: function ( angle ) {

			// rotate geometry around world z-axis

			_m1$3.makeRotationZ( angle );

			this.applyMatrix4( _m1$3 );

			return this;

		},

		translate: function ( x, y, z ) {

			// translate geometry

			_m1$3.makeTranslation( x, y, z );

			this.applyMatrix4( _m1$3 );

			return this;

		},

		scale: function ( x, y, z ) {

			// scale geometry

			_m1$3.makeScale( x, y, z );

			this.applyMatrix4( _m1$3 );

			return this;

		},

		lookAt: function ( vector ) {

			_obj$1.lookAt( vector );

			_obj$1.updateMatrix();

			this.applyMatrix4( _obj$1.matrix );

			return this;

		},

		fromBufferGeometry: function ( geometry ) {

			var scope = this;

			var indices = geometry.index !== null ? geometry.index.array : undefined;
			var attributes = geometry.attributes;

			if ( attributes.position === undefined ) {

				console.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );
				return this;

			}

			var positions = attributes.position.array;
			var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;
			var colors = attributes.color !== undefined ? attributes.color.array : undefined;
			var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;
			var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;

			if ( uvs2 !== undefined ) { this.faceVertexUvs[ 1 ] = []; }

			for ( var i = 0; i < positions.length; i += 3 ) {

				scope.vertices.push( new Vector3().fromArray( positions, i ) );

				if ( colors !== undefined ) {

					scope.colors.push( new Color().fromArray( colors, i ) );

				}

			}

			function addFace( a, b, c, materialIndex ) {

				var vertexColors = ( colors === undefined ) ? [] : [
					scope.colors[ a ].clone(),
					scope.colors[ b ].clone(),
					scope.colors[ c ].clone() ];

				var vertexNormals = ( normals === undefined ) ? [] : [
					new Vector3().fromArray( normals, a * 3 ),
					new Vector3().fromArray( normals, b * 3 ),
					new Vector3().fromArray( normals, c * 3 )
				];

				var face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );

				scope.faces.push( face );

				if ( uvs !== undefined ) {

					scope.faceVertexUvs[ 0 ].push( [
						new Vector2().fromArray( uvs, a * 2 ),
						new Vector2().fromArray( uvs, b * 2 ),
						new Vector2().fromArray( uvs, c * 2 )
					] );

				}

				if ( uvs2 !== undefined ) {

					scope.faceVertexUvs[ 1 ].push( [
						new Vector2().fromArray( uvs2, a * 2 ),
						new Vector2().fromArray( uvs2, b * 2 ),
						new Vector2().fromArray( uvs2, c * 2 )
					] );

				}

			}

			var groups = geometry.groups;

			if ( groups.length > 0 ) {

				for ( var i = 0; i < groups.length; i ++ ) {

					var group = groups[ i ];

					var start = group.start;
					var count = group.count;

					for ( var j = start, jl = start + count; j < jl; j += 3 ) {

						if ( indices !== undefined ) {

							addFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );

						} else {

							addFace( j, j + 1, j + 2, group.materialIndex );

						}

					}

				}

			} else {

				if ( indices !== undefined ) {

					for ( var i = 0; i < indices.length; i += 3 ) {

						addFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );

					}

				} else {

					for ( var i = 0; i < positions.length / 3; i += 3 ) {

						addFace( i, i + 1, i + 2 );

					}

				}

			}

			this.computeFaceNormals();

			if ( geometry.boundingBox !== null ) {

				this.boundingBox = geometry.boundingBox.clone();

			}

			if ( geometry.boundingSphere !== null ) {

				this.boundingSphere = geometry.boundingSphere.clone();

			}

			return this;

		},

		center: function () {

			this.computeBoundingBox();

			this.boundingBox.getCenter( _offset$1 ).negate();

			this.translate( _offset$1.x, _offset$1.y, _offset$1.z );

			return this;

		},

		normalize: function () {

			this.computeBoundingSphere();

			var center = this.boundingSphere.center;
			var radius = this.boundingSphere.radius;

			var s = radius === 0 ? 1 : 1.0 / radius;

			var matrix = new Matrix4();
			matrix.set(
				s, 0, 0, - s * center.x,
				0, s, 0, - s * center.y,
				0, 0, s, - s * center.z,
				0, 0, 0, 1
			);

			this.applyMatrix4( matrix );

			return this;

		},

		computeFaceNormals: function () {

			var cb = new Vector3(), ab = new Vector3();

			for ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {

				var face = this.faces[ f ];

				var vA = this.vertices[ face.a ];
				var vB = this.vertices[ face.b ];
				var vC = this.vertices[ face.c ];

				cb.subVectors( vC, vB );
				ab.subVectors( vA, vB );
				cb.cross( ab );

				cb.normalize();

				face.normal.copy( cb );

			}

		},

		computeVertexNormals: function ( areaWeighted ) {

			if ( areaWeighted === undefined ) { areaWeighted = true; }

			var v, vl, f, fl, face, vertices;

			vertices = new Array( this.vertices.length );

			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

				vertices[ v ] = new Vector3();

			}

			if ( areaWeighted ) {

				// vertex normals weighted by triangle areas
				// http://www.iquilezles.org/www/articles/normals/normals.htm

				var vA, vB, vC;
				var cb = new Vector3(), ab = new Vector3();

				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

					face = this.faces[ f ];

					vA = this.vertices[ face.a ];
					vB = this.vertices[ face.b ];
					vC = this.vertices[ face.c ];

					cb.subVectors( vC, vB );
					ab.subVectors( vA, vB );
					cb.cross( ab );

					vertices[ face.a ].add( cb );
					vertices[ face.b ].add( cb );
					vertices[ face.c ].add( cb );

				}

			} else {

				this.computeFaceNormals();

				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

					face = this.faces[ f ];

					vertices[ face.a ].add( face.normal );
					vertices[ face.b ].add( face.normal );
					vertices[ face.c ].add( face.normal );

				}

			}

			for ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {

				vertices[ v ].normalize();

			}

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				var vertexNormals = face.vertexNormals;

				if ( vertexNormals.length === 3 ) {

					vertexNormals[ 0 ].copy( vertices[ face.a ] );
					vertexNormals[ 1 ].copy( vertices[ face.b ] );
					vertexNormals[ 2 ].copy( vertices[ face.c ] );

				} else {

					vertexNormals[ 0 ] = vertices[ face.a ].clone();
					vertexNormals[ 1 ] = vertices[ face.b ].clone();
					vertexNormals[ 2 ] = vertices[ face.c ].clone();

				}

			}

			if ( this.faces.length > 0 ) {

				this.normalsNeedUpdate = true;

			}

		},

		computeFlatVertexNormals: function () {

			var f, fl, face;

			this.computeFaceNormals();

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				var vertexNormals = face.vertexNormals;

				if ( vertexNormals.length === 3 ) {

					vertexNormals[ 0 ].copy( face.normal );
					vertexNormals[ 1 ].copy( face.normal );
					vertexNormals[ 2 ].copy( face.normal );

				} else {

					vertexNormals[ 0 ] = face.normal.clone();
					vertexNormals[ 1 ] = face.normal.clone();
					vertexNormals[ 2 ] = face.normal.clone();

				}

			}

			if ( this.faces.length > 0 ) {

				this.normalsNeedUpdate = true;

			}

		},

		computeMorphNormals: function () {

			var i, il, f, fl, face;

			// save original normals
			// - create temp variables on first access
			//   otherwise just copy (for faster repeated calls)

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				if ( ! face.__originalFaceNormal ) {

					face.__originalFaceNormal = face.normal.clone();

				} else {

					face.__originalFaceNormal.copy( face.normal );

				}

				if ( ! face.__originalVertexNormals ) { face.__originalVertexNormals = []; }

				for ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {

					if ( ! face.__originalVertexNormals[ i ] ) {

						face.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();

					} else {

						face.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );

					}

				}

			}

			// use temp geometry to compute face and vertex normals for each morph

			var tmpGeo = new Geometry();
			tmpGeo.faces = this.faces;

			for ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {

				// create on first access

				if ( ! this.morphNormals[ i ] ) {

					this.morphNormals[ i ] = {};
					this.morphNormals[ i ].faceNormals = [];
					this.morphNormals[ i ].vertexNormals = [];

					var dstNormalsFace = this.morphNormals[ i ].faceNormals;
					var dstNormalsVertex = this.morphNormals[ i ].vertexNormals;

					var faceNormal, vertexNormals;

					for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

						faceNormal = new Vector3();
						vertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };

						dstNormalsFace.push( faceNormal );
						dstNormalsVertex.push( vertexNormals );

					}

				}

				var morphNormals = this.morphNormals[ i ];

				// set vertices to morph target

				tmpGeo.vertices = this.morphTargets[ i ].vertices;

				// compute morph normals

				tmpGeo.computeFaceNormals();
				tmpGeo.computeVertexNormals();

				// store morph normals

				var faceNormal, vertexNormals;

				for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

					face = this.faces[ f ];

					faceNormal = morphNormals.faceNormals[ f ];
					vertexNormals = morphNormals.vertexNormals[ f ];

					faceNormal.copy( face.normal );

					vertexNormals.a.copy( face.vertexNormals[ 0 ] );
					vertexNormals.b.copy( face.vertexNormals[ 1 ] );
					vertexNormals.c.copy( face.vertexNormals[ 2 ] );

				}

			}

			// restore original normals

			for ( f = 0, fl = this.faces.length; f < fl; f ++ ) {

				face = this.faces[ f ];

				face.normal = face.__originalFaceNormal;
				face.vertexNormals = face.__originalVertexNormals;

			}

		},

		computeBoundingBox: function () {

			if ( this.boundingBox === null ) {

				this.boundingBox = new Box3();

			}

			this.boundingBox.setFromPoints( this.vertices );

		},

		computeBoundingSphere: function () {

			if ( this.boundingSphere === null ) {

				this.boundingSphere = new Sphere();

			}

			this.boundingSphere.setFromPoints( this.vertices );

		},

		merge: function ( geometry, matrix, materialIndexOffset ) {

			if ( ! ( geometry && geometry.isGeometry ) ) {

				console.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );
				return;

			}

			var normalMatrix,
				vertexOffset = this.vertices.length,
				vertices1 = this.vertices,
				vertices2 = geometry.vertices,
				faces1 = this.faces,
				faces2 = geometry.faces,
				colors1 = this.colors,
				colors2 = geometry.colors;

			if ( materialIndexOffset === undefined ) { materialIndexOffset = 0; }

			if ( matrix !== undefined ) {

				normalMatrix = new Matrix3().getNormalMatrix( matrix );

			}

			// vertices

			for ( var i = 0, il = vertices2.length; i < il; i ++ ) {

				var vertex = vertices2[ i ];

				var vertexCopy = vertex.clone();

				if ( matrix !== undefined ) { vertexCopy.applyMatrix4( matrix ); }

				vertices1.push( vertexCopy );

			}

			// colors

			for ( var i = 0, il = colors2.length; i < il; i ++ ) {

				colors1.push( colors2[ i ].clone() );

			}

			// faces

			for ( i = 0, il = faces2.length; i < il; i ++ ) {

				var face = faces2[ i ], faceCopy, normal, color,
					faceVertexNormals = face.vertexNormals,
					faceVertexColors = face.vertexColors;

				faceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );
				faceCopy.normal.copy( face.normal );

				if ( normalMatrix !== undefined ) {

					faceCopy.normal.applyMatrix3( normalMatrix ).normalize();

				}

				for ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {

					normal = faceVertexNormals[ j ].clone();

					if ( normalMatrix !== undefined ) {

						normal.applyMatrix3( normalMatrix ).normalize();

					}

					faceCopy.vertexNormals.push( normal );

				}

				faceCopy.color.copy( face.color );

				for ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {

					color = faceVertexColors[ j ];
					faceCopy.vertexColors.push( color.clone() );

				}

				faceCopy.materialIndex = face.materialIndex + materialIndexOffset;

				faces1.push( faceCopy );

			}

			// uvs

			for ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {

				var faceVertexUvs2 = geometry.faceVertexUvs[ i ];

				if ( this.faceVertexUvs[ i ] === undefined ) { this.faceVertexUvs[ i ] = []; }

				for ( var j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {

					var uvs2 = faceVertexUvs2[ j ], uvsCopy = [];

					for ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {

						uvsCopy.push( uvs2[ k ].clone() );

					}

					this.faceVertexUvs[ i ].push( uvsCopy );

				}

			}

		},

		mergeMesh: function ( mesh ) {

			if ( ! ( mesh && mesh.isMesh ) ) {

				console.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );
				return;

			}

			if ( mesh.matrixAutoUpdate ) { mesh.updateMatrix(); }

			this.merge( mesh.geometry, mesh.matrix );

		},

		/*
		 * Checks for duplicate vertices with hashmap.
		 * Duplicated vertices are removed
		 * and faces' vertices are updated.
		 */

		mergeVertices: function () {

			var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)
			var unique = [], changes = [];

			var v, key;
			var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001
			var precision = Math.pow( 10, precisionPoints );
			var i, il, face;
			var indices, j, jl;

			for ( i = 0, il = this.vertices.length; i < il; i ++ ) {

				v = this.vertices[ i ];
				key = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );

				if ( verticesMap[ key ] === undefined ) {

					verticesMap[ key ] = i;
					unique.push( this.vertices[ i ] );
					changes[ i ] = unique.length - 1;

				} else {

					//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);
					changes[ i ] = changes[ verticesMap[ key ] ];

				}

			}


			// if faces are completely degenerate after merging vertices, we
			// have to remove them from the geometry.
			var faceIndicesToRemove = [];

			for ( i = 0, il = this.faces.length; i < il; i ++ ) {

				face = this.faces[ i ];

				face.a = changes[ face.a ];
				face.b = changes[ face.b ];
				face.c = changes[ face.c ];

				indices = [ face.a, face.b, face.c ];

				// if any duplicate vertices are found in a Face3
				// we have to remove the face as nothing can be saved
				for ( var n = 0; n < 3; n ++ ) {

					if ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {

						faceIndicesToRemove.push( i );
						break;

					}

				}

			}

			for ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {

				var idx = faceIndicesToRemove[ i ];

				this.faces.splice( idx, 1 );

				for ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {

					this.faceVertexUvs[ j ].splice( idx, 1 );

				}

			}

			// Use unique set of vertices

			var diff = this.vertices.length - unique.length;
			this.vertices = unique;
			return diff;

		},

		setFromPoints: function ( points ) {

			this.vertices = [];

			for ( var i = 0, l = points.length; i < l; i ++ ) {

				var point = points[ i ];
				this.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );

			}

			return this;

		},

		sortFacesByMaterialIndex: function () {

			var faces = this.faces;
			var length = faces.length;

			// tag faces

			for ( var i = 0; i < length; i ++ ) {

				faces[ i ]._id = i;

			}

			// sort faces

			function materialIndexSort( a, b ) {

				return a.materialIndex - b.materialIndex;

			}

			faces.sort( materialIndexSort );

			// sort uvs

			var uvs1 = this.faceVertexUvs[ 0 ];
			var uvs2 = this.faceVertexUvs[ 1 ];

			var newUvs1, newUvs2;

			if ( uvs1 && uvs1.length === length ) { newUvs1 = []; }
			if ( uvs2 && uvs2.length === length ) { newUvs2 = []; }

			for ( var i = 0; i < length; i ++ ) {

				var id = faces[ i ]._id;

				if ( newUvs1 ) { newUvs1.push( uvs1[ id ] ); }
				if ( newUvs2 ) { newUvs2.push( uvs2[ id ] ); }

			}

			if ( newUvs1 ) { this.faceVertexUvs[ 0 ] = newUvs1; }
			if ( newUvs2 ) { this.faceVertexUvs[ 1 ] = newUvs2; }

		},

		toJSON: function () {

			var data = {
				metadata: {
					version: 4.5,
					type: 'Geometry',
					generator: 'Geometry.toJSON'
				}
			};

			// standard Geometry serialization

			data.uuid = this.uuid;
			data.type = this.type;
			if ( this.name !== '' ) { data.name = this.name; }

			if ( this.parameters !== undefined ) {

				var parameters = this.parameters;

				for ( var key in parameters ) {

					if ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }

				}

				return data;

			}

			var vertices = [];

			for ( var i = 0; i < this.vertices.length; i ++ ) {

				var vertex = this.vertices[ i ];
				vertices.push( vertex.x, vertex.y, vertex.z );

			}

			var faces = [];
			var normals = [];
			var normalsHash = {};
			var colors = [];
			var colorsHash = {};
			var uvs = [];
			var uvsHash = {};

			for ( var i = 0; i < this.faces.length; i ++ ) {

				var face = this.faces[ i ];

				var hasMaterial = true;
				var hasFaceUv = false; // deprecated
				var hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;
				var hasFaceNormal = face.normal.length() > 0;
				var hasFaceVertexNormal = face.vertexNormals.length > 0;
				var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;
				var hasFaceVertexColor = face.vertexColors.length > 0;

				var faceType = 0;

				faceType = setBit( faceType, 0, 0 ); // isQuad
				faceType = setBit( faceType, 1, hasMaterial );
				faceType = setBit( faceType, 2, hasFaceUv );
				faceType = setBit( faceType, 3, hasFaceVertexUv );
				faceType = setBit( faceType, 4, hasFaceNormal );
				faceType = setBit( faceType, 5, hasFaceVertexNormal );
				faceType = setBit( faceType, 6, hasFaceColor );
				faceType = setBit( faceType, 7, hasFaceVertexColor );

				faces.push( faceType );
				faces.push( face.a, face.b, face.c );
				faces.push( face.materialIndex );

				if ( hasFaceVertexUv ) {

					var faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];

					faces.push(
						getUvIndex( faceVertexUvs[ 0 ] ),
						getUvIndex( faceVertexUvs[ 1 ] ),
						getUvIndex( faceVertexUvs[ 2 ] )
					);

				}

				if ( hasFaceNormal ) {

					faces.push( getNormalIndex( face.normal ) );

				}

				if ( hasFaceVertexNormal ) {

					var vertexNormals = face.vertexNormals;

					faces.push(
						getNormalIndex( vertexNormals[ 0 ] ),
						getNormalIndex( vertexNormals[ 1 ] ),
						getNormalIndex( vertexNormals[ 2 ] )
					);

				}

				if ( hasFaceColor ) {

					faces.push( getColorIndex( face.color ) );

				}

				if ( hasFaceVertexColor ) {

					var vertexColors = face.vertexColors;

					faces.push(
						getColorIndex( vertexColors[ 0 ] ),
						getColorIndex( vertexColors[ 1 ] ),
						getColorIndex( vertexColors[ 2 ] )
					);

				}

			}

			function setBit( value, position, enabled ) {

				return enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );

			}

			function getNormalIndex( normal ) {

				var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();

				if ( normalsHash[ hash ] !== undefined ) {

					return normalsHash[ hash ];

				}

				normalsHash[ hash ] = normals.length / 3;
				normals.push( normal.x, normal.y, normal.z );

				return normalsHash[ hash ];

			}

			function getColorIndex( color ) {

				var hash = color.r.toString() + color.g.toString() + color.b.toString();

				if ( colorsHash[ hash ] !== undefined ) {

					return colorsHash[ hash ];

				}

				colorsHash[ hash ] = colors.length;
				colors.push( color.getHex() );

				return colorsHash[ hash ];

			}

			function getUvIndex( uv ) {

				var hash = uv.x.toString() + uv.y.toString();

				if ( uvsHash[ hash ] !== undefined ) {

					return uvsHash[ hash ];

				}

				uvsHash[ hash ] = uvs.length / 2;
				uvs.push( uv.x, uv.y );

				return uvsHash[ hash ];

			}

			data.data = {};

			data.data.vertices = vertices;
			data.data.normals = normals;
			if ( colors.length > 0 ) { data.data.colors = colors; }
			if ( uvs.length > 0 ) { data.data.uvs = [ uvs ]; } // temporal backward compatibility
			data.data.faces = faces;

			return data;

		},

		clone: function () {

			/*
			 // Handle primitives

			 var parameters = this.parameters;

			 if ( parameters !== undefined ) {

			 var values = [];

			 for ( var key in parameters ) {

			 values.push( parameters[ key ] );

			 }

			 var geometry = Object.create( this.constructor.prototype );
			 this.constructor.apply( geometry, values );
			 return geometry;

			 }

			 return new this.constructor().copy( this );
			 */

			return new Geometry().copy( this );

		},

		copy: function ( source ) {

			var i, il, j, jl, k, kl;

			// reset

			this.vertices = [];
			this.colors = [];
			this.faces = [];
			this.faceVertexUvs = [[]];
			this.morphTargets = [];
			this.morphNormals = [];
			this.skinWeights = [];
			this.skinIndices = [];
			this.lineDistances = [];
			this.boundingBox = null;
			this.boundingSphere = null;

			// name

			this.name = source.name;

			// vertices

			var vertices = source.vertices;

			for ( i = 0, il = vertices.length; i < il; i ++ ) {

				this.vertices.push( vertices[ i ].clone() );

			}

			// colors

			var colors = source.colors;

			for ( i = 0, il = colors.length; i < il; i ++ ) {

				this.colors.push( colors[ i ].clone() );

			}

			// faces

			var faces = source.faces;

			for ( i = 0, il = faces.length; i < il; i ++ ) {

				this.faces.push( faces[ i ].clone() );

			}

			// face vertex uvs

			for ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {

				var faceVertexUvs = source.faceVertexUvs[ i ];

				if ( this.faceVertexUvs[ i ] === undefined ) {

					this.faceVertexUvs[ i ] = [];

				}

				for ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {

					var uvs = faceVertexUvs[ j ], uvsCopy = [];

					for ( k = 0, kl = uvs.length; k < kl; k ++ ) {

						var uv = uvs[ k ];

						uvsCopy.push( uv.clone() );

					}

					this.faceVertexUvs[ i ].push( uvsCopy );

				}

			}

			// morph targets

			var morphTargets = source.morphTargets;

			for ( i = 0, il = morphTargets.length; i < il; i ++ ) {

				var morphTarget = {};
				morphTarget.name = morphTargets[ i ].name;

				// vertices

				if ( morphTargets[ i ].vertices !== undefined ) {

					morphTarget.vertices = [];

					for ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {

						morphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );

					}

				}

				// normals

				if ( morphTargets[ i ].normals !== undefined ) {

					morphTarget.normals = [];

					for ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {

						morphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );

					}

				}

				this.morphTargets.push( morphTarget );

			}

			// morph normals

			var morphNormals = source.morphNormals;

			for ( i = 0, il = morphNormals.length; i < il; i ++ ) {

				var morphNormal = {};

				// vertex normals

				if ( morphNormals[ i ].vertexNormals !== undefined ) {

					morphNormal.vertexNormals = [];

					for ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {

						var srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];
						var destVertexNormal = {};

						destVertexNormal.a = srcVertexNormal.a.clone();
						destVertexNormal.b = srcVertexNormal.b.clone();
						destVertexNormal.c = srcVertexNormal.c.clone();

						morphNormal.vertexNormals.push( destVertexNormal );

					}

				}

				// face normals

				if ( morphNormals[ i ].faceNormals !== undefined ) {

					morphNormal.faceNormals = [];

					for ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {

						morphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );

					}

				}

				this.morphNormals.push( morphNormal );

			}

			// skin weights

			var skinWeights = source.skinWeights;

			for ( i = 0, il = skinWeights.length; i < il; i ++ ) {

				this.skinWeights.push( skinWeights[ i ].clone() );

			}

			// skin indices

			var skinIndices = source.skinIndices;

			for ( i = 0, il = skinIndices.length; i < il; i ++ ) {

				this.skinIndices.push( skinIndices[ i ].clone() );

			}

			// line distances

			var lineDistances = source.lineDistances;

			for ( i = 0, il = lineDistances.length; i < il; i ++ ) {

				this.lineDistances.push( lineDistances[ i ] );

			}

			// bounding box

			var boundingBox = source.boundingBox;

			if ( boundingBox !== null ) {

				this.boundingBox = boundingBox.clone();

			}

			// bounding sphere

			var boundingSphere = source.boundingSphere;

			if ( boundingSphere !== null ) {

				this.boundingSphere = boundingSphere.clone();

			}

			// update flags

			this.elementsNeedUpdate = source.elementsNeedUpdate;
			this.verticesNeedUpdate = source.verticesNeedUpdate;
			this.uvsNeedUpdate = source.uvsNeedUpdate;
			this.normalsNeedUpdate = source.normalsNeedUpdate;
			this.colorsNeedUpdate = source.colorsNeedUpdate;
			this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;
			this.groupsNeedUpdate = source.groupsNeedUpdate;

			return this;

		},

		dispose: function () {

			this.dispatchEvent( { type: 'dispose' } );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// BoxGeometry

	var BoxGeometry = /*@__PURE__*/(function (Geometry) {
		function BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {

			Geometry.call(this);

			this.type = 'BoxGeometry';

			this.parameters = {
				width: width,
				height: height,
				depth: depth,
				widthSegments: widthSegments,
				heightSegments: heightSegments,
				depthSegments: depthSegments
			};

			this.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );
			this.mergeVertices();

		}

		if ( Geometry ) BoxGeometry.__proto__ = Geometry;
		BoxGeometry.prototype = Object.create( Geometry && Geometry.prototype );
		BoxGeometry.prototype.constructor = BoxGeometry;

		return BoxGeometry;
	}(Geometry));

	// BoxBufferGeometry

	var BoxBufferGeometry = /*@__PURE__*/(function (BufferGeometry) {
		function BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {

			BufferGeometry.call(this);

			this.type = 'BoxBufferGeometry';

			this.parameters = {
				width: width,
				height: height,
				depth: depth,
				widthSegments: widthSegments,
				heightSegments: heightSegments,
				depthSegments: depthSegments
			};

			var scope = this;

			width = width || 1;
			height = height || 1;
			depth = depth || 1;

			// segments

			widthSegments = Math.floor( widthSegments ) || 1;
			heightSegments = Math.floor( heightSegments ) || 1;
			depthSegments = Math.floor( depthSegments ) || 1;

			// buffers

			var indices = [];
			var vertices = [];
			var normals = [];
			var uvs = [];

			// helper variables

			var numberOfVertices = 0;
			var groupStart = 0;

			// build each side of the box geometry

			buildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px
			buildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx
			buildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py
			buildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny
			buildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz
			buildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz

			// build geometry

			this.setIndex( indices );
			this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
			this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
			this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

			function buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {

				var segmentWidth = width / gridX;
				var segmentHeight = height / gridY;

				var widthHalf = width / 2;
				var heightHalf = height / 2;
				var depthHalf = depth / 2;

				var gridX1 = gridX + 1;
				var gridY1 = gridY + 1;

				var vertexCounter = 0;
				var groupCount = 0;

				var ix, iy;

				var vector = new Vector3();

				// generate vertices, normals and uvs

				for ( iy = 0; iy < gridY1; iy ++ ) {

					var y = iy * segmentHeight - heightHalf;

					for ( ix = 0; ix < gridX1; ix ++ ) {

						var x = ix * segmentWidth - widthHalf;

						// set values to correct vector component

						vector[ u ] = x * udir;
						vector[ v ] = y * vdir;
						vector[ w ] = depthHalf;

						// now apply vector to vertex buffer

						vertices.push( vector.x, vector.y, vector.z );

						// set values to correct vector component

						vector[ u ] = 0;
						vector[ v ] = 0;
						vector[ w ] = depth > 0 ? 1 : - 1;

						// now apply vector to normal buffer

						normals.push( vector.x, vector.y, vector.z );

						// uvs

						uvs.push( ix / gridX );
						uvs.push( 1 - ( iy / gridY ) );

						// counters

						vertexCounter += 1;

					}

				}

				// indices

				// 1. you need three indices to draw a single face
				// 2. a single segment consists of two faces
				// 3. so we need to generate six (2*3) indices per segment

				for ( iy = 0; iy < gridY; iy ++ ) {

					for ( ix = 0; ix < gridX; ix ++ ) {

						var a = numberOfVertices + ix + gridX1 * iy;
						var b = numberOfVertices + ix + gridX1 * ( iy + 1 );
						var c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );
						var d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;

						// faces

						indices.push( a, b, d );
						indices.push( b, c, d );

						// increase counter

						groupCount += 6;

					}

				}

				// add a group to the geometry. this will ensure multi material support

				scope.addGroup( groupStart, groupCount, materialIndex );

				// calculate new start value for groups

				groupStart += groupCount;

				// update total number of vertices

				numberOfVertices += vertexCounter;

			}

		}

		if ( BufferGeometry ) BoxBufferGeometry.__proto__ = BufferGeometry;
		BoxBufferGeometry.prototype = Object.create( BufferGeometry && BufferGeometry.prototype );
		BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;

		return BoxBufferGeometry;
	}(BufferGeometry));

	/**
	 * Uniform Utilities
	 */

	function cloneUniforms( src ) {

		var dst = {};

		for ( var u in src ) {

			dst[ u ] = {};

			for ( var p in src[ u ] ) {

				var property = src[ u ][ p ];

				if ( property && ( property.isColor ||
					property.isMatrix3 || property.isMatrix4 ||
					property.isVector2 || property.isVector3 || property.isVector4 ||
					property.isTexture ) ) {

					dst[ u ][ p ] = property.clone();

				} else if ( Array.isArray( property ) ) {

					dst[ u ][ p ] = property.slice();

				} else {

					dst[ u ][ p ] = property;

				}

			}

		}

		return dst;

	}

	function mergeUniforms( uniforms ) {

		var merged = {};

		for ( var u = 0; u < uniforms.length; u ++ ) {

			var tmp = cloneUniforms( uniforms[ u ] );

			for ( var p in tmp ) {

				merged[ p ] = tmp[ p ];

			}

		}

		return merged;

	}

	// Legacy

	var UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };

	var default_vertex = "void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}";

	var default_fragment = "void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}";

	/**
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  defines: { "label" : "value" },
	 *  uniforms: { "parameter1": { value: 1.0 }, "parameter2": { value2: 2 } },
	 *
	 *  fragmentShader: <string>,
	 *  vertexShader: <string>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>,
	 *
	 *  lights: <bool>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function ShaderMaterial( parameters ) {

		Material.call( this );

		this.type = 'ShaderMaterial';

		this.defines = {};
		this.uniforms = {};

		this.vertexShader = default_vertex;
		this.fragmentShader = default_fragment;

		this.linewidth = 1;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false; // set to use scene fog
		this.lights = false; // set to use scene lights
		this.clipping = false; // set to use user-defined clipping planes

		this.skinning = false; // set to use skinning attribute streams
		this.morphTargets = false; // set to use morph targets
		this.morphNormals = false; // set to use morph normals

		this.extensions = {
			derivatives: false, // set to use derivatives
			fragDepth: false, // set to use fragment depth values
			drawBuffers: false, // set to use draw buffers
			shaderTextureLOD: false // set to use shader texture LOD
		};

		// When rendered geometry doesn't include these attributes but the material does,
		// use these default values in WebGL. This avoids errors when buffer data is missing.
		this.defaultAttributeValues = {
			'color': [ 1, 1, 1 ],
			'uv': [ 0, 0 ],
			'uv2': [ 0, 0 ]
		};

		this.index0AttributeName = undefined;
		this.uniformsNeedUpdate = false;

		if ( parameters !== undefined ) {

			if ( parameters.attributes !== undefined ) {

				console.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );

			}

			this.setValues( parameters );

		}

	}

	ShaderMaterial.prototype = Object.create( Material.prototype );
	ShaderMaterial.prototype.constructor = ShaderMaterial;

	ShaderMaterial.prototype.isShaderMaterial = true;

	ShaderMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.fragmentShader = source.fragmentShader;
		this.vertexShader = source.vertexShader;

		this.uniforms = cloneUniforms( source.uniforms );

		this.defines = Object.assign( {}, source.defines );

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		this.lights = source.lights;
		this.clipping = source.clipping;

		this.skinning = source.skinning;

		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		this.extensions = source.extensions;

		return this;

	};

	ShaderMaterial.prototype.toJSON = function ( meta ) {

		var data = Material.prototype.toJSON.call( this, meta );

		data.uniforms = {};

		for ( var name in this.uniforms ) {

			var uniform = this.uniforms[ name ];
			var value = uniform.value;

			if ( value && value.isTexture ) {

				data.uniforms[ name ] = {
					type: 't',
					value: value.toJSON( meta ).uuid
				};

			} else if ( value && value.isColor ) {

				data.uniforms[ name ] = {
					type: 'c',
					value: value.getHex()
				};

			} else if ( value && value.isVector2 ) {

				data.uniforms[ name ] = {
					type: 'v2',
					value: value.toArray()
				};

			} else if ( value && value.isVector3 ) {

				data.uniforms[ name ] = {
					type: 'v3',
					value: value.toArray()
				};

			} else if ( value && value.isVector4 ) {

				data.uniforms[ name ] = {
					type: 'v4',
					value: value.toArray()
				};

			} else if ( value && value.isMatrix3 ) {

				data.uniforms[ name ] = {
					type: 'm3',
					value: value.toArray()
				};

			} else if ( value && value.isMatrix4 ) {

				data.uniforms[ name ] = {
					type: 'm4',
					value: value.toArray()
				};

			} else {

				data.uniforms[ name ] = {
					value: value
				};

				// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far

			}

		}

		if ( Object.keys( this.defines ).length > 0 ) { data.defines = this.defines; }

		data.vertexShader = this.vertexShader;
		data.fragmentShader = this.fragmentShader;

		var extensions = {};

		for ( var key in this.extensions ) {

			if ( this.extensions[ key ] === true ) { extensions[ key ] = true; }

		}

		if ( Object.keys( extensions ).length > 0 ) { data.extensions = extensions; }

		return data;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author mikael emtinger / http://gomo.se/
	 * @author WestLangley / http://github.com/WestLangley
	*/

	function Camera() {

		Object3D.call( this );

		this.type = 'Camera';

		this.matrixWorldInverse = new Matrix4();

		this.projectionMatrix = new Matrix4();
		this.projectionMatrixInverse = new Matrix4();

	}

	Camera.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Camera,

		isCamera: true,

		copy: function ( source, recursive ) {

			Object3D.prototype.copy.call( this, source, recursive );

			this.matrixWorldInverse.copy( source.matrixWorldInverse );

			this.projectionMatrix.copy( source.projectionMatrix );
			this.projectionMatrixInverse.copy( source.projectionMatrixInverse );

			return this;

		},

		getWorldDirection: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Camera: .getWorldDirection() target is now required' );
				target = new Vector3();

			}

			this.updateMatrixWorld( true );

			var e = this.matrixWorld.elements;

			return target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();

		},

		updateMatrixWorld: function ( force ) {

			Object3D.prototype.updateMatrixWorld.call( this, force );

			this.matrixWorldInverse.getInverse( this.matrixWorld );

		},

		updateWorldMatrix: function ( updateParents, updateChildren ) {

			Object3D.prototype.updateWorldMatrix.call( this, updateParents, updateChildren );

			this.matrixWorldInverse.getInverse( this.matrixWorld );

		},

		clone: function () {

			return new this.constructor().copy( this );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author greggman / http://games.greggman.com/
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * @author tschw
	 */

	function PerspectiveCamera( fov, aspect, near, far ) {

		Camera.call( this );

		this.type = 'PerspectiveCamera';

		this.fov = fov !== undefined ? fov : 50;
		this.zoom = 1;

		this.near = near !== undefined ? near : 0.1;
		this.far = far !== undefined ? far : 2000;
		this.focus = 10;

		this.aspect = aspect !== undefined ? aspect : 1;
		this.view = null;

		this.filmGauge = 35;	// width of the film (default in millimeters)
		this.filmOffset = 0;	// horizontal film offset (same unit as gauge)

		this.updateProjectionMatrix();

	}

	PerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {

		constructor: PerspectiveCamera,

		isPerspectiveCamera: true,

		copy: function ( source, recursive ) {

			Camera.prototype.copy.call( this, source, recursive );

			this.fov = source.fov;
			this.zoom = source.zoom;

			this.near = source.near;
			this.far = source.far;
			this.focus = source.focus;

			this.aspect = source.aspect;
			this.view = source.view === null ? null : Object.assign( {}, source.view );

			this.filmGauge = source.filmGauge;
			this.filmOffset = source.filmOffset;

			return this;

		},

		/**
		 * Sets the FOV by focal length in respect to the current .filmGauge.
		 *
		 * The default film gauge is 35, so that the focal length can be specified for
		 * a 35mm (full frame) camera.
		 *
		 * Values for focal length and film gauge must have the same unit.
		 */
		setFocalLength: function ( focalLength ) {

			// see http://www.bobatkins.com/photography/technical/field_of_view.html
			var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;

			this.fov = MathUtils.RAD2DEG * 2 * Math.atan( vExtentSlope );
			this.updateProjectionMatrix();

		},

		/**
		 * Calculates the focal length from the current .fov and .filmGauge.
		 */
		getFocalLength: function () {

			var vExtentSlope = Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov );

			return 0.5 * this.getFilmHeight() / vExtentSlope;

		},

		getEffectiveFOV: function () {

			return MathUtils.RAD2DEG * 2 * Math.atan(
				Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom );

		},

		getFilmWidth: function () {

			// film not completely covered in portrait format (aspect < 1)
			return this.filmGauge * Math.min( this.aspect, 1 );

		},

		getFilmHeight: function () {

			// film not completely covered in landscape format (aspect > 1)
			return this.filmGauge / Math.max( this.aspect, 1 );

		},

		/**
		 * Sets an offset in a larger frustum. This is useful for multi-window or
		 * multi-monitor/multi-machine setups.
		 *
		 * For example, if you have 3x2 monitors and each monitor is 1920x1080 and
		 * the monitors are in grid like this
		 *
		 *   +---+---+---+
		 *   | A | B | C |
		 *   +---+---+---+
		 *   | D | E | F |
		 *   +---+---+---+
		 *
		 * then for each monitor you would call it like this
		 *
		 *   var w = 1920;
		 *   var h = 1080;
		 *   var fullWidth = w * 3;
		 *   var fullHeight = h * 2;
		 *
		 *   --A--
		 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );
		 *   --B--
		 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );
		 *   --C--
		 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );
		 *   --D--
		 *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );
		 *   --E--
		 *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );
		 *   --F--
		 *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );
		 *
		 *   Note there is no reason monitors have to be the same size or in a grid.
		 */
		setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {

			this.aspect = fullWidth / fullHeight;

			if ( this.view === null ) {

				this.view = {
					enabled: true,
					fullWidth: 1,
					fullHeight: 1,
					offsetX: 0,
					offsetY: 0,
					width: 1,
					height: 1
				};

			}

			this.view.enabled = true;
			this.view.fullWidth = fullWidth;
			this.view.fullHeight = fullHeight;
			this.view.offsetX = x;
			this.view.offsetY = y;
			this.view.width = width;
			this.view.height = height;

			this.updateProjectionMatrix();

		},

		clearViewOffset: function () {

			if ( this.view !== null ) {

				this.view.enabled = false;

			}

			this.updateProjectionMatrix();

		},

		updateProjectionMatrix: function () {

			var near = this.near,
				top = near * Math.tan( MathUtils.DEG2RAD * 0.5 * this.fov ) / this.zoom,
				height = 2 * top,
				width = this.aspect * height,
				left = - 0.5 * width,
				view = this.view;

			if ( this.view !== null && this.view.enabled ) {

				var fullWidth = view.fullWidth,
					fullHeight = view.fullHeight;

				left += view.offsetX * width / fullWidth;
				top -= view.offsetY * height / fullHeight;
				width *= view.width / fullWidth;
				height *= view.height / fullHeight;

			}

			var skew = this.filmOffset;
			if ( skew !== 0 ) { left += near * skew / this.getFilmWidth(); }

			this.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );

			this.projectionMatrixInverse.getInverse( this.projectionMatrix );

		},

		toJSON: function ( meta ) {

			var data = Object3D.prototype.toJSON.call( this, meta );

			data.object.fov = this.fov;
			data.object.zoom = this.zoom;

			data.object.near = this.near;
			data.object.far = this.far;
			data.object.focus = this.focus;

			data.object.aspect = this.aspect;

			if ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }

			data.object.filmGauge = this.filmGauge;
			data.object.filmOffset = this.filmOffset;

			return data;

		}

	} );

	/**
	 * Camera for rendering cube maps
	 *	- renders scene into axis-aligned cube
	 *
	 * @author alteredq / http://alteredqualia.com/
	 */

	var fov = 90, aspect = 1;

	function CubeCamera( near, far, cubeResolution, options ) {

		Object3D.call( this );

		this.type = 'CubeCamera';

		var cameraPX = new PerspectiveCamera( fov, aspect, near, far );
		cameraPX.up.set( 0, - 1, 0 );
		cameraPX.lookAt( new Vector3( 1, 0, 0 ) );
		this.add( cameraPX );

		var cameraNX = new PerspectiveCamera( fov, aspect, near, far );
		cameraNX.up.set( 0, - 1, 0 );
		cameraNX.lookAt( new Vector3( - 1, 0, 0 ) );
		this.add( cameraNX );

		var cameraPY = new PerspectiveCamera( fov, aspect, near, far );
		cameraPY.up.set( 0, 0, 1 );
		cameraPY.lookAt( new Vector3( 0, 1, 0 ) );
		this.add( cameraPY );

		var cameraNY = new PerspectiveCamera( fov, aspect, near, far );
		cameraNY.up.set( 0, 0, - 1 );
		cameraNY.lookAt( new Vector3( 0, - 1, 0 ) );
		this.add( cameraNY );

		var cameraPZ = new PerspectiveCamera( fov, aspect, near, far );
		cameraPZ.up.set( 0, - 1, 0 );
		cameraPZ.lookAt( new Vector3( 0, 0, 1 ) );
		this.add( cameraPZ );

		var cameraNZ = new PerspectiveCamera( fov, aspect, near, far );
		cameraNZ.up.set( 0, - 1, 0 );
		cameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );
		this.add( cameraNZ );

		options = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };

		this.renderTarget = new WebGLCubeRenderTarget( cubeResolution, options );
		this.renderTarget.texture.name = "CubeCamera";

		this.update = function ( renderer, scene ) {

			if ( this.parent === null ) { this.updateMatrixWorld(); }

			var currentRenderTarget = renderer.getRenderTarget();

			var renderTarget = this.renderTarget;
			var generateMipmaps = renderTarget.texture.generateMipmaps;

			renderTarget.texture.generateMipmaps = false;

			renderer.setRenderTarget( renderTarget, 0 );
			renderer.render( scene, cameraPX );

			renderer.setRenderTarget( renderTarget, 1 );
			renderer.render( scene, cameraNX );

			renderer.setRenderTarget( renderTarget, 2 );
			renderer.render( scene, cameraPY );

			renderer.setRenderTarget( renderTarget, 3 );
			renderer.render( scene, cameraNY );

			renderer.setRenderTarget( renderTarget, 4 );
			renderer.render( scene, cameraPZ );

			renderTarget.texture.generateMipmaps = generateMipmaps;

			renderer.setRenderTarget( renderTarget, 5 );
			renderer.render( scene, cameraNZ );

			renderer.setRenderTarget( currentRenderTarget );

		};

		this.clear = function ( renderer, color, depth, stencil ) {

			var currentRenderTarget = renderer.getRenderTarget();

			var renderTarget = this.renderTarget;

			for ( var i = 0; i < 6; i ++ ) {

				renderer.setRenderTarget( renderTarget, i );

				renderer.clear( color, depth, stencil );

			}

			renderer.setRenderTarget( currentRenderTarget );

		};

	}

	CubeCamera.prototype = Object.create( Object3D.prototype );
	CubeCamera.prototype.constructor = CubeCamera;

	/**
	 * @author alteredq / http://alteredqualia.com
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function WebGLCubeRenderTarget( size, options, dummy ) {

		if ( Number.isInteger( options ) ) {

			console.warn( 'THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )' );

			options = dummy;

		}

		WebGLRenderTarget.call( this, size, size, options );

	}

	WebGLCubeRenderTarget.prototype = Object.create( WebGLRenderTarget.prototype );
	WebGLCubeRenderTarget.prototype.constructor = WebGLCubeRenderTarget;

	WebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;

	WebGLCubeRenderTarget.prototype.fromEquirectangularTexture = function ( renderer, texture ) {

		this.texture.type = texture.type;
		this.texture.format = texture.format;
		this.texture.encoding = texture.encoding;

		var scene = new Scene();

		var shader = {

			uniforms: {
				tEquirect: { value: null },
			},

			vertexShader: [

				"varying vec3 vWorldDirection;",

				"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {",

				"	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );",

				"}",

				"void main() {",

				"	vWorldDirection = transformDirection( position, modelMatrix );",

				"	#include <begin_vertex>",
				"	#include <project_vertex>",

				"}"

			].join( '\n' ),

			fragmentShader: [

				"uniform sampler2D tEquirect;",

				"varying vec3 vWorldDirection;",

				"#define RECIPROCAL_PI 0.31830988618",
				"#define RECIPROCAL_PI2 0.15915494",

				"void main() {",

				"	vec3 direction = normalize( vWorldDirection );",

				"	vec2 sampleUV;",

				"	sampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;",

				"	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;",

				"	gl_FragColor = texture2D( tEquirect, sampleUV );",

				"}"

			].join( '\n' ),
		};

		var material = new ShaderMaterial( {

			type: 'CubemapFromEquirect',

			uniforms: cloneUniforms( shader.uniforms ),
			vertexShader: shader.vertexShader,
			fragmentShader: shader.fragmentShader,
			side: BackSide,
			blending: NoBlending

		} );

		material.uniforms.tEquirect.value = texture;

		var mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );

		scene.add( mesh );

		var camera = new CubeCamera( 1, 10, 1 );

		camera.renderTarget = this;
		camera.renderTarget.texture.name = 'CubeCameraTexture';

		camera.update( renderer, scene );

		mesh.geometry.dispose();
		mesh.material.dispose();

		return this;

	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

		Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.image = { data: data || null, width: width || 1, height: height || 1 };

		this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
		this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

		this.generateMipmaps = false;
		this.flipY = false;
		this.unpackAlignment = 1;

		this.needsUpdate = true;

	}

	DataTexture.prototype = Object.create( Texture.prototype );
	DataTexture.prototype.constructor = DataTexture;

	DataTexture.prototype.isDataTexture = true;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 * @author bhouston / http://clara.io
	 */

	var _sphere$1 = new Sphere();
	var _vector$5 = new Vector3();

	function Frustum( p0, p1, p2, p3, p4, p5 ) {

		this.planes = [

			( p0 !== undefined ) ? p0 : new Plane(),
			( p1 !== undefined ) ? p1 : new Plane(),
			( p2 !== undefined ) ? p2 : new Plane(),
			( p3 !== undefined ) ? p3 : new Plane(),
			( p4 !== undefined ) ? p4 : new Plane(),
			( p5 !== undefined ) ? p5 : new Plane()

		];

	}

	Object.assign( Frustum.prototype, {

		set: function ( p0, p1, p2, p3, p4, p5 ) {

			var planes = this.planes;

			planes[ 0 ].copy( p0 );
			planes[ 1 ].copy( p1 );
			planes[ 2 ].copy( p2 );
			planes[ 3 ].copy( p3 );
			planes[ 4 ].copy( p4 );
			planes[ 5 ].copy( p5 );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( frustum ) {

			var planes = this.planes;

			for ( var i = 0; i < 6; i ++ ) {

				planes[ i ].copy( frustum.planes[ i ] );

			}

			return this;

		},

		setFromProjectionMatrix: function ( m ) {

			var planes = this.planes;
			var me = m.elements;
			var me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];
			var me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];
			var me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];
			var me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];

			planes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();
			planes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();
			planes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();
			planes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();
			planes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();
			planes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();

			return this;

		},

		intersectsObject: function ( object ) {

			var geometry = object.geometry;

			if ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }

			_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );

			return this.intersectsSphere( _sphere$1 );

		},

		intersectsSprite: function ( sprite ) {

			_sphere$1.center.set( 0, 0, 0 );
			_sphere$1.radius = 0.7071067811865476;
			_sphere$1.applyMatrix4( sprite.matrixWorld );

			return this.intersectsSphere( _sphere$1 );

		},

		intersectsSphere: function ( sphere ) {

			var planes = this.planes;
			var center = sphere.center;
			var negRadius = - sphere.radius;

			for ( var i = 0; i < 6; i ++ ) {

				var distance = planes[ i ].distanceToPoint( center );

				if ( distance < negRadius ) {

					return false;

				}

			}

			return true;

		},

		intersectsBox: function ( box ) {

			var planes = this.planes;

			for ( var i = 0; i < 6; i ++ ) {

				var plane = planes[ i ];

				// corner at max distance

				_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;
				_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;
				_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;

				if ( plane.distanceToPoint( _vector$5 ) < 0 ) {

					return false;

				}

			}

			return true;

		},

		containsPoint: function ( point ) {

			var planes = this.planes;

			for ( var i = 0; i < 6; i ++ ) {

				if ( planes[ i ].distanceToPoint( point ) < 0 ) {

					return false;

				}

			}

			return true;

		}

	} );

	/**
	 * Uniforms library for shared webgl shaders
	 */

	var UniformsLib = {

		common: {

			diffuse: { value: new Color( 0xeeeeee ) },
			opacity: { value: 1.0 },

			map: { value: null },
			uvTransform: { value: new Matrix3() },
			uv2Transform: { value: new Matrix3() },

			alphaMap: { value: null },

		},

		specularmap: {

			specularMap: { value: null },

		},

		envmap: {

			envMap: { value: null },
			flipEnvMap: { value: - 1 },
			reflectivity: { value: 1.0 },
			refractionRatio: { value: 0.98 },
			maxMipLevel: { value: 0 }

		},

		aomap: {

			aoMap: { value: null },
			aoMapIntensity: { value: 1 }

		},

		lightmap: {

			lightMap: { value: null },
			lightMapIntensity: { value: 1 }

		},

		emissivemap: {

			emissiveMap: { value: null }

		},

		bumpmap: {

			bumpMap: { value: null },
			bumpScale: { value: 1 }

		},

		normalmap: {

			normalMap: { value: null },
			normalScale: { value: new Vector2( 1, 1 ) }

		},

		displacementmap: {

			displacementMap: { value: null },
			displacementScale: { value: 1 },
			displacementBias: { value: 0 }

		},

		roughnessmap: {

			roughnessMap: { value: null }

		},

		metalnessmap: {

			metalnessMap: { value: null }

		},

		gradientmap: {

			gradientMap: { value: null }

		},

		fog: {

			fogDensity: { value: 0.00025 },
			fogNear: { value: 1 },
			fogFar: { value: 2000 },
			fogColor: { value: new Color( 0xffffff ) }

		},

		lights: {

			ambientLightColor: { value: [] },

			lightProbe: { value: [] },

			directionalLights: { value: [], properties: {
				direction: {},
				color: {}
			} },

			directionalLightShadows: { value: [], properties: {
				shadowBias: {},
				shadowRadius: {},
				shadowMapSize: {}
			} },

			directionalShadowMap: { value: [] },
			directionalShadowMatrix: { value: [] },

			spotLights: { value: [], properties: {
				color: {},
				position: {},
				direction: {},
				distance: {},
				coneCos: {},
				penumbraCos: {},
				decay: {}
			} },

			spotLightShadows: { value: [], properties: {
				shadowBias: {},
				shadowRadius: {},
				shadowMapSize: {}
			} },

			spotShadowMap: { value: [] },
			spotShadowMatrix: { value: [] },

			pointLights: { value: [], properties: {
				color: {},
				position: {},
				decay: {},
				distance: {}
			} },

			pointLightShadows: { value: [], properties: {
				shadowBias: {},
				shadowRadius: {},
				shadowMapSize: {},
				shadowCameraNear: {},
				shadowCameraFar: {}
			} },

			pointShadowMap: { value: [] },
			pointShadowMatrix: { value: [] },

			hemisphereLights: { value: [], properties: {
				direction: {},
				skyColor: {},
				groundColor: {}
			} },

			// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src
			rectAreaLights: { value: [], properties: {
				color: {},
				position: {},
				width: {},
				height: {}
			} }

		},

		points: {

			diffuse: { value: new Color( 0xeeeeee ) },
			opacity: { value: 1.0 },
			size: { value: 1.0 },
			scale: { value: 1.0 },
			map: { value: null },
			alphaMap: { value: null },
			uvTransform: { value: new Matrix3() }

		},

		sprite: {

			diffuse: { value: new Color( 0xeeeeee ) },
			opacity: { value: 1.0 },
			center: { value: new Vector2( 0.5, 0.5 ) },
			rotation: { value: 0.0 },
			map: { value: null },
			alphaMap: { value: null },
			uvTransform: { value: new Matrix3() }

		}

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLAnimation() {

		var context = null;
		var isAnimating = false;
		var animationLoop = null;

		function onAnimationFrame( time, frame ) {

			if ( isAnimating === false ) { return; }

			animationLoop( time, frame );

			context.requestAnimationFrame( onAnimationFrame );

		}

		return {

			start: function () {

				if ( isAnimating === true ) { return; }
				if ( animationLoop === null ) { return; }

				context.requestAnimationFrame( onAnimationFrame );

				isAnimating = true;

			},

			stop: function () {

				isAnimating = false;

			},

			setAnimationLoop: function ( callback ) {

				animationLoop = callback;

			},

			setContext: function ( value ) {

				context = value;

			}

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLAttributes( gl, capabilities ) {

		var isWebGL2 = capabilities.isWebGL2;

		var buffers = new WeakMap();

		function createBuffer( attribute, bufferType ) {

			var array = attribute.array;
			var usage = attribute.usage;

			var buffer = gl.createBuffer();

			gl.bindBuffer( bufferType, buffer );
			gl.bufferData( bufferType, array, usage );

			attribute.onUploadCallback();

			var type = 5126;

			if ( array instanceof Float32Array ) {

				type = 5126;

			} else if ( array instanceof Float64Array ) {

				console.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );

			} else if ( array instanceof Uint16Array ) {

				type = 5123;

			} else if ( array instanceof Int16Array ) {

				type = 5122;

			} else if ( array instanceof Uint32Array ) {

				type = 5125;

			} else if ( array instanceof Int32Array ) {

				type = 5124;

			} else if ( array instanceof Int8Array ) {

				type = 5120;

			} else if ( array instanceof Uint8Array ) {

				type = 5121;

			}

			return {
				buffer: buffer,
				type: type,
				bytesPerElement: array.BYTES_PER_ELEMENT,
				version: attribute.version
			};

		}

		function updateBuffer( buffer, attribute, bufferType ) {

			var array = attribute.array;
			var updateRange = attribute.updateRange;

			gl.bindBuffer( bufferType, buffer );

			if ( updateRange.count === - 1 ) {

				// Not using update ranges

				gl.bufferSubData( bufferType, 0, array );

			} else {

				if ( isWebGL2 ) {

					gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
						array, updateRange.offset, updateRange.count );

				} else {

					gl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,
						array.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );

				}

				updateRange.count = - 1; // reset range

			}

		}

		//

		function get( attribute ) {

			if ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }

			return buffers.get( attribute );

		}

		function remove( attribute ) {

			if ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }

			var data = buffers.get( attribute );

			if ( data ) {

				gl.deleteBuffer( data.buffer );

				buffers.delete( attribute );

			}

		}

		function update( attribute, bufferType ) {

			if ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }

			var data = buffers.get( attribute );

			if ( data === undefined ) {

				buffers.set( attribute, createBuffer( attribute, bufferType ) );

			} else if ( data.version < attribute.version ) {

				updateBuffer( data.buffer, attribute, bufferType );

				data.version = attribute.version;

			}

		}

		return {

			get: get,
			remove: remove,
			update: update

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// PlaneGeometry

	function PlaneGeometry( width, height, widthSegments, heightSegments ) {

		Geometry.call( this );

		this.type = 'PlaneGeometry';

		this.parameters = {
			width: width,
			height: height,
			widthSegments: widthSegments,
			heightSegments: heightSegments
		};

		this.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );
		this.mergeVertices();

	}

	PlaneGeometry.prototype = Object.create( Geometry.prototype );
	PlaneGeometry.prototype.constructor = PlaneGeometry;

	// PlaneBufferGeometry

	function PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {

		BufferGeometry.call( this );

		this.type = 'PlaneBufferGeometry';

		this.parameters = {
			width: width,
			height: height,
			widthSegments: widthSegments,
			heightSegments: heightSegments
		};

		width = width || 1;
		height = height || 1;

		var width_half = width / 2;
		var height_half = height / 2;

		var gridX = Math.floor( widthSegments ) || 1;
		var gridY = Math.floor( heightSegments ) || 1;

		var gridX1 = gridX + 1;
		var gridY1 = gridY + 1;

		var segment_width = width / gridX;
		var segment_height = height / gridY;

		var ix, iy;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// generate vertices, normals and uvs

		for ( iy = 0; iy < gridY1; iy ++ ) {

			var y = iy * segment_height - height_half;

			for ( ix = 0; ix < gridX1; ix ++ ) {

				var x = ix * segment_width - width_half;

				vertices.push( x, - y, 0 );

				normals.push( 0, 0, 1 );

				uvs.push( ix / gridX );
				uvs.push( 1 - ( iy / gridY ) );

			}

		}

		// indices

		for ( iy = 0; iy < gridY; iy ++ ) {

			for ( ix = 0; ix < gridX; ix ++ ) {

				var a = ix + gridX1 * iy;
				var b = ix + gridX1 * ( iy + 1 );
				var c = ( ix + 1 ) + gridX1 * ( iy + 1 );
				var d = ( ix + 1 ) + gridX1 * iy;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	PlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;

	var alphamap_fragment = "#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif";

	var alphamap_pars_fragment = "#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";

	var alphatest_fragment = "#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif";

	var aomap_fragment = "#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif";

	var aomap_pars_fragment = "#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif";

	var begin_vertex = "vec3 transformed = vec3( position );";

	var beginnormal_vertex = "vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif";

	var bsdfs = "vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE  = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha  = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif";

	var bumpmap_pars_fragment = "#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif";

	var clipping_planes_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif";

	var clipping_planes_pars_fragment = "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif";

	var clipping_planes_pars_vertex = "#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif";

	var clipping_planes_vertex = "#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif";

	var color_fragment = "#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif";

	var color_pars_fragment = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";

	var color_pars_vertex = "#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif";

	var color_vertex = "#ifdef USE_COLOR\n\tvColor.xyz = color.xyz;\n#endif";

	var common = "#define PI 3.14159265359\n#define PI2 6.28318530718\n#define PI_HALF 1.5707963267949\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n#define LOG2 1.442695\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n  return m[ 2 ][ 3 ] == - 1.0;\n}";

	var cube_uv_reflection_fragment = "#ifdef ENVMAP_TYPE_CUBE_UV\n#define cubeUV_maxMipLevel 8.0\n#define cubeUV_minMipLevel 4.0\n#define cubeUV_maxTileSize 256.0\n#define cubeUV_minTileSize 16.0\nfloat getFace(vec3 direction) {\n    vec3 absDirection = abs(direction);\n    float face = -1.0;\n    if (absDirection.x > absDirection.z) {\n      if (absDirection.x > absDirection.y)\n        face = direction.x > 0.0 ? 0.0 : 3.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    } else {\n      if (absDirection.z > absDirection.y)\n        face = direction.z > 0.0 ? 2.0 : 5.0;\n      else\n        face = direction.y > 0.0 ? 1.0 : 4.0;\n    }\n    return face;\n}\nvec2 getUV(vec3 direction, float face) {\n    vec2 uv;\n    if (face == 0.0) {\n      uv = vec2(-direction.z, direction.y) / abs(direction.x);\n    } else if (face == 1.0) {\n      uv = vec2(direction.x, -direction.z) / abs(direction.y);\n    } else if (face == 2.0) {\n      uv = direction.xy / abs(direction.z);\n    } else if (face == 3.0) {\n      uv = vec2(direction.z, direction.y) / abs(direction.x);\n    } else if (face == 4.0) {\n      uv = direction.xz / abs(direction.y);\n    } else {\n      uv = vec2(-direction.x, direction.y) / abs(direction.z);\n    }\n    return 0.5 * (uv + 1.0);\n}\nvec3 bilinearCubeUV(sampler2D envMap, vec3 direction, float mipInt) {\n  float face = getFace(direction);\n  float filterInt = max(cubeUV_minMipLevel - mipInt, 0.0);\n  mipInt = max(mipInt, cubeUV_minMipLevel);\n  float faceSize = exp2(mipInt);\n  float texelSize = 1.0 / (3.0 * cubeUV_maxTileSize);\n  vec2 uv = getUV(direction, face) * (faceSize - 1.0);\n  vec2 f = fract(uv);\n  uv += 0.5 - f;\n  if (face > 2.0) {\n    uv.y += faceSize;\n    face -= 3.0;\n  }\n  uv.x += face * faceSize;\n  if(mipInt < cubeUV_maxMipLevel){\n    uv.y += 2.0 * cubeUV_maxTileSize;\n  }\n  uv.y += filterInt * 2.0 * cubeUV_minTileSize;\n  uv.x += 3.0 * max(0.0, cubeUV_maxTileSize - 2.0 * faceSize);\n  uv *= texelSize;\n  vec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x += texelSize;\n  vec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.y += texelSize;\n  vec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  uv.x -= texelSize;\n  vec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n  vec3 tm = mix(tl, tr, f.x);\n  vec3 bm = mix(bl, br, f.x);\n  return mix(tm, bm, f.y);\n}\n#define r0 1.0\n#define v0 0.339\n#define m0 -2.0\n#define r1 0.8\n#define v1 0.276\n#define m1 -1.0\n#define r4 0.4\n#define v4 0.046\n#define m4 2.0\n#define r5 0.305\n#define v5 0.016\n#define m5 3.0\n#define r6 0.21\n#define v6 0.0038\n#define m6 4.0\nfloat roughnessToMip(float roughness) {\n  float mip = 0.0;\n  if (roughness >= r1) {\n    mip = (r0 - roughness) * (m1 - m0) / (r0 - r1) + m0;\n  } else if (roughness >= r4) {\n    mip = (r1 - roughness) * (m4 - m1) / (r1 - r4) + m1;\n  } else if (roughness >= r5) {\n    mip = (r4 - roughness) * (m5 - m4) / (r4 - r5) + m4;\n  } else if (roughness >= r6) {\n    mip = (r5 - roughness) * (m6 - m5) / (r5 - r6) + m5;\n  } else {\n    mip = -2.0 * log2(1.16 * roughness);  }\n  return mip;\n}\nvec4 textureCubeUV(sampler2D envMap, vec3 sampleDir, float roughness) {\n  float mip = clamp(roughnessToMip(roughness), m0, cubeUV_maxMipLevel);\n  float mipF = fract(mip);\n  float mipInt = floor(mip);\n  vec3 color0 = bilinearCubeUV(envMap, sampleDir, mipInt);\n  if (mipF == 0.0) {\n    return vec4(color0, 1.0);\n  } else {\n    vec3 color1 = bilinearCubeUV(envMap, sampleDir, mipInt + 1.0);\n    return vec4(mix(color0, color1, mipF), 1.0);\n  }\n}\n#endif";

	var defaultnormal_vertex = "vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif";

	var displacementmap_pars_vertex = "#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif";

	var displacementmap_vertex = "#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif";

	var emissivemap_fragment = "#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif";

	var emissivemap_pars_fragment = "#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif";

	var encodings_fragment = "gl_FragColor = linearToOutputTexel( gl_FragColor );";

	var encodings_pars_fragment = "\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value )  {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}";

	var envmap_fragment = "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\t\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t}  else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\tvec2 sampleUV;\n\t\treflectVec = normalize( reflectVec );\n\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\n\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\treflectVec = normalize( reflectVec );\n\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif";

	var envmap_common_pars_fragment = "#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif";

	var envmap_pars_fragment = "#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif";

	var envmap_pars_vertex = "#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif";

	var envmap_vertex = "#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) { \n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif";

	var fog_vertex = "#ifdef USE_FOG\n\tfogDepth = -mvPosition.z;\n#endif";

	var fog_pars_vertex = "#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif";

	var fog_fragment = "#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif";

	var fog_pars_fragment = "#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif";

	var gradientmap_pars_fragment = "#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}";

	var lightmap_fragment = "#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif";

	var lightmap_pars_fragment = "#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif";

	var lights_lambert_vertex = "vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif";

	var lights_pars_begin = "uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif";

	var envmap_physical_pars_fragment = "#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t  vec3 reflectVec = reflect( -viewDir, normal );\n\t\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\n\t\t\tvec2 sampleUV;\n\t\t\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\t\t\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\n\t\t\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif";

	var lights_toon_fragment = "ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";

	var lights_toon_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)";

	var lights_phong_fragment = "BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;";

	var lights_phong_pars_fragment = "varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3\tdiffuseColor;\n\tvec3\tspecularColor;\n\tfloat\tspecularShininess;\n\tfloat\tspecularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)";

	var lights_physical_fragment = "PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif";

	var lights_physical_pars_fragment = "struct PhysicalMaterial {\n\tvec3\tdiffuseColor;\n\tfloat\tspecularRoughness;\n\tvec3\tspecularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}";

	var lights_fragment_begin = "\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif";

	var lights_fragment_maps = "#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif";

	var lights_fragment_end = "#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif";

	var logdepthbuf_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif";

	var logdepthbuf_pars_fragment = "#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif";

	var logdepthbuf_pars_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif";

	var logdepthbuf_vertex = "#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif";

	var map_fragment = "#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif";

	var map_pars_fragment = "#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif";

	var map_particle_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif";

	var map_particle_pars_fragment = "#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif";

	var metalnessmap_fragment = "float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif";

	var metalnessmap_pars_fragment = "#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif";

	var morphnormal_vertex = "#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif";

	var morphtarget_pars_vertex = "#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif";

	var morphtarget_vertex = "#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif";

	var normal_fragment_begin = "#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;";

	var normal_fragment_maps = "#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif";

	var normalmap_pars_fragment = "#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif";

	var clearcoat_normal_fragment_begin = "#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif";

	var clearcoat_normal_fragment_maps = "#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif";

	var clearcoat_pars_fragment = "#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif";

	var packing = "vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}";

	var premultiplied_alpha_fragment = "#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif";

	var project_vertex = "vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;";

	var dithering_fragment = "#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif";

	var dithering_pars_fragment = "#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif";

	var roughnessmap_fragment = "float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif";

	var roughnessmap_pars_fragment = "#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif";

	var shadowmap_pars_fragment = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif";

	var shadowmap_pars_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif";

	var shadowmap_vertex = "#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif";

	var shadowmask_pars_fragment = "float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}";

	var skinbase_vertex = "#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif";

	var skinning_pars_vertex = "#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif";

	var skinning_vertex = "#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif";

	var skinnormal_vertex = "#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif";

	var specularmap_fragment = "float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif";

	var specularmap_pars_fragment = "#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif";

	var tonemapping_fragment = "#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif";

	var tonemapping_pars_fragment = "#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nuniform float toneMappingWhitePoint;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\nvec3 Uncharted2ToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\n}";

	var uv_pars_fragment = "#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif";

	var uv_pars_vertex = "#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif";

	var uv_vertex = "#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif";

	var uv2_pars_fragment = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif";

	var uv2_pars_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif";

	var uv2_vertex = "#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif";

	var worldpos_vertex = "#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif";

	var background_frag = "uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

	var background_vert = "varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}";

	var cube_frag = "#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

	var cube_vert = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}";

	var depth_frag = "#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}";

	var depth_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}";

	var distanceRGBA_frag = "#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}";

	var distanceRGBA_vert = "#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}";

	var equirect_frag = "uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV;\n\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}";

	var equirect_vert = "varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}";

	var linedashed_frag = "uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

	var linedashed_vert = "uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";

	var meshbasic_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

	var meshbasic_vert = "#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}";

	var meshlambert_frag = "uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

	var meshlambert_vert = "#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

	var meshmatcap_frag = "#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

	var meshmatcap_vert = "#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}";

	var meshtoon_frag = "#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

	var meshtoon_vert = "#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

	var meshphong_frag = "#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

	var meshphong_vert = "#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

	var meshphysical_frag = "#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSPARENCY\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSPARENCY\n\tuniform float transparency;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSPARENCY\n\t\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}";

	var meshphysical_vert = "#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

	var normal_frag = "#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}";

	var normal_vert = "#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}";

	var points_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}";

	var points_vert = "uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}";

	var shadow_frag = "uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";

	var shadow_vert = "#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}";

	var sprite_frag = "uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}";

	var sprite_vert = "uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}";

	var ShaderChunk = {
		alphamap_fragment: alphamap_fragment,
		alphamap_pars_fragment: alphamap_pars_fragment,
		alphatest_fragment: alphatest_fragment,
		aomap_fragment: aomap_fragment,
		aomap_pars_fragment: aomap_pars_fragment,
		begin_vertex: begin_vertex,
		beginnormal_vertex: beginnormal_vertex,
		bsdfs: bsdfs,
		bumpmap_pars_fragment: bumpmap_pars_fragment,
		clipping_planes_fragment: clipping_planes_fragment,
		clipping_planes_pars_fragment: clipping_planes_pars_fragment,
		clipping_planes_pars_vertex: clipping_planes_pars_vertex,
		clipping_planes_vertex: clipping_planes_vertex,
		color_fragment: color_fragment,
		color_pars_fragment: color_pars_fragment,
		color_pars_vertex: color_pars_vertex,
		color_vertex: color_vertex,
		common: common,
		cube_uv_reflection_fragment: cube_uv_reflection_fragment,
		defaultnormal_vertex: defaultnormal_vertex,
		displacementmap_pars_vertex: displacementmap_pars_vertex,
		displacementmap_vertex: displacementmap_vertex,
		emissivemap_fragment: emissivemap_fragment,
		emissivemap_pars_fragment: emissivemap_pars_fragment,
		encodings_fragment: encodings_fragment,
		encodings_pars_fragment: encodings_pars_fragment,
		envmap_fragment: envmap_fragment,
		envmap_common_pars_fragment: envmap_common_pars_fragment,
		envmap_pars_fragment: envmap_pars_fragment,
		envmap_pars_vertex: envmap_pars_vertex,
		envmap_physical_pars_fragment: envmap_physical_pars_fragment,
		envmap_vertex: envmap_vertex,
		fog_vertex: fog_vertex,
		fog_pars_vertex: fog_pars_vertex,
		fog_fragment: fog_fragment,
		fog_pars_fragment: fog_pars_fragment,
		gradientmap_pars_fragment: gradientmap_pars_fragment,
		lightmap_fragment: lightmap_fragment,
		lightmap_pars_fragment: lightmap_pars_fragment,
		lights_lambert_vertex: lights_lambert_vertex,
		lights_pars_begin: lights_pars_begin,
		lights_toon_fragment: lights_toon_fragment,
		lights_toon_pars_fragment: lights_toon_pars_fragment,
		lights_phong_fragment: lights_phong_fragment,
		lights_phong_pars_fragment: lights_phong_pars_fragment,
		lights_physical_fragment: lights_physical_fragment,
		lights_physical_pars_fragment: lights_physical_pars_fragment,
		lights_fragment_begin: lights_fragment_begin,
		lights_fragment_maps: lights_fragment_maps,
		lights_fragment_end: lights_fragment_end,
		logdepthbuf_fragment: logdepthbuf_fragment,
		logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,
		logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,
		logdepthbuf_vertex: logdepthbuf_vertex,
		map_fragment: map_fragment,
		map_pars_fragment: map_pars_fragment,
		map_particle_fragment: map_particle_fragment,
		map_particle_pars_fragment: map_particle_pars_fragment,
		metalnessmap_fragment: metalnessmap_fragment,
		metalnessmap_pars_fragment: metalnessmap_pars_fragment,
		morphnormal_vertex: morphnormal_vertex,
		morphtarget_pars_vertex: morphtarget_pars_vertex,
		morphtarget_vertex: morphtarget_vertex,
		normal_fragment_begin: normal_fragment_begin,
		normal_fragment_maps: normal_fragment_maps,
		normalmap_pars_fragment: normalmap_pars_fragment,
		clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,
		clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,
		clearcoat_pars_fragment: clearcoat_pars_fragment,
		packing: packing,
		premultiplied_alpha_fragment: premultiplied_alpha_fragment,
		project_vertex: project_vertex,
		dithering_fragment: dithering_fragment,
		dithering_pars_fragment: dithering_pars_fragment,
		roughnessmap_fragment: roughnessmap_fragment,
		roughnessmap_pars_fragment: roughnessmap_pars_fragment,
		shadowmap_pars_fragment: shadowmap_pars_fragment,
		shadowmap_pars_vertex: shadowmap_pars_vertex,
		shadowmap_vertex: shadowmap_vertex,
		shadowmask_pars_fragment: shadowmask_pars_fragment,
		skinbase_vertex: skinbase_vertex,
		skinning_pars_vertex: skinning_pars_vertex,
		skinning_vertex: skinning_vertex,
		skinnormal_vertex: skinnormal_vertex,
		specularmap_fragment: specularmap_fragment,
		specularmap_pars_fragment: specularmap_pars_fragment,
		tonemapping_fragment: tonemapping_fragment,
		tonemapping_pars_fragment: tonemapping_pars_fragment,
		uv_pars_fragment: uv_pars_fragment,
		uv_pars_vertex: uv_pars_vertex,
		uv_vertex: uv_vertex,
		uv2_pars_fragment: uv2_pars_fragment,
		uv2_pars_vertex: uv2_pars_vertex,
		uv2_vertex: uv2_vertex,
		worldpos_vertex: worldpos_vertex,

		background_frag: background_frag,
		background_vert: background_vert,
		cube_frag: cube_frag,
		cube_vert: cube_vert,
		depth_frag: depth_frag,
		depth_vert: depth_vert,
		distanceRGBA_frag: distanceRGBA_frag,
		distanceRGBA_vert: distanceRGBA_vert,
		equirect_frag: equirect_frag,
		equirect_vert: equirect_vert,
		linedashed_frag: linedashed_frag,
		linedashed_vert: linedashed_vert,
		meshbasic_frag: meshbasic_frag,
		meshbasic_vert: meshbasic_vert,
		meshlambert_frag: meshlambert_frag,
		meshlambert_vert: meshlambert_vert,
		meshmatcap_frag: meshmatcap_frag,
		meshmatcap_vert: meshmatcap_vert,
		meshtoon_frag: meshtoon_frag,
		meshtoon_vert: meshtoon_vert,
		meshphong_frag: meshphong_frag,
		meshphong_vert: meshphong_vert,
		meshphysical_frag: meshphysical_frag,
		meshphysical_vert: meshphysical_vert,
		normal_frag: normal_frag,
		normal_vert: normal_vert,
		points_frag: points_frag,
		points_vert: points_vert,
		shadow_frag: shadow_frag,
		shadow_vert: shadow_vert,
		sprite_frag: sprite_frag,
		sprite_vert: sprite_vert
	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 * @author mikael emtinger / http://gomo.se/
	 */

	var ShaderLib = {

		basic: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.specularmap,
				UniformsLib.envmap,
				UniformsLib.aomap,
				UniformsLib.lightmap,
				UniformsLib.fog
			] ),

			vertexShader: ShaderChunk.meshbasic_vert,
			fragmentShader: ShaderChunk.meshbasic_frag

		},

		lambert: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.specularmap,
				UniformsLib.envmap,
				UniformsLib.aomap,
				UniformsLib.lightmap,
				UniformsLib.emissivemap,
				UniformsLib.fog,
				UniformsLib.lights,
				{
					emissive: { value: new Color( 0x000000 ) }
				}
			] ),

			vertexShader: ShaderChunk.meshlambert_vert,
			fragmentShader: ShaderChunk.meshlambert_frag

		},

		phong: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.specularmap,
				UniformsLib.envmap,
				UniformsLib.aomap,
				UniformsLib.lightmap,
				UniformsLib.emissivemap,
				UniformsLib.bumpmap,
				UniformsLib.normalmap,
				UniformsLib.displacementmap,
				UniformsLib.fog,
				UniformsLib.lights,
				{
					emissive: { value: new Color( 0x000000 ) },
					specular: { value: new Color( 0x111111 ) },
					shininess: { value: 30 }
				}
			] ),

			vertexShader: ShaderChunk.meshphong_vert,
			fragmentShader: ShaderChunk.meshphong_frag

		},

		standard: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.envmap,
				UniformsLib.aomap,
				UniformsLib.lightmap,
				UniformsLib.emissivemap,
				UniformsLib.bumpmap,
				UniformsLib.normalmap,
				UniformsLib.displacementmap,
				UniformsLib.roughnessmap,
				UniformsLib.metalnessmap,
				UniformsLib.fog,
				UniformsLib.lights,
				{
					emissive: { value: new Color( 0x000000 ) },
					roughness: { value: 0.5 },
					metalness: { value: 0.5 },
					envMapIntensity: { value: 1 } // temporary
				}
			] ),

			vertexShader: ShaderChunk.meshphysical_vert,
			fragmentShader: ShaderChunk.meshphysical_frag

		},

		toon: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.specularmap,
				UniformsLib.aomap,
				UniformsLib.lightmap,
				UniformsLib.emissivemap,
				UniformsLib.bumpmap,
				UniformsLib.normalmap,
				UniformsLib.displacementmap,
				UniformsLib.gradientmap,
				UniformsLib.fog,
				UniformsLib.lights,
				{
					emissive: { value: new Color( 0x000000 ) },
					specular: { value: new Color( 0x111111 ) },
					shininess: { value: 30 }
				}
			] ),

			vertexShader: ShaderChunk.meshtoon_vert,
			fragmentShader: ShaderChunk.meshtoon_frag

		},

		matcap: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.bumpmap,
				UniformsLib.normalmap,
				UniformsLib.displacementmap,
				UniformsLib.fog,
				{
					matcap: { value: null }
				}
			] ),

			vertexShader: ShaderChunk.meshmatcap_vert,
			fragmentShader: ShaderChunk.meshmatcap_frag

		},

		points: {

			uniforms: mergeUniforms( [
				UniformsLib.points,
				UniformsLib.fog
			] ),

			vertexShader: ShaderChunk.points_vert,
			fragmentShader: ShaderChunk.points_frag

		},

		dashed: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.fog,
				{
					scale: { value: 1 },
					dashSize: { value: 1 },
					totalSize: { value: 2 }
				}
			] ),

			vertexShader: ShaderChunk.linedashed_vert,
			fragmentShader: ShaderChunk.linedashed_frag

		},

		depth: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.displacementmap
			] ),

			vertexShader: ShaderChunk.depth_vert,
			fragmentShader: ShaderChunk.depth_frag

		},

		normal: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.bumpmap,
				UniformsLib.normalmap,
				UniformsLib.displacementmap,
				{
					opacity: { value: 1.0 }
				}
			] ),

			vertexShader: ShaderChunk.normal_vert,
			fragmentShader: ShaderChunk.normal_frag

		},

		sprite: {

			uniforms: mergeUniforms( [
				UniformsLib.sprite,
				UniformsLib.fog
			] ),

			vertexShader: ShaderChunk.sprite_vert,
			fragmentShader: ShaderChunk.sprite_frag

		},

		background: {

			uniforms: {
				uvTransform: { value: new Matrix3() },
				t2D: { value: null },
			},

			vertexShader: ShaderChunk.background_vert,
			fragmentShader: ShaderChunk.background_frag

		},
		/* -------------------------------------------------------------------------
		//	Cube map shader
		 ------------------------------------------------------------------------- */

		cube: {

			uniforms: mergeUniforms( [
				UniformsLib.envmap,
				{
					opacity: { value: 1.0 }
				}
			] ),

			vertexShader: ShaderChunk.cube_vert,
			fragmentShader: ShaderChunk.cube_frag

		},

		equirect: {

			uniforms: {
				tEquirect: { value: null },
			},

			vertexShader: ShaderChunk.equirect_vert,
			fragmentShader: ShaderChunk.equirect_frag

		},

		distanceRGBA: {

			uniforms: mergeUniforms( [
				UniformsLib.common,
				UniformsLib.displacementmap,
				{
					referencePosition: { value: new Vector3() },
					nearDistance: { value: 1 },
					farDistance: { value: 1000 }
				}
			] ),

			vertexShader: ShaderChunk.distanceRGBA_vert,
			fragmentShader: ShaderChunk.distanceRGBA_frag

		},

		shadow: {

			uniforms: mergeUniforms( [
				UniformsLib.lights,
				UniformsLib.fog,
				{
					color: { value: new Color( 0x00000 ) },
					opacity: { value: 1.0 }
				} ] ),

			vertexShader: ShaderChunk.shadow_vert,
			fragmentShader: ShaderChunk.shadow_frag

		}

	};

	ShaderLib.physical = {

		uniforms: mergeUniforms( [
			ShaderLib.standard.uniforms,
			{
				clearcoat: { value: 0 },
				clearcoatMap: { value: null },
				clearcoatRoughness: { value: 0 },
				clearcoatRoughnessMap: { value: null },
				clearcoatNormalScale: { value: new Vector2( 1, 1 ) },
				clearcoatNormalMap: { value: null },
				sheen: { value: new Color( 0x000000 ) },
				transparency: { value: 0 },
			}
		] ),

		vertexShader: ShaderChunk.meshphysical_vert,
		fragmentShader: ShaderChunk.meshphysical_frag

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLBackground( renderer, state, objects, premultipliedAlpha ) {

		var clearColor = new Color( 0x000000 );
		var clearAlpha = 0;

		var planeMesh;
		var boxMesh;

		var currentBackground = null;
		var currentBackgroundVersion = 0;
		var currentTonemapping = null;

		function render( renderList, scene, camera, forceClear ) {

			var background = scene.background;

			// Ignore background in AR
			// TODO: Reconsider this.

			var xr = renderer.xr;
			var session = xr.getSession && xr.getSession();

			if ( session && session.environmentBlendMode === 'additive' ) {

				background = null;

			}

			if ( background === null ) {

				setClear( clearColor, clearAlpha );

			} else if ( background && background.isColor ) {

				setClear( background, 1 );
				forceClear = true;

			}

			if ( renderer.autoClear || forceClear ) {

				renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );

			}

			if ( background && ( background.isCubeTexture || background.isWebGLCubeRenderTarget || background.mapping === CubeUVReflectionMapping ) ) {

				if ( boxMesh === undefined ) {

					boxMesh = new Mesh(
						new BoxBufferGeometry( 1, 1, 1 ),
						new ShaderMaterial( {
							type: 'BackgroundCubeMaterial',
							uniforms: cloneUniforms( ShaderLib.cube.uniforms ),
							vertexShader: ShaderLib.cube.vertexShader,
							fragmentShader: ShaderLib.cube.fragmentShader,
							side: BackSide,
							depthTest: false,
							depthWrite: false,
							fog: false
						} )
					);

					boxMesh.geometry.deleteAttribute( 'normal' );
					boxMesh.geometry.deleteAttribute( 'uv' );

					boxMesh.onBeforeRender = function ( renderer, scene, camera ) {

						this.matrixWorld.copyPosition( camera.matrixWorld );

					};

					// enable code injection for non-built-in material
					Object.defineProperty( boxMesh.material, 'envMap', {

						get: function () {

							return this.uniforms.envMap.value;

						}

					} );

					objects.update( boxMesh );

				}

				var texture = background.isWebGLCubeRenderTarget ? background.texture : background;

				boxMesh.material.uniforms.envMap.value = texture;
				boxMesh.material.uniforms.flipEnvMap.value = texture.isCubeTexture ? - 1 : 1;

				if ( currentBackground !== background ||
					currentBackgroundVersion !== texture.version ||
					currentTonemapping !== renderer.toneMapping ) {

					boxMesh.material.needsUpdate = true;

					currentBackground = background;
					currentBackgroundVersion = texture.version;
					currentTonemapping = renderer.toneMapping;

				}

				// push to the pre-sorted opaque render list
				renderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );

			} else if ( background && background.isTexture ) {

				if ( planeMesh === undefined ) {

					planeMesh = new Mesh(
						new PlaneBufferGeometry( 2, 2 ),
						new ShaderMaterial( {
							type: 'BackgroundMaterial',
							uniforms: cloneUniforms( ShaderLib.background.uniforms ),
							vertexShader: ShaderLib.background.vertexShader,
							fragmentShader: ShaderLib.background.fragmentShader,
							side: FrontSide,
							depthTest: false,
							depthWrite: false,
							fog: false
						} )
					);

					planeMesh.geometry.deleteAttribute( 'normal' );

					// enable code injection for non-built-in material
					Object.defineProperty( planeMesh.material, 'map', {

						get: function () {

							return this.uniforms.t2D.value;

						}

					} );

					objects.update( planeMesh );

				}

				planeMesh.material.uniforms.t2D.value = background;

				if ( background.matrixAutoUpdate === true ) {

					background.updateMatrix();

				}

				planeMesh.material.uniforms.uvTransform.value.copy( background.matrix );

				if ( currentBackground !== background ||
					currentBackgroundVersion !== background.version ||
					currentTonemapping !== renderer.toneMapping ) {

					planeMesh.material.needsUpdate = true;

					currentBackground = background;
					currentBackgroundVersion = background.version;
					currentTonemapping = renderer.toneMapping;

				}


				// push to the pre-sorted opaque render list
				renderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );

			}

		}

		function setClear( color, alpha ) {

			state.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );

		}

		return {

			getClearColor: function () {

				return clearColor;

			},
			setClearColor: function ( color, alpha ) {

				clearColor.set( color );
				clearAlpha = alpha !== undefined ? alpha : 1;
				setClear( clearColor, clearAlpha );

			},
			getClearAlpha: function () {

				return clearAlpha;

			},
			setClearAlpha: function ( alpha ) {

				clearAlpha = alpha;
				setClear( clearColor, clearAlpha );

			},
			render: render

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLBufferRenderer( gl, extensions, info, capabilities ) {

		var isWebGL2 = capabilities.isWebGL2;

		var mode;

		function setMode( value ) {

			mode = value;

		}

		function render( start, count ) {

			gl.drawArrays( mode, start, count );

			info.update( count, mode );

		}

		function renderInstances( geometry, start, count, primcount ) {

			if ( primcount === 0 ) { return; }

			var extension, methodName;

			if ( isWebGL2 ) {

				extension = gl;
				methodName = 'drawArraysInstanced';

			} else {

				extension = extensions.get( 'ANGLE_instanced_arrays' );
				methodName = 'drawArraysInstancedANGLE';

				if ( extension === null ) {

					console.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
					return;

				}

			}

			extension[ methodName ]( mode, start, count, primcount );

			info.update( count, mode, primcount );

		}

		//

		this.setMode = setMode;
		this.render = render;
		this.renderInstances = renderInstances;

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLCapabilities( gl, extensions, parameters ) {

		var maxAnisotropy;

		function getMaxAnisotropy() {

			if ( maxAnisotropy !== undefined ) { return maxAnisotropy; }

			var extension = extensions.get( 'EXT_texture_filter_anisotropic' );

			if ( extension !== null ) {

				maxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );

			} else {

				maxAnisotropy = 0;

			}

			return maxAnisotropy;

		}

		function getMaxPrecision( precision ) {

			if ( precision === 'highp' ) {

				if ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&
					gl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {

					return 'highp';

				}

				precision = 'mediump';

			}

			if ( precision === 'mediump' ) {

				if ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&
					gl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {

					return 'mediump';

				}

			}

			return 'lowp';

		}

		/* eslint-disable no-undef */
		var isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||
			( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );
		/* eslint-enable no-undef */

		var precision = parameters.precision !== undefined ? parameters.precision : 'highp';
		var maxPrecision = getMaxPrecision( precision );

		if ( maxPrecision !== precision ) {

			console.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );
			precision = maxPrecision;

		}

		var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;

		var maxTextures = gl.getParameter( 34930 );
		var maxVertexTextures = gl.getParameter( 35660 );
		var maxTextureSize = gl.getParameter( 3379 );
		var maxCubemapSize = gl.getParameter( 34076 );

		var maxAttributes = gl.getParameter( 34921 );
		var maxVertexUniforms = gl.getParameter( 36347 );
		var maxVaryings = gl.getParameter( 36348 );
		var maxFragmentUniforms = gl.getParameter( 36349 );

		var vertexTextures = maxVertexTextures > 0;
		var floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );
		var floatVertexTextures = vertexTextures && floatFragmentTextures;

		var maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;

		return {

			isWebGL2: isWebGL2,

			getMaxAnisotropy: getMaxAnisotropy,
			getMaxPrecision: getMaxPrecision,

			precision: precision,
			logarithmicDepthBuffer: logarithmicDepthBuffer,

			maxTextures: maxTextures,
			maxVertexTextures: maxVertexTextures,
			maxTextureSize: maxTextureSize,
			maxCubemapSize: maxCubemapSize,

			maxAttributes: maxAttributes,
			maxVertexUniforms: maxVertexUniforms,
			maxVaryings: maxVaryings,
			maxFragmentUniforms: maxFragmentUniforms,

			vertexTextures: vertexTextures,
			floatFragmentTextures: floatFragmentTextures,
			floatVertexTextures: floatVertexTextures,

			maxSamples: maxSamples

		};

	}

	/**
	 * @author tschw
	 */

	function WebGLClipping() {

		var scope = this,

			globalState = null,
			numGlobalPlanes = 0,
			localClippingEnabled = false,
			renderingShadows = false,

			plane = new Plane(),
			viewNormalMatrix = new Matrix3(),

			uniform = { value: null, needsUpdate: false };

		this.uniform = uniform;
		this.numPlanes = 0;
		this.numIntersection = 0;

		this.init = function ( planes, enableLocalClipping, camera ) {

			var enabled =
				planes.length !== 0 ||
				enableLocalClipping ||
				// enable state of previous frame - the clipping code has to
				// run another frame in order to reset the state:
				numGlobalPlanes !== 0 ||
				localClippingEnabled;

			localClippingEnabled = enableLocalClipping;

			globalState = projectPlanes( planes, camera, 0 );
			numGlobalPlanes = planes.length;

			return enabled;

		};

		this.beginShadows = function () {

			renderingShadows = true;
			projectPlanes( null );

		};

		this.endShadows = function () {

			renderingShadows = false;
			resetGlobalState();

		};

		this.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {

			if ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {

				// there's no local clipping

				if ( renderingShadows ) {

					// there's no global clipping

					projectPlanes( null );

				} else {

					resetGlobalState();

				}

			} else {

				var nGlobal = renderingShadows ? 0 : numGlobalPlanes,
					lGlobal = nGlobal * 4,

					dstArray = cache.clippingState || null;

				uniform.value = dstArray; // ensure unique state

				dstArray = projectPlanes( planes, camera, lGlobal, fromCache );

				for ( var i = 0; i !== lGlobal; ++ i ) {

					dstArray[ i ] = globalState[ i ];

				}

				cache.clippingState = dstArray;
				this.numIntersection = clipIntersection ? this.numPlanes : 0;
				this.numPlanes += nGlobal;

			}


		};

		function resetGlobalState() {

			if ( uniform.value !== globalState ) {

				uniform.value = globalState;
				uniform.needsUpdate = numGlobalPlanes > 0;

			}

			scope.numPlanes = numGlobalPlanes;
			scope.numIntersection = 0;

		}

		function projectPlanes( planes, camera, dstOffset, skipTransform ) {

			var nPlanes = planes !== null ? planes.length : 0,
				dstArray = null;

			if ( nPlanes !== 0 ) {

				dstArray = uniform.value;

				if ( skipTransform !== true || dstArray === null ) {

					var flatSize = dstOffset + nPlanes * 4,
						viewMatrix = camera.matrixWorldInverse;

					viewNormalMatrix.getNormalMatrix( viewMatrix );

					if ( dstArray === null || dstArray.length < flatSize ) {

						dstArray = new Float32Array( flatSize );

					}

					for ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {

						plane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );

						plane.normal.toArray( dstArray, i4 );
						dstArray[ i4 + 3 ] = plane.constant;

					}

				}

				uniform.value = dstArray;
				uniform.needsUpdate = true;

			}

			scope.numPlanes = nPlanes;
			scope.numIntersection = 0;

			return dstArray;

		}

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLExtensions( gl ) {

		var extensions = {};

		return {

			get: function ( name ) {

				if ( extensions[ name ] !== undefined ) {

					return extensions[ name ];

				}

				var extension;

				switch ( name ) {

					case 'WEBGL_depth_texture':
						extension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );
						break;

					case 'EXT_texture_filter_anisotropic':
						extension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );
						break;

					case 'WEBGL_compressed_texture_s3tc':
						extension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );
						break;

					case 'WEBGL_compressed_texture_pvrtc':
						extension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );
						break;

					default:
						extension = gl.getExtension( name );

				}

				if ( extension === null ) {

					console.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );

				}

				extensions[ name ] = extension;

				return extension;

			}

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLGeometries( gl, attributes, info ) {

		var geometries = new WeakMap();
		var wireframeAttributes = new WeakMap();

		function onGeometryDispose( event ) {

			var geometry = event.target;
			var buffergeometry = geometries.get( geometry );

			if ( buffergeometry.index !== null ) {

				attributes.remove( buffergeometry.index );

			}

			for ( var name in buffergeometry.attributes ) {

				attributes.remove( buffergeometry.attributes[ name ] );

			}

			geometry.removeEventListener( 'dispose', onGeometryDispose );

			geometries.delete( geometry );

			var attribute = wireframeAttributes.get( buffergeometry );

			if ( attribute ) {

				attributes.remove( attribute );
				wireframeAttributes.delete( buffergeometry );

			}

			//

			info.memory.geometries --;

		}

		function get( object, geometry ) {

			var buffergeometry = geometries.get( geometry );

			if ( buffergeometry ) { return buffergeometry; }

			geometry.addEventListener( 'dispose', onGeometryDispose );

			if ( geometry.isBufferGeometry ) {

				buffergeometry = geometry;

			} else if ( geometry.isGeometry ) {

				if ( geometry._bufferGeometry === undefined ) {

					geometry._bufferGeometry = new BufferGeometry().setFromObject( object );

				}

				buffergeometry = geometry._bufferGeometry;

			}

			geometries.set( geometry, buffergeometry );

			info.memory.geometries ++;

			return buffergeometry;

		}

		function update( geometry ) {

			var index = geometry.index;
			var geometryAttributes = geometry.attributes;

			if ( index !== null ) {

				attributes.update( index, 34963 );

			}

			for ( var name in geometryAttributes ) {

				attributes.update( geometryAttributes[ name ], 34962 );

			}

			// morph targets

			var morphAttributes = geometry.morphAttributes;

			for ( var name in morphAttributes ) {

				var array = morphAttributes[ name ];

				for ( var i = 0, l = array.length; i < l; i ++ ) {

					attributes.update( array[ i ], 34962 );

				}

			}

		}

		function updateWireframeAttribute( geometry ) {

			var indices = [];

			var geometryIndex = geometry.index;
			var geometryPosition = geometry.attributes.position;
			var version = 0;

			if ( geometryIndex !== null ) {

				var array = geometryIndex.array;
				version = geometryIndex.version;

				for ( var i = 0, l = array.length; i < l; i += 3 ) {

					var a = array[ i + 0 ];
					var b = array[ i + 1 ];
					var c = array[ i + 2 ];

					indices.push( a, b, b, c, c, a );

				}

			} else {

				var array = geometryPosition.array;
				version = geometryPosition.version;

				for ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {

					var a = i + 0;
					var b = i + 1;
					var c = i + 2;

					indices.push( a, b, b, c, c, a );

				}

			}

			var attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );
			attribute.version = version;

			attributes.update( attribute, 34963 );

			//

			var previousAttribute = wireframeAttributes.get( geometry );

			if ( previousAttribute ) { attributes.remove( previousAttribute ); }

			//

			wireframeAttributes.set( geometry, attribute );

		}

		function getWireframeAttribute( geometry ) {

			var currentAttribute = wireframeAttributes.get( geometry );

			if ( currentAttribute ) {

				var geometryIndex = geometry.index;

				if ( geometryIndex !== null ) {

					// if the attribute is obsolete, create a new one

					if ( currentAttribute.version < geometryIndex.version ) {

						updateWireframeAttribute( geometry );

					}

				}

			} else {

				updateWireframeAttribute( geometry );

			}

			return wireframeAttributes.get( geometry );

		}

		return {

			get: get,
			update: update,

			getWireframeAttribute: getWireframeAttribute

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {

		var isWebGL2 = capabilities.isWebGL2;

		var mode;

		function setMode( value ) {

			mode = value;

		}

		var type, bytesPerElement;

		function setIndex( value ) {

			type = value.type;
			bytesPerElement = value.bytesPerElement;

		}

		function render( start, count ) {

			gl.drawElements( mode, count, type, start * bytesPerElement );

			info.update( count, mode );

		}

		function renderInstances( geometry, start, count, primcount ) {

			if ( primcount === 0 ) { return; }

			var extension, methodName;

			if ( isWebGL2 ) {

				extension = gl;
				methodName = 'drawElementsInstanced';

			} else {

				extension = extensions.get( 'ANGLE_instanced_arrays' );
				methodName = 'drawElementsInstancedANGLE';

				if ( extension === null ) {

					console.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );
					return;

				}

			}

			extension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );

			info.update( count, mode, primcount );

		}

		//

		this.setMode = setMode;
		this.setIndex = setIndex;
		this.render = render;
		this.renderInstances = renderInstances;

	}

	/**
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	function WebGLInfo( gl ) {

		var memory = {
			geometries: 0,
			textures: 0
		};

		var render = {
			frame: 0,
			calls: 0,
			triangles: 0,
			points: 0,
			lines: 0
		};

		function update( count, mode, instanceCount ) {

			instanceCount = instanceCount || 1;

			render.calls ++;

			switch ( mode ) {

				case 4:
					render.triangles += instanceCount * ( count / 3 );
					break;

				case 1:
					render.lines += instanceCount * ( count / 2 );
					break;

				case 3:
					render.lines += instanceCount * ( count - 1 );
					break;

				case 2:
					render.lines += instanceCount * count;
					break;

				case 0:
					render.points += instanceCount * count;
					break;

				default:
					console.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );
					break;

			}

		}

		function reset() {

			render.frame ++;
			render.calls = 0;
			render.triangles = 0;
			render.points = 0;
			render.lines = 0;

		}

		return {
			memory: memory,
			render: render,
			programs: null,
			autoReset: true,
			reset: reset,
			update: update
		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function absNumericalSort( a, b ) {

		return Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );

	}

	function WebGLMorphtargets( gl ) {

		var influencesList = {};
		var morphInfluences = new Float32Array( 8 );

		function update( object, geometry, material, program ) {

			var objectInfluences = object.morphTargetInfluences;

			// When object doesn't have morph target influences defined, we treat it as a 0-length array
			// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences

			var length = objectInfluences === undefined ? 0 : objectInfluences.length;

			var influences = influencesList[ geometry.id ];

			if ( influences === undefined ) {

				// initialise list

				influences = [];

				for ( var i = 0; i < length; i ++ ) {

					influences[ i ] = [ i, 0 ];

				}

				influencesList[ geometry.id ] = influences;

			}

			var morphTargets = material.morphTargets && geometry.morphAttributes.position;
			var morphNormals = material.morphNormals && geometry.morphAttributes.normal;

			// Remove current morphAttributes

			for ( var i = 0; i < length; i ++ ) {

				var influence = influences[ i ];

				if ( influence[ 1 ] !== 0 ) {

					if ( morphTargets ) { geometry.deleteAttribute( 'morphTarget' + i ); }
					if ( morphNormals ) { geometry.deleteAttribute( 'morphNormal' + i ); }

				}

			}

			// Collect influences

			for ( var i = 0; i < length; i ++ ) {

				var influence = influences[ i ];

				influence[ 0 ] = i;
				influence[ 1 ] = objectInfluences[ i ];

			}

			influences.sort( absNumericalSort );

			// Add morphAttributes

			var morphInfluencesSum = 0;

			for ( var i = 0; i < 8; i ++ ) {

				var influence = influences[ i ];

				if ( influence ) {

					var index = influence[ 0 ];
					var value = influence[ 1 ];

					if ( value ) {

						if ( morphTargets ) { geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] ); }
						if ( morphNormals ) { geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] ); }

						morphInfluences[ i ] = value;
						morphInfluencesSum += value;
						continue;

					}

				}

				morphInfluences[ i ] = 0;

			}

			// GLSL shader uses formula baseinfluence * base + sum(target * influence)
			// This allows us to switch between absolute morphs and relative morphs without changing shader code
			// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)
			var morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;

			program.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );
			program.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );

		}

		return {

			update: update

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLObjects( gl, geometries, attributes, info ) {

		var updateMap = new WeakMap();

		function update( object ) {

			var frame = info.render.frame;

			var geometry = object.geometry;
			var buffergeometry = geometries.get( object, geometry );

			// Update once per frame

			if ( updateMap.get( buffergeometry ) !== frame ) {

				if ( geometry.isGeometry ) {

					buffergeometry.updateFromObject( object );

				}

				geometries.update( buffergeometry );

				updateMap.set( buffergeometry, frame );

			}

			if ( object.isInstancedMesh ) {

				attributes.update( object.instanceMatrix, 34962 );

			}

			return buffergeometry;

		}

		function dispose() {

			updateMap = new WeakMap();

		}

		return {

			update: update,
			dispose: dispose

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {

		images = images !== undefined ? images : [];
		mapping = mapping !== undefined ? mapping : CubeReflectionMapping;
		format = format !== undefined ? format : RGBFormat;

		Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.flipY = false;

	}

	CubeTexture.prototype = Object.create( Texture.prototype );
	CubeTexture.prototype.constructor = CubeTexture;

	CubeTexture.prototype.isCubeTexture = true;

	Object.defineProperty( CubeTexture.prototype, 'images', {

		get: function () {

			return this.image;

		},

		set: function ( value ) {

			this.image = value;

		}

	} );

	/**
	 * @author Takahiro https://github.com/takahirox
	 */

	function DataTexture2DArray( data, width, height, depth ) {

		Texture.call( this, null );

		this.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.wrapR = ClampToEdgeWrapping;

		this.generateMipmaps = false;
		this.flipY = false;

		this.needsUpdate = true;

	}

	DataTexture2DArray.prototype = Object.create( Texture.prototype );
	DataTexture2DArray.prototype.constructor = DataTexture2DArray;
	DataTexture2DArray.prototype.isDataTexture2DArray = true;

	/**
	 * @author Artur Trzesiok
	 */

	function DataTexture3D( data, width, height, depth ) {

		// We're going to add .setXXX() methods for setting properties later.
		// Users can still set in DataTexture3D directly.
		//
		//	var texture = new THREE.DataTexture3D( data, width, height, depth );
		// 	texture.anisotropy = 16;
		//
		// See #14839

		Texture.call( this, null );

		this.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };

		this.magFilter = NearestFilter;
		this.minFilter = NearestFilter;

		this.wrapR = ClampToEdgeWrapping;

		this.generateMipmaps = false;
		this.flipY = false;

		this.needsUpdate = true;


	}

	DataTexture3D.prototype = Object.create( Texture.prototype );
	DataTexture3D.prototype.constructor = DataTexture3D;
	DataTexture3D.prototype.isDataTexture3D = true;

	/**
	 * @author tschw
	 * @author Mugen87 / https://github.com/Mugen87
	 * @author mrdoob / http://mrdoob.com/
	 *
	 * Uniforms of a program.
	 * Those form a tree structure with a special top-level container for the root,
	 * which you get by calling 'new WebGLUniforms( gl, program )'.
	 *
	 *
	 * Properties of inner nodes including the top-level container:
	 *
	 * .seq - array of nested uniforms
	 * .map - nested uniforms by name
	 *
	 *
	 * Methods of all nodes except the top-level container:
	 *
	 * .setValue( gl, value, [textures] )
	 *
	 * 		uploads a uniform value(s)
	 *  	the 'textures' parameter is needed for sampler uniforms
	 *
	 *
	 * Static methods of the top-level container (textures factorizations):
	 *
	 * .upload( gl, seq, values, textures )
	 *
	 * 		sets uniforms in 'seq' to 'values[id].value'
	 *
	 * .seqWithValue( seq, values ) : filteredSeq
	 *
	 * 		filters 'seq' entries with corresponding entry in values
	 *
	 *
	 * Methods of the top-level container (textures factorizations):
	 *
	 * .setValue( gl, name, value, textures )
	 *
	 * 		sets uniform with  name 'name' to 'value'
	 *
	 * .setOptional( gl, obj, prop )
	 *
	 * 		like .set for an optional property of the object
	 *
	 */

	var emptyTexture = new Texture();
	var emptyTexture2dArray = new DataTexture2DArray();
	var emptyTexture3d = new DataTexture3D();
	var emptyCubeTexture = new CubeTexture();

	// --- Utilities ---

	// Array Caches (provide typed arrays for temporary by size)

	var arrayCacheF32 = [];
	var arrayCacheI32 = [];

	// Float32Array caches used for uploading Matrix uniforms

	var mat4array = new Float32Array( 16 );
	var mat3array = new Float32Array( 9 );
	var mat2array = new Float32Array( 4 );

	// Flattening for arrays of vectors and matrices

	function flatten( array, nBlocks, blockSize ) {

		var firstElem = array[ 0 ];

		if ( firstElem <= 0 || firstElem > 0 ) { return array; }
		// unoptimized: ! isNaN( firstElem )
		// see http://jacksondunstan.com/articles/983

		var n = nBlocks * blockSize,
			r = arrayCacheF32[ n ];

		if ( r === undefined ) {

			r = new Float32Array( n );
			arrayCacheF32[ n ] = r;

		}

		if ( nBlocks !== 0 ) {

			firstElem.toArray( r, 0 );

			for ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {

				offset += blockSize;
				array[ i ].toArray( r, offset );

			}

		}

		return r;

	}

	function arraysEqual( a, b ) {

		if ( a.length !== b.length ) { return false; }

		for ( var i = 0, l = a.length; i < l; i ++ ) {

			if ( a[ i ] !== b[ i ] ) { return false; }

		}

		return true;

	}

	function copyArray( a, b ) {

		for ( var i = 0, l = b.length; i < l; i ++ ) {

			a[ i ] = b[ i ];

		}

	}

	// Texture unit allocation

	function allocTexUnits( textures, n ) {

		var r = arrayCacheI32[ n ];

		if ( r === undefined ) {

			r = new Int32Array( n );
			arrayCacheI32[ n ] = r;

		}

		for ( var i = 0; i !== n; ++ i )
			{ r[ i ] = textures.allocateTextureUnit(); }

		return r;

	}

	// --- Setters ---

	// Note: Defining these methods externally, because they come in a bunch
	// and this way their names minify.

	// Single scalar

	function setValueV1f( gl, v ) {

		var cache = this.cache;

		if ( cache[ 0 ] === v ) { return; }

		gl.uniform1f( this.addr, v );

		cache[ 0 ] = v;

	}

	// Single float vector (from flat array or THREE.VectorN)

	function setValueV2f( gl, v ) {

		var cache = this.cache;

		if ( v.x !== undefined ) {

			if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {

				gl.uniform2f( this.addr, v.x, v.y );

				cache[ 0 ] = v.x;
				cache[ 1 ] = v.y;

			}

		} else {

			if ( arraysEqual( cache, v ) ) { return; }

			gl.uniform2fv( this.addr, v );

			copyArray( cache, v );

		}

	}

	function setValueV3f( gl, v ) {

		var cache = this.cache;

		if ( v.x !== undefined ) {

			if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {

				gl.uniform3f( this.addr, v.x, v.y, v.z );

				cache[ 0 ] = v.x;
				cache[ 1 ] = v.y;
				cache[ 2 ] = v.z;

			}

		} else if ( v.r !== undefined ) {

			if ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {

				gl.uniform3f( this.addr, v.r, v.g, v.b );

				cache[ 0 ] = v.r;
				cache[ 1 ] = v.g;
				cache[ 2 ] = v.b;

			}

		} else {

			if ( arraysEqual( cache, v ) ) { return; }

			gl.uniform3fv( this.addr, v );

			copyArray( cache, v );

		}

	}

	function setValueV4f( gl, v ) {

		var cache = this.cache;

		if ( v.x !== undefined ) {

			if ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {

				gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );

				cache[ 0 ] = v.x;
				cache[ 1 ] = v.y;
				cache[ 2 ] = v.z;
				cache[ 3 ] = v.w;

			}

		} else {

			if ( arraysEqual( cache, v ) ) { return; }

			gl.uniform4fv( this.addr, v );

			copyArray( cache, v );

		}

	}

	// Single matrix (from flat array or MatrixN)

	function setValueM2( gl, v ) {

		var cache = this.cache;
		var elements = v.elements;

		if ( elements === undefined ) {

			if ( arraysEqual( cache, v ) ) { return; }

			gl.uniformMatrix2fv( this.addr, false, v );

			copyArray( cache, v );

		} else {

			if ( arraysEqual( cache, elements ) ) { return; }

			mat2array.set( elements );

			gl.uniformMatrix2fv( this.addr, false, mat2array );

			copyArray( cache, elements );

		}

	}

	function setValueM3( gl, v ) {

		var cache = this.cache;
		var elements = v.elements;

		if ( elements === undefined ) {

			if ( arraysEqual( cache, v ) ) { return; }

			gl.uniformMatrix3fv( this.addr, false, v );

			copyArray( cache, v );

		} else {

			if ( arraysEqual( cache, elements ) ) { return; }

			mat3array.set( elements );

			gl.uniformMatrix3fv( this.addr, false, mat3array );

			copyArray( cache, elements );

		}

	}

	function setValueM4( gl, v ) {

		var cache = this.cache;
		var elements = v.elements;

		if ( elements === undefined ) {

			if ( arraysEqual( cache, v ) ) { return; }

			gl.uniformMatrix4fv( this.addr, false, v );

			copyArray( cache, v );

		} else {

			if ( arraysEqual( cache, elements ) ) { return; }

			mat4array.set( elements );

			gl.uniformMatrix4fv( this.addr, false, mat4array );

			copyArray( cache, elements );

		}

	}

	// Single texture (2D / Cube)

	function setValueT1( gl, v, textures ) {

		var cache = this.cache;
		var unit = textures.allocateTextureUnit();

		if ( cache[ 0 ] !== unit ) {

			gl.uniform1i( this.addr, unit );
			cache[ 0 ] = unit;

		}

		textures.safeSetTexture2D( v || emptyTexture, unit );

	}

	function setValueT2DArray1( gl, v, textures ) {

		var cache = this.cache;
		var unit = textures.allocateTextureUnit();

		if ( cache[ 0 ] !== unit ) {

			gl.uniform1i( this.addr, unit );
			cache[ 0 ] = unit;

		}

		textures.setTexture2DArray( v || emptyTexture2dArray, unit );

	}

	function setValueT3D1( gl, v, textures ) {

		var cache = this.cache;
		var unit = textures.allocateTextureUnit();

		if ( cache[ 0 ] !== unit ) {

			gl.uniform1i( this.addr, unit );
			cache[ 0 ] = unit;

		}

		textures.setTexture3D( v || emptyTexture3d, unit );

	}

	function setValueT6( gl, v, textures ) {

		var cache = this.cache;
		var unit = textures.allocateTextureUnit();

		if ( cache[ 0 ] !== unit ) {

			gl.uniform1i( this.addr, unit );
			cache[ 0 ] = unit;

		}

		textures.safeSetTextureCube( v || emptyCubeTexture, unit );

	}

	// Integer / Boolean vectors or arrays thereof (always flat arrays)

	function setValueV1i( gl, v ) {

		var cache = this.cache;

		if ( cache[ 0 ] === v ) { return; }

		gl.uniform1i( this.addr, v );

		cache[ 0 ] = v;

	}

	function setValueV2i( gl, v ) {

		var cache = this.cache;

		if ( arraysEqual( cache, v ) ) { return; }

		gl.uniform2iv( this.addr, v );

		copyArray( cache, v );

	}

	function setValueV3i( gl, v ) {

		var cache = this.cache;

		if ( arraysEqual( cache, v ) ) { return; }

		gl.uniform3iv( this.addr, v );

		copyArray( cache, v );

	}

	function setValueV4i( gl, v ) {

		var cache = this.cache;

		if ( arraysEqual( cache, v ) ) { return; }

		gl.uniform4iv( this.addr, v );

		copyArray( cache, v );

	}

	// uint

	function setValueV1ui( gl, v ) {

		var cache = this.cache;

		if ( cache[ 0 ] === v ) { return; }

		gl.uniform1ui( this.addr, v );

		cache[ 0 ] = v;

	}

	// Helper to pick the right setter for the singular case

	function getSingularSetter( type ) {

		switch ( type ) {

			case 0x1406: return setValueV1f; // FLOAT
			case 0x8b50: return setValueV2f; // _VEC2
			case 0x8b51: return setValueV3f; // _VEC3
			case 0x8b52: return setValueV4f; // _VEC4

			case 0x8b5a: return setValueM2; // _MAT2
			case 0x8b5b: return setValueM3; // _MAT3
			case 0x8b5c: return setValueM4; // _MAT4

			case 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL
			case 0x8b53: case 0x8b57: return setValueV2i; // _VEC2
			case 0x8b54: case 0x8b58: return setValueV3i; // _VEC3
			case 0x8b55: case 0x8b59: return setValueV4i; // _VEC4

			case 0x1405: return setValueV1ui; // UINT

			case 0x8b5e: // SAMPLER_2D
			case 0x8d66: // SAMPLER_EXTERNAL_OES
			case 0x8dca: // INT_SAMPLER_2D
			case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D
			case 0x8b62: // SAMPLER_2D_SHADOW
				return setValueT1;

			case 0x8b5f: // SAMPLER_3D
			case 0x8dcb: // INT_SAMPLER_3D
			case 0x8dd3: // UNSIGNED_INT_SAMPLER_3D
				return setValueT3D1;

			case 0x8b60: // SAMPLER_CUBE
			case 0x8dcc: // INT_SAMPLER_CUBE
			case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE
			case 0x8dc5: // SAMPLER_CUBE_SHADOW
				return setValueT6;

			case 0x8dc1: // SAMPLER_2D_ARRAY
			case 0x8dcf: // INT_SAMPLER_2D_ARRAY
			case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY
			case 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW
				return setValueT2DArray1;

		}

	}

	// Array of scalars
	function setValueV1fArray( gl, v ) {

		gl.uniform1fv( this.addr, v );

	}

	// Integer / Boolean vectors or arrays thereof (always flat arrays)
	function setValueV1iArray( gl, v ) {

		gl.uniform1iv( this.addr, v );

	}

	function setValueV2iArray( gl, v ) {

		gl.uniform2iv( this.addr, v );

	}

	function setValueV3iArray( gl, v ) {

		gl.uniform3iv( this.addr, v );

	}

	function setValueV4iArray( gl, v ) {

		gl.uniform4iv( this.addr, v );

	}


	// Array of vectors (flat or from THREE classes)

	function setValueV2fArray( gl, v ) {

		var data = flatten( v, this.size, 2 );

		gl.uniform2fv( this.addr, data );

	}

	function setValueV3fArray( gl, v ) {

		var data = flatten( v, this.size, 3 );

		gl.uniform3fv( this.addr, data );

	}

	function setValueV4fArray( gl, v ) {

		var data = flatten( v, this.size, 4 );

		gl.uniform4fv( this.addr, data );

	}

	// Array of matrices (flat or from THREE clases)

	function setValueM2Array( gl, v ) {

		var data = flatten( v, this.size, 4 );

		gl.uniformMatrix2fv( this.addr, false, data );

	}

	function setValueM3Array( gl, v ) {

		var data = flatten( v, this.size, 9 );

		gl.uniformMatrix3fv( this.addr, false, data );

	}

	function setValueM4Array( gl, v ) {

		var data = flatten( v, this.size, 16 );

		gl.uniformMatrix4fv( this.addr, false, data );

	}

	// Array of textures (2D / Cube)

	function setValueT1Array( gl, v, textures ) {

		var n = v.length;

		var units = allocTexUnits( textures, n );

		gl.uniform1iv( this.addr, units );

		for ( var i = 0; i !== n; ++ i ) {

			textures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );

		}

	}

	function setValueT6Array( gl, v, textures ) {

		var n = v.length;

		var units = allocTexUnits( textures, n );

		gl.uniform1iv( this.addr, units );

		for ( var i = 0; i !== n; ++ i ) {

			textures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );

		}

	}

	// Helper to pick the right setter for a pure (bottom-level) array

	function getPureArraySetter( type ) {

		switch ( type ) {

			case 0x1406: return setValueV1fArray; // FLOAT
			case 0x8b50: return setValueV2fArray; // _VEC2
			case 0x8b51: return setValueV3fArray; // _VEC3
			case 0x8b52: return setValueV4fArray; // _VEC4

			case 0x8b5a: return setValueM2Array; // _MAT2
			case 0x8b5b: return setValueM3Array; // _MAT3
			case 0x8b5c: return setValueM4Array; // _MAT4

			case 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL
			case 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2
			case 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3
			case 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4

			case 0x8b5e: // SAMPLER_2D
			case 0x8d66: // SAMPLER_EXTERNAL_OES
			case 0x8dca: // INT_SAMPLER_2D
			case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D
			case 0x8b62: // SAMPLER_2D_SHADOW
				return setValueT1Array;

			case 0x8b60: // SAMPLER_CUBE
			case 0x8dcc: // INT_SAMPLER_CUBE
			case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE
			case 0x8dc5: // SAMPLER_CUBE_SHADOW
				return setValueT6Array;

		}

	}

	// --- Uniform Classes ---

	function SingleUniform( id, activeInfo, addr ) {

		this.id = id;
		this.addr = addr;
		this.cache = [];
		this.setValue = getSingularSetter( activeInfo.type );

		// this.path = activeInfo.name; // DEBUG

	}

	function PureArrayUniform( id, activeInfo, addr ) {

		this.id = id;
		this.addr = addr;
		this.cache = [];
		this.size = activeInfo.size;
		this.setValue = getPureArraySetter( activeInfo.type );

		// this.path = activeInfo.name; // DEBUG

	}

	PureArrayUniform.prototype.updateCache = function ( data ) {

		var cache = this.cache;

		if ( data instanceof Float32Array && cache.length !== data.length ) {

			this.cache = new Float32Array( data.length );

		}

		copyArray( cache, data );

	};

	function StructuredUniform( id ) {

		this.id = id;

		this.seq = [];
		this.map = {};

	}

	StructuredUniform.prototype.setValue = function ( gl, value, textures ) {

		var seq = this.seq;

		for ( var i = 0, n = seq.length; i !== n; ++ i ) {

			var u = seq[ i ];
			u.setValue( gl, value[ u.id ], textures );

		}

	};

	// --- Top-level ---

	// Parser - builds up the property tree from the path strings

	var RePathPart = /([\w\d_]+)(\])?(\[|\.)?/g;

	// extracts
	// 	- the identifier (member name or array index)
	//  - followed by an optional right bracket (found when array index)
	//  - followed by an optional left bracket or dot (type of subscript)
	//
	// Note: These portions can be read in a non-overlapping fashion and
	// allow straightforward parsing of the hierarchy that WebGL encodes
	// in the uniform names.

	function addUniform( container, uniformObject ) {

		container.seq.push( uniformObject );
		container.map[ uniformObject.id ] = uniformObject;

	}

	function parseUniform( activeInfo, addr, container ) {

		var path = activeInfo.name,
			pathLength = path.length;

		// reset RegExp object, because of the early exit of a previous run
		RePathPart.lastIndex = 0;

		while ( true ) {

			var match = RePathPart.exec( path ),
				matchEnd = RePathPart.lastIndex,

				id = match[ 1 ],
				idIsIndex = match[ 2 ] === ']',
				subscript = match[ 3 ];

			if ( idIsIndex ) { id = id | 0; } // convert to integer

			if ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {

				// bare name or "pure" bottom-level array "[0]" suffix

				addUniform( container, subscript === undefined ?
					new SingleUniform( id, activeInfo, addr ) :
					new PureArrayUniform( id, activeInfo, addr ) );

				break;

			} else {

				// step into inner node / create it in case it doesn't exist

				var map = container.map, next = map[ id ];

				if ( next === undefined ) {

					next = new StructuredUniform( id );
					addUniform( container, next );

				}

				container = next;

			}

		}

	}

	// Root Container

	function WebGLUniforms( gl, program ) {

		this.seq = [];
		this.map = {};

		var n = gl.getProgramParameter( program, 35718 );

		for ( var i = 0; i < n; ++ i ) {

			var info = gl.getActiveUniform( program, i ),
				addr = gl.getUniformLocation( program, info.name );

			parseUniform( info, addr, this );

		}

	}

	WebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {

		var u = this.map[ name ];

		if ( u !== undefined ) { u.setValue( gl, value, textures ); }

	};

	WebGLUniforms.prototype.setOptional = function ( gl, object, name ) {

		var v = object[ name ];

		if ( v !== undefined ) { this.setValue( gl, name, v ); }

	};


	// Static interface

	WebGLUniforms.upload = function ( gl, seq, values, textures ) {

		for ( var i = 0, n = seq.length; i !== n; ++ i ) {

			var u = seq[ i ],
				v = values[ u.id ];

			if ( v.needsUpdate !== false ) {

				// note: always updating when .needsUpdate is undefined
				u.setValue( gl, v.value, textures );

			}

		}

	};

	WebGLUniforms.seqWithValue = function ( seq, values ) {

		var r = [];

		for ( var i = 0, n = seq.length; i !== n; ++ i ) {

			var u = seq[ i ];
			if ( u.id in values ) { r.push( u ); }

		}

		return r;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLShader( gl, type, string ) {

		var shader = gl.createShader( type );

		gl.shaderSource( shader, string );
		gl.compileShader( shader );

		return shader;

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var programIdCount = 0;

	function addLineNumbers( string ) {

		var lines = string.split( '\n' );

		for ( var i = 0; i < lines.length; i ++ ) {

			lines[ i ] = ( i + 1 ) + ': ' + lines[ i ];

		}

		return lines.join( '\n' );

	}

	function getEncodingComponents( encoding ) {

		switch ( encoding ) {

			case LinearEncoding:
				return [ 'Linear', '( value )' ];
			case sRGBEncoding:
				return [ 'sRGB', '( value )' ];
			case RGBEEncoding:
				return [ 'RGBE', '( value )' ];
			case RGBM7Encoding:
				return [ 'RGBM', '( value, 7.0 )' ];
			case RGBM16Encoding:
				return [ 'RGBM', '( value, 16.0 )' ];
			case RGBDEncoding:
				return [ 'RGBD', '( value, 256.0 )' ];
			case GammaEncoding:
				return [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];
			case LogLuvEncoding:
				return [ 'LogLuv', '( value )' ];
			default:
				throw new Error( 'unsupported encoding: ' + encoding );

		}

	}

	function getShaderErrors( gl, shader, type ) {

		var status = gl.getShaderParameter( shader, 35713 );
		var log = gl.getShaderInfoLog( shader ).trim();

		if ( status && log === '' ) { return ''; }

		// --enable-privileged-webgl-extension
		// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );

		var source = gl.getShaderSource( shader );

		return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\n' + log + addLineNumbers( source );

	}

	function getTexelDecodingFunction( functionName, encoding ) {

		var components = getEncodingComponents( encoding );
		return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';

	}

	function getTexelEncodingFunction( functionName, encoding ) {

		var components = getEncodingComponents( encoding );
		return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';

	}

	function getToneMappingFunction( functionName, toneMapping ) {

		var toneMappingName;

		switch ( toneMapping ) {

			case LinearToneMapping:
				toneMappingName = 'Linear';
				break;

			case ReinhardToneMapping:
				toneMappingName = 'Reinhard';
				break;

			case Uncharted2ToneMapping:
				toneMappingName = 'Uncharted2';
				break;

			case CineonToneMapping:
				toneMappingName = 'OptimizedCineon';
				break;

			case ACESFilmicToneMapping:
				toneMappingName = 'ACESFilmic';
				break;

			default:
				throw new Error( 'unsupported toneMapping: ' + toneMapping );

		}

		return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';

	}

	function generateExtensions( parameters ) {

		var chunks = [
			( parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',
			( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',
			( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',
			( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''
		];

		return chunks.filter( filterEmptyLine ).join( '\n' );

	}

	function generateDefines( defines ) {

		var chunks = [];

		for ( var name in defines ) {

			var value = defines[ name ];

			if ( value === false ) { continue; }

			chunks.push( '#define ' + name + ' ' + value );

		}

		return chunks.join( '\n' );

	}

	function fetchAttributeLocations( gl, program ) {

		var attributes = {};

		var n = gl.getProgramParameter( program, 35721 );

		for ( var i = 0; i < n; i ++ ) {

			var info = gl.getActiveAttrib( program, i );
			var name = info.name;

			// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );

			attributes[ name ] = gl.getAttribLocation( program, name );

		}

		return attributes;

	}

	function filterEmptyLine( string ) {

		return string !== '';

	}

	function replaceLightNums( string, parameters ) {

		return string
			.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )
			.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )
			.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )
			.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )
			.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )
			.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )
			.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )
			.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );

	}

	function replaceClippingPlaneNums( string, parameters ) {

		return string
			.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )
			.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );

	}

	// Resolve Includes

	var includePattern = /^[ \t]*#include +<([\w\d./]+)>/gm;

	function resolveIncludes( string ) {

		return string.replace( includePattern, includeReplacer );

	}

	function includeReplacer( match, include ) {

		var string = ShaderChunk[ include ];

		if ( string === undefined ) {

			throw new Error( 'Can not resolve #include <' + include + '>' );

		}

		return resolveIncludes( string );

	}

	// Unroll Loops

	var deprecatedUnrollLoopPattern = /#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;
	var unrollLoopPattern = /#pragma unroll_loop_start[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}[\s]+?#pragma unroll_loop_end/g;

	function unrollLoops( string ) {

		return string
			.replace( unrollLoopPattern, loopReplacer )
			.replace( deprecatedUnrollLoopPattern, deprecatedLoopReplacer );

	}

	function deprecatedLoopReplacer( match, start, end, snippet ) {

		console.warn( 'WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.' );
		return loopReplacer( match, start, end, snippet );

	}

	function loopReplacer( match, start, end, snippet ) {

		var string = '';

		for ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {

			string += snippet
				.replace( /\[ i \]/g, '[ ' + i + ' ]' )
				.replace( /UNROLLED_LOOP_INDEX/g, i );

		}

		return string;

	}

	//

	function generatePrecision( parameters ) {

		var precisionstring = "precision " + parameters.precision + " float;\nprecision " + parameters.precision + " int;";

		if ( parameters.precision === "highp" ) {

			precisionstring += "\n#define HIGH_PRECISION";

		} else if ( parameters.precision === "mediump" ) {

			precisionstring += "\n#define MEDIUM_PRECISION";

		} else if ( parameters.precision === "lowp" ) {

			precisionstring += "\n#define LOW_PRECISION";

		}

		return precisionstring;

	}

	function generateShadowMapTypeDefine( parameters ) {

		var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';

		if ( parameters.shadowMapType === PCFShadowMap ) {

			shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';

		} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {

			shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';

		} else if ( parameters.shadowMapType === VSMShadowMap ) {

			shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';

		}

		return shadowMapTypeDefine;

	}

	function generateEnvMapTypeDefine( parameters ) {

		var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';

		if ( parameters.envMap ) {

			switch ( parameters.envMapMode ) {

				case CubeReflectionMapping:
				case CubeRefractionMapping:
					envMapTypeDefine = 'ENVMAP_TYPE_CUBE';
					break;

				case CubeUVReflectionMapping:
				case CubeUVRefractionMapping:
					envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';
					break;

				case EquirectangularReflectionMapping:
				case EquirectangularRefractionMapping:
					envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';
					break;

				case SphericalReflectionMapping:
					envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';
					break;

			}

		}

		return envMapTypeDefine;

	}

	function generateEnvMapModeDefine( parameters ) {

		var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';

		if ( parameters.envMap ) {

			switch ( parameters.envMapMode ) {

				case CubeRefractionMapping:
				case EquirectangularRefractionMapping:
					envMapModeDefine = 'ENVMAP_MODE_REFRACTION';
					break;

			}

		}

		return envMapModeDefine;

	}

	function generateEnvMapBlendingDefine( parameters ) {

		var envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';

		if ( parameters.envMap ) {

			switch ( parameters.combine ) {

				case MultiplyOperation:
					envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';
					break;

				case MixOperation:
					envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';
					break;

				case AddOperation:
					envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';
					break;

			}

		}

		return envMapBlendingDefine;

	}

	function WebGLProgram( renderer, cacheKey, parameters ) {

		var gl = renderer.getContext();

		var defines = parameters.defines;

		var vertexShader = parameters.vertexShader;
		var fragmentShader = parameters.fragmentShader;
		var shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );
		var envMapTypeDefine = generateEnvMapTypeDefine( parameters );
		var envMapModeDefine = generateEnvMapModeDefine( parameters );
		var envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );


		var gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;

		var customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );

		var customDefines = generateDefines( defines );

		var program = gl.createProgram();

		var prefixVertex, prefixFragment;

		if ( parameters.isRawShaderMaterial ) {

			prefixVertex = [

				customDefines

			].filter( filterEmptyLine ).join( '\n' );

			if ( prefixVertex.length > 0 ) {

				prefixVertex += '\n';

			}

			prefixFragment = [

				customExtensions,
				customDefines

			].filter( filterEmptyLine ).join( '\n' );

			if ( prefixFragment.length > 0 ) {

				prefixFragment += '\n';

			}

		} else {

			prefixVertex = [

				generatePrecision( parameters ),

				'#define SHADER_NAME ' + parameters.shaderName,

				customDefines,

				parameters.instancing ? '#define USE_INSTANCING' : '',
				parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',

				'#define GAMMA_FACTOR ' + gammaFactorDefine,

				'#define MAX_BONES ' + parameters.maxBones,
				( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
				( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',

				parameters.map ? '#define USE_MAP' : '',
				parameters.envMap ? '#define USE_ENVMAP' : '',
				parameters.envMap ? '#define ' + envMapModeDefine : '',
				parameters.lightMap ? '#define USE_LIGHTMAP' : '',
				parameters.aoMap ? '#define USE_AOMAP' : '',
				parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
				parameters.bumpMap ? '#define USE_BUMPMAP' : '',
				parameters.normalMap ? '#define USE_NORMALMAP' : '',
				( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',
				( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',

				parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
				parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
				parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
				parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',
				parameters.specularMap ? '#define USE_SPECULARMAP' : '',
				parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
				parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
				parameters.alphaMap ? '#define USE_ALPHAMAP' : '',

				parameters.vertexTangents ? '#define USE_TANGENT' : '',
				parameters.vertexColors ? '#define USE_COLOR' : '',
				parameters.vertexUvs ? '#define USE_UV' : '',
				parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',

				parameters.flatShading ? '#define FLAT_SHADED' : '',

				parameters.skinning ? '#define USE_SKINNING' : '',
				parameters.useVertexTexture ? '#define BONE_TEXTURE' : '',

				parameters.morphTargets ? '#define USE_MORPHTARGETS' : '',
				parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',
				parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
				parameters.flipSided ? '#define FLIP_SIDED' : '',

				parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
				parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

				parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',

				parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
				( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

				'uniform mat4 modelMatrix;',
				'uniform mat4 modelViewMatrix;',
				'uniform mat4 projectionMatrix;',
				'uniform mat4 viewMatrix;',
				'uniform mat3 normalMatrix;',
				'uniform vec3 cameraPosition;',
				'uniform bool isOrthographic;',

				'#ifdef USE_INSTANCING',

				' attribute mat4 instanceMatrix;',

				'#endif',

				'attribute vec3 position;',
				'attribute vec3 normal;',
				'attribute vec2 uv;',

				'#ifdef USE_TANGENT',

				'	attribute vec4 tangent;',

				'#endif',

				'#ifdef USE_COLOR',

				'	attribute vec3 color;',

				'#endif',

				'#ifdef USE_MORPHTARGETS',

				'	attribute vec3 morphTarget0;',
				'	attribute vec3 morphTarget1;',
				'	attribute vec3 morphTarget2;',
				'	attribute vec3 morphTarget3;',

				'	#ifdef USE_MORPHNORMALS',

				'		attribute vec3 morphNormal0;',
				'		attribute vec3 morphNormal1;',
				'		attribute vec3 morphNormal2;',
				'		attribute vec3 morphNormal3;',

				'	#else',

				'		attribute vec3 morphTarget4;',
				'		attribute vec3 morphTarget5;',
				'		attribute vec3 morphTarget6;',
				'		attribute vec3 morphTarget7;',

				'	#endif',

				'#endif',

				'#ifdef USE_SKINNING',

				'	attribute vec4 skinIndex;',
				'	attribute vec4 skinWeight;',

				'#endif',

				'\n'

			].filter( filterEmptyLine ).join( '\n' );

			prefixFragment = [

				customExtensions,

				generatePrecision( parameters ),

				'#define SHADER_NAME ' + parameters.shaderName,

				customDefines,

				parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer

				'#define GAMMA_FACTOR ' + gammaFactorDefine,

				( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',
				( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',

				parameters.map ? '#define USE_MAP' : '',
				parameters.matcap ? '#define USE_MATCAP' : '',
				parameters.envMap ? '#define USE_ENVMAP' : '',
				parameters.envMap ? '#define ' + envMapTypeDefine : '',
				parameters.envMap ? '#define ' + envMapModeDefine : '',
				parameters.envMap ? '#define ' + envMapBlendingDefine : '',
				parameters.lightMap ? '#define USE_LIGHTMAP' : '',
				parameters.aoMap ? '#define USE_AOMAP' : '',
				parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',
				parameters.bumpMap ? '#define USE_BUMPMAP' : '',
				parameters.normalMap ? '#define USE_NORMALMAP' : '',
				( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',
				( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',
				parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',
				parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',
				parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',
				parameters.specularMap ? '#define USE_SPECULARMAP' : '',
				parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',
				parameters.metalnessMap ? '#define USE_METALNESSMAP' : '',
				parameters.alphaMap ? '#define USE_ALPHAMAP' : '',

				parameters.sheen ? '#define USE_SHEEN' : '',

				parameters.vertexTangents ? '#define USE_TANGENT' : '',
				parameters.vertexColors ? '#define USE_COLOR' : '',
				parameters.vertexUvs ? '#define USE_UV' : '',
				parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',

				parameters.gradientMap ? '#define USE_GRADIENTMAP' : '',

				parameters.flatShading ? '#define FLAT_SHADED' : '',

				parameters.doubleSided ? '#define DOUBLE_SIDED' : '',
				parameters.flipSided ? '#define FLIP_SIDED' : '',

				parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',
				parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',

				parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',

				parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',

				parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',
				( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',

				( ( parameters.extensionShaderTextureLOD || parameters.envMap ) && parameters.rendererExtensionShaderTextureLod ) ? '#define TEXTURE_LOD_EXT' : '',

				'uniform mat4 viewMatrix;',
				'uniform vec3 cameraPosition;',
				'uniform bool isOrthographic;',

				( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',
				( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below
				( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',

				parameters.dithering ? '#define DITHERING' : '',

				( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding || parameters.lightMapEncoding ) ?
					ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below
				parameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',
				parameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',
				parameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',
				parameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',
				parameters.lightMapEncoding ? getTexelDecodingFunction( 'lightMapTexelToLinear', parameters.lightMapEncoding ) : '',
				parameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',

				parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',

				'\n'

			].filter( filterEmptyLine ).join( '\n' );

		}

		vertexShader = resolveIncludes( vertexShader );
		vertexShader = replaceLightNums( vertexShader, parameters );
		vertexShader = replaceClippingPlaneNums( vertexShader, parameters );

		fragmentShader = resolveIncludes( fragmentShader );
		fragmentShader = replaceLightNums( fragmentShader, parameters );
		fragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );

		vertexShader = unrollLoops( vertexShader );
		fragmentShader = unrollLoops( fragmentShader );

		if ( parameters.isWebGL2 && ! parameters.isRawShaderMaterial ) {

			var isGLSL3ShaderMaterial = false;

			var versionRegex = /^\s*#version\s+300\s+es\s*\n/;

			if ( parameters.isShaderMaterial &&
				vertexShader.match( versionRegex ) !== null &&
				fragmentShader.match( versionRegex ) !== null ) {

				isGLSL3ShaderMaterial = true;

				vertexShader = vertexShader.replace( versionRegex, '' );
				fragmentShader = fragmentShader.replace( versionRegex, '' );

			}

			// GLSL 3.0 conversion

			prefixVertex = [
				'#version 300 es\n',
				'#define attribute in',
				'#define varying out',
				'#define texture2D texture'
			].join( '\n' ) + '\n' + prefixVertex;

			prefixFragment = [
				'#version 300 es\n',
				'#define varying in',
				isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',
				isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',
				'#define gl_FragDepthEXT gl_FragDepth',
				'#define texture2D texture',
				'#define textureCube texture',
				'#define texture2DProj textureProj',
				'#define texture2DLodEXT textureLod',
				'#define texture2DProjLodEXT textureProjLod',
				'#define textureCubeLodEXT textureLod',
				'#define texture2DGradEXT textureGrad',
				'#define texture2DProjGradEXT textureProjGrad',
				'#define textureCubeGradEXT textureGrad'
			].join( '\n' ) + '\n' + prefixFragment;

		}

		var vertexGlsl = prefixVertex + vertexShader;
		var fragmentGlsl = prefixFragment + fragmentShader;

		// console.log( '*VERTEX*', vertexGlsl );
		// console.log( '*FRAGMENT*', fragmentGlsl );

		var glVertexShader = WebGLShader( gl, 35633, vertexGlsl );
		var glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );

		gl.attachShader( program, glVertexShader );
		gl.attachShader( program, glFragmentShader );

		// Force a particular attribute to index 0.

		if ( parameters.index0AttributeName !== undefined ) {

			gl.bindAttribLocation( program, 0, parameters.index0AttributeName );

		} else if ( parameters.morphTargets === true ) {

			// programs with morphTargets displace position out of attribute 0
			gl.bindAttribLocation( program, 0, 'position' );

		}

		gl.linkProgram( program );

		// check for link errors
		if ( renderer.debug.checkShaderErrors ) {

			var programLog = gl.getProgramInfoLog( program ).trim();
			var vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();
			var fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();

			var runnable = true;
			var haveDiagnostics = true;

			if ( gl.getProgramParameter( program, 35714 ) === false ) {

				runnable = false;

				var vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );
				var fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );

				console.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );

			} else if ( programLog !== '' ) {

				console.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );

			} else if ( vertexLog === '' || fragmentLog === '' ) {

				haveDiagnostics = false;

			}

			if ( haveDiagnostics ) {

				this.diagnostics = {

					runnable: runnable,

					programLog: programLog,

					vertexShader: {

						log: vertexLog,
						prefix: prefixVertex

					},

					fragmentShader: {

						log: fragmentLog,
						prefix: prefixFragment

					}

				};

			}

		}

		// clean up

		gl.detachShader( program, glVertexShader );
		gl.detachShader( program, glFragmentShader );

		gl.deleteShader( glVertexShader );
		gl.deleteShader( glFragmentShader );

		// set up caching for uniform locations

		var cachedUniforms;

		this.getUniforms = function () {

			if ( cachedUniforms === undefined ) {

				cachedUniforms = new WebGLUniforms( gl, program );

			}

			return cachedUniforms;

		};

		// set up caching for attribute locations

		var cachedAttributes;

		this.getAttributes = function () {

			if ( cachedAttributes === undefined ) {

				cachedAttributes = fetchAttributeLocations( gl, program );

			}

			return cachedAttributes;

		};

		// free resource

		this.destroy = function () {

			gl.deleteProgram( program );
			this.program = undefined;

		};

		//

		this.name = parameters.shaderName;
		this.id = programIdCount ++;
		this.cacheKey = cacheKey;
		this.usedTimes = 1;
		this.program = program;
		this.vertexShader = glVertexShader;
		this.fragmentShader = glFragmentShader;

		return this;

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLPrograms( renderer, extensions, capabilities ) {

		var programs = [];

		var isWebGL2 = capabilities.isWebGL2;
		var logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;
		var floatVertexTextures = capabilities.floatVertexTextures;
		var precision = capabilities.precision;
		var maxVertexUniforms = capabilities.maxVertexUniforms;
		var vertexTextures = capabilities.vertexTextures;

		var shaderIDs = {
			MeshDepthMaterial: 'depth',
			MeshDistanceMaterial: 'distanceRGBA',
			MeshNormalMaterial: 'normal',
			MeshBasicMaterial: 'basic',
			MeshLambertMaterial: 'lambert',
			MeshPhongMaterial: 'phong',
			MeshToonMaterial: 'toon',
			MeshStandardMaterial: 'physical',
			MeshPhysicalMaterial: 'physical',
			MeshMatcapMaterial: 'matcap',
			LineBasicMaterial: 'basic',
			LineDashedMaterial: 'dashed',
			PointsMaterial: 'points',
			ShadowMaterial: 'shadow',
			SpriteMaterial: 'sprite'
		};

		var parameterNames = [
			"precision", "isWebGL2", "supportsVertexTextures", "outputEncoding", "instancing",
			"map", "mapEncoding", "matcap", "matcapEncoding", "envMap", "envMapMode", "envMapEncoding", "envMapCubeUV",
			"lightMap", "lightMapEncoding", "aoMap", "emissiveMap", "emissiveMapEncoding", "bumpMap", "normalMap", "objectSpaceNormalMap", "tangentSpaceNormalMap", "clearcoatMap", "clearcoatRoughnessMap", "clearcoatNormalMap", "displacementMap", "specularMap",
			"roughnessMap", "metalnessMap", "gradientMap",
			"alphaMap", "combine", "vertexColors", "vertexTangents", "vertexUvs", "uvsVertexOnly", "fog", "useFog", "fogExp2",
			"flatShading", "sizeAttenuation", "logarithmicDepthBuffer", "skinning",
			"maxBones", "useVertexTexture", "morphTargets", "morphNormals",
			"maxMorphTargets", "maxMorphNormals", "premultipliedAlpha",
			"numDirLights", "numPointLights", "numSpotLights", "numHemiLights", "numRectAreaLights",
			"numDirLightShadows", "numPointLightShadows", "numSpotLightShadows",
			"shadowMapEnabled", "shadowMapType", "toneMapping", 'physicallyCorrectLights',
			"alphaTest", "doubleSided", "flipSided", "numClippingPlanes", "numClipIntersection", "depthPacking", "dithering",
			"sheen"
		];

		function getShaderObject( material, shaderID ) {

			var shaderobject;

			if ( shaderID ) {

				var shader = ShaderLib[ shaderID ];

				shaderobject = {
					name: material.type,
					uniforms: UniformsUtils.clone( shader.uniforms ),
					vertexShader: shader.vertexShader,
					fragmentShader: shader.fragmentShader
				};

			} else {

				shaderobject = {
					name: material.type,
					uniforms: material.uniforms,
					vertexShader: material.vertexShader,
					fragmentShader: material.fragmentShader
				};

			}

			return shaderobject;

		}

		function allocateBones( object ) {

			var skeleton = object.skeleton;
			var bones = skeleton.bones;

			if ( floatVertexTextures ) {

				return 1024;

			} else {

				// default for when object is not specified
				// ( for example when prebuilding shader to be used with multiple objects )
				//
				//  - leave some extra space for other uniforms
				//  - limit here is ANGLE's 254 max uniform vectors
				//    (up to 54 should be safe)

				var nVertexUniforms = maxVertexUniforms;
				var nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );

				var maxBones = Math.min( nVertexMatrices, bones.length );

				if ( maxBones < bones.length ) {

					console.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );
					return 0;

				}

				return maxBones;

			}

		}

		function getTextureEncodingFromMap( map ) {

			var encoding;

			if ( ! map ) {

				encoding = LinearEncoding;

			} else if ( map.isTexture ) {

				encoding = map.encoding;

			} else if ( map.isWebGLRenderTarget ) {

				console.warn( "THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead." );
				encoding = map.texture.encoding;

			}

			return encoding;

		}

		this.getParameters = function ( material, lights, shadows, scene, nClipPlanes, nClipIntersection, object ) {

			var fog = scene.fog;
			var environment = material.isMeshStandardMaterial ? scene.environment : null;

			var envMap = material.envMap || environment;

			var shaderID = shaderIDs[ material.type ];

			// heuristics to create shader parameters according to lights in the scene
			// (not to blow over maxLights budget)

			var maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;

			if ( material.precision !== null ) {

				precision = capabilities.getMaxPrecision( material.precision );

				if ( precision !== material.precision ) {

					console.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );

				}

			}

			var shaderobject = getShaderObject( material, shaderID );
			material.onBeforeCompile( shaderobject, renderer );

			var currentRenderTarget = renderer.getRenderTarget();

			var parameters = {

				isWebGL2: isWebGL2,

				shaderID: shaderID,
				shaderName: shaderobject.name,

				uniforms: shaderobject.uniforms,
				vertexShader: shaderobject.vertexShader,
				fragmentShader: shaderobject.fragmentShader,
				defines: material.defines,

				isRawShaderMaterial: material.isRawShaderMaterial,
				isShaderMaterial: material.isShaderMaterial,

				precision: precision,

				instancing: object.isInstancedMesh === true,

				supportsVertexTextures: vertexTextures,
				outputEncoding: ( currentRenderTarget !== null ) ? getTextureEncodingFromMap( currentRenderTarget.texture ) : renderer.outputEncoding,
				map: !! material.map,
				mapEncoding: getTextureEncodingFromMap( material.map ),
				matcap: !! material.matcap,
				matcapEncoding: getTextureEncodingFromMap( material.matcap ),
				envMap: !! envMap,
				envMapMode: envMap && envMap.mapping,
				envMapEncoding: getTextureEncodingFromMap( envMap ),
				envMapCubeUV: ( !! envMap ) && ( ( envMap.mapping === CubeUVReflectionMapping ) || ( envMap.mapping === CubeUVRefractionMapping ) ),
				lightMap: !! material.lightMap,
				lightMapEncoding: getTextureEncodingFromMap( material.lightMap ),
				aoMap: !! material.aoMap,
				emissiveMap: !! material.emissiveMap,
				emissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap ),
				bumpMap: !! material.bumpMap,
				normalMap: !! material.normalMap,
				objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,
				tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,
				clearcoatMap: !! material.clearcoatMap,
				clearcoatRoughnessMap: !! material.clearcoatRoughnessMap,
				clearcoatNormalMap: !! material.clearcoatNormalMap,
				displacementMap: !! material.displacementMap,
				roughnessMap: !! material.roughnessMap,
				metalnessMap: !! material.metalnessMap,
				specularMap: !! material.specularMap,
				alphaMap: !! material.alphaMap,

				gradientMap: !! material.gradientMap,

				sheen: !! material.sheen,

				combine: material.combine,

				vertexTangents: ( material.normalMap && material.vertexTangents ),
				vertexColors: material.vertexColors,
				vertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,
				uvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,

				fog: !! fog,
				useFog: material.fog,
				fogExp2: ( fog && fog.isFogExp2 ),

				flatShading: material.flatShading,

				sizeAttenuation: material.sizeAttenuation,
				logarithmicDepthBuffer: logarithmicDepthBuffer,

				skinning: material.skinning && maxBones > 0,
				maxBones: maxBones,
				useVertexTexture: floatVertexTextures,

				morphTargets: material.morphTargets,
				morphNormals: material.morphNormals,
				maxMorphTargets: renderer.maxMorphTargets,
				maxMorphNormals: renderer.maxMorphNormals,

				numDirLights: lights.directional.length,
				numPointLights: lights.point.length,
				numSpotLights: lights.spot.length,
				numRectAreaLights: lights.rectArea.length,
				numHemiLights: lights.hemi.length,

				numDirLightShadows: lights.directionalShadowMap.length,
				numPointLightShadows: lights.pointShadowMap.length,
				numSpotLightShadows: lights.spotShadowMap.length,

				numClippingPlanes: nClipPlanes,
				numClipIntersection: nClipIntersection,

				dithering: material.dithering,

				shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,
				shadowMapType: renderer.shadowMap.type,

				toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,
				physicallyCorrectLights: renderer.physicallyCorrectLights,

				premultipliedAlpha: material.premultipliedAlpha,

				alphaTest: material.alphaTest,
				doubleSided: material.side === DoubleSide,
				flipSided: material.side === BackSide,

				depthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false,

				index0AttributeName: material.index0AttributeName,

				extensionDerivatives: material.extensions && material.extensions.derivatives,
				extensionFragDepth: material.extensions && material.extensions.fragDepth,
				extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,
				extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,

				rendererExtensionFragDepth: isWebGL2 || extensions.get( 'EXT_frag_depth' ) !== null,
				rendererExtensionDrawBuffers: isWebGL2 || extensions.get( 'WEBGL_draw_buffers' ) !== null,
				rendererExtensionShaderTextureLod: isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) !== null,

				onBeforeCompile: material.onBeforeCompile

			};

			return parameters;

		};

		this.getProgramCacheKey = function ( parameters ) {

			var array = [];

			if ( parameters.shaderID ) {

				array.push( parameters.shaderID );

			} else {

				array.push( parameters.fragmentShader );
				array.push( parameters.vertexShader );

			}

			if ( parameters.defines !== undefined ) {

				for ( var name in parameters.defines ) {

					array.push( name );
					array.push( parameters.defines[ name ] );

				}

			}

			if ( parameters.isRawShaderMaterial === undefined ) {

				for ( var i = 0; i < parameterNames.length; i ++ ) {

					array.push( parameters[ parameterNames[ i ] ] );

				}

				array.push( renderer.outputEncoding );
				array.push( renderer.gammaFactor );

			}

			array.push( parameters.onBeforeCompile.toString() );

			return array.join();

		};

		this.acquireProgram = function ( parameters, cacheKey ) {

			var program;

			// Check if code has been already compiled
			for ( var p = 0, pl = programs.length; p < pl; p ++ ) {

				var preexistingProgram = programs[ p ];

				if ( preexistingProgram.cacheKey === cacheKey ) {

					program = preexistingProgram;
					++ program.usedTimes;

					break;

				}

			}

			if ( program === undefined ) {

				program = new WebGLProgram( renderer, cacheKey, parameters );
				programs.push( program );

			}

			return program;

		};

		this.releaseProgram = function ( program ) {

			if ( -- program.usedTimes === 0 ) {

				// Remove from unordered set
				var i = programs.indexOf( program );
				programs[ i ] = programs[ programs.length - 1 ];
				programs.pop();

				// Free WebGL resources
				program.destroy();

			}

		};

		// Exposed for resource monitoring & error feedback via renderer.info:
		this.programs = programs;

	}

	/**
	 * @author fordacious / fordacious.github.io
	 */

	function WebGLProperties() {

		var properties = new WeakMap();

		function get( object ) {

			var map = properties.get( object );

			if ( map === undefined ) {

				map = {};
				properties.set( object, map );

			}

			return map;

		}

		function remove( object ) {

			properties.delete( object );

		}

		function update( object, key, value ) {

			properties.get( object )[ key ] = value;

		}

		function dispose() {

			properties = new WeakMap();

		}

		return {
			get: get,
			remove: remove,
			update: update,
			dispose: dispose
		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function painterSortStable( a, b ) {

		if ( a.groupOrder !== b.groupOrder ) {

			return a.groupOrder - b.groupOrder;

		} else if ( a.renderOrder !== b.renderOrder ) {

			return a.renderOrder - b.renderOrder;

		} else if ( a.program !== b.program ) {

			return a.program.id - b.program.id;

		} else if ( a.material.id !== b.material.id ) {

			return a.material.id - b.material.id;

		} else if ( a.z !== b.z ) {

			return a.z - b.z;

		} else {

			return a.id - b.id;

		}

	}

	function reversePainterSortStable( a, b ) {

		if ( a.groupOrder !== b.groupOrder ) {

			return a.groupOrder - b.groupOrder;

		} else if ( a.renderOrder !== b.renderOrder ) {

			return a.renderOrder - b.renderOrder;

		} else if ( a.z !== b.z ) {

			return b.z - a.z;

		} else {

			return a.id - b.id;

		}

	}


	function WebGLRenderList() {

		var renderItems = [];
		var renderItemsIndex = 0;

		var opaque = [];
		var transparent = [];

		var defaultProgram = { id: - 1 };

		function init() {

			renderItemsIndex = 0;

			opaque.length = 0;
			transparent.length = 0;

		}

		function getNextRenderItem( object, geometry, material, groupOrder, z, group ) {

			var renderItem = renderItems[ renderItemsIndex ];

			if ( renderItem === undefined ) {

				renderItem = {
					id: object.id,
					object: object,
					geometry: geometry,
					material: material,
					program: material.program || defaultProgram,
					groupOrder: groupOrder,
					renderOrder: object.renderOrder,
					z: z,
					group: group
				};

				renderItems[ renderItemsIndex ] = renderItem;

			} else {

				renderItem.id = object.id;
				renderItem.object = object;
				renderItem.geometry = geometry;
				renderItem.material = material;
				renderItem.program = material.program || defaultProgram;
				renderItem.groupOrder = groupOrder;
				renderItem.renderOrder = object.renderOrder;
				renderItem.z = z;
				renderItem.group = group;

			}

			renderItemsIndex ++;

			return renderItem;

		}

		function push( object, geometry, material, groupOrder, z, group ) {

			var renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );

			( material.transparent === true ? transparent : opaque ).push( renderItem );

		}

		function unshift( object, geometry, material, groupOrder, z, group ) {

			var renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );

			( material.transparent === true ? transparent : opaque ).unshift( renderItem );

		}

		function sort( customOpaqueSort, customTransparentSort ) {

			if ( opaque.length > 1 ) { opaque.sort( customOpaqueSort || painterSortStable ); }
			if ( transparent.length > 1 ) { transparent.sort( customTransparentSort || reversePainterSortStable ); }

		}

		function finish() {

			// Clear references from inactive renderItems in the list

			for ( var i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {

				var renderItem = renderItems[ i ];

				if ( renderItem.id === null ) { break; }

				renderItem.id = null;
				renderItem.object = null;
				renderItem.geometry = null;
				renderItem.material = null;
				renderItem.program = null;
				renderItem.group = null;

			}

		}

		return {
			opaque: opaque,
			transparent: transparent,

			init: init,
			push: push,
			unshift: unshift,
			finish: finish,

			sort: sort
		};

	}

	function WebGLRenderLists() {

		var lists = new WeakMap();

		function onSceneDispose( event ) {

			var scene = event.target;

			scene.removeEventListener( 'dispose', onSceneDispose );

			lists.delete( scene );

		}

		function get( scene, camera ) {

			var cameras = lists.get( scene );
			var list;
			if ( cameras === undefined ) {

				list = new WebGLRenderList();
				lists.set( scene, new WeakMap() );
				lists.get( scene ).set( camera, list );

				scene.addEventListener( 'dispose', onSceneDispose );

			} else {

				list = cameras.get( camera );
				if ( list === undefined ) {

					list = new WebGLRenderList();
					cameras.set( camera, list );

				}

			}

			return list;

		}

		function dispose() {

			lists = new WeakMap();

		}

		return {
			get: get,
			dispose: dispose
		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function UniformsCache() {

		var lights = {};

		return {

			get: function ( light ) {

				if ( lights[ light.id ] !== undefined ) {

					return lights[ light.id ];

				}

				var uniforms;

				switch ( light.type ) {

					case 'DirectionalLight':
						uniforms = {
							direction: new Vector3(),
							color: new Color()
						};
						break;

					case 'SpotLight':
						uniforms = {
							position: new Vector3(),
							direction: new Vector3(),
							color: new Color(),
							distance: 0,
							coneCos: 0,
							penumbraCos: 0,
							decay: 0
						};
						break;

					case 'PointLight':
						uniforms = {
							position: new Vector3(),
							color: new Color(),
							distance: 0,
							decay: 0
						};
						break;

					case 'HemisphereLight':
						uniforms = {
							direction: new Vector3(),
							skyColor: new Color(),
							groundColor: new Color()
						};
						break;

					case 'RectAreaLight':
						uniforms = {
							color: new Color(),
							position: new Vector3(),
							halfWidth: new Vector3(),
							halfHeight: new Vector3()
						};
						break;

				}

				lights[ light.id ] = uniforms;

				return uniforms;

			}

		};

	}

	function ShadowUniformsCache() {

		var lights = {};

		return {

			get: function ( light ) {

				if ( lights[ light.id ] !== undefined ) {

					return lights[ light.id ];

				}

				var uniforms;

				switch ( light.type ) {

					case 'DirectionalLight':
						uniforms = {
							shadowBias: 0,
							shadowRadius: 1,
							shadowMapSize: new Vector2()
						};
						break;

					case 'SpotLight':
						uniforms = {
							shadowBias: 0,
							shadowRadius: 1,
							shadowMapSize: new Vector2()
						};
						break;

					case 'PointLight':
						uniforms = {
							shadowBias: 0,
							shadowRadius: 1,
							shadowMapSize: new Vector2(),
							shadowCameraNear: 1,
							shadowCameraFar: 1000
						};
						break;

					// TODO (abelnation): set RectAreaLight shadow uniforms

				}

				lights[ light.id ] = uniforms;

				return uniforms;

			}

		};

	}



	var nextVersion = 0;

	function shadowCastingLightsFirst( lightA, lightB ) {

		return ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );

	}

	function WebGLLights() {

		var cache = new UniformsCache();

		var shadowCache = ShadowUniformsCache();

		var state = {

			version: 0,

			hash: {
				directionalLength: - 1,
				pointLength: - 1,
				spotLength: - 1,
				rectAreaLength: - 1,
				hemiLength: - 1,

				numDirectionalShadows: - 1,
				numPointShadows: - 1,
				numSpotShadows: - 1
			},

			ambient: [ 0, 0, 0 ],
			probe: [],
			directional: [],
			directionalShadow: [],
			directionalShadowMap: [],
			directionalShadowMatrix: [],
			spot: [],
			spotShadow: [],
			spotShadowMap: [],
			spotShadowMatrix: [],
			rectArea: [],
			point: [],
			pointShadow: [],
			pointShadowMap: [],
			pointShadowMatrix: [],
			hemi: []

		};

		for ( var i = 0; i < 9; i ++ ) { state.probe.push( new Vector3() ); }

		var vector3 = new Vector3();
		var matrix4 = new Matrix4();
		var matrix42 = new Matrix4();

		function setup( lights, shadows, camera ) {

			var r = 0, g = 0, b = 0;

			for ( var i = 0; i < 9; i ++ ) { state.probe[ i ].set( 0, 0, 0 ); }

			var directionalLength = 0;
			var pointLength = 0;
			var spotLength = 0;
			var rectAreaLength = 0;
			var hemiLength = 0;

			var numDirectionalShadows = 0;
			var numPointShadows = 0;
			var numSpotShadows = 0;

			var viewMatrix = camera.matrixWorldInverse;

			lights.sort( shadowCastingLightsFirst );

			for ( var i = 0, l = lights.length; i < l; i ++ ) {

				var light = lights[ i ];

				var color = light.color;
				var intensity = light.intensity;
				var distance = light.distance;

				var shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;

				if ( light.isAmbientLight ) {

					r += color.r * intensity;
					g += color.g * intensity;
					b += color.b * intensity;

				} else if ( light.isLightProbe ) {

					for ( var j = 0; j < 9; j ++ ) {

						state.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );

					}

				} else if ( light.isDirectionalLight ) {

					var uniforms = cache.get( light );

					uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
					uniforms.direction.setFromMatrixPosition( light.matrixWorld );
					vector3.setFromMatrixPosition( light.target.matrixWorld );
					uniforms.direction.sub( vector3 );
					uniforms.direction.transformDirection( viewMatrix );

					if ( light.castShadow ) {

						var shadow = light.shadow;

						var shadowUniforms = shadowCache.get( light );

						shadowUniforms.shadowBias = shadow.bias;
						shadowUniforms.shadowRadius = shadow.radius;
						shadowUniforms.shadowMapSize = shadow.mapSize;

						state.directionalShadow[ directionalLength ] = shadowUniforms;
						state.directionalShadowMap[ directionalLength ] = shadowMap;
						state.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;

						numDirectionalShadows ++;

					}

					state.directional[ directionalLength ] = uniforms;

					directionalLength ++;

				} else if ( light.isSpotLight ) {

					var uniforms = cache.get( light );

					uniforms.position.setFromMatrixPosition( light.matrixWorld );
					uniforms.position.applyMatrix4( viewMatrix );

					uniforms.color.copy( color ).multiplyScalar( intensity );
					uniforms.distance = distance;

					uniforms.direction.setFromMatrixPosition( light.matrixWorld );
					vector3.setFromMatrixPosition( light.target.matrixWorld );
					uniforms.direction.sub( vector3 );
					uniforms.direction.transformDirection( viewMatrix );

					uniforms.coneCos = Math.cos( light.angle );
					uniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );
					uniforms.decay = light.decay;

					if ( light.castShadow ) {

						var shadow = light.shadow;

						var shadowUniforms = shadowCache.get( light );

						shadowUniforms.shadowBias = shadow.bias;
						shadowUniforms.shadowRadius = shadow.radius;
						shadowUniforms.shadowMapSize = shadow.mapSize;

						state.spotShadow[ spotLength ] = shadowUniforms;
						state.spotShadowMap[ spotLength ] = shadowMap;
						state.spotShadowMatrix[ spotLength ] = light.shadow.matrix;

						numSpotShadows ++;

					}

					state.spot[ spotLength ] = uniforms;

					spotLength ++;

				} else if ( light.isRectAreaLight ) {

					var uniforms = cache.get( light );

					// (a) intensity is the total visible light emitted
					//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );

					// (b) intensity is the brightness of the light
					uniforms.color.copy( color ).multiplyScalar( intensity );

					uniforms.position.setFromMatrixPosition( light.matrixWorld );
					uniforms.position.applyMatrix4( viewMatrix );

					// extract local rotation of light to derive width/height half vectors
					matrix42.identity();
					matrix4.copy( light.matrixWorld );
					matrix4.premultiply( viewMatrix );
					matrix42.extractRotation( matrix4 );

					uniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );
					uniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );

					uniforms.halfWidth.applyMatrix4( matrix42 );
					uniforms.halfHeight.applyMatrix4( matrix42 );

					// TODO (abelnation): RectAreaLight distance?
					// uniforms.distance = distance;

					state.rectArea[ rectAreaLength ] = uniforms;

					rectAreaLength ++;

				} else if ( light.isPointLight ) {

					var uniforms = cache.get( light );

					uniforms.position.setFromMatrixPosition( light.matrixWorld );
					uniforms.position.applyMatrix4( viewMatrix );

					uniforms.color.copy( light.color ).multiplyScalar( light.intensity );
					uniforms.distance = light.distance;
					uniforms.decay = light.decay;

					if ( light.castShadow ) {

						var shadow = light.shadow;

						var shadowUniforms = shadowCache.get( light );

						shadowUniforms.shadowBias = shadow.bias;
						shadowUniforms.shadowRadius = shadow.radius;
						shadowUniforms.shadowMapSize = shadow.mapSize;
						shadowUniforms.shadowCameraNear = shadow.camera.near;
						shadowUniforms.shadowCameraFar = shadow.camera.far;

						state.pointShadow[ pointLength ] = shadowUniforms;
						state.pointShadowMap[ pointLength ] = shadowMap;
						state.pointShadowMatrix[ pointLength ] = light.shadow.matrix;

						numPointShadows ++;

					}

					state.point[ pointLength ] = uniforms;

					pointLength ++;

				} else if ( light.isHemisphereLight ) {

					var uniforms = cache.get( light );

					uniforms.direction.setFromMatrixPosition( light.matrixWorld );
					uniforms.direction.transformDirection( viewMatrix );
					uniforms.direction.normalize();

					uniforms.skyColor.copy( light.color ).multiplyScalar( intensity );
					uniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );

					state.hemi[ hemiLength ] = uniforms;

					hemiLength ++;

				}

			}

			state.ambient[ 0 ] = r;
			state.ambient[ 1 ] = g;
			state.ambient[ 2 ] = b;

			var hash = state.hash;

			if ( hash.directionalLength !== directionalLength ||
				hash.pointLength !== pointLength ||
				hash.spotLength !== spotLength ||
				hash.rectAreaLength !== rectAreaLength ||
				hash.hemiLength !== hemiLength ||
				hash.numDirectionalShadows !== numDirectionalShadows ||
				hash.numPointShadows !== numPointShadows ||
				hash.numSpotShadows !== numSpotShadows ) {

				state.directional.length = directionalLength;
				state.spot.length = spotLength;
				state.rectArea.length = rectAreaLength;
				state.point.length = pointLength;
				state.hemi.length = hemiLength;

				state.directionalShadow.length = numDirectionalShadows;
				state.directionalShadowMap.length = numDirectionalShadows;
				state.pointShadow.length = numPointShadows;
				state.pointShadowMap.length = numPointShadows;
				state.spotShadow.length = numSpotShadows;
				state.spotShadowMap.length = numSpotShadows;
				state.directionalShadowMatrix.length = numDirectionalShadows;
				state.pointShadowMatrix.length = numPointShadows;
				state.spotShadowMatrix.length = numSpotShadows;

				hash.directionalLength = directionalLength;
				hash.pointLength = pointLength;
				hash.spotLength = spotLength;
				hash.rectAreaLength = rectAreaLength;
				hash.hemiLength = hemiLength;

				hash.numDirectionalShadows = numDirectionalShadows;
				hash.numPointShadows = numPointShadows;
				hash.numSpotShadows = numSpotShadows;

				state.version = nextVersion ++;

			}

		}

		return {
			setup: setup,
			state: state
		};

	}

	/**
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	function WebGLRenderState() {

		var lights = new WebGLLights();

		var lightsArray = [];
		var shadowsArray = [];

		function init() {

			lightsArray.length = 0;
			shadowsArray.length = 0;

		}

		function pushLight( light ) {

			lightsArray.push( light );

		}

		function pushShadow( shadowLight ) {

			shadowsArray.push( shadowLight );

		}

		function setupLights( camera ) {

			lights.setup( lightsArray, shadowsArray, camera );

		}

		var state = {
			lightsArray: lightsArray,
			shadowsArray: shadowsArray,

			lights: lights
		};

		return {
			init: init,
			state: state,
			setupLights: setupLights,

			pushLight: pushLight,
			pushShadow: pushShadow
		};

	}

	function WebGLRenderStates() {

		var renderStates = new WeakMap();

		function onSceneDispose( event ) {

			var scene = event.target;

			scene.removeEventListener( 'dispose', onSceneDispose );

			renderStates.delete( scene );

		}

		function get( scene, camera ) {

			var renderState;

			if ( renderStates.has( scene ) === false ) {

				renderState = new WebGLRenderState();
				renderStates.set( scene, new WeakMap() );
				renderStates.get( scene ).set( camera, renderState );

				scene.addEventListener( 'dispose', onSceneDispose );

			} else {

				if ( renderStates.get( scene ).has( camera ) === false ) {

					renderState = new WebGLRenderState();
					renderStates.get( scene ).set( camera, renderState );

				} else {

					renderState = renderStates.get( scene ).get( camera );

				}

			}

			return renderState;

		}

		function dispose() {

			renderStates = new WeakMap();

		}

		return {
			get: get,
			dispose: dispose
		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 * @author bhouston / https://clara.io
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * parameters = {
	 *
	 *  opacity: <float>,
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>
	 * }
	 */

	function MeshDepthMaterial( parameters ) {

		Material.call( this );

		this.type = 'MeshDepthMaterial';

		this.depthPacking = BasicDepthPacking;

		this.skinning = false;
		this.morphTargets = false;

		this.map = null;

		this.alphaMap = null;

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false;

		this.setValues( parameters );

	}

	MeshDepthMaterial.prototype = Object.create( Material.prototype );
	MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;

	MeshDepthMaterial.prototype.isMeshDepthMaterial = true;

	MeshDepthMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.depthPacking = source.depthPacking;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		return this;

	};

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * parameters = {
	 *
	 *  referencePosition: <float>,
	 *  nearDistance: <float>,
	 *  farDistance: <float>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>
	 *
	 * }
	 */

	function MeshDistanceMaterial( parameters ) {

		Material.call( this );

		this.type = 'MeshDistanceMaterial';

		this.referencePosition = new Vector3();
		this.nearDistance = 1;
		this.farDistance = 1000;

		this.skinning = false;
		this.morphTargets = false;

		this.map = null;

		this.alphaMap = null;

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.fog = false;

		this.setValues( parameters );

	}

	MeshDistanceMaterial.prototype = Object.create( Material.prototype );
	MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;

	MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;

	MeshDistanceMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.referencePosition.copy( source.referencePosition );
		this.nearDistance = source.nearDistance;
		this.farDistance = source.farDistance;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		return this;

	};

	var vsm_frag = "uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n  float mean = 0.0;\n  float squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n    #ifdef HORIZONAL_PASS\n      vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n      mean += distribution.x;\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n    #else\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\n      mean += depth;\n      squared_mean += depth * depth;\n    #endif\n  }\n  mean = mean * HALF_SAMPLE_RATE;\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\n  float std_dev = sqrt( squared_mean - mean * mean );\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}";

	var vsm_vert = "void main() {\n\tgl_Position = vec4( position, 1.0 );\n}";

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLShadowMap( _renderer, _objects, maxTextureSize ) {

		var _frustum = new Frustum(),

			_shadowMapSize = new Vector2(),
			_viewportSize = new Vector2(),

			_viewport = new Vector4(),

			_depthMaterials = [],
			_distanceMaterials = [],

			_materialCache = {};

		var shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };

		var shadowMaterialVertical = new ShaderMaterial( {

			defines: {
				SAMPLE_RATE: 2.0 / 8.0,
				HALF_SAMPLE_RATE: 1.0 / 8.0
			},

			uniforms: {
				shadow_pass: { value: null },
				resolution: { value: new Vector2() },
				radius: { value: 4.0 }
			},

			vertexShader: vsm_vert,

			fragmentShader: vsm_frag

		} );

		var shadowMaterialHorizonal = shadowMaterialVertical.clone();
		shadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;

		var fullScreenTri = new BufferGeometry();
		fullScreenTri.setAttribute(
			"position",
			new BufferAttribute(
				new Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),
				3
			)
		);

		var fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );

		var scope = this;

		this.enabled = false;

		this.autoUpdate = true;
		this.needsUpdate = false;

		this.type = PCFShadowMap;

		this.render = function ( lights, scene, camera ) {

			if ( scope.enabled === false ) { return; }
			if ( scope.autoUpdate === false && scope.needsUpdate === false ) { return; }

			if ( lights.length === 0 ) { return; }

			var currentRenderTarget = _renderer.getRenderTarget();
			var activeCubeFace = _renderer.getActiveCubeFace();
			var activeMipmapLevel = _renderer.getActiveMipmapLevel();

			var _state = _renderer.state;

			// Set GL state for depth map.
			_state.setBlending( NoBlending );
			_state.buffers.color.setClear( 1, 1, 1, 1 );
			_state.buffers.depth.setTest( true );
			_state.setScissorTest( false );

			// render depth map

			for ( var i = 0, il = lights.length; i < il; i ++ ) {

				var light = lights[ i ];
				var shadow = light.shadow;

				if ( shadow === undefined ) {

					console.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );
					continue;

				}

				_shadowMapSize.copy( shadow.mapSize );

				var shadowFrameExtents = shadow.getFrameExtents();

				_shadowMapSize.multiply( shadowFrameExtents );

				_viewportSize.copy( shadow.mapSize );

				if ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {

					console.warn( 'THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing' );

					if ( _shadowMapSize.x > maxTextureSize ) {

						_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );
						_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;
						shadow.mapSize.x = _viewportSize.x;

					}

					if ( _shadowMapSize.y > maxTextureSize ) {

						_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );
						_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;
						shadow.mapSize.y = _viewportSize.y;

					}

				}

				if ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {

					var pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };

					shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
					shadow.map.texture.name = light.name + ".shadowMap";

					shadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );

					shadow.camera.updateProjectionMatrix();

				}

				if ( shadow.map === null ) {

					var pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };

					shadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );
					shadow.map.texture.name = light.name + ".shadowMap";

					shadow.camera.updateProjectionMatrix();

				}

				_renderer.setRenderTarget( shadow.map );
				_renderer.clear();

				var viewportCount = shadow.getViewportCount();

				for ( var vp = 0; vp < viewportCount; vp ++ ) {

					var viewport = shadow.getViewport( vp );

					_viewport.set(
						_viewportSize.x * viewport.x,
						_viewportSize.y * viewport.y,
						_viewportSize.x * viewport.z,
						_viewportSize.y * viewport.w
					);

					_state.viewport( _viewport );

					shadow.updateMatrices( light, vp );

					_frustum = shadow.getFrustum();

					renderObject( scene, camera, shadow.camera, light, this.type );

				}

				// do blur pass for VSM

				if ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {

					VSMPass( shadow, camera );

				}

			}

			scope.needsUpdate = false;

			_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );

		};

		function VSMPass( shadow, camera ) {

			var geometry = _objects.update( fullScreenMesh );

			// vertical pass

			shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;
			shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;
			shadowMaterialVertical.uniforms.radius.value = shadow.radius;
			_renderer.setRenderTarget( shadow.mapPass );
			_renderer.clear();
			_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );

			// horizonal pass

			shadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;
			shadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;
			shadowMaterialHorizonal.uniforms.radius.value = shadow.radius;
			_renderer.setRenderTarget( shadow.map );
			_renderer.clear();
			_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );

		}

		function getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {

			var index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;

			var material = _depthMaterials[ index ];

			if ( material === undefined ) {

				material = new MeshDepthMaterial( {

					depthPacking: RGBADepthPacking,

					morphTargets: useMorphing,
					skinning: useSkinning

				} );

				_depthMaterials[ index ] = material;

			}

			return material;

		}

		function getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {

			var index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;

			var material = _distanceMaterials[ index ];

			if ( material === undefined ) {

				material = new MeshDistanceMaterial( {

					morphTargets: useMorphing,
					skinning: useSkinning

				} );

				_distanceMaterials[ index ] = material;

			}

			return material;

		}

		function getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {

			var geometry = object.geometry;

			var result = null;

			var getMaterialVariant = getDepthMaterialVariant;
			var customMaterial = object.customDepthMaterial;

			if ( light.isPointLight === true ) {

				getMaterialVariant = getDistanceMaterialVariant;
				customMaterial = object.customDistanceMaterial;

			}

			if ( customMaterial === undefined ) {

				var useMorphing = false;

				if ( material.morphTargets === true ) {

					if ( geometry.isBufferGeometry === true ) {

						useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;

					} else if ( geometry.isGeometry === true ) {

						useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;

					}

				}

				var useSkinning = false;

				if ( object.isSkinnedMesh === true ) {

					if ( material.skinning === true ) {

						useSkinning = true;

					} else {

						console.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );

					}

				}

				var useInstancing = object.isInstancedMesh === true;

				result = getMaterialVariant( useMorphing, useSkinning, useInstancing );

			} else {

				result = customMaterial;

			}

			if ( _renderer.localClippingEnabled &&
					material.clipShadows === true &&
					material.clippingPlanes.length !== 0 ) {

				// in this case we need a unique material instance reflecting the
				// appropriate state

				var keyA = result.uuid, keyB = material.uuid;

				var materialsForVariant = _materialCache[ keyA ];

				if ( materialsForVariant === undefined ) {

					materialsForVariant = {};
					_materialCache[ keyA ] = materialsForVariant;

				}

				var cachedMaterial = materialsForVariant[ keyB ];

				if ( cachedMaterial === undefined ) {

					cachedMaterial = result.clone();
					materialsForVariant[ keyB ] = cachedMaterial;

				}

				result = cachedMaterial;

			}

			result.visible = material.visible;
			result.wireframe = material.wireframe;

			if ( type === VSMShadowMap ) {

				result.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;

			} else {

				result.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];

			}

			result.clipShadows = material.clipShadows;
			result.clippingPlanes = material.clippingPlanes;
			result.clipIntersection = material.clipIntersection;

			result.wireframeLinewidth = material.wireframeLinewidth;
			result.linewidth = material.linewidth;

			if ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {

				result.referencePosition.setFromMatrixPosition( light.matrixWorld );
				result.nearDistance = shadowCameraNear;
				result.farDistance = shadowCameraFar;

			}

			return result;

		}

		function renderObject( object, camera, shadowCamera, light, type ) {

			if ( object.visible === false ) { return; }

			var visible = object.layers.test( camera.layers );

			if ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {

				if ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {

					object.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );

					var geometry = _objects.update( object );
					var material = object.material;

					if ( Array.isArray( material ) ) {

						var groups = geometry.groups;

						for ( var k = 0, kl = groups.length; k < kl; k ++ ) {

							var group = groups[ k ];
							var groupMaterial = material[ group.materialIndex ];

							if ( groupMaterial && groupMaterial.visible ) {

								var depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );

								_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );

							}

						}

					} else if ( material.visible ) {

						var depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );

						_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );

					}

				}

			}

			var children = object.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				renderObject( children[ i ], camera, shadowCamera, light, type );

			}

		}

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLState( gl, extensions, capabilities ) {

		var isWebGL2 = capabilities.isWebGL2;

		function ColorBuffer() {

			var locked = false;

			var color = new Vector4();
			var currentColorMask = null;
			var currentColorClear = new Vector4( 0, 0, 0, 0 );

			return {

				setMask: function ( colorMask ) {

					if ( currentColorMask !== colorMask && ! locked ) {

						gl.colorMask( colorMask, colorMask, colorMask, colorMask );
						currentColorMask = colorMask;

					}

				},

				setLocked: function ( lock ) {

					locked = lock;

				},

				setClear: function ( r, g, b, a, premultipliedAlpha ) {

					if ( premultipliedAlpha === true ) {

						r *= a; g *= a; b *= a;

					}

					color.set( r, g, b, a );

					if ( currentColorClear.equals( color ) === false ) {

						gl.clearColor( r, g, b, a );
						currentColorClear.copy( color );

					}

				},

				reset: function () {

					locked = false;

					currentColorMask = null;
					currentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state

				}

			};

		}

		function DepthBuffer() {

			var locked = false;

			var currentDepthMask = null;
			var currentDepthFunc = null;
			var currentDepthClear = null;

			return {

				setTest: function ( depthTest ) {

					if ( depthTest ) {

						enable( 2929 );

					} else {

						disable( 2929 );

					}

				},

				setMask: function ( depthMask ) {

					if ( currentDepthMask !== depthMask && ! locked ) {

						gl.depthMask( depthMask );
						currentDepthMask = depthMask;

					}

				},

				setFunc: function ( depthFunc ) {

					if ( currentDepthFunc !== depthFunc ) {

						if ( depthFunc ) {

							switch ( depthFunc ) {

								case NeverDepth:

									gl.depthFunc( 512 );
									break;

								case AlwaysDepth:

									gl.depthFunc( 519 );
									break;

								case LessDepth:

									gl.depthFunc( 513 );
									break;

								case LessEqualDepth:

									gl.depthFunc( 515 );
									break;

								case EqualDepth:

									gl.depthFunc( 514 );
									break;

								case GreaterEqualDepth:

									gl.depthFunc( 518 );
									break;

								case GreaterDepth:

									gl.depthFunc( 516 );
									break;

								case NotEqualDepth:

									gl.depthFunc( 517 );
									break;

								default:

									gl.depthFunc( 515 );

							}

						} else {

							gl.depthFunc( 515 );

						}

						currentDepthFunc = depthFunc;

					}

				},

				setLocked: function ( lock ) {

					locked = lock;

				},

				setClear: function ( depth ) {

					if ( currentDepthClear !== depth ) {

						gl.clearDepth( depth );
						currentDepthClear = depth;

					}

				},

				reset: function () {

					locked = false;

					currentDepthMask = null;
					currentDepthFunc = null;
					currentDepthClear = null;

				}

			};

		}

		function StencilBuffer() {

			var locked = false;

			var currentStencilMask = null;
			var currentStencilFunc = null;
			var currentStencilRef = null;
			var currentStencilFuncMask = null;
			var currentStencilFail = null;
			var currentStencilZFail = null;
			var currentStencilZPass = null;
			var currentStencilClear = null;

			return {

				setTest: function ( stencilTest ) {

					if ( ! locked ) {

						if ( stencilTest ) {

							enable( 2960 );

						} else {

							disable( 2960 );

						}

					}

				},

				setMask: function ( stencilMask ) {

					if ( currentStencilMask !== stencilMask && ! locked ) {

						gl.stencilMask( stencilMask );
						currentStencilMask = stencilMask;

					}

				},

				setFunc: function ( stencilFunc, stencilRef, stencilMask ) {

					if ( currentStencilFunc !== stencilFunc ||
					     currentStencilRef 	!== stencilRef 	||
					     currentStencilFuncMask !== stencilMask ) {

						gl.stencilFunc( stencilFunc, stencilRef, stencilMask );

						currentStencilFunc = stencilFunc;
						currentStencilRef = stencilRef;
						currentStencilFuncMask = stencilMask;

					}

				},

				setOp: function ( stencilFail, stencilZFail, stencilZPass ) {

					if ( currentStencilFail	 !== stencilFail 	||
					     currentStencilZFail !== stencilZFail ||
					     currentStencilZPass !== stencilZPass ) {

						gl.stencilOp( stencilFail, stencilZFail, stencilZPass );

						currentStencilFail = stencilFail;
						currentStencilZFail = stencilZFail;
						currentStencilZPass = stencilZPass;

					}

				},

				setLocked: function ( lock ) {

					locked = lock;

				},

				setClear: function ( stencil ) {

					if ( currentStencilClear !== stencil ) {

						gl.clearStencil( stencil );
						currentStencilClear = stencil;

					}

				},

				reset: function () {

					locked = false;

					currentStencilMask = null;
					currentStencilFunc = null;
					currentStencilRef = null;
					currentStencilFuncMask = null;
					currentStencilFail = null;
					currentStencilZFail = null;
					currentStencilZPass = null;
					currentStencilClear = null;

				}

			};

		}

		//

		var colorBuffer = new ColorBuffer();
		var depthBuffer = new DepthBuffer();
		var stencilBuffer = new StencilBuffer();

		var maxVertexAttributes = gl.getParameter( 34921 );
		var newAttributes = new Uint8Array( maxVertexAttributes );
		var enabledAttributes = new Uint8Array( maxVertexAttributes );
		var attributeDivisors = new Uint8Array( maxVertexAttributes );

		var enabledCapabilities = {};

		var currentProgram = null;

		var currentBlendingEnabled = null;
		var currentBlending = null;
		var currentBlendEquation = null;
		var currentBlendSrc = null;
		var currentBlendDst = null;
		var currentBlendEquationAlpha = null;
		var currentBlendSrcAlpha = null;
		var currentBlendDstAlpha = null;
		var currentPremultipledAlpha = false;

		var currentFlipSided = null;
		var currentCullFace = null;

		var currentLineWidth = null;

		var currentPolygonOffsetFactor = null;
		var currentPolygonOffsetUnits = null;

		var maxTextures = gl.getParameter( 35661 );

		var lineWidthAvailable = false;
		var version = 0;
		var glVersion = gl.getParameter( 7938 );

		if ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {

			version = parseFloat( /^WebGL\ ([0-9])/.exec( glVersion )[ 1 ] );
			lineWidthAvailable = ( version >= 1.0 );

		} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {

			version = parseFloat( /^OpenGL\ ES\ ([0-9])/.exec( glVersion )[ 1 ] );
			lineWidthAvailable = ( version >= 2.0 );

		}

		var currentTextureSlot = null;
		var currentBoundTextures = {};

		var currentScissor = new Vector4();
		var currentViewport = new Vector4();

		function createTexture( type, target, count ) {

			var data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.
			var texture = gl.createTexture();

			gl.bindTexture( type, texture );
			gl.texParameteri( type, 10241, 9728 );
			gl.texParameteri( type, 10240, 9728 );

			for ( var i = 0; i < count; i ++ ) {

				gl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );

			}

			return texture;

		}

		var emptyTextures = {};
		emptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );
		emptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );

		// init

		colorBuffer.setClear( 0, 0, 0, 1 );
		depthBuffer.setClear( 1 );
		stencilBuffer.setClear( 0 );

		enable( 2929 );
		depthBuffer.setFunc( LessEqualDepth );

		setFlipSided( false );
		setCullFace( CullFaceBack );
		enable( 2884 );

		setBlending( NoBlending );

		//

		function initAttributes() {

			for ( var i = 0, l = newAttributes.length; i < l; i ++ ) {

				newAttributes[ i ] = 0;

			}

		}

		function enableAttribute( attribute ) {

			enableAttributeAndDivisor( attribute, 0 );

		}

		function enableAttributeAndDivisor( attribute, meshPerAttribute ) {

			newAttributes[ attribute ] = 1;

			if ( enabledAttributes[ attribute ] === 0 ) {

				gl.enableVertexAttribArray( attribute );
				enabledAttributes[ attribute ] = 1;

			}

			if ( attributeDivisors[ attribute ] !== meshPerAttribute ) {

				var extension = isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );

				extension[ isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );
				attributeDivisors[ attribute ] = meshPerAttribute;

			}

		}

		function disableUnusedAttributes() {

			for ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {

				if ( enabledAttributes[ i ] !== newAttributes[ i ] ) {

					gl.disableVertexAttribArray( i );
					enabledAttributes[ i ] = 0;

				}

			}

		}

		function enable( id ) {

			if ( enabledCapabilities[ id ] !== true ) {

				gl.enable( id );
				enabledCapabilities[ id ] = true;

			}

		}

		function disable( id ) {

			if ( enabledCapabilities[ id ] !== false ) {

				gl.disable( id );
				enabledCapabilities[ id ] = false;

			}

		}

		function useProgram( program ) {

			if ( currentProgram !== program ) {

				gl.useProgram( program );

				currentProgram = program;

				return true;

			}

			return false;

		}

		var equationToGL = {};
		equationToGL[ AddEquation ] = 32774;
		equationToGL[ SubtractEquation ] = 32778;
		equationToGL[ ReverseSubtractEquation ] = 32779;

		if ( isWebGL2 ) {

			equationToGL[ MinEquation ] = 32775;
			equationToGL[ MaxEquation ] = 32776;

		} else {

			var extension = extensions.get( 'EXT_blend_minmax' );

			if ( extension !== null ) {

				equationToGL[ MinEquation ] = extension.MIN_EXT;
				equationToGL[ MaxEquation ] = extension.MAX_EXT;

			}

		}

		var factorToGL = {};
		factorToGL[ ZeroFactor ] = 0;
		factorToGL[ OneFactor ] = 1;
		factorToGL[ SrcColorFactor ] = 768;
		factorToGL[ SrcAlphaFactor ] = 770;
		factorToGL[ SrcAlphaSaturateFactor ] = 776;
		factorToGL[ DstColorFactor ] = 774;
		factorToGL[ DstAlphaFactor ] = 772;
		factorToGL[ OneMinusSrcColorFactor ] = 769;
		factorToGL[ OneMinusSrcAlphaFactor ] = 771;
		factorToGL[ OneMinusDstColorFactor ] = 775;
		factorToGL[ OneMinusDstAlphaFactor ] = 773;

		function setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {

			if ( blending === NoBlending ) {

				if ( currentBlendingEnabled ) {

					disable( 3042 );
					currentBlendingEnabled = false;

				}

				return;

			}

			if ( ! currentBlendingEnabled ) {

				enable( 3042 );
				currentBlendingEnabled = true;

			}

			if ( blending !== CustomBlending ) {

				if ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {

					if ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {

						gl.blendEquation( 32774 );

						currentBlendEquation = AddEquation;
						currentBlendEquationAlpha = AddEquation;

					}

					if ( premultipliedAlpha ) {

						switch ( blending ) {

							case NormalBlending:
								gl.blendFuncSeparate( 1, 771, 1, 771 );
								break;

							case AdditiveBlending:
								gl.blendFunc( 1, 1 );
								break;

							case SubtractiveBlending:
								gl.blendFuncSeparate( 0, 0, 769, 771 );
								break;

							case MultiplyBlending:
								gl.blendFuncSeparate( 0, 768, 0, 770 );
								break;

							default:
								console.error( 'THREE.WebGLState: Invalid blending: ', blending );
								break;

						}

					} else {

						switch ( blending ) {

							case NormalBlending:
								gl.blendFuncSeparate( 770, 771, 1, 771 );
								break;

							case AdditiveBlending:
								gl.blendFunc( 770, 1 );
								break;

							case SubtractiveBlending:
								gl.blendFunc( 0, 769 );
								break;

							case MultiplyBlending:
								gl.blendFunc( 0, 768 );
								break;

							default:
								console.error( 'THREE.WebGLState: Invalid blending: ', blending );
								break;

						}

					}

					currentBlendSrc = null;
					currentBlendDst = null;
					currentBlendSrcAlpha = null;
					currentBlendDstAlpha = null;

					currentBlending = blending;
					currentPremultipledAlpha = premultipliedAlpha;

				}

				return;

			}

			// custom blending

			blendEquationAlpha = blendEquationAlpha || blendEquation;
			blendSrcAlpha = blendSrcAlpha || blendSrc;
			blendDstAlpha = blendDstAlpha || blendDst;

			if ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {

				gl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );

				currentBlendEquation = blendEquation;
				currentBlendEquationAlpha = blendEquationAlpha;

			}

			if ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {

				gl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );

				currentBlendSrc = blendSrc;
				currentBlendDst = blendDst;
				currentBlendSrcAlpha = blendSrcAlpha;
				currentBlendDstAlpha = blendDstAlpha;

			}

			currentBlending = blending;
			currentPremultipledAlpha = null;

		}

		function setMaterial( material, frontFaceCW ) {

			material.side === DoubleSide
				? disable( 2884 )
				: enable( 2884 );

			var flipSided = ( material.side === BackSide );
			if ( frontFaceCW ) { flipSided = ! flipSided; }

			setFlipSided( flipSided );

			( material.blending === NormalBlending && material.transparent === false )
				? setBlending( NoBlending )
				: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );

			depthBuffer.setFunc( material.depthFunc );
			depthBuffer.setTest( material.depthTest );
			depthBuffer.setMask( material.depthWrite );
			colorBuffer.setMask( material.colorWrite );

			var stencilWrite = material.stencilWrite;
			stencilBuffer.setTest( stencilWrite );
			if ( stencilWrite ) {

				stencilBuffer.setMask( material.stencilWriteMask );
				stencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );
				stencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );

			}

			setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );

		}

		//

		function setFlipSided( flipSided ) {

			if ( currentFlipSided !== flipSided ) {

				if ( flipSided ) {

					gl.frontFace( 2304 );

				} else {

					gl.frontFace( 2305 );

				}

				currentFlipSided = flipSided;

			}

		}

		function setCullFace( cullFace ) {

			if ( cullFace !== CullFaceNone ) {

				enable( 2884 );

				if ( cullFace !== currentCullFace ) {

					if ( cullFace === CullFaceBack ) {

						gl.cullFace( 1029 );

					} else if ( cullFace === CullFaceFront ) {

						gl.cullFace( 1028 );

					} else {

						gl.cullFace( 1032 );

					}

				}

			} else {

				disable( 2884 );

			}

			currentCullFace = cullFace;

		}

		function setLineWidth( width ) {

			if ( width !== currentLineWidth ) {

				if ( lineWidthAvailable ) { gl.lineWidth( width ); }

				currentLineWidth = width;

			}

		}

		function setPolygonOffset( polygonOffset, factor, units ) {

			if ( polygonOffset ) {

				enable( 32823 );

				if ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {

					gl.polygonOffset( factor, units );

					currentPolygonOffsetFactor = factor;
					currentPolygonOffsetUnits = units;

				}

			} else {

				disable( 32823 );

			}

		}

		function setScissorTest( scissorTest ) {

			if ( scissorTest ) {

				enable( 3089 );

			} else {

				disable( 3089 );

			}

		}

		// texture

		function activeTexture( webglSlot ) {

			if ( webglSlot === undefined ) { webglSlot = 33984 + maxTextures - 1; }

			if ( currentTextureSlot !== webglSlot ) {

				gl.activeTexture( webglSlot );
				currentTextureSlot = webglSlot;

			}

		}

		function bindTexture( webglType, webglTexture ) {

			if ( currentTextureSlot === null ) {

				activeTexture();

			}

			var boundTexture = currentBoundTextures[ currentTextureSlot ];

			if ( boundTexture === undefined ) {

				boundTexture = { type: undefined, texture: undefined };
				currentBoundTextures[ currentTextureSlot ] = boundTexture;

			}

			if ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {

				gl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );

				boundTexture.type = webglType;
				boundTexture.texture = webglTexture;

			}

		}

		function unbindTexture() {

			var boundTexture = currentBoundTextures[ currentTextureSlot ];

			if ( boundTexture !== undefined && boundTexture.type !== undefined ) {

				gl.bindTexture( boundTexture.type, null );

				boundTexture.type = undefined;
				boundTexture.texture = undefined;

			}

		}

		function compressedTexImage2D() {

			try {

				gl.compressedTexImage2D.apply( gl, arguments );

			} catch ( error ) {

				console.error( 'THREE.WebGLState:', error );

			}

		}

		function texImage2D() {

			try {

				gl.texImage2D.apply( gl, arguments );

			} catch ( error ) {

				console.error( 'THREE.WebGLState:', error );

			}

		}

		function texImage3D() {

			try {

				gl.texImage3D.apply( gl, arguments );

			} catch ( error ) {

				console.error( 'THREE.WebGLState:', error );

			}

		}

		//

		function scissor( scissor ) {

			if ( currentScissor.equals( scissor ) === false ) {

				gl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );
				currentScissor.copy( scissor );

			}

		}

		function viewport( viewport ) {

			if ( currentViewport.equals( viewport ) === false ) {

				gl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );
				currentViewport.copy( viewport );

			}

		}

		//

		function reset() {

			for ( var i = 0; i < enabledAttributes.length; i ++ ) {

				if ( enabledAttributes[ i ] === 1 ) {

					gl.disableVertexAttribArray( i );
					enabledAttributes[ i ] = 0;

				}

			}

			enabledCapabilities = {};

			currentTextureSlot = null;
			currentBoundTextures = {};

			currentProgram = null;

			currentBlending = null;

			currentFlipSided = null;
			currentCullFace = null;

			colorBuffer.reset();
			depthBuffer.reset();
			stencilBuffer.reset();

		}

		return {

			buffers: {
				color: colorBuffer,
				depth: depthBuffer,
				stencil: stencilBuffer
			},

			initAttributes: initAttributes,
			enableAttribute: enableAttribute,
			enableAttributeAndDivisor: enableAttributeAndDivisor,
			disableUnusedAttributes: disableUnusedAttributes,
			enable: enable,
			disable: disable,

			useProgram: useProgram,

			setBlending: setBlending,
			setMaterial: setMaterial,

			setFlipSided: setFlipSided,
			setCullFace: setCullFace,

			setLineWidth: setLineWidth,
			setPolygonOffset: setPolygonOffset,

			setScissorTest: setScissorTest,

			activeTexture: activeTexture,
			bindTexture: bindTexture,
			unbindTexture: unbindTexture,
			compressedTexImage2D: compressedTexImage2D,
			texImage2D: texImage2D,
			texImage3D: texImage3D,

			scissor: scissor,
			viewport: viewport,

			reset: reset

		};

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {

		var isWebGL2 = capabilities.isWebGL2;
		var maxTextures = capabilities.maxTextures;
		var maxCubemapSize = capabilities.maxCubemapSize;
		var maxTextureSize = capabilities.maxTextureSize;
		var maxSamples = capabilities.maxSamples;

		var _videoTextures = new WeakMap();
		var _canvas;

		// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,
		// also OffscreenCanvas.getContext("webgl"), but not OffscreenCanvas.getContext("2d")!
		// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).

		var useOffscreenCanvas = false;

		try {

			useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'
				&& ( new OffscreenCanvas( 1, 1 ).getContext( "2d" ) ) !== null;

		} catch ( err ) {

			// Ignore any errors

		}

		function createCanvas( width, height ) {

			// Use OffscreenCanvas when available. Specially needed in web workers

			return useOffscreenCanvas ?
				new OffscreenCanvas( width, height ) :
				document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );

		}

		function resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {

			var scale = 1;

			// handle case if texture exceeds max size

			if ( image.width > maxSize || image.height > maxSize ) {

				scale = maxSize / Math.max( image.width, image.height );

			}

			// only perform resize if necessary

			if ( scale < 1 || needsPowerOfTwo === true ) {

				// only perform resize for certain image types

				if ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||
					( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||
					( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {

					var floor = needsPowerOfTwo ? MathUtils.floorPowerOfTwo : Math.floor;

					var width = floor( scale * image.width );
					var height = floor( scale * image.height );

					if ( _canvas === undefined ) { _canvas = createCanvas( width, height ); }

					// cube textures can't reuse the same canvas

					var canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;

					canvas.width = width;
					canvas.height = height;

					var context = canvas.getContext( '2d' );
					context.drawImage( image, 0, 0, width, height );

					console.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );

					return canvas;

				} else {

					if ( 'data' in image ) {

						console.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );

					}

					return image;

				}

			}

			return image;

		}

		function isPowerOfTwo( image ) {

			return MathUtils.isPowerOfTwo( image.width ) && MathUtils.isPowerOfTwo( image.height );

		}

		function textureNeedsPowerOfTwo( texture ) {

			if ( isWebGL2 ) { return false; }

			return ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||
				( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );

		}

		function textureNeedsGenerateMipmaps( texture, supportsMips ) {

			return texture.generateMipmaps && supportsMips &&
				texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;

		}

		function generateMipmap( target, texture, width, height ) {

			_gl.generateMipmap( target );

			var textureProperties = properties.get( texture );

			// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11
			textureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;

		}

		function getInternalFormat( internalFormatName, glFormat, glType ) {

			if ( isWebGL2 === false ) { return glFormat; }

			if ( internalFormatName !== null ) {

				if ( _gl[ internalFormatName ] !== undefined ) { return _gl[ internalFormatName ]; }

				console.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \'' + internalFormatName + '\'' );

			}

			var internalFormat = glFormat;

			if ( glFormat === 6403 ) {

				if ( glType === 5126 ) { internalFormat = 33326; }
				if ( glType === 5131 ) { internalFormat = 33325; }
				if ( glType === 5121 ) { internalFormat = 33321; }

			}

			if ( glFormat === 6407 ) {

				if ( glType === 5126 ) { internalFormat = 34837; }
				if ( glType === 5131 ) { internalFormat = 34843; }
				if ( glType === 5121 ) { internalFormat = 32849; }

			}

			if ( glFormat === 6408 ) {

				if ( glType === 5126 ) { internalFormat = 34836; }
				if ( glType === 5131 ) { internalFormat = 34842; }
				if ( glType === 5121 ) { internalFormat = 32856; }

			}

			if ( internalFormat === 33325 || internalFormat === 33326 ||
				internalFormat === 34842 || internalFormat === 34836 ) {

				extensions.get( 'EXT_color_buffer_float' );

			}

			return internalFormat;

		}

		// Fallback filters for non-power-of-2 textures

		function filterFallback( f ) {

			if ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {

				return 9728;

			}

			return 9729;

		}

		//

		function onTextureDispose( event ) {

			var texture = event.target;

			texture.removeEventListener( 'dispose', onTextureDispose );

			deallocateTexture( texture );

			if ( texture.isVideoTexture ) {

				_videoTextures.delete( texture );

			}

			info.memory.textures --;

		}

		function onRenderTargetDispose( event ) {

			var renderTarget = event.target;

			renderTarget.removeEventListener( 'dispose', onRenderTargetDispose );

			deallocateRenderTarget( renderTarget );

			info.memory.textures --;

		}

		//

		function deallocateTexture( texture ) {

			var textureProperties = properties.get( texture );

			if ( textureProperties.__webglInit === undefined ) { return; }

			_gl.deleteTexture( textureProperties.__webglTexture );

			properties.remove( texture );

		}

		function deallocateRenderTarget( renderTarget ) {

			var renderTargetProperties = properties.get( renderTarget );
			var textureProperties = properties.get( renderTarget.texture );

			if ( ! renderTarget ) { return; }

			if ( textureProperties.__webglTexture !== undefined ) {

				_gl.deleteTexture( textureProperties.__webglTexture );

			}

			if ( renderTarget.depthTexture ) {

				renderTarget.depthTexture.dispose();

			}

			if ( renderTarget.isWebGLCubeRenderTarget ) {

				for ( var i = 0; i < 6; i ++ ) {

					_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );
					if ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] ); }

				}

			} else {

				_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );
				if ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer ); }
				if ( renderTargetProperties.__webglMultisampledFramebuffer ) { _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer ); }
				if ( renderTargetProperties.__webglColorRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer ); }
				if ( renderTargetProperties.__webglDepthRenderbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer ); }

			}

			properties.remove( renderTarget.texture );
			properties.remove( renderTarget );

		}

		//

		var textureUnits = 0;

		function resetTextureUnits() {

			textureUnits = 0;

		}

		function allocateTextureUnit() {

			var textureUnit = textureUnits;

			if ( textureUnit >= maxTextures ) {

				console.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );

			}

			textureUnits += 1;

			return textureUnit;

		}

		//

		function setTexture2D( texture, slot ) {

			var textureProperties = properties.get( texture );

			if ( texture.isVideoTexture ) { updateVideoTexture( texture ); }

			if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

				var image = texture.image;

				if ( image === undefined ) {

					console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );

				} else if ( image.complete === false ) {

					console.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );

				} else {

					uploadTexture( textureProperties, texture, slot );
					return;

				}

			}

			state.activeTexture( 33984 + slot );
			state.bindTexture( 3553, textureProperties.__webglTexture );

		}

		function setTexture2DArray( texture, slot ) {

			var textureProperties = properties.get( texture );

			if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

				uploadTexture( textureProperties, texture, slot );
				return;

			}

			state.activeTexture( 33984 + slot );
			state.bindTexture( 35866, textureProperties.__webglTexture );

		}

		function setTexture3D( texture, slot ) {

			var textureProperties = properties.get( texture );

			if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

				uploadTexture( textureProperties, texture, slot );
				return;

			}

			state.activeTexture( 33984 + slot );
			state.bindTexture( 32879, textureProperties.__webglTexture );

		}

		function setTextureCube( texture, slot ) {

			if ( texture.image.length !== 6 ) { return; }

			var textureProperties = properties.get( texture );

			if ( texture.version > 0 && textureProperties.__version !== texture.version ) {

				initTexture( textureProperties, texture );

				state.activeTexture( 33984 + slot );
				state.bindTexture( 34067, textureProperties.__webglTexture );

				_gl.pixelStorei( 37440, texture.flipY );

				var isCompressed = ( texture && ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture ) );
				var isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );

				var cubeImage = [];

				for ( var i = 0; i < 6; i ++ ) {

					if ( ! isCompressed && ! isDataTexture ) {

						cubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );

					} else {

						cubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];

					}

				}

				var image = cubeImage[ 0 ],
					supportsMips = isPowerOfTwo( image ) || isWebGL2,
					glFormat = utils.convert( texture.format ),
					glType = utils.convert( texture.type ),
					glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );

				setTextureParameters( 34067, texture, supportsMips );

				var mipmaps;

				if ( isCompressed ) {

					for ( var i = 0; i < 6; i ++ ) {

						mipmaps = cubeImage[ i ].mipmaps;

						for ( var j = 0; j < mipmaps.length; j ++ ) {

							var mipmap = mipmaps[ j ];

							if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {

								if ( glFormat !== null ) {

									state.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );

								} else {

									console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );

								}

							} else {

								state.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

							}

						}

					}

					textureProperties.__maxMipLevel = mipmaps.length - 1;

				} else {

					mipmaps = texture.mipmaps;

					for ( var i = 0; i < 6; i ++ ) {

						if ( isDataTexture ) {

							state.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );

							for ( var j = 0; j < mipmaps.length; j ++ ) {

								var mipmap = mipmaps[ j ];
								var mipmapImage = mipmap.image[ i ].image;

								state.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );

							}

						} else {

							state.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );

							for ( var j = 0; j < mipmaps.length; j ++ ) {

								var mipmap = mipmaps[ j ];

								state.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );

							}

						}

					}

					textureProperties.__maxMipLevel = mipmaps.length;

				}

				if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

					// We assume images for cube map have the same size.
					generateMipmap( 34067, texture, image.width, image.height );

				}

				textureProperties.__version = texture.version;

				if ( texture.onUpdate ) { texture.onUpdate( texture ); }

			} else {

				state.activeTexture( 33984 + slot );
				state.bindTexture( 34067, textureProperties.__webglTexture );

			}

		}

		function setTextureCubeDynamic( texture, slot ) {

			state.activeTexture( 33984 + slot );
			state.bindTexture( 34067, properties.get( texture ).__webglTexture );

		}

		var wrappingToGL = {};
		wrappingToGL[ RepeatWrapping ] = 10497;
		wrappingToGL[ ClampToEdgeWrapping ] = 33071;
		wrappingToGL[ MirroredRepeatWrapping ] = 33648;

		var filterToGL = {};
		filterToGL[ NearestFilter ] = 9728;
		filterToGL[ NearestMipmapNearestFilter ] = 9984;
		filterToGL[ NearestMipmapLinearFilter ] = 9986;
		filterToGL[ LinearFilter ] = 9729;
		filterToGL[ LinearMipmapNearestFilter ] = 9985;
		filterToGL[ LinearMipmapLinearFilter ] = 9987;

		function setTextureParameters( textureType, texture, supportsMips ) {

			if ( supportsMips ) {

				_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );
				_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );

				if ( textureType === 32879 || textureType === 35866 ) {

					_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );

				}

				_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );
				_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );

			} else {

				_gl.texParameteri( textureType, 10242, 33071 );
				_gl.texParameteri( textureType, 10243, 33071 );

				if ( textureType === 32879 || textureType === 35866 ) {

					_gl.texParameteri( textureType, 32882, 33071 );

				}

				if ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {

					console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );

				}

				_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );
				_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );

				if ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {

					console.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );

				}

			}

			var extension = extensions.get( 'EXT_texture_filter_anisotropic' );

			if ( extension ) {

				if ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) { return; }
				if ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) { return; }

				if ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {

					_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );
					properties.get( texture ).__currentAnisotropy = texture.anisotropy;

				}

			}

		}

		function initTexture( textureProperties, texture ) {

			if ( textureProperties.__webglInit === undefined ) {

				textureProperties.__webglInit = true;

				texture.addEventListener( 'dispose', onTextureDispose );

				textureProperties.__webglTexture = _gl.createTexture();

				info.memory.textures ++;

			}

		}

		function uploadTexture( textureProperties, texture, slot ) {

			var textureType = 3553;

			if ( texture.isDataTexture2DArray ) { textureType = 35866; }
			if ( texture.isDataTexture3D ) { textureType = 32879; }

			initTexture( textureProperties, texture );

			state.activeTexture( 33984 + slot );
			state.bindTexture( textureType, textureProperties.__webglTexture );

			_gl.pixelStorei( 37440, texture.flipY );
			_gl.pixelStorei( 37441, texture.premultiplyAlpha );
			_gl.pixelStorei( 3317, texture.unpackAlignment );

			var needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;
			var image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );

			var supportsMips = isPowerOfTwo( image ) || isWebGL2,
				glFormat = utils.convert( texture.format ),
				glType = utils.convert( texture.type ),
				glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType );

			setTextureParameters( textureType, texture, supportsMips );

			var mipmap, mipmaps = texture.mipmaps;

			if ( texture.isDepthTexture ) {

				// populate depth texture with dummy data

				glInternalFormat = 6402;

				if ( isWebGL2 ) {

					if ( texture.type === FloatType ) {

						glInternalFormat = 36012;

					} else if ( texture.type === UnsignedIntType ) {

						glInternalFormat = 33190;

					} else if ( texture.type === UnsignedInt248Type ) {

						glInternalFormat = 35056;

					} else {

						glInternalFormat = 33189; // WebGL2 requires sized internalformat for glTexImage2D

					}

				} else {

					if ( texture.type === FloatType ) {

						console.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );

					}

				}

				// validation checks for WebGL 1

				if ( texture.format === DepthFormat && glInternalFormat === 6402 ) {

					// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
					// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT
					// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
					if ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {

						console.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );

						texture.type = UnsignedShortType;
						glType = utils.convert( texture.type );

					}

				}

				if ( texture.format === DepthStencilFormat && glInternalFormat === 6402 ) {

					// Depth stencil textures need the DEPTH_STENCIL internal format
					// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
					glInternalFormat = 34041;

					// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are
					// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.
					// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)
					if ( texture.type !== UnsignedInt248Type ) {

						console.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );

						texture.type = UnsignedInt248Type;
						glType = utils.convert( texture.type );

					}

				}

				//

				state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );

			} else if ( texture.isDataTexture ) {

				// use manually created mipmaps if available
				// if there are no manual mipmaps
				// set 0 level mipmap and then use GL to generate other mipmap levels

				if ( mipmaps.length > 0 && supportsMips ) {

					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

						mipmap = mipmaps[ i ];
						state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

					}

					texture.generateMipmaps = false;
					textureProperties.__maxMipLevel = mipmaps.length - 1;

				} else {

					state.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );
					textureProperties.__maxMipLevel = 0;

				}

			} else if ( texture.isCompressedTexture ) {

				for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

					mipmap = mipmaps[ i ];

					if ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {

						if ( glFormat !== null ) {

							state.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );

						} else {

							console.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );

						}

					} else {

						state.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );

					}

				}

				textureProperties.__maxMipLevel = mipmaps.length - 1;

			} else if ( texture.isDataTexture2DArray ) {

				state.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );
				textureProperties.__maxMipLevel = 0;

			} else if ( texture.isDataTexture3D ) {

				state.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );
				textureProperties.__maxMipLevel = 0;

			} else {

				// regular Texture (image, video, canvas)

				// use manually created mipmaps if available
				// if there are no manual mipmaps
				// set 0 level mipmap and then use GL to generate other mipmap levels

				if ( mipmaps.length > 0 && supportsMips ) {

					for ( var i = 0, il = mipmaps.length; i < il; i ++ ) {

						mipmap = mipmaps[ i ];
						state.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );

					}

					texture.generateMipmaps = false;
					textureProperties.__maxMipLevel = mipmaps.length - 1;

				} else {

					state.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );
					textureProperties.__maxMipLevel = 0;

				}

			}

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				generateMipmap( textureType, texture, image.width, image.height );

			}

			textureProperties.__version = texture.version;

			if ( texture.onUpdate ) { texture.onUpdate( texture ); }

		}

		// Render targets

		// Setup storage for target texture and bind it to correct framebuffer
		function setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {

			var glFormat = utils.convert( renderTarget.texture.format );
			var glType = utils.convert( renderTarget.texture.type );
			var glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );
			state.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );
			_gl.bindFramebuffer( 36160, framebuffer );
			_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );
			_gl.bindFramebuffer( 36160, null );

		}

		// Setup storage for internal depth/stencil buffers and bind to correct framebuffer
		function setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {

			_gl.bindRenderbuffer( 36161, renderbuffer );

			if ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {

				var glInternalFormat = 33189;

				if ( isMultisample ) {

					var depthTexture = renderTarget.depthTexture;

					if ( depthTexture && depthTexture.isDepthTexture ) {

						if ( depthTexture.type === FloatType ) {

							glInternalFormat = 36012;

						} else if ( depthTexture.type === UnsignedIntType ) {

							glInternalFormat = 33190;

						}

					}

					var samples = getRenderTargetSamples( renderTarget );

					_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

				} else {

					_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );

				}

				_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );

			} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {

				if ( isMultisample ) {

					var samples = getRenderTargetSamples( renderTarget );

					_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );

				} else {

					_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );

				}


				_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );

			} else {

				var glFormat = utils.convert( renderTarget.texture.format );
				var glType = utils.convert( renderTarget.texture.type );
				var glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );

				if ( isMultisample ) {

					var samples = getRenderTargetSamples( renderTarget );

					_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

				} else {

					_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );

				}

			}

			_gl.bindRenderbuffer( 36161, null );

		}

		// Setup resources for a Depth Texture for a FBO (needs an extension)
		function setupDepthTexture( framebuffer, renderTarget ) {

			var isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );
			if ( isCube ) { throw new Error( 'Depth Texture with cube render targets is not supported' ); }

			_gl.bindFramebuffer( 36160, framebuffer );

			if ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {

				throw new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );

			}

			// upload an empty depth texture with framebuffer size
			if ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||
					renderTarget.depthTexture.image.width !== renderTarget.width ||
					renderTarget.depthTexture.image.height !== renderTarget.height ) {

				renderTarget.depthTexture.image.width = renderTarget.width;
				renderTarget.depthTexture.image.height = renderTarget.height;
				renderTarget.depthTexture.needsUpdate = true;

			}

			setTexture2D( renderTarget.depthTexture, 0 );

			var webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;

			if ( renderTarget.depthTexture.format === DepthFormat ) {

				_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );

			} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {

				_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );

			} else {

				throw new Error( 'Unknown depthTexture format' );

			}

		}

		// Setup GL resources for a non-texture depth buffer
		function setupDepthRenderbuffer( renderTarget ) {

			var renderTargetProperties = properties.get( renderTarget );

			var isCube = ( renderTarget.isWebGLCubeRenderTarget === true );

			if ( renderTarget.depthTexture ) {

				if ( isCube ) { throw new Error( 'target.depthTexture not supported in Cube render targets' ); }

				setupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );

			} else {

				if ( isCube ) {

					renderTargetProperties.__webglDepthbuffer = [];

					for ( var i = 0; i < 6; i ++ ) {

						_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );
						renderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();
						setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );

					}

				} else {

					_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );
					renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();
					setupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );

				}

			}

			_gl.bindFramebuffer( 36160, null );

		}

		// Set up GL resources for the render target
		function setupRenderTarget( renderTarget ) {

			var renderTargetProperties = properties.get( renderTarget );
			var textureProperties = properties.get( renderTarget.texture );

			renderTarget.addEventListener( 'dispose', onRenderTargetDispose );

			textureProperties.__webglTexture = _gl.createTexture();

			info.memory.textures ++;

			var isCube = ( renderTarget.isWebGLCubeRenderTarget === true );
			var isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );
			var supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;

			// Handles WebGL2 RGBFormat fallback - #18858

			if ( isWebGL2 && renderTarget.texture.format === RGBFormat && ( renderTarget.texture.type === FloatType || renderTarget.texture.type === HalfFloatType ) ) {

				renderTarget.texture.format = RGBAFormat;

				console.warn( 'THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.' );

			}

			// Setup framebuffer

			if ( isCube ) {

				renderTargetProperties.__webglFramebuffer = [];

				for ( var i = 0; i < 6; i ++ ) {

					renderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();

				}

			} else {

				renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();

				if ( isMultisample ) {

					if ( isWebGL2 ) {

						renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();
						renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();

						_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );

						var glFormat = utils.convert( renderTarget.texture.format );
						var glType = utils.convert( renderTarget.texture.type );
						var glInternalFormat = getInternalFormat( renderTarget.texture.internalFormat, glFormat, glType );
						var samples = getRenderTargetSamples( renderTarget );
						_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );

						_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );
						_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );
						_gl.bindRenderbuffer( 36161, null );

						if ( renderTarget.depthBuffer ) {

							renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();
							setupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );

						}

						_gl.bindFramebuffer( 36160, null );


					} else {

						console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );

					}

				}

			}

			// Setup color buffer

			if ( isCube ) {

				state.bindTexture( 34067, textureProperties.__webglTexture );
				setTextureParameters( 34067, renderTarget.texture, supportsMips );

				for ( var i = 0; i < 6; i ++ ) {

					setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );

				}

				if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {

					generateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );

				}

				state.bindTexture( 34067, null );

			} else {

				state.bindTexture( 3553, textureProperties.__webglTexture );
				setTextureParameters( 3553, renderTarget.texture, supportsMips );
				setupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );

				if ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {

					generateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );

				}

				state.bindTexture( 3553, null );

			}

			// Setup depth and stencil buffers

			if ( renderTarget.depthBuffer ) {

				setupDepthRenderbuffer( renderTarget );

			}

		}

		function updateRenderTargetMipmap( renderTarget ) {

			var texture = renderTarget.texture;
			var supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;

			if ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {

				var target = renderTarget.isWebGLCubeRenderTarget ? 34067 : 3553;
				var webglTexture = properties.get( texture ).__webglTexture;

				state.bindTexture( target, webglTexture );
				generateMipmap( target, texture, renderTarget.width, renderTarget.height );
				state.bindTexture( target, null );

			}

		}

		function updateMultisampleRenderTarget( renderTarget ) {

			if ( renderTarget.isWebGLMultisampleRenderTarget ) {

				if ( isWebGL2 ) {

					var renderTargetProperties = properties.get( renderTarget );

					_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );
					_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );

					var width = renderTarget.width;
					var height = renderTarget.height;
					var mask = 16384;

					if ( renderTarget.depthBuffer ) { mask |= 256; }
					if ( renderTarget.stencilBuffer ) { mask |= 1024; }

					_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );

					_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer ); // see #18905

				} else {

					console.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );

				}

			}

		}

		function getRenderTargetSamples( renderTarget ) {

			return ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?
				Math.min( maxSamples, renderTarget.samples ) : 0;

		}

		function updateVideoTexture( texture ) {

			var frame = info.render.frame;

			// Check the last frame we updated the VideoTexture

			if ( _videoTextures.get( texture ) !== frame ) {

				_videoTextures.set( texture, frame );
				texture.update();

			}

		}

		// backwards compatibility

		var warnedTexture2D = false;
		var warnedTextureCube = false;

		function safeSetTexture2D( texture, slot ) {

			if ( texture && texture.isWebGLRenderTarget ) {

				if ( warnedTexture2D === false ) {

					console.warn( "THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead." );
					warnedTexture2D = true;

				}

				texture = texture.texture;

			}

			setTexture2D( texture, slot );

		}

		function safeSetTextureCube( texture, slot ) {

			if ( texture && texture.isWebGLCubeRenderTarget ) {

				if ( warnedTextureCube === false ) {

					console.warn( "THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead." );
					warnedTextureCube = true;

				}

				texture = texture.texture;

			}

			// currently relying on the fact that WebGLCubeRenderTarget.texture is a Texture and NOT a CubeTexture
			// TODO: unify these code paths
			if ( ( texture && texture.isCubeTexture ) ||
				( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {

				// CompressedTexture can have Array in image :/

				// this function alone should take care of cube textures
				setTextureCube( texture, slot );

			} else {

				// assumed: texture property of THREE.WebGLCubeRenderTarget
				setTextureCubeDynamic( texture, slot );

			}

		}

		//

		this.allocateTextureUnit = allocateTextureUnit;
		this.resetTextureUnits = resetTextureUnits;

		this.setTexture2D = setTexture2D;
		this.setTexture2DArray = setTexture2DArray;
		this.setTexture3D = setTexture3D;
		this.setTextureCube = setTextureCube;
		this.setTextureCubeDynamic = setTextureCubeDynamic;
		this.setupRenderTarget = setupRenderTarget;
		this.updateRenderTargetMipmap = updateRenderTargetMipmap;
		this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;

		this.safeSetTexture2D = safeSetTexture2D;
		this.safeSetTextureCube = safeSetTextureCube;

	}

	/**
	 * @author thespite / http://www.twitter.com/thespite
	 */

	function WebGLUtils( gl, extensions, capabilities ) {

		var isWebGL2 = capabilities.isWebGL2;

		function convert( p ) {

			var extension;

			if ( p === UnsignedByteType ) { return 5121; }
			if ( p === UnsignedShort4444Type ) { return 32819; }
			if ( p === UnsignedShort5551Type ) { return 32820; }
			if ( p === UnsignedShort565Type ) { return 33635; }

			if ( p === ByteType ) { return 5120; }
			if ( p === ShortType ) { return 5122; }
			if ( p === UnsignedShortType ) { return 5123; }
			if ( p === IntType ) { return 5124; }
			if ( p === UnsignedIntType ) { return 5125; }
			if ( p === FloatType ) { return 5126; }

			if ( p === HalfFloatType ) {

				if ( isWebGL2 ) { return 5131; }

				extension = extensions.get( 'OES_texture_half_float' );

				if ( extension !== null ) {

					return extension.HALF_FLOAT_OES;

				} else {

					return null;

				}

			}

			if ( p === AlphaFormat ) { return 6406; }
			if ( p === RGBFormat ) { return 6407; }
			if ( p === RGBAFormat ) { return 6408; }
			if ( p === LuminanceFormat ) { return 6409; }
			if ( p === LuminanceAlphaFormat ) { return 6410; }
			if ( p === DepthFormat ) { return 6402; }
			if ( p === DepthStencilFormat ) { return 34041; }
			if ( p === RedFormat ) { return 6403; }

			// WebGL2 formats.

			if ( p === RedIntegerFormat ) { return 36244; }
			if ( p === RGFormat ) { return 33319; }
			if ( p === RGIntegerFormat ) { return 33320; }
			if ( p === RGBIntegerFormat ) { return 36248; }
			if ( p === RGBAIntegerFormat ) { return 36249; }

			if ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||
				p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {

				extension = extensions.get( 'WEBGL_compressed_texture_s3tc' );

				if ( extension !== null ) {

					if ( p === RGB_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGB_S3TC_DXT1_EXT; }
					if ( p === RGBA_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT; }
					if ( p === RGBA_S3TC_DXT3_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT; }
					if ( p === RGBA_S3TC_DXT5_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT; }

				} else {

					return null;

				}

			}

			if ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||
				p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {

				extension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );

				if ( extension !== null ) {

					if ( p === RGB_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG; }
					if ( p === RGB_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG; }
					if ( p === RGBA_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG; }
					if ( p === RGBA_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG; }

				} else {

					return null;

				}

			}

			if ( p === RGB_ETC1_Format ) {

				extension = extensions.get( 'WEBGL_compressed_texture_etc1' );

				if ( extension !== null ) {

					return extension.COMPRESSED_RGB_ETC1_WEBGL;

				} else {

					return null;

				}

			}

			if ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {

				extension = extensions.get( 'WEBGL_compressed_texture_etc' );

				if ( extension !== null ) {

					if ( p === RGB_ETC2_Format ) { return extension.COMPRESSED_RGB8_ETC2; }
					if ( p === RGBA_ETC2_EAC_Format ) { return extension.COMPRESSED_RGBA8_ETC2_EAC; }

				}

			}

			if ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||
				p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||
				p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||
				p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||
				p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ||
				p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format ||
				p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format ||
				p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format ||
				p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format ||
				p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format ) {

				extension = extensions.get( 'WEBGL_compressed_texture_astc' );

				if ( extension !== null ) {

					// TODO Complete?

					return p;

				} else {

					return null;

				}

			}

			if ( p === RGBA_BPTC_Format ) {

				extension = extensions.get( 'EXT_texture_compression_bptc' );

				if ( extension !== null ) {

					// TODO Complete?

					return p;

				} else {

					return null;

				}

			}

			if ( p === UnsignedInt248Type ) {

				if ( isWebGL2 ) { return 34042; }

				extension = extensions.get( 'WEBGL_depth_texture' );

				if ( extension !== null ) {

					return extension.UNSIGNED_INT_24_8_WEBGL;

				} else {

					return null;

				}

			}

		}

		return { convert: convert };

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function ArrayCamera( array ) {

		PerspectiveCamera.call( this );

		this.cameras = array || [];

	}

	ArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {

		constructor: ArrayCamera,

		isArrayCamera: true

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function Group() {

		Object3D.call( this );

		this.type = 'Group';

	}

	Group.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Group,

		isGroup: true

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function WebXRManager( renderer, gl ) {

		var scope = this;

		var session = null;

		var framebufferScaleFactor = 1.0;

		var referenceSpace = null;
		var referenceSpaceType = 'local-floor';

		var pose = null;

		var controllers = [];
		var inputSourcesMap = new Map();

		//

		var cameraL = new PerspectiveCamera();
		cameraL.layers.enable( 1 );
		cameraL.viewport = new Vector4();

		var cameraR = new PerspectiveCamera();
		cameraR.layers.enable( 2 );
		cameraR.viewport = new Vector4();

		var cameraVR = new ArrayCamera( [ cameraL, cameraR ] );
		cameraVR.layers.enable( 1 );
		cameraVR.layers.enable( 2 );

		var _currentDepthNear = null;
		var _currentDepthFar = null;

		//

		this.enabled = false;

		this.isPresenting = false;

		this.getController = function ( id ) {

			var controller = controllers[ id ];

			if ( controller === undefined ) {

				controller = {};
				controllers[ id ] = controller;

			}

			if ( controller.targetRay === undefined ) {

				controller.targetRay = new Group();
				controller.targetRay.matrixAutoUpdate = false;
				controller.targetRay.visible = false;

			}

			return controller.targetRay;

		};

		this.getControllerGrip = function ( id ) {

			var controller = controllers[ id ];

			if ( controller === undefined ) {

				controller = {};
				controllers[ id ] = controller;

			}

			if ( controller.grip === undefined ) {

				controller.grip = new Group();
				controller.grip.matrixAutoUpdate = false;
				controller.grip.visible = false;

			}

			return controller.grip;

		};

		//

		function onSessionEvent( event ) {

			var controller = inputSourcesMap.get( event.inputSource );

			if ( controller ) {

				if ( controller.targetRay ) {

					controller.targetRay.dispatchEvent( { type: event.type } );

				}

				if ( controller.grip ) {

					controller.grip.dispatchEvent( { type: event.type } );

				}

			}

		}

		function onSessionEnd() {

			inputSourcesMap.forEach( function ( controller, inputSource ) {

				if ( controller.targetRay ) {

					controller.targetRay.dispatchEvent( { type: 'disconnected', data: inputSource } );
					controller.targetRay.visible = false;

				}

				if ( controller.grip ) {

					controller.grip.dispatchEvent( { type: 'disconnected', data: inputSource } );
					controller.grip.visible = false;

				}

			} );

			inputSourcesMap.clear();

			//

			renderer.setFramebuffer( null );
			renderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830
			animation.stop();

			scope.isPresenting = false;

			scope.dispatchEvent( { type: 'sessionend' } );

		}

		function onRequestReferenceSpace( value ) {

			referenceSpace = value;

			animation.setContext( session );
			animation.start();

			scope.isPresenting = true;

			scope.dispatchEvent( { type: 'sessionstart' } );

		}

		this.setFramebufferScaleFactor = function ( value ) {

			framebufferScaleFactor = value;

			// Warn if function is used while presenting
			if ( scope.isPresenting == true ) {

				console.warn( "WebXRManager: Cannot change framebuffer scale while presenting VR content" );

			}

		};

		this.setReferenceSpaceType = function ( value ) {

			referenceSpaceType = value;

		};

		this.getReferenceSpace = function () {

			return referenceSpace;

		};

		this.getSession = function () {

			return session;

		};

		this.setSession = function ( value ) {

			session = value;

			if ( session !== null ) {

				session.addEventListener( 'select', onSessionEvent );
				session.addEventListener( 'selectstart', onSessionEvent );
				session.addEventListener( 'selectend', onSessionEvent );
				session.addEventListener( 'squeeze', onSessionEvent );
				session.addEventListener( 'squeezestart', onSessionEvent );
				session.addEventListener( 'squeezeend', onSessionEvent );
				session.addEventListener( 'end', onSessionEnd );

				var attributes = gl.getContextAttributes();

				var layerInit = {
					antialias: attributes.antialias,
					alpha: attributes.alpha,
					depth: attributes.depth,
					stencil: attributes.stencil,
					framebufferScaleFactor: framebufferScaleFactor
				};

				// eslint-disable-next-line no-undef
				var baseLayer = new XRWebGLLayer( session, gl, layerInit );

				session.updateRenderState( { baseLayer: baseLayer } );

				session.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );

				//

				session.addEventListener( 'inputsourceschange', updateInputSources );

			}

		};

		function updateInputSources( event ) {

			var inputSources = session.inputSources;

			// Assign inputSources to available controllers

			for ( var i = 0; i < controllers.length; i ++ ) {

				inputSourcesMap.set( inputSources[ i ], controllers[ i ] );

			}

			// Notify disconnected

			for ( var i = 0; i < event.removed.length; i ++ ) {

				var inputSource = event.removed[ i ];
				var controller = inputSourcesMap.get( inputSource );

				if ( controller ) {

					if ( controller.targetRay ) {

						controller.targetRay.dispatchEvent( { type: 'disconnected', data: inputSource } );

					}

					if ( controller.grip ) {

						controller.grip.dispatchEvent( { type: 'disconnected', data: inputSource } );

					}

					inputSourcesMap.delete( inputSource );

				}

			}

			// Notify connected

			for ( var i = 0; i < event.added.length; i ++ ) {

				var inputSource = event.added[ i ];
				var controller = inputSourcesMap.get( inputSource );

				if ( controller ) {

					if ( controller.targetRay ) {

						controller.targetRay.dispatchEvent( { type: 'connected', data: inputSource } );

					}

					if ( controller.grip ) {

						controller.grip.dispatchEvent( { type: 'connected', data: inputSource } );

					}

				}

			}

		}

		//

		var cameraLPos = new Vector3();
		var cameraRPos = new Vector3();

		/**
		 * @author jsantell / https://www.jsantell.com/
		 *
		 * Assumes 2 cameras that are parallel and share an X-axis, and that
		 * the cameras' projection and world matrices have already been set.
		 * And that near and far planes are identical for both cameras.
		 * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765
		 */
		function setProjectionFromUnion( camera, cameraL, cameraR ) {

			cameraLPos.setFromMatrixPosition( cameraL.matrixWorld );
			cameraRPos.setFromMatrixPosition( cameraR.matrixWorld );

			var ipd = cameraLPos.distanceTo( cameraRPos );

			var projL = cameraL.projectionMatrix.elements;
			var projR = cameraR.projectionMatrix.elements;

			// VR systems will have identical far and near planes, and
			// most likely identical top and bottom frustum extents.
			// Use the left camera for these values.
			var near = projL[ 14 ] / ( projL[ 10 ] - 1 );
			var far = projL[ 14 ] / ( projL[ 10 ] + 1 );
			var topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];
			var bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];

			var leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];
			var rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];
			var left = near * leftFov;
			var right = near * rightFov;

			// Calculate the new camera's position offset from the
			// left camera. xOffset should be roughly half `ipd`.
			var zOffset = ipd / ( - leftFov + rightFov );
			var xOffset = zOffset * - leftFov;

			// TODO: Better way to apply this offset?
			cameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );
			camera.translateX( xOffset );
			camera.translateZ( zOffset );
			camera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );
			camera.matrixWorldInverse.getInverse( camera.matrixWorld );

			// Find the union of the frustum values of the cameras and scale
			// the values so that the near plane's position does not change in world space,
			// although must now be relative to the new union camera.
			var near2 = near + zOffset;
			var far2 = far + zOffset;
			var left2 = left - xOffset;
			var right2 = right + ( ipd - xOffset );
			var top2 = topFov * far / far2 * near2;
			var bottom2 = bottomFov * far / far2 * near2;

			camera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );

		}

		function updateCamera( camera, parent ) {

			if ( parent === null ) {

				camera.matrixWorld.copy( camera.matrix );

			} else {

				camera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );

			}

			camera.matrixWorldInverse.getInverse( camera.matrixWorld );

		}

		this.getCamera = function ( camera ) {

			cameraVR.near = cameraR.near = cameraL.near = camera.near;
			cameraVR.far = cameraR.far = cameraL.far = camera.far;

			if ( _currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far ) {

				// Note that the new renderState won't apply until the next frame. See #18320

				session.updateRenderState( {
					depthNear: cameraVR.near,
					depthFar: cameraVR.far
				} );

				_currentDepthNear = cameraVR.near;
				_currentDepthFar = cameraVR.far;

			}

			var parent = camera.parent;
			var cameras = cameraVR.cameras;

			updateCamera( cameraVR, parent );

			for ( var i = 0; i < cameras.length; i ++ ) {

				updateCamera( cameras[ i ], parent );

			}

			// update camera and its children

			camera.matrixWorld.copy( cameraVR.matrixWorld );

			var children = camera.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				children[ i ].updateMatrixWorld( true );

			}

			setProjectionFromUnion( cameraVR, cameraL, cameraR );

			return cameraVR;

		};

		// Animation Loop

		var onAnimationFrameCallback = null;

		function onAnimationFrame( time, frame ) {

			pose = frame.getViewerPose( referenceSpace );

			if ( pose !== null ) {

				var views = pose.views;
				var baseLayer = session.renderState.baseLayer;

				renderer.setFramebuffer( baseLayer.framebuffer );

				for ( var i = 0; i < views.length; i ++ ) {

					var view = views[ i ];
					var viewport = baseLayer.getViewport( view );

					var camera = cameraVR.cameras[ i ];
					camera.matrix.fromArray( view.transform.matrix );
					camera.projectionMatrix.fromArray( view.projectionMatrix );
					camera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );

					if ( i === 0 ) {

						cameraVR.matrix.copy( camera.matrix );

					}

				}

			}

			//

			var inputSources = session.inputSources;

			for ( var i = 0; i < controllers.length; i ++ ) {

				var controller = controllers[ i ];

				var inputSource = inputSources[ i ];

				var inputPose = null;
				var gripPose = null;

				if ( inputSource ) {

					if ( controller.targetRay ) {

						inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );

						if ( inputPose !== null ) {

							controller.targetRay.matrix.fromArray( inputPose.transform.matrix );
							controller.targetRay.matrix.decompose( controller.targetRay.position, controller.targetRay.rotation, controller.targetRay.scale );

						}

					}

					if ( controller.grip && inputSource.gripSpace ) {

						gripPose = frame.getPose( inputSource.gripSpace, referenceSpace );

						if ( gripPose !== null ) {

							controller.grip.matrix.fromArray( gripPose.transform.matrix );
							controller.grip.matrix.decompose( controller.grip.position, controller.grip.rotation, controller.grip.scale );

						}

					}

				}

				if ( controller.targetRay ) {

					controller.targetRay.visible = inputPose !== null;

				}

				if ( controller.grip ) {

					controller.grip.visible = gripPose !== null;

				}

			}

			if ( onAnimationFrameCallback ) { onAnimationFrameCallback( time, frame ); }

		}

		var animation = new WebGLAnimation();
		animation.setAnimationLoop( onAnimationFrame );

		this.setAnimationLoop = function ( callback ) {

			onAnimationFrameCallback = callback;

		};

		this.dispose = function () {};

	}

	Object.assign( WebXRManager.prototype, EventDispatcher.prototype );

	/**
	 * @author supereggbert / http://www.paulbrunt.co.uk/
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 * @author szimek / https://github.com/szimek/
	 * @author tschw
	 */

	function WebGLRenderer( parameters ) {

		parameters = parameters || {};

		var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),
			_context = parameters.context !== undefined ? parameters.context : null,

			_alpha = parameters.alpha !== undefined ? parameters.alpha : false,
			_depth = parameters.depth !== undefined ? parameters.depth : true,
			_stencil = parameters.stencil !== undefined ? parameters.stencil : true,
			_antialias = parameters.antialias !== undefined ? parameters.antialias : false,
			_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,
			_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,
			_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',
			_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;

		var currentRenderList = null;
		var currentRenderState = null;

		// public properties

		this.domElement = _canvas;

		// Debug configuration container
		this.debug = {

			/**
			 * Enables error checking and reporting when shader programs are being compiled
			 * @type {boolean}
			 */
			checkShaderErrors: true
		};

		// clearing

		this.autoClear = true;
		this.autoClearColor = true;
		this.autoClearDepth = true;
		this.autoClearStencil = true;

		// scene graph

		this.sortObjects = true;

		// user-defined clipping

		this.clippingPlanes = [];
		this.localClippingEnabled = false;

		// physically based shading

		this.gammaFactor = 2.0;	// for backwards compatibility
		this.outputEncoding = LinearEncoding;

		// physical lights

		this.physicallyCorrectLights = false;

		// tone mapping

		this.toneMapping = LinearToneMapping;
		this.toneMappingExposure = 1.0;
		this.toneMappingWhitePoint = 1.0;

		// morphs

		this.maxMorphTargets = 8;
		this.maxMorphNormals = 4;

		// internal properties

		var _this = this,

			_isContextLost = false,

			// internal state cache

			_framebuffer = null,

			_currentActiveCubeFace = 0,
			_currentActiveMipmapLevel = 0,
			_currentRenderTarget = null,
			_currentFramebuffer = null,
			_currentMaterialId = - 1,

			// geometry and program caching

			_currentGeometryProgram = {
				geometry: null,
				program: null,
				wireframe: false
			},

			_currentCamera = null,
			_currentArrayCamera = null,

			_currentViewport = new Vector4(),
			_currentScissor = new Vector4(),
			_currentScissorTest = null,

			//

			_width = _canvas.width,
			_height = _canvas.height,

			_pixelRatio = 1,
			_opaqueSort = null,
			_transparentSort = null,

			_viewport = new Vector4( 0, 0, _width, _height ),
			_scissor = new Vector4( 0, 0, _width, _height ),
			_scissorTest = false,

			// frustum

			_frustum = new Frustum(),

			// clipping

			_clipping = new WebGLClipping(),
			_clippingEnabled = false,
			_localClippingEnabled = false,

			// camera matrices cache

			_projScreenMatrix = new Matrix4(),

			_vector3 = new Vector3();

		function getTargetPixelRatio() {

			return _currentRenderTarget === null ? _pixelRatio : 1;

		}

		// initialize

		var _gl;

		try {

			var contextAttributes = {
				alpha: _alpha,
				depth: _depth,
				stencil: _stencil,
				antialias: _antialias,
				premultipliedAlpha: _premultipliedAlpha,
				preserveDrawingBuffer: _preserveDrawingBuffer,
				powerPreference: _powerPreference,
				failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,
				xrCompatible: true
			};

			// event listeners must be registered before WebGL context is created, see #12753

			_canvas.addEventListener( 'webglcontextlost', onContextLost, false );
			_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );

			_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );

			if ( _gl === null ) {

				if ( _canvas.getContext( 'webgl' ) !== null ) {

					throw new Error( 'Error creating WebGL context with your selected attributes.' );

				} else {

					throw new Error( 'Error creating WebGL context.' );

				}

			}

			// Some experimental-webgl implementations do not have getShaderPrecisionFormat

			if ( _gl.getShaderPrecisionFormat === undefined ) {

				_gl.getShaderPrecisionFormat = function () {

					return { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };

				};

			}

		} catch ( error ) {

			console.error( 'THREE.WebGLRenderer: ' + error.message );
			throw error;

		}

		var extensions, capabilities, state, info;
		var properties, textures, attributes, geometries, objects;
		var programCache, renderLists, renderStates;

		var background, morphtargets, bufferRenderer, indexedBufferRenderer;

		var utils;

		function initGLContext() {

			extensions = new WebGLExtensions( _gl );

			capabilities = new WebGLCapabilities( _gl, extensions, parameters );

			if ( capabilities.isWebGL2 === false ) {

				extensions.get( 'WEBGL_depth_texture' );
				extensions.get( 'OES_texture_float' );
				extensions.get( 'OES_texture_half_float' );
				extensions.get( 'OES_texture_half_float_linear' );
				extensions.get( 'OES_standard_derivatives' );
				extensions.get( 'OES_element_index_uint' );
				extensions.get( 'ANGLE_instanced_arrays' );

			}

			extensions.get( 'OES_texture_float_linear' );

			utils = new WebGLUtils( _gl, extensions, capabilities );

			state = new WebGLState( _gl, extensions, capabilities );
			state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );
			state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );

			info = new WebGLInfo( _gl );
			properties = new WebGLProperties();
			textures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );
			attributes = new WebGLAttributes( _gl, capabilities );
			geometries = new WebGLGeometries( _gl, attributes, info );
			objects = new WebGLObjects( _gl, geometries, attributes, info );
			morphtargets = new WebGLMorphtargets( _gl );
			programCache = new WebGLPrograms( _this, extensions, capabilities );
			renderLists = new WebGLRenderLists();
			renderStates = new WebGLRenderStates();

			background = new WebGLBackground( _this, state, objects, _premultipliedAlpha );

			bufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );
			indexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );

			info.programs = programCache.programs;

			_this.capabilities = capabilities;
			_this.extensions = extensions;
			_this.properties = properties;
			_this.renderLists = renderLists;
			_this.state = state;
			_this.info = info;

		}

		initGLContext();

		// xr

		var xr = new WebXRManager( _this, _gl );

		this.xr = xr;

		// shadow map

		var shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );

		this.shadowMap = shadowMap;

		// API

		this.getContext = function () {

			return _gl;

		};

		this.getContextAttributes = function () {

			return _gl.getContextAttributes();

		};

		this.forceContextLoss = function () {

			var extension = extensions.get( 'WEBGL_lose_context' );
			if ( extension ) { extension.loseContext(); }

		};

		this.forceContextRestore = function () {

			var extension = extensions.get( 'WEBGL_lose_context' );
			if ( extension ) { extension.restoreContext(); }

		};

		this.getPixelRatio = function () {

			return _pixelRatio;

		};

		this.setPixelRatio = function ( value ) {

			if ( value === undefined ) { return; }

			_pixelRatio = value;

			this.setSize( _width, _height, false );

		};

		this.getSize = function ( target ) {

			if ( target === undefined ) {

				console.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );

				target = new Vector2();

			}

			return target.set( _width, _height );

		};

		this.setSize = function ( width, height, updateStyle ) {

			if ( xr.isPresenting ) {

				console.warn( 'THREE.WebGLRenderer: Can\'t change size while VR device is presenting.' );
				return;

			}

			_width = width;
			_height = height;

			_canvas.width = Math.floor( width * _pixelRatio );
			_canvas.height = Math.floor( height * _pixelRatio );

			if ( updateStyle !== false ) {

				_canvas.style.width = width + 'px';
				_canvas.style.height = height + 'px';

			}

			this.setViewport( 0, 0, width, height );

		};

		this.getDrawingBufferSize = function ( target ) {

			if ( target === undefined ) {

				console.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );

				target = new Vector2();

			}

			return target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();

		};

		this.setDrawingBufferSize = function ( width, height, pixelRatio ) {

			_width = width;
			_height = height;

			_pixelRatio = pixelRatio;

			_canvas.width = Math.floor( width * pixelRatio );
			_canvas.height = Math.floor( height * pixelRatio );

			this.setViewport( 0, 0, width, height );

		};

		this.getCurrentViewport = function ( target ) {

			if ( target === undefined ) {

				console.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );

				target = new Vector4();

			}

			return target.copy( _currentViewport );

		};

		this.getViewport = function ( target ) {

			return target.copy( _viewport );

		};

		this.setViewport = function ( x, y, width, height ) {

			if ( x.isVector4 ) {

				_viewport.set( x.x, x.y, x.z, x.w );

			} else {

				_viewport.set( x, y, width, height );

			}

			state.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );

		};

		this.getScissor = function ( target ) {

			return target.copy( _scissor );

		};

		this.setScissor = function ( x, y, width, height ) {

			if ( x.isVector4 ) {

				_scissor.set( x.x, x.y, x.z, x.w );

			} else {

				_scissor.set( x, y, width, height );

			}

			state.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );

		};

		this.getScissorTest = function () {

			return _scissorTest;

		};

		this.setScissorTest = function ( boolean ) {

			state.setScissorTest( _scissorTest = boolean );

		};

		this.setOpaqueSort = function ( method ) {

			_opaqueSort = method;

		};

		this.setTransparentSort = function ( method ) {

			_transparentSort = method;

		};

		// Clearing

		this.getClearColor = function () {

			return background.getClearColor();

		};

		this.setClearColor = function () {

			background.setClearColor.apply( background, arguments );

		};

		this.getClearAlpha = function () {

			return background.getClearAlpha();

		};

		this.setClearAlpha = function () {

			background.setClearAlpha.apply( background, arguments );

		};

		this.clear = function ( color, depth, stencil ) {

			var bits = 0;

			if ( color === undefined || color ) { bits |= 16384; }
			if ( depth === undefined || depth ) { bits |= 256; }
			if ( stencil === undefined || stencil ) { bits |= 1024; }

			_gl.clear( bits );

		};

		this.clearColor = function () {

			this.clear( true, false, false );

		};

		this.clearDepth = function () {

			this.clear( false, true, false );

		};

		this.clearStencil = function () {

			this.clear( false, false, true );

		};

		//

		this.dispose = function () {

			_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );
			_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );

			renderLists.dispose();
			renderStates.dispose();
			properties.dispose();
			objects.dispose();

			xr.dispose();

			animation.stop();

			this.forceContextLoss();

		};

		// Events

		function onContextLost( event ) {

			event.preventDefault();

			console.log( 'THREE.WebGLRenderer: Context Lost.' );

			_isContextLost = true;

		}

		function onContextRestore( /* event */ ) {

			console.log( 'THREE.WebGLRenderer: Context Restored.' );

			_isContextLost = false;

			initGLContext();

		}

		function onMaterialDispose( event ) {

			var material = event.target;

			material.removeEventListener( 'dispose', onMaterialDispose );

			deallocateMaterial( material );

		}

		// Buffer deallocation

		function deallocateMaterial( material ) {

			releaseMaterialProgramReference( material );

			properties.remove( material );

		}


		function releaseMaterialProgramReference( material ) {

			var programInfo = properties.get( material ).program;

			material.program = undefined;

			if ( programInfo !== undefined ) {

				programCache.releaseProgram( programInfo );

			}

		}

		// Buffer rendering

		function renderObjectImmediate( object, program ) {

			object.render( function ( object ) {

				_this.renderBufferImmediate( object, program );

			} );

		}

		this.renderBufferImmediate = function ( object, program ) {

			state.initAttributes();

			var buffers = properties.get( object );

			if ( object.hasPositions && ! buffers.position ) { buffers.position = _gl.createBuffer(); }
			if ( object.hasNormals && ! buffers.normal ) { buffers.normal = _gl.createBuffer(); }
			if ( object.hasUvs && ! buffers.uv ) { buffers.uv = _gl.createBuffer(); }
			if ( object.hasColors && ! buffers.color ) { buffers.color = _gl.createBuffer(); }

			var programAttributes = program.getAttributes();

			if ( object.hasPositions ) {

				_gl.bindBuffer( 34962, buffers.position );
				_gl.bufferData( 34962, object.positionArray, 35048 );

				state.enableAttribute( programAttributes.position );
				_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );

			}

			if ( object.hasNormals ) {

				_gl.bindBuffer( 34962, buffers.normal );
				_gl.bufferData( 34962, object.normalArray, 35048 );

				state.enableAttribute( programAttributes.normal );
				_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );

			}

			if ( object.hasUvs ) {

				_gl.bindBuffer( 34962, buffers.uv );
				_gl.bufferData( 34962, object.uvArray, 35048 );

				state.enableAttribute( programAttributes.uv );
				_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );

			}

			if ( object.hasColors ) {

				_gl.bindBuffer( 34962, buffers.color );
				_gl.bufferData( 34962, object.colorArray, 35048 );

				state.enableAttribute( programAttributes.color );
				_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );

			}

			state.disableUnusedAttributes();

			_gl.drawArrays( 4, 0, object.count );

			object.count = 0;

		};

		var tempScene = new Scene();

		this.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {

			if ( scene === null ) { scene = tempScene; } // renderBufferDirect second parameter used to be fog (could be null)

			var frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );

			var program = setProgram( camera, scene, material, object );

			state.setMaterial( material, frontFaceCW );

			var updateBuffers = false;

			if ( _currentGeometryProgram.geometry !== geometry.id ||
				_currentGeometryProgram.program !== program.id ||
				_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {

				_currentGeometryProgram.geometry = geometry.id;
				_currentGeometryProgram.program = program.id;
				_currentGeometryProgram.wireframe = material.wireframe === true;
				updateBuffers = true;

			}

			if ( material.morphTargets || material.morphNormals ) {

				morphtargets.update( object, geometry, material, program );

				updateBuffers = true;

			}

			//

			var index = geometry.index;
			var position = geometry.attributes.position;

			//

			if ( index === null ) {

				if ( position === undefined || position.count === 0 ) { return; }

			} else if ( index.count === 0 ) {

				return;

			}

			//

			var rangeFactor = 1;

			if ( material.wireframe === true ) {

				index = geometries.getWireframeAttribute( geometry );
				rangeFactor = 2;

			}

			var attribute;
			var renderer = bufferRenderer;

			if ( index !== null ) {

				attribute = attributes.get( index );

				renderer = indexedBufferRenderer;
				renderer.setIndex( attribute );

			}

			if ( updateBuffers ) {

				setupVertexAttributes( object, geometry, material, program );

				if ( index !== null ) {

					_gl.bindBuffer( 34963, attribute.buffer );

				}

			}

			//

			var dataCount = ( index !== null ) ? index.count : position.count;

			var rangeStart = geometry.drawRange.start * rangeFactor;
			var rangeCount = geometry.drawRange.count * rangeFactor;

			var groupStart = group !== null ? group.start * rangeFactor : 0;
			var groupCount = group !== null ? group.count * rangeFactor : Infinity;

			var drawStart = Math.max( rangeStart, groupStart );
			var drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;

			var drawCount = Math.max( 0, drawEnd - drawStart + 1 );

			if ( drawCount === 0 ) { return; }

			//

			if ( object.isMesh ) {

				if ( material.wireframe === true ) {

					state.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );
					renderer.setMode( 1 );

				} else {

					renderer.setMode( 4 );

				}

			} else if ( object.isLine ) {

				var lineWidth = material.linewidth;

				if ( lineWidth === undefined ) { lineWidth = 1; } // Not using Line*Material

				state.setLineWidth( lineWidth * getTargetPixelRatio() );

				if ( object.isLineSegments ) {

					renderer.setMode( 1 );

				} else if ( object.isLineLoop ) {

					renderer.setMode( 2 );

				} else {

					renderer.setMode( 3 );

				}

			} else if ( object.isPoints ) {

				renderer.setMode( 0 );

			} else if ( object.isSprite ) {

				renderer.setMode( 4 );

			}

			if ( object.isInstancedMesh ) {

				renderer.renderInstances( geometry, drawStart, drawCount, object.count );

			} else if ( geometry.isInstancedBufferGeometry ) {

				renderer.renderInstances( geometry, drawStart, drawCount, geometry.maxInstancedCount );

			} else {

				renderer.render( drawStart, drawCount );

			}

		};

		function setupVertexAttributes( object, geometry, material, program ) {

			if ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {

				if ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) { return; }

			}

			state.initAttributes();

			var geometryAttributes = geometry.attributes;

			var programAttributes = program.getAttributes();

			var materialDefaultAttributeValues = material.defaultAttributeValues;

			for ( var name in programAttributes ) {

				var programAttribute = programAttributes[ name ];

				if ( programAttribute >= 0 ) {

					var geometryAttribute = geometryAttributes[ name ];

					if ( geometryAttribute !== undefined ) {

						var normalized = geometryAttribute.normalized;
						var size = geometryAttribute.itemSize;

						var attribute = attributes.get( geometryAttribute );

						// TODO Attribute may not be available on context restore

						if ( attribute === undefined ) { continue; }

						var buffer = attribute.buffer;
						var type = attribute.type;
						var bytesPerElement = attribute.bytesPerElement;

						if ( geometryAttribute.isInterleavedBufferAttribute ) {

							var data = geometryAttribute.data;
							var stride = data.stride;
							var offset = geometryAttribute.offset;

							if ( data && data.isInstancedInterleavedBuffer ) {

								state.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );

								if ( geometry.maxInstancedCount === undefined ) {

									geometry.maxInstancedCount = data.meshPerAttribute * data.count;

								}

							} else {

								state.enableAttribute( programAttribute );

							}

							_gl.bindBuffer( 34962, buffer );
							_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );

						} else {

							if ( geometryAttribute.isInstancedBufferAttribute ) {

								state.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );

								if ( geometry.maxInstancedCount === undefined ) {

									geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;

								}

							} else {

								state.enableAttribute( programAttribute );

							}

							_gl.bindBuffer( 34962, buffer );
							_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );

						}

					} else if ( name === 'instanceMatrix' ) {

						var attribute = attributes.get( object.instanceMatrix );

						// TODO Attribute may not be available on context restore

						if ( attribute === undefined ) { continue; }

						var buffer = attribute.buffer;
						var type = attribute.type;

						state.enableAttributeAndDivisor( programAttribute + 0, 1 );
						state.enableAttributeAndDivisor( programAttribute + 1, 1 );
						state.enableAttributeAndDivisor( programAttribute + 2, 1 );
						state.enableAttributeAndDivisor( programAttribute + 3, 1 );

						_gl.bindBuffer( 34962, buffer );

						_gl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );
						_gl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );
						_gl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );
						_gl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );

					} else if ( materialDefaultAttributeValues !== undefined ) {

						var value = materialDefaultAttributeValues[ name ];

						if ( value !== undefined ) {

							switch ( value.length ) {

								case 2:
									_gl.vertexAttrib2fv( programAttribute, value );
									break;

								case 3:
									_gl.vertexAttrib3fv( programAttribute, value );
									break;

								case 4:
									_gl.vertexAttrib4fv( programAttribute, value );
									break;

								default:
									_gl.vertexAttrib1fv( programAttribute, value );

							}

						}

					}

				}

			}

			state.disableUnusedAttributes();

		}

		// Compile

		this.compile = function ( scene, camera ) {

			currentRenderState = renderStates.get( scene, camera );
			currentRenderState.init();

			scene.traverse( function ( object ) {

				if ( object.isLight ) {

					currentRenderState.pushLight( object );

					if ( object.castShadow ) {

						currentRenderState.pushShadow( object );

					}

				}

			} );

			currentRenderState.setupLights( camera );

			var compiled = {};

			scene.traverse( function ( object ) {

				if ( object.material ) {

					if ( Array.isArray( object.material ) ) {

						for ( var i = 0; i < object.material.length; i ++ ) {

							if ( object.material[ i ].uuid in compiled === false ) {

								initMaterial( object.material[ i ], scene, object );
								compiled[ object.material[ i ].uuid ] = true;

							}

						}

					} else if ( object.material.uuid in compiled === false ) {

						initMaterial( object.material, scene, object );
						compiled[ object.material.uuid ] = true;

					}

				}

			} );

		};

		// Animation Loop

		var onAnimationFrameCallback = null;

		function onAnimationFrame( time ) {

			if ( xr.isPresenting ) { return; }
			if ( onAnimationFrameCallback ) { onAnimationFrameCallback( time ); }

		}

		var animation = new WebGLAnimation();
		animation.setAnimationLoop( onAnimationFrame );

		if ( typeof window !== 'undefined' ) { animation.setContext( window ); }

		this.setAnimationLoop = function ( callback ) {

			onAnimationFrameCallback = callback;
			xr.setAnimationLoop( callback );

			animation.start();

		};

		// Rendering

		this.render = function ( scene, camera ) {

			var renderTarget, forceClear;

			if ( arguments[ 2 ] !== undefined ) {

				console.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );
				renderTarget = arguments[ 2 ];

			}

			if ( arguments[ 3 ] !== undefined ) {

				console.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );
				forceClear = arguments[ 3 ];

			}

			if ( ! ( camera && camera.isCamera ) ) {

				console.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );
				return;

			}

			if ( _isContextLost ) { return; }

			// reset caching for this frame

			_currentGeometryProgram.geometry = null;
			_currentGeometryProgram.program = null;
			_currentGeometryProgram.wireframe = false;
			_currentMaterialId = - 1;
			_currentCamera = null;

			// update scene graph

			if ( scene.autoUpdate === true ) { scene.updateMatrixWorld(); }

			// update camera matrices and frustum

			if ( camera.parent === null ) { camera.updateMatrixWorld(); }

			if ( xr.enabled && xr.isPresenting ) {

				camera = xr.getCamera( camera );

			}

			//

			currentRenderState = renderStates.get( scene, camera );
			currentRenderState.init();

			scene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );

			_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
			_frustum.setFromProjectionMatrix( _projScreenMatrix );

			_localClippingEnabled = this.localClippingEnabled;
			_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );

			currentRenderList = renderLists.get( scene, camera );
			currentRenderList.init();

			projectObject( scene, camera, 0, _this.sortObjects );

			currentRenderList.finish();

			if ( _this.sortObjects === true ) {

				currentRenderList.sort( _opaqueSort, _transparentSort );

			}

			//

			if ( _clippingEnabled ) { _clipping.beginShadows(); }

			var shadowsArray = currentRenderState.state.shadowsArray;

			shadowMap.render( shadowsArray, scene, camera );

			currentRenderState.setupLights( camera );

			if ( _clippingEnabled ) { _clipping.endShadows(); }

			//

			if ( this.info.autoReset ) { this.info.reset(); }

			if ( renderTarget !== undefined ) {

				this.setRenderTarget( renderTarget );

			}

			//

			background.render( currentRenderList, scene, camera, forceClear );

			// render scene

			var opaqueObjects = currentRenderList.opaque;
			var transparentObjects = currentRenderList.transparent;

			if ( scene.overrideMaterial ) {

				var overrideMaterial = scene.overrideMaterial;

				if ( opaqueObjects.length ) { renderObjects( opaqueObjects, scene, camera, overrideMaterial ); }
				if ( transparentObjects.length ) { renderObjects( transparentObjects, scene, camera, overrideMaterial ); }

			} else {

				// opaque pass (front-to-back order)

				if ( opaqueObjects.length ) { renderObjects( opaqueObjects, scene, camera ); }

				// transparent pass (back-to-front order)

				if ( transparentObjects.length ) { renderObjects( transparentObjects, scene, camera ); }

			}

			//

			scene.onAfterRender( _this, scene, camera );

			//

			if ( _currentRenderTarget !== null ) {

				// Generate mipmap if we're using any kind of mipmap filtering

				textures.updateRenderTargetMipmap( _currentRenderTarget );

				// resolve multisample renderbuffers to a single-sample texture if necessary

				textures.updateMultisampleRenderTarget( _currentRenderTarget );

			}

			// Ensure depth buffer writing is enabled so it can be cleared on next render

			state.buffers.depth.setTest( true );
			state.buffers.depth.setMask( true );
			state.buffers.color.setMask( true );

			state.setPolygonOffset( false );

			// _gl.finish();

			currentRenderList = null;
			currentRenderState = null;

		};

		function projectObject( object, camera, groupOrder, sortObjects ) {

			if ( object.visible === false ) { return; }

			var visible = object.layers.test( camera.layers );

			if ( visible ) {

				if ( object.isGroup ) {

					groupOrder = object.renderOrder;

				} else if ( object.isLOD ) {

					if ( object.autoUpdate === true ) { object.update( camera ); }

				} else if ( object.isLight ) {

					currentRenderState.pushLight( object );

					if ( object.castShadow ) {

						currentRenderState.pushShadow( object );

					}

				} else if ( object.isSprite ) {

					if ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {

						if ( sortObjects ) {

							_vector3.setFromMatrixPosition( object.matrixWorld )
								.applyMatrix4( _projScreenMatrix );

						}

						var geometry = objects.update( object );
						var material = object.material;

						if ( material.visible ) {

							currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );

						}

					}

				} else if ( object.isImmediateRenderObject ) {

					if ( sortObjects ) {

						_vector3.setFromMatrixPosition( object.matrixWorld )
							.applyMatrix4( _projScreenMatrix );

					}

					currentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );

				} else if ( object.isMesh || object.isLine || object.isPoints ) {

					if ( object.isSkinnedMesh ) {

						// update skeleton only once in a frame

						if ( object.skeleton.frame !== info.render.frame ) {

							object.skeleton.update();
							object.skeleton.frame = info.render.frame;

						}

					}

					if ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {

						if ( sortObjects ) {

							_vector3.setFromMatrixPosition( object.matrixWorld )
								.applyMatrix4( _projScreenMatrix );

						}

						var geometry = objects.update( object );
						var material = object.material;

						if ( Array.isArray( material ) ) {

							var groups = geometry.groups;

							for ( var i = 0, l = groups.length; i < l; i ++ ) {

								var group = groups[ i ];
								var groupMaterial = material[ group.materialIndex ];

								if ( groupMaterial && groupMaterial.visible ) {

									currentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );

								}

							}

						} else if ( material.visible ) {

							currentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );

						}

					}

				}

			}

			var children = object.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				projectObject( children[ i ], camera, groupOrder, sortObjects );

			}

		}

		function renderObjects( renderList, scene, camera, overrideMaterial ) {

			for ( var i = 0, l = renderList.length; i < l; i ++ ) {

				var renderItem = renderList[ i ];

				var object = renderItem.object;
				var geometry = renderItem.geometry;
				var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;
				var group = renderItem.group;

				if ( camera.isArrayCamera ) {

					_currentArrayCamera = camera;

					var cameras = camera.cameras;

					for ( var j = 0, jl = cameras.length; j < jl; j ++ ) {

						var camera2 = cameras[ j ];

						if ( object.layers.test( camera2.layers ) ) {

							state.viewport( _currentViewport.copy( camera2.viewport ) );

							currentRenderState.setupLights( camera2 );

							renderObject( object, scene, camera2, geometry, material, group );

						}

					}

				} else {

					_currentArrayCamera = null;

					renderObject( object, scene, camera, geometry, material, group );

				}

			}

		}

		function renderObject( object, scene, camera, geometry, material, group ) {

			object.onBeforeRender( _this, scene, camera, geometry, material, group );
			currentRenderState = renderStates.get( scene, _currentArrayCamera || camera );

			object.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );
			object.normalMatrix.getNormalMatrix( object.modelViewMatrix );

			if ( object.isImmediateRenderObject ) {

				var program = setProgram( camera, scene, material, object );

				state.setMaterial( material );

				_currentGeometryProgram.geometry = null;
				_currentGeometryProgram.program = null;
				_currentGeometryProgram.wireframe = false;

				renderObjectImmediate( object, program );

			} else {

				_this.renderBufferDirect( camera, scene, geometry, material, object, group );

			}

			object.onAfterRender( _this, scene, camera, geometry, material, group );
			currentRenderState = renderStates.get( scene, _currentArrayCamera || camera );

		}

		function initMaterial( material, scene, object ) {

			var materialProperties = properties.get( material );

			var lights = currentRenderState.state.lights;
			var shadowsArray = currentRenderState.state.shadowsArray;

			var lightsStateVersion = lights.state.version;

			var parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, _clipping.numPlanes, _clipping.numIntersection, object );
			var programCacheKey = programCache.getProgramCacheKey( parameters );

			var program = materialProperties.program;
			var programChange = true;

			if ( program === undefined ) {

				// new material
				material.addEventListener( 'dispose', onMaterialDispose );

			} else if ( program.cacheKey !== programCacheKey ) {

				// changed glsl or parameters
				releaseMaterialProgramReference( material );

			} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {

				materialProperties.lightsStateVersion = lightsStateVersion;

				programChange = false;

			} else if ( parameters.shaderID !== undefined ) {

				// same glsl and uniform list
				return;

			} else {

				// only rebuild uniform list
				programChange = false;

			}

			if ( programChange ) {

				program = programCache.acquireProgram( parameters, programCacheKey );

				materialProperties.program = program;
				materialProperties.uniforms = parameters.uniforms;
				materialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;
				materialProperties.outputEncoding = _this.outputEncoding;
				material.program = program;

			}

			var programAttributes = program.getAttributes();

			if ( material.morphTargets ) {

				material.numSupportedMorphTargets = 0;

				for ( var i = 0; i < _this.maxMorphTargets; i ++ ) {

					if ( programAttributes[ 'morphTarget' + i ] >= 0 ) {

						material.numSupportedMorphTargets ++;

					}

				}

			}

			if ( material.morphNormals ) {

				material.numSupportedMorphNormals = 0;

				for ( var i = 0; i < _this.maxMorphNormals; i ++ ) {

					if ( programAttributes[ 'morphNormal' + i ] >= 0 ) {

						material.numSupportedMorphNormals ++;

					}

				}

			}

			var uniforms = materialProperties.uniforms;

			if ( ! material.isShaderMaterial &&
				! material.isRawShaderMaterial ||
				material.clipping === true ) {

				materialProperties.numClippingPlanes = _clipping.numPlanes;
				materialProperties.numIntersection = _clipping.numIntersection;
				uniforms.clippingPlanes = _clipping.uniform;

			}

			materialProperties.fog = scene.fog;

			// store the light setup it was created for

			materialProperties.needsLights = materialNeedsLights( material );
			materialProperties.lightsStateVersion = lightsStateVersion;

			if ( materialProperties.needsLights ) {

				// wire up the material to this renderer's lighting state

				uniforms.ambientLightColor.value = lights.state.ambient;
				uniforms.lightProbe.value = lights.state.probe;
				uniforms.directionalLights.value = lights.state.directional;
				uniforms.directionalLightShadows.value = lights.state.directionalShadow;
				uniforms.spotLights.value = lights.state.spot;
				uniforms.spotLightShadows.value = lights.state.spotShadow;
				uniforms.rectAreaLights.value = lights.state.rectArea;
				uniforms.pointLights.value = lights.state.point;
				uniforms.pointLightShadows.value = lights.state.pointShadow;
				uniforms.hemisphereLights.value = lights.state.hemi;

				uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;
				uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;
				uniforms.spotShadowMap.value = lights.state.spotShadowMap;
				uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;
				uniforms.pointShadowMap.value = lights.state.pointShadowMap;
				uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;
				// TODO (abelnation): add area lights shadow info to uniforms

			}

			var progUniforms = materialProperties.program.getUniforms(),
				uniformsList =
					WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );

			materialProperties.uniformsList = uniformsList;

		}

		function setProgram( camera, scene, material, object ) {

			textures.resetTextureUnits();

			var fog = scene.fog;
			var environment = material.isMeshStandardMaterial ? scene.environment : null;

			var materialProperties = properties.get( material );
			var lights = currentRenderState.state.lights;

			if ( _clippingEnabled ) {

				if ( _localClippingEnabled || camera !== _currentCamera ) {

					var useCache =
						camera === _currentCamera &&
						material.id === _currentMaterialId;

					// we might want to call this function with some ClippingGroup
					// object instead of the material, once it becomes feasible
					// (#8465, #8379)
					_clipping.setState(
						material.clippingPlanes, material.clipIntersection, material.clipShadows,
						camera, materialProperties, useCache );

				}

			}

			if ( material.version === materialProperties.__version ) {

				if ( materialProperties.program === undefined ) {

					initMaterial( material, scene, object );

				} else if ( material.fog && materialProperties.fog !== fog ) {

					initMaterial( material, scene, object );

				} else if ( materialProperties.environment !== environment ) {

					initMaterial( material, scene, object );

				} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {

					initMaterial( material, scene, object );

				} else if ( materialProperties.numClippingPlanes !== undefined &&
					( materialProperties.numClippingPlanes !== _clipping.numPlanes ||
					materialProperties.numIntersection !== _clipping.numIntersection ) ) {

					initMaterial( material, scene, object );

				} else if ( materialProperties.outputEncoding !== _this.outputEncoding ) {

					initMaterial( material, scene, object );

				}

			} else {

				initMaterial( material, scene, object );
				materialProperties.__version = material.version;

			}

			var refreshProgram = false;
			var refreshMaterial = false;
			var refreshLights = false;

			var program = materialProperties.program,
				p_uniforms = program.getUniforms(),
				m_uniforms = materialProperties.uniforms;

			if ( state.useProgram( program.program ) ) {

				refreshProgram = true;
				refreshMaterial = true;
				refreshLights = true;

			}

			if ( material.id !== _currentMaterialId ) {

				_currentMaterialId = material.id;

				refreshMaterial = true;

			}

			if ( refreshProgram || _currentCamera !== camera ) {

				p_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );

				if ( capabilities.logarithmicDepthBuffer ) {

					p_uniforms.setValue( _gl, 'logDepthBufFC',
						2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );

				}

				if ( _currentCamera !== camera ) {

					_currentCamera = camera;

					// lighting uniforms depend on the camera so enforce an update
					// now, in case this material supports lights - or later, when
					// the next material that does gets activated:

					refreshMaterial = true;		// set to true on material change
					refreshLights = true;		// remains set until update done

				}

				// load material specific uniforms
				// (shader material also gets them for the sake of genericity)

				if ( material.isShaderMaterial ||
					material.isMeshPhongMaterial ||
					material.isMeshToonMaterial ||
					material.isMeshStandardMaterial ||
					material.envMap ) {

					var uCamPos = p_uniforms.map.cameraPosition;

					if ( uCamPos !== undefined ) {

						uCamPos.setValue( _gl,
							_vector3.setFromMatrixPosition( camera.matrixWorld ) );

					}

				}

				if ( material.isMeshPhongMaterial ||
					material.isMeshToonMaterial ||
					material.isMeshLambertMaterial ||
					material.isMeshBasicMaterial ||
					material.isMeshStandardMaterial ||
					material.isShaderMaterial ) {

					p_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );

				}

				if ( material.isMeshPhongMaterial ||
					material.isMeshToonMaterial ||
					material.isMeshLambertMaterial ||
					material.isMeshBasicMaterial ||
					material.isMeshStandardMaterial ||
					material.isShaderMaterial ||
					material.skinning ) {

					p_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );

				}

			}

			// skinning uniforms must be set even if material didn't change
			// auto-setting of texture unit for bone texture must go before other textures
			// otherwise textures used for skinning can take over texture units reserved for other material textures

			if ( material.skinning ) {

				p_uniforms.setOptional( _gl, object, 'bindMatrix' );
				p_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );

				var skeleton = object.skeleton;

				if ( skeleton ) {

					var bones = skeleton.bones;

					if ( capabilities.floatVertexTextures ) {

						if ( skeleton.boneTexture === undefined ) {

							// layout (1 matrix = 4 pixels)
							//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)
							//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)
							//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)
							//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)
							//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)


							var size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix
							size = MathUtils.ceilPowerOfTwo( size );
							size = Math.max( size, 4 );

							var boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel
							boneMatrices.set( skeleton.boneMatrices ); // copy current values

							var boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );

							skeleton.boneMatrices = boneMatrices;
							skeleton.boneTexture = boneTexture;
							skeleton.boneTextureSize = size;

						}

						p_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );
						p_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );

					} else {

						p_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );

					}

				}

			}

			if ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {

				materialProperties.receiveShadow = object.receiveShadow;
				p_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );

			}

			if ( refreshMaterial ) {

				p_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );
				p_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );

				if ( materialProperties.needsLights ) {

					// the current material requires lighting info

					// note: all lighting uniforms are always set correctly
					// they simply reference the renderer's state for their
					// values
					//
					// use the current material's .needsUpdate flags to set
					// the GL state when required

					markUniformsLightsNeedsUpdate( m_uniforms, refreshLights );

				}

				// refresh uniforms common to several materials

				if ( fog && material.fog ) {

					refreshUniformsFog( m_uniforms, fog );

				}

				if ( material.isMeshBasicMaterial ) {

					refreshUniformsCommon( m_uniforms, material );

				} else if ( material.isMeshLambertMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsLambert( m_uniforms, material );

				} else if ( material.isMeshToonMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsToon( m_uniforms, material );

				} else if ( material.isMeshPhongMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsPhong( m_uniforms, material );

				} else if ( material.isMeshStandardMaterial ) {

					refreshUniformsCommon( m_uniforms, material, environment );

					if ( material.isMeshPhysicalMaterial ) {

						refreshUniformsPhysical( m_uniforms, material, environment );

					} else {

						refreshUniformsStandard( m_uniforms, material, environment );

					}

				} else if ( material.isMeshMatcapMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsMatcap( m_uniforms, material );

				} else if ( material.isMeshDepthMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsDepth( m_uniforms, material );

				} else if ( material.isMeshDistanceMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsDistance( m_uniforms, material );

				} else if ( material.isMeshNormalMaterial ) {

					refreshUniformsCommon( m_uniforms, material );
					refreshUniformsNormal( m_uniforms, material );

				} else if ( material.isLineBasicMaterial ) {

					refreshUniformsLine( m_uniforms, material );

					if ( material.isLineDashedMaterial ) {

						refreshUniformsDash( m_uniforms, material );

					}

				} else if ( material.isPointsMaterial ) {

					refreshUniformsPoints( m_uniforms, material );

				} else if ( material.isSpriteMaterial ) {

					refreshUniformsSprites( m_uniforms, material );

				} else if ( material.isShadowMaterial ) {

					m_uniforms.color.value.copy( material.color );
					m_uniforms.opacity.value = material.opacity;

				}

				// RectAreaLight Texture
				// TODO (mrdoob): Find a nicer implementation

				if ( m_uniforms.ltc_1 !== undefined ) { m_uniforms.ltc_1.value = UniformsLib.LTC_1; }
				if ( m_uniforms.ltc_2 !== undefined ) { m_uniforms.ltc_2.value = UniformsLib.LTC_2; }

				WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );

				if ( material.isShaderMaterial ) {

					material.uniformsNeedUpdate = false; // #15581

				}

			}

			if ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {

				WebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );
				material.uniformsNeedUpdate = false;

			}

			if ( material.isSpriteMaterial ) {

				p_uniforms.setValue( _gl, 'center', object.center );

			}

			// common matrices

			p_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );
			p_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );
			p_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );

			return program;

		}

		// Uniforms (refresh uniforms objects)

		function refreshUniformsCommon( uniforms, material, environment ) {

			uniforms.opacity.value = material.opacity;

			if ( material.color ) {

				uniforms.diffuse.value.copy( material.color );

			}

			if ( material.emissive ) {

				uniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );

			}

			if ( material.map ) {

				uniforms.map.value = material.map;

			}

			if ( material.alphaMap ) {

				uniforms.alphaMap.value = material.alphaMap;

			}

			if ( material.specularMap ) {

				uniforms.specularMap.value = material.specularMap;

			}

			var envMap = material.envMap || environment;

			if ( envMap ) {

				uniforms.envMap.value = envMap;

				uniforms.flipEnvMap.value = envMap.isCubeTexture ? - 1 : 1;

				uniforms.reflectivity.value = material.reflectivity;
				uniforms.refractionRatio.value = material.refractionRatio;

				uniforms.maxMipLevel.value = properties.get( envMap ).__maxMipLevel;

			}

			if ( material.lightMap ) {

				uniforms.lightMap.value = material.lightMap;
				uniforms.lightMapIntensity.value = material.lightMapIntensity;

			}

			if ( material.aoMap ) {

				uniforms.aoMap.value = material.aoMap;
				uniforms.aoMapIntensity.value = material.aoMapIntensity;

			}

			// uv repeat and offset setting priorities
			// 1. color map
			// 2. specular map
			// 3. normal map
			// 4. bump map
			// 5. alpha map
			// 6. emissive map

			var uvScaleMap;

			if ( material.map ) {

				uvScaleMap = material.map;

			} else if ( material.specularMap ) {

				uvScaleMap = material.specularMap;

			} else if ( material.displacementMap ) {

				uvScaleMap = material.displacementMap;

			} else if ( material.normalMap ) {

				uvScaleMap = material.normalMap;

			} else if ( material.bumpMap ) {

				uvScaleMap = material.bumpMap;

			} else if ( material.roughnessMap ) {

				uvScaleMap = material.roughnessMap;

			} else if ( material.metalnessMap ) {

				uvScaleMap = material.metalnessMap;

			} else if ( material.alphaMap ) {

				uvScaleMap = material.alphaMap;

			} else if ( material.emissiveMap ) {

				uvScaleMap = material.emissiveMap;

			}

			if ( uvScaleMap !== undefined ) {

				// backwards compatibility
				if ( uvScaleMap.isWebGLRenderTarget ) {

					uvScaleMap = uvScaleMap.texture;

				}

				if ( uvScaleMap.matrixAutoUpdate === true ) {

					uvScaleMap.updateMatrix();

				}

				uniforms.uvTransform.value.copy( uvScaleMap.matrix );

			}

			// uv repeat and offset setting priorities for uv2
			// 1. ao map
			// 2. light map

			var uv2ScaleMap;

			if ( material.aoMap ) {

				uv2ScaleMap = material.aoMap;

			} else if ( material.lightMap ) {

				uv2ScaleMap = material.lightMap;

			}

			if ( uv2ScaleMap !== undefined ) {

				// backwards compatibility
				if ( uv2ScaleMap.isWebGLRenderTarget ) {

					uv2ScaleMap = uv2ScaleMap.texture;

				}

				if ( uv2ScaleMap.matrixAutoUpdate === true ) {

					uv2ScaleMap.updateMatrix();

				}

				uniforms.uv2Transform.value.copy( uv2ScaleMap.matrix );

			}

		}

		function refreshUniformsLine( uniforms, material ) {

			uniforms.diffuse.value.copy( material.color );
			uniforms.opacity.value = material.opacity;

		}

		function refreshUniformsDash( uniforms, material ) {

			uniforms.dashSize.value = material.dashSize;
			uniforms.totalSize.value = material.dashSize + material.gapSize;
			uniforms.scale.value = material.scale;

		}

		function refreshUniformsPoints( uniforms, material ) {

			uniforms.diffuse.value.copy( material.color );
			uniforms.opacity.value = material.opacity;
			uniforms.size.value = material.size * _pixelRatio;
			uniforms.scale.value = _height * 0.5;

			if ( material.map ) {

				uniforms.map.value = material.map;

			}

			if ( material.alphaMap ) {

				uniforms.alphaMap.value = material.alphaMap;

			}

			// uv repeat and offset setting priorities
			// 1. color map
			// 2. alpha map

			var uvScaleMap;

			if ( material.map ) {

				uvScaleMap = material.map;

			} else if ( material.alphaMap ) {

				uvScaleMap = material.alphaMap;

			}

			if ( uvScaleMap !== undefined ) {

				if ( uvScaleMap.matrixAutoUpdate === true ) {

					uvScaleMap.updateMatrix();

				}

				uniforms.uvTransform.value.copy( uvScaleMap.matrix );

			}

		}

		function refreshUniformsSprites( uniforms, material ) {

			uniforms.diffuse.value.copy( material.color );
			uniforms.opacity.value = material.opacity;
			uniforms.rotation.value = material.rotation;

			if ( material.map ) {

				uniforms.map.value = material.map;

			}

			if ( material.alphaMap ) {

				uniforms.alphaMap.value = material.alphaMap;

			}

			// uv repeat and offset setting priorities
			// 1. color map
			// 2. alpha map

			var uvScaleMap;

			if ( material.map ) {

				uvScaleMap = material.map;

			} else if ( material.alphaMap ) {

				uvScaleMap = material.alphaMap;

			}

			if ( uvScaleMap !== undefined ) {

				if ( uvScaleMap.matrixAutoUpdate === true ) {

					uvScaleMap.updateMatrix();

				}

				uniforms.uvTransform.value.copy( uvScaleMap.matrix );

			}

		}

		function refreshUniformsFog( uniforms, fog ) {

			uniforms.fogColor.value.copy( fog.color );

			if ( fog.isFog ) {

				uniforms.fogNear.value = fog.near;
				uniforms.fogFar.value = fog.far;

			} else if ( fog.isFogExp2 ) {

				uniforms.fogDensity.value = fog.density;

			}

		}

		function refreshUniformsLambert( uniforms, material ) {

			if ( material.emissiveMap ) {

				uniforms.emissiveMap.value = material.emissiveMap;

			}

		}

		function refreshUniformsPhong( uniforms, material ) {

			uniforms.specular.value.copy( material.specular );
			uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )

			if ( material.emissiveMap ) {

				uniforms.emissiveMap.value = material.emissiveMap;

			}

			if ( material.bumpMap ) {

				uniforms.bumpMap.value = material.bumpMap;
				uniforms.bumpScale.value = material.bumpScale;
				if ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }

			}

			if ( material.normalMap ) {

				uniforms.normalMap.value = material.normalMap;
				uniforms.normalScale.value.copy( material.normalScale );
				if ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }

			}

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

		}

		function refreshUniformsToon( uniforms, material ) {

			uniforms.specular.value.copy( material.specular );
			uniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )

			if ( material.gradientMap ) {

				uniforms.gradientMap.value = material.gradientMap;

			}

			if ( material.emissiveMap ) {

				uniforms.emissiveMap.value = material.emissiveMap;

			}

			if ( material.bumpMap ) {

				uniforms.bumpMap.value = material.bumpMap;
				uniforms.bumpScale.value = material.bumpScale;
				if ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }

			}

			if ( material.normalMap ) {

				uniforms.normalMap.value = material.normalMap;
				uniforms.normalScale.value.copy( material.normalScale );
				if ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }

			}

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

		}

		function refreshUniformsStandard( uniforms, material, environment ) {

			uniforms.roughness.value = material.roughness;
			uniforms.metalness.value = material.metalness;

			if ( material.roughnessMap ) {

				uniforms.roughnessMap.value = material.roughnessMap;

			}

			if ( material.metalnessMap ) {

				uniforms.metalnessMap.value = material.metalnessMap;

			}

			if ( material.emissiveMap ) {

				uniforms.emissiveMap.value = material.emissiveMap;

			}

			if ( material.bumpMap ) {

				uniforms.bumpMap.value = material.bumpMap;
				uniforms.bumpScale.value = material.bumpScale;
				if ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }

			}

			if ( material.normalMap ) {

				uniforms.normalMap.value = material.normalMap;
				uniforms.normalScale.value.copy( material.normalScale );
				if ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }

			}

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

			if ( material.envMap || environment ) {

				//uniforms.envMap.value = material.envMap; // part of uniforms common
				uniforms.envMapIntensity.value = material.envMapIntensity;

			}

		}

		function refreshUniformsPhysical( uniforms, material, environment ) {

			refreshUniformsStandard( uniforms, material, environment );

			uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common

			uniforms.clearcoat.value = material.clearcoat;
			uniforms.clearcoatRoughness.value = material.clearcoatRoughness;
			if ( material.sheen ) { uniforms.sheen.value.copy( material.sheen ); }

			if ( material.clearcoatMap ) {

				uniforms.clearcoatMap.value = material.clearcoatMap;

			}

			if ( material.clearcoatRoughnessMap ) {

				uniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;

			}

			if ( material.clearcoatNormalMap ) {

				uniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );
				uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;

				if ( material.side === BackSide ) {

					uniforms.clearcoatNormalScale.value.negate();

				}

			}

			uniforms.transparency.value = material.transparency;

		}

		function refreshUniformsMatcap( uniforms, material ) {

			if ( material.matcap ) {

				uniforms.matcap.value = material.matcap;

			}

			if ( material.bumpMap ) {

				uniforms.bumpMap.value = material.bumpMap;
				uniforms.bumpScale.value = material.bumpScale;
				if ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }

			}

			if ( material.normalMap ) {

				uniforms.normalMap.value = material.normalMap;
				uniforms.normalScale.value.copy( material.normalScale );
				if ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }

			}

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

		}

		function refreshUniformsDepth( uniforms, material ) {

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

		}

		function refreshUniformsDistance( uniforms, material ) {

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

			uniforms.referencePosition.value.copy( material.referencePosition );
			uniforms.nearDistance.value = material.nearDistance;
			uniforms.farDistance.value = material.farDistance;

		}

		function refreshUniformsNormal( uniforms, material ) {

			if ( material.bumpMap ) {

				uniforms.bumpMap.value = material.bumpMap;
				uniforms.bumpScale.value = material.bumpScale;
				if ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }

			}

			if ( material.normalMap ) {

				uniforms.normalMap.value = material.normalMap;
				uniforms.normalScale.value.copy( material.normalScale );
				if ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }

			}

			if ( material.displacementMap ) {

				uniforms.displacementMap.value = material.displacementMap;
				uniforms.displacementScale.value = material.displacementScale;
				uniforms.displacementBias.value = material.displacementBias;

			}

		}

		// If uniforms are marked as clean, they don't need to be loaded to the GPU.

		function markUniformsLightsNeedsUpdate( uniforms, value ) {

			uniforms.ambientLightColor.needsUpdate = value;
			uniforms.lightProbe.needsUpdate = value;

			uniforms.directionalLights.needsUpdate = value;
			uniforms.directionalLightShadows.needsUpdate = value;
			uniforms.pointLights.needsUpdate = value;
			uniforms.pointLightShadows.needsUpdate = value;
			uniforms.spotLights.needsUpdate = value;
			uniforms.spotLightShadows.needsUpdate = value;
			uniforms.rectAreaLights.needsUpdate = value;
			uniforms.hemisphereLights.needsUpdate = value;

		}

		function materialNeedsLights( material ) {

			return material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||
				material.isMeshStandardMaterial || material.isShadowMaterial ||
				( material.isShaderMaterial && material.lights === true );

		}

		//
		this.setFramebuffer = function ( value ) {

			if ( _framebuffer !== value && _currentRenderTarget === null ) { _gl.bindFramebuffer( 36160, value ); }

			_framebuffer = value;

		};

		this.getActiveCubeFace = function () {

			return _currentActiveCubeFace;

		};

		this.getActiveMipmapLevel = function () {

			return _currentActiveMipmapLevel;

		};

		this.getRenderTarget = function () {

			return _currentRenderTarget;

		};

		this.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {

			_currentRenderTarget = renderTarget;
			_currentActiveCubeFace = activeCubeFace;
			_currentActiveMipmapLevel = activeMipmapLevel;

			if ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {

				textures.setupRenderTarget( renderTarget );

			}

			var framebuffer = _framebuffer;
			var isCube = false;

			if ( renderTarget ) {

				var __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;

				if ( renderTarget.isWebGLCubeRenderTarget ) {

					framebuffer = __webglFramebuffer[ activeCubeFace || 0 ];
					isCube = true;

				} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {

					framebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;

				} else {

					framebuffer = __webglFramebuffer;

				}

				_currentViewport.copy( renderTarget.viewport );
				_currentScissor.copy( renderTarget.scissor );
				_currentScissorTest = renderTarget.scissorTest;

			} else {

				_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();
				_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();
				_currentScissorTest = _scissorTest;

			}

			if ( _currentFramebuffer !== framebuffer ) {

				_gl.bindFramebuffer( 36160, framebuffer );
				_currentFramebuffer = framebuffer;

			}

			state.viewport( _currentViewport );
			state.scissor( _currentScissor );
			state.setScissorTest( _currentScissorTest );

			if ( isCube ) {

				var textureProperties = properties.get( renderTarget.texture );
				_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );

			}

		};

		this.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {

			if ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {

				console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );
				return;

			}

			var framebuffer = properties.get( renderTarget ).__webglFramebuffer;

			if ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {

				framebuffer = framebuffer[ activeCubeFaceIndex ];

			}

			if ( framebuffer ) {

				var restore = false;

				if ( framebuffer !== _currentFramebuffer ) {

					_gl.bindFramebuffer( 36160, framebuffer );

					restore = true;

				}

				try {

					var texture = renderTarget.texture;
					var textureFormat = texture.format;
					var textureType = texture.type;

					if ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {

						console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );
						return;

					}

					if ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)
						! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox
						! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {

						console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );
						return;

					}

					if ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {

						// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)

						if ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {

							_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );

						}

					} else {

						console.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );

					}

				} finally {

					if ( restore ) {

						_gl.bindFramebuffer( 36160, _currentFramebuffer );

					}

				}

			}

		};

		this.copyFramebufferToTexture = function ( position, texture, level ) {

			if ( level === undefined ) { level = 0; }

			var levelScale = Math.pow( 2, - level );
			var width = Math.floor( texture.image.width * levelScale );
			var height = Math.floor( texture.image.height * levelScale );
			var glFormat = utils.convert( texture.format );

			textures.setTexture2D( texture, 0 );

			_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );

			state.unbindTexture();

		};

		this.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {

			var width = srcTexture.image.width;
			var height = srcTexture.image.height;
			var glFormat = utils.convert( dstTexture.format );
			var glType = utils.convert( dstTexture.type );

			textures.setTexture2D( dstTexture, 0 );

			if ( srcTexture.isDataTexture ) {

				_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );

			} else {

				_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );

			}

			state.unbindTexture();

		};

		this.initTexture = function ( texture ) {

			textures.setTexture2D( texture, 0 );

			state.unbindTexture();

		};

		if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

			__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef

		}

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 */

	function FogExp2( color, density ) {

		this.name = '';

		this.color = new Color( color );
		this.density = ( density !== undefined ) ? density : 0.00025;

	}

	Object.assign( FogExp2.prototype, {

		isFogExp2: true,

		clone: function () {

			return new FogExp2( this.color, this.density );

		},

		toJSON: function ( /* meta */ ) {

			return {
				type: 'FogExp2',
				color: this.color.getHex(),
				density: this.density
			};

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 */

	function Fog( color, near, far ) {

		this.name = '';

		this.color = new Color( color );

		this.near = ( near !== undefined ) ? near : 1;
		this.far = ( far !== undefined ) ? far : 1000;

	}

	Object.assign( Fog.prototype, {

		isFog: true,

		clone: function () {

			return new Fog( this.color, this.near, this.far );

		},

		toJSON: function ( /* meta */ ) {

			return {
				type: 'Fog',
				color: this.color.getHex(),
				near: this.near,
				far: this.far
			};

		}

	} );

	/**
	 * @author benaadams / https://twitter.com/ben_a_adams
	 */

	function InterleavedBuffer( array, stride ) {

		this.array = array;
		this.stride = stride;
		this.count = array !== undefined ? array.length / stride : 0;

		this.usage = StaticDrawUsage;
		this.updateRange = { offset: 0, count: - 1 };

		this.version = 0;

	}

	Object.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {

		set: function ( value ) {

			if ( value === true ) { this.version ++; }

		}

	} );

	Object.assign( InterleavedBuffer.prototype, {

		isInterleavedBuffer: true,

		onUploadCallback: function () {},

		setUsage: function ( value ) {

			this.usage = value;

			return this;

		},

		copy: function ( source ) {

			this.array = new source.array.constructor( source.array );
			this.count = source.count;
			this.stride = source.stride;
			this.usage = source.usage;

			return this;

		},

		copyAt: function ( index1, attribute, index2 ) {

			index1 *= this.stride;
			index2 *= attribute.stride;

			for ( var i = 0, l = this.stride; i < l; i ++ ) {

				this.array[ index1 + i ] = attribute.array[ index2 + i ];

			}

			return this;

		},

		set: function ( value, offset ) {

			if ( offset === undefined ) { offset = 0; }

			this.array.set( value, offset );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		onUpload: function ( callback ) {

			this.onUploadCallback = callback;

			return this;

		}

	} );

	/**
	 * @author benaadams / https://twitter.com/ben_a_adams
	 */

	var _vector$6 = new Vector3();

	function InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {

		this.data = interleavedBuffer;
		this.itemSize = itemSize;
		this.offset = offset;

		this.normalized = normalized === true;

	}

	Object.defineProperties( InterleavedBufferAttribute.prototype, {

		count: {

			get: function () {

				return this.data.count;

			}

		},

		array: {

			get: function () {

				return this.data.array;

			}

		}

	} );

	Object.assign( InterleavedBufferAttribute.prototype, {

		isInterleavedBufferAttribute: true,

		applyMatrix4: function ( m ) {

			for ( var i = 0, l = this.data.count; i < l; i ++ ) {

				_vector$6.x = this.getX( i );
				_vector$6.y = this.getY( i );
				_vector$6.z = this.getZ( i );

				_vector$6.applyMatrix4( m );

				this.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );

			}

			return this;

		},

		setX: function ( index, x ) {

			this.data.array[ index * this.data.stride + this.offset ] = x;

			return this;

		},

		setY: function ( index, y ) {

			this.data.array[ index * this.data.stride + this.offset + 1 ] = y;

			return this;

		},

		setZ: function ( index, z ) {

			this.data.array[ index * this.data.stride + this.offset + 2 ] = z;

			return this;

		},

		setW: function ( index, w ) {

			this.data.array[ index * this.data.stride + this.offset + 3 ] = w;

			return this;

		},

		getX: function ( index ) {

			return this.data.array[ index * this.data.stride + this.offset ];

		},

		getY: function ( index ) {

			return this.data.array[ index * this.data.stride + this.offset + 1 ];

		},

		getZ: function ( index ) {

			return this.data.array[ index * this.data.stride + this.offset + 2 ];

		},

		getW: function ( index ) {

			return this.data.array[ index * this.data.stride + this.offset + 3 ];

		},

		setXY: function ( index, x, y ) {

			index = index * this.data.stride + this.offset;

			this.data.array[ index + 0 ] = x;
			this.data.array[ index + 1 ] = y;

			return this;

		},

		setXYZ: function ( index, x, y, z ) {

			index = index * this.data.stride + this.offset;

			this.data.array[ index + 0 ] = x;
			this.data.array[ index + 1 ] = y;
			this.data.array[ index + 2 ] = z;

			return this;

		},

		setXYZW: function ( index, x, y, z, w ) {

			index = index * this.data.stride + this.offset;

			this.data.array[ index + 0 ] = x;
			this.data.array[ index + 1 ] = y;
			this.data.array[ index + 2 ] = z;
			this.data.array[ index + 3 ] = w;

			return this;

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  map: new THREE.Texture( <Image> ),
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *  rotation: <float>,
	 *  sizeAttenuation: <bool>
	 * }
	 */

	function SpriteMaterial( parameters ) {

		Material.call( this );

		this.type = 'SpriteMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;

		this.alphaMap = null;

		this.rotation = 0;

		this.sizeAttenuation = true;

		this.transparent = true;

		this.setValues( parameters );

	}

	SpriteMaterial.prototype = Object.create( Material.prototype );
	SpriteMaterial.prototype.constructor = SpriteMaterial;
	SpriteMaterial.prototype.isSpriteMaterial = true;

	SpriteMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.rotation = source.rotation;

		this.sizeAttenuation = source.sizeAttenuation;

		return this;

	};

	/**
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 */

	var _geometry;

	var _intersectPoint = new Vector3();
	var _worldScale = new Vector3();
	var _mvPosition = new Vector3();

	var _alignedPosition = new Vector2();
	var _rotatedPosition = new Vector2();
	var _viewWorldMatrix = new Matrix4();

	var _vA$1 = new Vector3();
	var _vB$1 = new Vector3();
	var _vC$1 = new Vector3();

	var _uvA$1 = new Vector2();
	var _uvB$1 = new Vector2();
	var _uvC$1 = new Vector2();

	function Sprite( material ) {

		Object3D.call( this );

		this.type = 'Sprite';

		if ( _geometry === undefined ) {

			_geometry = new BufferGeometry();

			var float32Array = new Float32Array( [
				- 0.5, - 0.5, 0, 0, 0,
				0.5, - 0.5, 0, 1, 0,
				0.5, 0.5, 0, 1, 1,
				- 0.5, 0.5, 0, 0, 1
			] );

			var interleavedBuffer = new InterleavedBuffer( float32Array, 5 );

			_geometry.setIndex( [ 0, 1, 2,	0, 2, 3 ] );
			_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );
			_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );

		}

		this.geometry = _geometry;
		this.material = ( material !== undefined ) ? material : new SpriteMaterial();

		this.center = new Vector2( 0.5, 0.5 );

	}

	Sprite.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Sprite,

		isSprite: true,

		raycast: function ( raycaster, intersects ) {

			if ( raycaster.camera === null ) {

				console.error( 'THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.' );

			}

			_worldScale.setFromMatrixScale( this.matrixWorld );

			_viewWorldMatrix.copy( raycaster.camera.matrixWorld );
			this.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );

			_mvPosition.setFromMatrixPosition( this.modelViewMatrix );

			if ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {

				_worldScale.multiplyScalar( - _mvPosition.z );

			}

			var rotation = this.material.rotation;
			var sin, cos;
			if ( rotation !== 0 ) {

				cos = Math.cos( rotation );
				sin = Math.sin( rotation );

			}

			var center = this.center;

			transformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
			transformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
			transformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );

			_uvA$1.set( 0, 0 );
			_uvB$1.set( 1, 0 );
			_uvC$1.set( 1, 1 );

			// check first triangle
			var intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );

			if ( intersect === null ) {

				// check second triangle
				transformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );
				_uvB$1.set( 0, 1 );

				intersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );
				if ( intersect === null ) {

					return;

				}

			}

			var distance = raycaster.ray.origin.distanceTo( _intersectPoint );

			if ( distance < raycaster.near || distance > raycaster.far ) { return; }

			intersects.push( {

				distance: distance,
				point: _intersectPoint.clone(),
				uv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),
				face: null,
				object: this

			} );

		},

		clone: function () {

			return new this.constructor( this.material ).copy( this );

		},

		copy: function ( source ) {

			Object3D.prototype.copy.call( this, source );

			if ( source.center !== undefined ) { this.center.copy( source.center ); }

			return this;

		}


	} );

	function transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {

		// compute position in camera space
		_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );

		// to check if rotation is not zero
		if ( sin !== undefined ) {

			_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );
			_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );

		} else {

			_rotatedPosition.copy( _alignedPosition );

		}


		vertexPosition.copy( mvPosition );
		vertexPosition.x += _rotatedPosition.x;
		vertexPosition.y += _rotatedPosition.y;

		// transform to world space
		vertexPosition.applyMatrix4( _viewWorldMatrix );

	}

	/**
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _v1$4 = new Vector3();
	var _v2$2 = new Vector3();

	function LOD() {

		Object3D.call( this );

		this._currentLevel = 0;

		this.type = 'LOD';

		Object.defineProperties( this, {
			levels: {
				enumerable: true,
				value: []
			}
		} );

		this.autoUpdate = true;

	}

	LOD.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: LOD,

		isLOD: true,

		copy: function ( source ) {

			Object3D.prototype.copy.call( this, source, false );

			var levels = source.levels;

			for ( var i = 0, l = levels.length; i < l; i ++ ) {

				var level = levels[ i ];

				this.addLevel( level.object.clone(), level.distance );

			}

			this.autoUpdate = source.autoUpdate;

			return this;

		},

		addLevel: function ( object, distance ) {

			if ( distance === undefined ) { distance = 0; }

			distance = Math.abs( distance );

			var levels = this.levels;

			for ( var l = 0; l < levels.length; l ++ ) {

				if ( distance < levels[ l ].distance ) {

					break;

				}

			}

			levels.splice( l, 0, { distance: distance, object: object } );

			this.add( object );

			return this;

		},

		getCurrentLevel: function () {

			return this._currentLevel;

		},

		getObjectForDistance: function ( distance ) {

			var levels = this.levels;

			if ( levels.length > 0 ) {

				for ( var i = 1, l = levels.length; i < l; i ++ ) {

					if ( distance < levels[ i ].distance ) {

						break;

					}

				}

				return levels[ i - 1 ].object;

			}

			return null;

		},

		raycast: function ( raycaster, intersects ) {

			var levels = this.levels;

			if ( levels.length > 0 ) {

				_v1$4.setFromMatrixPosition( this.matrixWorld );

				var distance = raycaster.ray.origin.distanceTo( _v1$4 );

				this.getObjectForDistance( distance ).raycast( raycaster, intersects );

			}

		},

		update: function ( camera ) {

			var levels = this.levels;

			if ( levels.length > 1 ) {

				_v1$4.setFromMatrixPosition( camera.matrixWorld );
				_v2$2.setFromMatrixPosition( this.matrixWorld );

				var distance = _v1$4.distanceTo( _v2$2 ) / camera.zoom;

				levels[ 0 ].object.visible = true;

				for ( var i = 1, l = levels.length; i < l; i ++ ) {

					if ( distance >= levels[ i ].distance ) {

						levels[ i - 1 ].object.visible = false;
						levels[ i ].object.visible = true;

					} else {

						break;

					}

				}

				this._currentLevel = i - 1;

				for ( ; i < l; i ++ ) {

					levels[ i ].object.visible = false;

				}

			}

		},

		toJSON: function ( meta ) {

			var data = Object3D.prototype.toJSON.call( this, meta );

			if ( this.autoUpdate === false ) { data.object.autoUpdate = false; }

			data.object.levels = [];

			var levels = this.levels;

			for ( var i = 0, l = levels.length; i < l; i ++ ) {

				var level = levels[ i ];

				data.object.levels.push( {
					object: level.object.uuid,
					distance: level.distance
				} );

			}

			return data;

		}

	} );

	/**
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 * @author ikerr / http://verold.com
	 */

	function SkinnedMesh( geometry, material ) {

		if ( geometry && geometry.isGeometry ) {

			console.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );

		}

		Mesh.call( this, geometry, material );

		this.type = 'SkinnedMesh';

		this.bindMode = 'attached';
		this.bindMatrix = new Matrix4();
		this.bindMatrixInverse = new Matrix4();

	}

	SkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {

		constructor: SkinnedMesh,

		isSkinnedMesh: true,

		bind: function ( skeleton, bindMatrix ) {

			this.skeleton = skeleton;

			if ( bindMatrix === undefined ) {

				this.updateMatrixWorld( true );

				this.skeleton.calculateInverses();

				bindMatrix = this.matrixWorld;

			}

			this.bindMatrix.copy( bindMatrix );
			this.bindMatrixInverse.getInverse( bindMatrix );

		},

		pose: function () {

			this.skeleton.pose();

		},

		normalizeSkinWeights: function () {

			var vector = new Vector4();

			var skinWeight = this.geometry.attributes.skinWeight;

			for ( var i = 0, l = skinWeight.count; i < l; i ++ ) {

				vector.x = skinWeight.getX( i );
				vector.y = skinWeight.getY( i );
				vector.z = skinWeight.getZ( i );
				vector.w = skinWeight.getW( i );

				var scale = 1.0 / vector.manhattanLength();

				if ( scale !== Infinity ) {

					vector.multiplyScalar( scale );

				} else {

					vector.set( 1, 0, 0, 0 ); // do something reasonable

				}

				skinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );

			}

		},

		updateMatrixWorld: function ( force ) {

			Mesh.prototype.updateMatrixWorld.call( this, force );

			if ( this.bindMode === 'attached' ) {

				this.bindMatrixInverse.getInverse( this.matrixWorld );

			} else if ( this.bindMode === 'detached' ) {

				this.bindMatrixInverse.getInverse( this.bindMatrix );

			} else {

				console.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );

			}

		},

		clone: function () {

			return new this.constructor( this.geometry, this.material ).copy( this );

		}

	} );

	/**
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 * @author michael guerrero / http://realitymeltdown.com
	 * @author ikerr / http://verold.com
	 */

	var _offsetMatrix = new Matrix4();
	var _identityMatrix = new Matrix4();

	function Skeleton( bones, boneInverses ) {

		// copy the bone array

		bones = bones || [];

		this.bones = bones.slice( 0 );
		this.boneMatrices = new Float32Array( this.bones.length * 16 );

		this.frame = - 1;

		// use the supplied bone inverses or calculate the inverses

		if ( boneInverses === undefined ) {

			this.calculateInverses();

		} else {

			if ( this.bones.length === boneInverses.length ) {

				this.boneInverses = boneInverses.slice( 0 );

			} else {

				console.warn( 'THREE.Skeleton boneInverses is the wrong length.' );

				this.boneInverses = [];

				for ( var i = 0, il = this.bones.length; i < il; i ++ ) {

					this.boneInverses.push( new Matrix4() );

				}

			}

		}

	}

	Object.assign( Skeleton.prototype, {

		calculateInverses: function () {

			this.boneInverses = [];

			for ( var i = 0, il = this.bones.length; i < il; i ++ ) {

				var inverse = new Matrix4();

				if ( this.bones[ i ] ) {

					inverse.getInverse( this.bones[ i ].matrixWorld );

				}

				this.boneInverses.push( inverse );

			}

		},

		pose: function () {

			var bone, i, il;

			// recover the bind-time world matrices

			for ( i = 0, il = this.bones.length; i < il; i ++ ) {

				bone = this.bones[ i ];

				if ( bone ) {

					bone.matrixWorld.getInverse( this.boneInverses[ i ] );

				}

			}

			// compute the local matrices, positions, rotations and scales

			for ( i = 0, il = this.bones.length; i < il; i ++ ) {

				bone = this.bones[ i ];

				if ( bone ) {

					if ( bone.parent && bone.parent.isBone ) {

						bone.matrix.getInverse( bone.parent.matrixWorld );
						bone.matrix.multiply( bone.matrixWorld );

					} else {

						bone.matrix.copy( bone.matrixWorld );

					}

					bone.matrix.decompose( bone.position, bone.quaternion, bone.scale );

				}

			}

		},

		update: function () {

			var bones = this.bones;
			var boneInverses = this.boneInverses;
			var boneMatrices = this.boneMatrices;
			var boneTexture = this.boneTexture;

			// flatten bone matrices to array

			for ( var i = 0, il = bones.length; i < il; i ++ ) {

				// compute the offset between the current and the original transform

				var matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;

				_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );
				_offsetMatrix.toArray( boneMatrices, i * 16 );

			}

			if ( boneTexture !== undefined ) {

				boneTexture.needsUpdate = true;

			}

		},

		clone: function () {

			return new Skeleton( this.bones, this.boneInverses );

		},

		getBoneByName: function ( name ) {

			for ( var i = 0, il = this.bones.length; i < il; i ++ ) {

				var bone = this.bones[ i ];

				if ( bone.name === name ) {

					return bone;

				}

			}

			return undefined;

		},

		dispose: function ( ) {

			if ( this.boneTexture ) {

				this.boneTexture.dispose();

				this.boneTexture = undefined;

			}

		}

	} );

	/**
	 * @author mikael emtinger / http://gomo.se/
	 * @author alteredq / http://alteredqualia.com/
	 * @author ikerr / http://verold.com
	 */

	function Bone() {

		Object3D.call( this );

		this.type = 'Bone';

	}

	Bone.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Bone,

		isBone: true

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _instanceLocalMatrix = new Matrix4();
	var _instanceWorldMatrix = new Matrix4();

	var _instanceIntersects = [];

	var _mesh = new Mesh();

	function InstancedMesh( geometry, material, count ) {

		Mesh.call( this, geometry, material );

		this.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );

		this.count = count;

		this.frustumCulled = false;

	}

	InstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {

		constructor: InstancedMesh,

		isInstancedMesh: true,

		getMatrixAt: function ( index, matrix ) {

			matrix.fromArray( this.instanceMatrix.array, index * 16 );

		},

		raycast: function ( raycaster, intersects ) {

			var matrixWorld = this.matrixWorld;
			var raycastTimes = this.count;

			_mesh.geometry = this.geometry;
			_mesh.material = this.material;

			if ( _mesh.material === undefined ) { return; }

			for ( var instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {

				// calculate the world matrix for each instance

				this.getMatrixAt( instanceId, _instanceLocalMatrix );

				_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );

				// the mesh represents this single instance

				_mesh.matrixWorld = _instanceWorldMatrix;

				_mesh.raycast( raycaster, _instanceIntersects );

				// process the result of raycast

				if ( _instanceIntersects.length > 0 ) {

					_instanceIntersects[ 0 ].instanceId = instanceId;
					_instanceIntersects[ 0 ].object = this;

					intersects.push( _instanceIntersects[ 0 ] );

					_instanceIntersects.length = 0;

				}

			}

		},

		setMatrixAt: function ( index, matrix ) {

			matrix.toArray( this.instanceMatrix.array, index * 16 );

		},

		updateMorphTargets: function () {

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  opacity: <float>,
	 *
	 *  linewidth: <float>,
	 *  linecap: "round",
	 *  linejoin: "round"
	 * }
	 */

	function LineBasicMaterial( parameters ) {

		Material.call( this );

		this.type = 'LineBasicMaterial';

		this.color = new Color( 0xffffff );

		this.linewidth = 1;
		this.linecap = 'round';
		this.linejoin = 'round';

		this.setValues( parameters );

	}

	LineBasicMaterial.prototype = Object.create( Material.prototype );
	LineBasicMaterial.prototype.constructor = LineBasicMaterial;

	LineBasicMaterial.prototype.isLineBasicMaterial = true;

	LineBasicMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );

		this.linewidth = source.linewidth;
		this.linecap = source.linecap;
		this.linejoin = source.linejoin;

		return this;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _start = new Vector3();
	var _end = new Vector3();
	var _inverseMatrix$1 = new Matrix4();
	var _ray$1 = new Ray();
	var _sphere$2 = new Sphere();

	function Line( geometry, material, mode ) {

		if ( mode === 1 ) {

			console.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );

		}

		Object3D.call( this );

		this.type = 'Line';

		this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
		this.material = material !== undefined ? material : new LineBasicMaterial();

	}

	Line.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Line,

		isLine: true,

		computeLineDistances: function () {

			var geometry = this.geometry;

			if ( geometry.isBufferGeometry ) {

				// we assume non-indexed geometry

				if ( geometry.index === null ) {

					var positionAttribute = geometry.attributes.position;
					var lineDistances = [ 0 ];

					for ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {

						_start.fromBufferAttribute( positionAttribute, i - 1 );
						_end.fromBufferAttribute( positionAttribute, i );

						lineDistances[ i ] = lineDistances[ i - 1 ];
						lineDistances[ i ] += _start.distanceTo( _end );

					}

					geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );

				} else {

					console.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );

				}

			} else if ( geometry.isGeometry ) {

				var vertices = geometry.vertices;
				var lineDistances = geometry.lineDistances;

				lineDistances[ 0 ] = 0;

				for ( var i = 1, l = vertices.length; i < l; i ++ ) {

					lineDistances[ i ] = lineDistances[ i - 1 ];
					lineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );

				}

			}

			return this;

		},

		raycast: function ( raycaster, intersects ) {

			var geometry = this.geometry;
			var matrixWorld = this.matrixWorld;
			var threshold = raycaster.params.Line.threshold;

			// Checking boundingSphere distance to ray

			if ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }

			_sphere$2.copy( geometry.boundingSphere );
			_sphere$2.applyMatrix4( matrixWorld );
			_sphere$2.radius += threshold;

			if ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) { return; }

			//

			_inverseMatrix$1.getInverse( matrixWorld );
			_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );

			var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
			var localThresholdSq = localThreshold * localThreshold;

			var vStart = new Vector3();
			var vEnd = new Vector3();
			var interSegment = new Vector3();
			var interRay = new Vector3();
			var step = ( this && this.isLineSegments ) ? 2 : 1;

			if ( geometry.isBufferGeometry ) {

				var index = geometry.index;
				var attributes = geometry.attributes;
				var positions = attributes.position.array;

				if ( index !== null ) {

					var indices = index.array;

					for ( var i = 0, l = indices.length - 1; i < l; i += step ) {

						var a = indices[ i ];
						var b = indices[ i + 1 ];

						vStart.fromArray( positions, a * 3 );
						vEnd.fromArray( positions, b * 3 );

						var distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

						if ( distSq > localThresholdSq ) { continue; }

						interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

						var distance = raycaster.ray.origin.distanceTo( interRay );

						if ( distance < raycaster.near || distance > raycaster.far ) { continue; }

						intersects.push( {

							distance: distance,
							// What do we want? intersection point on the ray or on the segment??
							// point: raycaster.ray.at( distance ),
							point: interSegment.clone().applyMatrix4( this.matrixWorld ),
							index: i,
							face: null,
							faceIndex: null,
							object: this

						} );

					}

				} else {

					for ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {

						vStart.fromArray( positions, 3 * i );
						vEnd.fromArray( positions, 3 * i + 3 );

						var distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );

						if ( distSq > localThresholdSq ) { continue; }

						interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

						var distance = raycaster.ray.origin.distanceTo( interRay );

						if ( distance < raycaster.near || distance > raycaster.far ) { continue; }

						intersects.push( {

							distance: distance,
							// What do we want? intersection point on the ray or on the segment??
							// point: raycaster.ray.at( distance ),
							point: interSegment.clone().applyMatrix4( this.matrixWorld ),
							index: i,
							face: null,
							faceIndex: null,
							object: this

						} );

					}

				}

			} else if ( geometry.isGeometry ) {

				var vertices = geometry.vertices;
				var nbVertices = vertices.length;

				for ( var i = 0; i < nbVertices - 1; i += step ) {

					var distSq = _ray$1.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );

					if ( distSq > localThresholdSq ) { continue; }

					interRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation

					var distance = raycaster.ray.origin.distanceTo( interRay );

					if ( distance < raycaster.near || distance > raycaster.far ) { continue; }

					intersects.push( {

						distance: distance,
						// What do we want? intersection point on the ray or on the segment??
						// point: raycaster.ray.at( distance ),
						point: interSegment.clone().applyMatrix4( this.matrixWorld ),
						index: i,
						face: null,
						faceIndex: null,
						object: this

					} );

				}

			}

		},

		clone: function () {

			return new this.constructor( this.geometry, this.material ).copy( this );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _start$1 = new Vector3();
	var _end$1 = new Vector3();

	function LineSegments( geometry, material ) {

		Line.call( this, geometry, material );

		this.type = 'LineSegments';

	}

	LineSegments.prototype = Object.assign( Object.create( Line.prototype ), {

		constructor: LineSegments,

		isLineSegments: true,

		computeLineDistances: function () {

			var geometry = this.geometry;

			if ( geometry.isBufferGeometry ) {

				// we assume non-indexed geometry

				if ( geometry.index === null ) {

					var positionAttribute = geometry.attributes.position;
					var lineDistances = [];

					for ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {

						_start$1.fromBufferAttribute( positionAttribute, i );
						_end$1.fromBufferAttribute( positionAttribute, i + 1 );

						lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];
						lineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );

					}

					geometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );

				} else {

					console.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );

				}

			} else if ( geometry.isGeometry ) {

				var vertices = geometry.vertices;
				var lineDistances = geometry.lineDistances;

				for ( var i = 0, l = vertices.length; i < l; i += 2 ) {

					_start$1.copy( vertices[ i ] );
					_end$1.copy( vertices[ i + 1 ] );

					lineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];
					lineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );

				}

			}

			return this;

		}

	} );

	/**
	 * @author mgreter / http://github.com/mgreter
	 */

	function LineLoop( geometry, material ) {

		Line.call( this, geometry, material );

		this.type = 'LineLoop';

	}

	LineLoop.prototype = Object.assign( Object.create( Line.prototype ), {

		constructor: LineLoop,

		isLineLoop: true,

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  opacity: <float>,
	 *  map: new THREE.Texture( <Image> ),
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  size: <float>,
	 *  sizeAttenuation: <bool>
	 *
	 *  morphTargets: <bool>
	 * }
	 */

	function PointsMaterial( parameters ) {

		Material.call( this );

		this.type = 'PointsMaterial';

		this.color = new Color( 0xffffff );

		this.map = null;

		this.alphaMap = null;

		this.size = 1;
		this.sizeAttenuation = true;

		this.morphTargets = false;

		this.setValues( parameters );

	}

	PointsMaterial.prototype = Object.create( Material.prototype );
	PointsMaterial.prototype.constructor = PointsMaterial;

	PointsMaterial.prototype.isPointsMaterial = true;

	PointsMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );

		this.map = source.map;

		this.alphaMap = source.alphaMap;

		this.size = source.size;
		this.sizeAttenuation = source.sizeAttenuation;

		this.morphTargets = source.morphTargets;

		return this;

	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	var _inverseMatrix$2 = new Matrix4();
	var _ray$2 = new Ray();
	var _sphere$3 = new Sphere();
	var _position$1 = new Vector3();

	function Points( geometry, material ) {

		Object3D.call( this );

		this.type = 'Points';

		this.geometry = geometry !== undefined ? geometry : new BufferGeometry();
		this.material = material !== undefined ? material : new PointsMaterial();

		this.updateMorphTargets();

	}

	Points.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Points,

		isPoints: true,

		raycast: function ( raycaster, intersects ) {

			var geometry = this.geometry;
			var matrixWorld = this.matrixWorld;
			var threshold = raycaster.params.Points.threshold;

			// Checking boundingSphere distance to ray

			if ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }

			_sphere$3.copy( geometry.boundingSphere );
			_sphere$3.applyMatrix4( matrixWorld );
			_sphere$3.radius += threshold;

			if ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) { return; }

			//

			_inverseMatrix$2.getInverse( matrixWorld );
			_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );

			var localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );
			var localThresholdSq = localThreshold * localThreshold;

			if ( geometry.isBufferGeometry ) {

				var index = geometry.index;
				var attributes = geometry.attributes;
				var positions = attributes.position.array;

				if ( index !== null ) {

					var indices = index.array;

					for ( var i = 0, il = indices.length; i < il; i ++ ) {

						var a = indices[ i ];

						_position$1.fromArray( positions, a * 3 );

						testPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );

					}

				} else {

					for ( var i = 0, l = positions.length / 3; i < l; i ++ ) {

						_position$1.fromArray( positions, i * 3 );

						testPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );

					}

				}

			} else {

				var vertices = geometry.vertices;

				for ( var i = 0, l = vertices.length; i < l; i ++ ) {

					testPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );

				}

			}

		},

		updateMorphTargets: function () {

			var geometry = this.geometry;
			var m, ml, name;

			if ( geometry.isBufferGeometry ) {

				var morphAttributes = geometry.morphAttributes;
				var keys = Object.keys( morphAttributes );

				if ( keys.length > 0 ) {

					var morphAttribute = morphAttributes[ keys[ 0 ] ];

					if ( morphAttribute !== undefined ) {

						this.morphTargetInfluences = [];
						this.morphTargetDictionary = {};

						for ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {

							name = morphAttribute[ m ].name || String( m );

							this.morphTargetInfluences.push( 0 );
							this.morphTargetDictionary[ name ] = m;

						}

					}

				}

			} else {

				var morphTargets = geometry.morphTargets;

				if ( morphTargets !== undefined && morphTargets.length > 0 ) {

					console.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );

				}

			}

		},

		clone: function () {

			return new this.constructor( this.geometry, this.material ).copy( this );

		}

	} );

	function testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {

		var rayPointDistanceSq = _ray$2.distanceSqToPoint( point );

		if ( rayPointDistanceSq < localThresholdSq ) {

			var intersectPoint = new Vector3();

			_ray$2.closestPointToPoint( point, intersectPoint );
			intersectPoint.applyMatrix4( matrixWorld );

			var distance = raycaster.ray.origin.distanceTo( intersectPoint );

			if ( distance < raycaster.near || distance > raycaster.far ) { return; }

			intersects.push( {

				distance: distance,
				distanceToRay: Math.sqrt( rayPointDistanceSq ),
				point: intersectPoint,
				index: index,
				face: null,
				object: object

			} );

		}

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

		Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.format = format !== undefined ? format : RGBFormat;

		this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;
		this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;

		this.generateMipmaps = false;

	}

	VideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {

		constructor: VideoTexture,

		isVideoTexture: true,

		update: function () {

			var video = this.image;

			if ( video.readyState >= video.HAVE_CURRENT_DATA ) {

				this.needsUpdate = true;

			}

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {

		Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );

		this.image = { width: width, height: height };
		this.mipmaps = mipmaps;

		// no flipping for cube textures
		// (also flipping doesn't work for compressed textures )

		this.flipY = false;

		// can't generate mipmaps for compressed textures
		// mips must be embedded in DDS files

		this.generateMipmaps = false;

	}

	CompressedTexture.prototype = Object.create( Texture.prototype );
	CompressedTexture.prototype.constructor = CompressedTexture;

	CompressedTexture.prototype.isCompressedTexture = true;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {

		Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.needsUpdate = true;

	}

	CanvasTexture.prototype = Object.create( Texture.prototype );
	CanvasTexture.prototype.constructor = CanvasTexture;
	CanvasTexture.prototype.isCanvasTexture = true;

	/**
	 * @author Matt DesLauriers / @mattdesl
	 * @author atix / arthursilber.de
	 */

	function DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {

		format = format !== undefined ? format : DepthFormat;

		if ( format !== DepthFormat && format !== DepthStencilFormat ) {

			throw new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );

		}

		if ( type === undefined && format === DepthFormat ) { type = UnsignedShortType; }
		if ( type === undefined && format === DepthStencilFormat ) { type = UnsignedInt248Type; }

		Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );

		this.image = { width: width, height: height };

		this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;
		this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;

		this.flipY = false;
		this.generateMipmaps	= false;

	}

	DepthTexture.prototype = Object.create( Texture.prototype );
	DepthTexture.prototype.constructor = DepthTexture;
	DepthTexture.prototype.isDepthTexture = true;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	function WireframeGeometry( geometry ) {

		BufferGeometry.call( this );

		this.type = 'WireframeGeometry';

		// buffer

		var vertices = [];

		// helper variables

		var i, j, l, o, ol;
		var edge = [ 0, 0 ], edges = {}, e, edge1, edge2;
		var key, keys = [ 'a', 'b', 'c' ];
		var vertex;

		// different logic for Geometry and BufferGeometry

		if ( geometry && geometry.isGeometry ) {

			// create a data structure that contains all edges without duplicates

			var faces = geometry.faces;

			for ( i = 0, l = faces.length; i < l; i ++ ) {

				var face = faces[ i ];

				for ( j = 0; j < 3; j ++ ) {

					edge1 = face[ keys[ j ] ];
					edge2 = face[ keys[ ( j + 1 ) % 3 ] ];
					edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates
					edge[ 1 ] = Math.max( edge1, edge2 );

					key = edge[ 0 ] + ',' + edge[ 1 ];

					if ( edges[ key ] === undefined ) {

						edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };

					}

				}

			}

			// generate vertices

			for ( key in edges ) {

				e = edges[ key ];

				vertex = geometry.vertices[ e.index1 ];
				vertices.push( vertex.x, vertex.y, vertex.z );

				vertex = geometry.vertices[ e.index2 ];
				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		} else if ( geometry && geometry.isBufferGeometry ) {

			var position, indices, groups;
			var group, start, count;
			var index1, index2;

			vertex = new Vector3();

			if ( geometry.index !== null ) {

				// indexed BufferGeometry

				position = geometry.attributes.position;
				indices = geometry.index;
				groups = geometry.groups;

				if ( groups.length === 0 ) {

					groups = [ { start: 0, count: indices.count, materialIndex: 0 } ];

				}

				// create a data structure that contains all eges without duplicates

				for ( o = 0, ol = groups.length; o < ol; ++ o ) {

					group = groups[ o ];

					start = group.start;
					count = group.count;

					for ( i = start, l = ( start + count ); i < l; i += 3 ) {

						for ( j = 0; j < 3; j ++ ) {

							edge1 = indices.getX( i + j );
							edge2 = indices.getX( i + ( j + 1 ) % 3 );
							edge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates
							edge[ 1 ] = Math.max( edge1, edge2 );

							key = edge[ 0 ] + ',' + edge[ 1 ];

							if ( edges[ key ] === undefined ) {

								edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };

							}

						}

					}

				}

				// generate vertices

				for ( key in edges ) {

					e = edges[ key ];

					vertex.fromBufferAttribute( position, e.index1 );
					vertices.push( vertex.x, vertex.y, vertex.z );

					vertex.fromBufferAttribute( position, e.index2 );
					vertices.push( vertex.x, vertex.y, vertex.z );

				}

			} else {

				// non-indexed BufferGeometry

				position = geometry.attributes.position;

				for ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {

					for ( j = 0; j < 3; j ++ ) {

						// three edges per triangle, an edge is represented as (index1, index2)
						// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)

						index1 = 3 * i + j;
						vertex.fromBufferAttribute( position, index1 );
						vertices.push( vertex.x, vertex.y, vertex.z );

						index2 = 3 * i + ( ( j + 1 ) % 3 );
						vertex.fromBufferAttribute( position, index2 );
						vertices.push( vertex.x, vertex.y, vertex.z );

					}

				}

			}

		}

		// build geometry

		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

	}

	WireframeGeometry.prototype = Object.create( BufferGeometry.prototype );
	WireframeGeometry.prototype.constructor = WireframeGeometry;

	/**
	 * @author zz85 / https://github.com/zz85
	 * @author Mugen87 / https://github.com/Mugen87
	 *
	 * Parametric Surfaces Geometry
	 * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html
	 */

	// ParametricGeometry

	function ParametricGeometry( func, slices, stacks ) {

		Geometry.call( this );

		this.type = 'ParametricGeometry';

		this.parameters = {
			func: func,
			slices: slices,
			stacks: stacks
		};

		this.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );
		this.mergeVertices();

	}

	ParametricGeometry.prototype = Object.create( Geometry.prototype );
	ParametricGeometry.prototype.constructor = ParametricGeometry;

	// ParametricBufferGeometry

	function ParametricBufferGeometry( func, slices, stacks ) {

		BufferGeometry.call( this );

		this.type = 'ParametricBufferGeometry';

		this.parameters = {
			func: func,
			slices: slices,
			stacks: stacks
		};

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		var EPS = 0.00001;

		var normal = new Vector3();

		var p0 = new Vector3(), p1 = new Vector3();
		var pu = new Vector3(), pv = new Vector3();

		var i, j;

		if ( func.length < 3 ) {

			console.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );

		}

		// generate vertices, normals and uvs

		var sliceCount = slices + 1;

		for ( i = 0; i <= stacks; i ++ ) {

			var v = i / stacks;

			for ( j = 0; j <= slices; j ++ ) {

				var u = j / slices;

				// vertex

				func( u, v, p0 );
				vertices.push( p0.x, p0.y, p0.z );

				// normal

				// approximate tangent vectors via finite differences

				if ( u - EPS >= 0 ) {

					func( u - EPS, v, p1 );
					pu.subVectors( p0, p1 );

				} else {

					func( u + EPS, v, p1 );
					pu.subVectors( p1, p0 );

				}

				if ( v - EPS >= 0 ) {

					func( u, v - EPS, p1 );
					pv.subVectors( p0, p1 );

				} else {

					func( u, v + EPS, p1 );
					pv.subVectors( p1, p0 );

				}

				// cross product of tangent vectors returns surface normal

				normal.crossVectors( pu, pv ).normalize();
				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( u, v );

			}

		}

		// generate indices

		for ( i = 0; i < stacks; i ++ ) {

			for ( j = 0; j < slices; j ++ ) {

				var a = i * sliceCount + j;
				var b = i * sliceCount + j + 1;
				var c = ( i + 1 ) * sliceCount + j + 1;
				var d = ( i + 1 ) * sliceCount + j;

				// faces one and two

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	ParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;

	/**
	 * @author clockworkgeek / https://github.com/clockworkgeek
	 * @author timothypratley / https://github.com/timothypratley
	 * @author WestLangley / http://github.com/WestLangley
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// PolyhedronGeometry

	function PolyhedronGeometry( vertices, indices, radius, detail ) {

		Geometry.call( this );

		this.type = 'PolyhedronGeometry';

		this.parameters = {
			vertices: vertices,
			indices: indices,
			radius: radius,
			detail: detail
		};

		this.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );
		this.mergeVertices();

	}

	PolyhedronGeometry.prototype = Object.create( Geometry.prototype );
	PolyhedronGeometry.prototype.constructor = PolyhedronGeometry;

	// PolyhedronBufferGeometry

	function PolyhedronBufferGeometry( vertices, indices, radius, detail ) {

		BufferGeometry.call( this );

		this.type = 'PolyhedronBufferGeometry';

		this.parameters = {
			vertices: vertices,
			indices: indices,
			radius: radius,
			detail: detail
		};

		radius = radius || 1;
		detail = detail || 0;

		// default buffer data

		var vertexBuffer = [];
		var uvBuffer = [];

		// the subdivision creates the vertex buffer data

		subdivide( detail );

		// all vertices should lie on a conceptual sphere with a given radius

		applyRadius( radius );

		// finally, create the uv data

		generateUVs();

		// build non-indexed geometry

		this.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );

		if ( detail === 0 ) {

			this.computeVertexNormals(); // flat normals

		} else {

			this.normalizeNormals(); // smooth normals

		}

		// helper functions

		function subdivide( detail ) {

			var a = new Vector3();
			var b = new Vector3();
			var c = new Vector3();

			// iterate over all faces and apply a subdivison with the given detail value

			for ( var i = 0; i < indices.length; i += 3 ) {

				// get the vertices of the face

				getVertexByIndex( indices[ i + 0 ], a );
				getVertexByIndex( indices[ i + 1 ], b );
				getVertexByIndex( indices[ i + 2 ], c );

				// perform subdivision

				subdivideFace( a, b, c, detail );

			}

		}

		function subdivideFace( a, b, c, detail ) {

			var cols = Math.pow( 2, detail );

			// we use this multidimensional array as a data structure for creating the subdivision

			var v = [];

			var i, j;

			// construct all of the vertices for this subdivision

			for ( i = 0; i <= cols; i ++ ) {

				v[ i ] = [];

				var aj = a.clone().lerp( c, i / cols );
				var bj = b.clone().lerp( c, i / cols );

				var rows = cols - i;

				for ( j = 0; j <= rows; j ++ ) {

					if ( j === 0 && i === cols ) {

						v[ i ][ j ] = aj;

					} else {

						v[ i ][ j ] = aj.clone().lerp( bj, j / rows );

					}

				}

			}

			// construct all of the faces

			for ( i = 0; i < cols; i ++ ) {

				for ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {

					var k = Math.floor( j / 2 );

					if ( j % 2 === 0 ) {

						pushVertex( v[ i ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k ] );
						pushVertex( v[ i ][ k ] );

					} else {

						pushVertex( v[ i ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k + 1 ] );
						pushVertex( v[ i + 1 ][ k ] );

					}

				}

			}

		}

		function applyRadius( radius ) {

			var vertex = new Vector3();

			// iterate over the entire buffer and apply the radius to each vertex

			for ( var i = 0; i < vertexBuffer.length; i += 3 ) {

				vertex.x = vertexBuffer[ i + 0 ];
				vertex.y = vertexBuffer[ i + 1 ];
				vertex.z = vertexBuffer[ i + 2 ];

				vertex.normalize().multiplyScalar( radius );

				vertexBuffer[ i + 0 ] = vertex.x;
				vertexBuffer[ i + 1 ] = vertex.y;
				vertexBuffer[ i + 2 ] = vertex.z;

			}

		}

		function generateUVs() {

			var vertex = new Vector3();

			for ( var i = 0; i < vertexBuffer.length; i += 3 ) {

				vertex.x = vertexBuffer[ i + 0 ];
				vertex.y = vertexBuffer[ i + 1 ];
				vertex.z = vertexBuffer[ i + 2 ];

				var u = azimuth( vertex ) / 2 / Math.PI + 0.5;
				var v = inclination( vertex ) / Math.PI + 0.5;
				uvBuffer.push( u, 1 - v );

			}

			correctUVs();

			correctSeam();

		}

		function correctSeam() {

			// handle case when face straddles the seam, see #3269

			for ( var i = 0; i < uvBuffer.length; i += 6 ) {

				// uv data of a single face

				var x0 = uvBuffer[ i + 0 ];
				var x1 = uvBuffer[ i + 2 ];
				var x2 = uvBuffer[ i + 4 ];

				var max = Math.max( x0, x1, x2 );
				var min = Math.min( x0, x1, x2 );

				// 0.9 is somewhat arbitrary

				if ( max > 0.9 && min < 0.1 ) {

					if ( x0 < 0.2 ) { uvBuffer[ i + 0 ] += 1; }
					if ( x1 < 0.2 ) { uvBuffer[ i + 2 ] += 1; }
					if ( x2 < 0.2 ) { uvBuffer[ i + 4 ] += 1; }

				}

			}

		}

		function pushVertex( vertex ) {

			vertexBuffer.push( vertex.x, vertex.y, vertex.z );

		}

		function getVertexByIndex( index, vertex ) {

			var stride = index * 3;

			vertex.x = vertices[ stride + 0 ];
			vertex.y = vertices[ stride + 1 ];
			vertex.z = vertices[ stride + 2 ];

		}

		function correctUVs() {

			var a = new Vector3();
			var b = new Vector3();
			var c = new Vector3();

			var centroid = new Vector3();

			var uvA = new Vector2();
			var uvB = new Vector2();
			var uvC = new Vector2();

			for ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {

				a.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );
				b.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );
				c.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );

				uvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );
				uvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );
				uvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );

				centroid.copy( a ).add( b ).add( c ).divideScalar( 3 );

				var azi = azimuth( centroid );

				correctUV( uvA, j + 0, a, azi );
				correctUV( uvB, j + 2, b, azi );
				correctUV( uvC, j + 4, c, azi );

			}

		}

		function correctUV( uv, stride, vector, azimuth ) {

			if ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {

				uvBuffer[ stride ] = uv.x - 1;

			}

			if ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {

				uvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;

			}

		}

		// Angle around the Y axis, counter-clockwise when looking from above.

		function azimuth( vector ) {

			return Math.atan2( vector.z, - vector.x );

		}


		// Angle above the XZ plane.

		function inclination( vector ) {

			return Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );

		}

	}

	PolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;

	/**
	 * @author timothypratley / https://github.com/timothypratley
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// TetrahedronGeometry

	function TetrahedronGeometry( radius, detail ) {

		Geometry.call( this );

		this.type = 'TetrahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

		this.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );
		this.mergeVertices();

	}

	TetrahedronGeometry.prototype = Object.create( Geometry.prototype );
	TetrahedronGeometry.prototype.constructor = TetrahedronGeometry;

	// TetrahedronBufferGeometry

	function TetrahedronBufferGeometry( radius, detail ) {

		var vertices = [
			1, 1, 1, 	- 1, - 1, 1, 	- 1, 1, - 1, 	1, - 1, - 1
		];

		var indices = [
			2, 1, 0, 	0, 3, 2,	1, 3, 0,	2, 3, 1
		];

		PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

		this.type = 'TetrahedronBufferGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	TetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
	TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;

	/**
	 * @author timothypratley / https://github.com/timothypratley
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// OctahedronGeometry

	function OctahedronGeometry( radius, detail ) {

		Geometry.call( this );

		this.type = 'OctahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

		this.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );
		this.mergeVertices();

	}

	OctahedronGeometry.prototype = Object.create( Geometry.prototype );
	OctahedronGeometry.prototype.constructor = OctahedronGeometry;

	// OctahedronBufferGeometry

	function OctahedronBufferGeometry( radius, detail ) {

		var vertices = [
			1, 0, 0, 	- 1, 0, 0,	0, 1, 0,
			0, - 1, 0, 	0, 0, 1,	0, 0, - 1
		];

		var indices = [
			0, 2, 4,	0, 4, 3,	0, 3, 5,
			0, 5, 2,	1, 2, 5,	1, 5, 3,
			1, 3, 4,	1, 4, 2
		];

		PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

		this.type = 'OctahedronBufferGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	OctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
	OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;

	/**
	 * @author timothypratley / https://github.com/timothypratley
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// IcosahedronGeometry

	function IcosahedronGeometry( radius, detail ) {

		Geometry.call( this );

		this.type = 'IcosahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

		this.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );
		this.mergeVertices();

	}

	IcosahedronGeometry.prototype = Object.create( Geometry.prototype );
	IcosahedronGeometry.prototype.constructor = IcosahedronGeometry;

	// IcosahedronBufferGeometry

	function IcosahedronBufferGeometry( radius, detail ) {

		var t = ( 1 + Math.sqrt( 5 ) ) / 2;

		var vertices = [
			- 1, t, 0, 	1, t, 0, 	- 1, - t, 0, 	1, - t, 0,
			 0, - 1, t, 	0, 1, t,	0, - 1, - t, 	0, 1, - t,
			 t, 0, - 1, 	t, 0, 1, 	- t, 0, - 1, 	- t, 0, 1
		];

		var indices = [
			 0, 11, 5, 	0, 5, 1, 	0, 1, 7, 	0, 7, 10, 	0, 10, 11,
			 1, 5, 9, 	5, 11, 4,	11, 10, 2,	10, 7, 6,	7, 1, 8,
			 3, 9, 4, 	3, 4, 2,	3, 2, 6,	3, 6, 8,	3, 8, 9,
			 4, 9, 5, 	2, 4, 11,	6, 2, 10,	8, 6, 7,	9, 8, 1
		];

		PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

		this.type = 'IcosahedronBufferGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	IcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
	IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;

	/**
	 * @author Abe Pazos / https://hamoid.com
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// DodecahedronGeometry

	function DodecahedronGeometry( radius, detail ) {

		Geometry.call( this );

		this.type = 'DodecahedronGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

		this.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );
		this.mergeVertices();

	}

	DodecahedronGeometry.prototype = Object.create( Geometry.prototype );
	DodecahedronGeometry.prototype.constructor = DodecahedronGeometry;

	// DodecahedronBufferGeometry

	function DodecahedronBufferGeometry( radius, detail ) {

		var t = ( 1 + Math.sqrt( 5 ) ) / 2;
		var r = 1 / t;

		var vertices = [

			// (±1, ±1, ±1)
			- 1, - 1, - 1,	- 1, - 1, 1,
			- 1, 1, - 1, - 1, 1, 1,
			1, - 1, - 1, 1, - 1, 1,
			1, 1, - 1, 1, 1, 1,

			// (0, ±1/φ, ±φ)
			 0, - r, - t, 0, - r, t,
			 0, r, - t, 0, r, t,

			// (±1/φ, ±φ, 0)
			- r, - t, 0, - r, t, 0,
			 r, - t, 0, r, t, 0,

			// (±φ, 0, ±1/φ)
			- t, 0, - r, t, 0, - r,
			- t, 0, r, t, 0, r
		];

		var indices = [
			3, 11, 7, 	3, 7, 15, 	3, 15, 13,
			7, 19, 17, 	7, 17, 6, 	7, 6, 15,
			17, 4, 8, 	17, 8, 10, 	17, 10, 6,
			8, 0, 16, 	8, 16, 2, 	8, 2, 10,
			0, 12, 1, 	0, 1, 18, 	0, 18, 16,
			6, 10, 2, 	6, 2, 13, 	6, 13, 15,
			2, 16, 18, 	2, 18, 3, 	2, 3, 13,
			18, 1, 9, 	18, 9, 11, 	18, 11, 3,
			4, 14, 12, 	4, 12, 0, 	4, 0, 8,
			11, 9, 5, 	11, 5, 19, 	11, 19, 7,
			19, 5, 14, 	19, 14, 4, 	19, 4, 17,
			1, 12, 14, 	1, 14, 5, 	1, 5, 9
		];

		PolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );

		this.type = 'DodecahedronBufferGeometry';

		this.parameters = {
			radius: radius,
			detail: detail
		};

	}

	DodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );
	DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;

	/**
	 * @author oosmoxiecode / https://github.com/oosmoxiecode
	 * @author WestLangley / https://github.com/WestLangley
	 * @author zz85 / https://github.com/zz85
	 * @author miningold / https://github.com/miningold
	 * @author jonobr1 / https://github.com/jonobr1
	 * @author Mugen87 / https://github.com/Mugen87
	 *
	 */

	// TubeGeometry

	function TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {

		Geometry.call( this );

		this.type = 'TubeGeometry';

		this.parameters = {
			path: path,
			tubularSegments: tubularSegments,
			radius: radius,
			radialSegments: radialSegments,
			closed: closed
		};

		if ( taper !== undefined ) { console.warn( 'THREE.TubeGeometry: taper has been removed.' ); }

		var bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );

		// expose internals

		this.tangents = bufferGeometry.tangents;
		this.normals = bufferGeometry.normals;
		this.binormals = bufferGeometry.binormals;

		// create geometry

		this.fromBufferGeometry( bufferGeometry );
		this.mergeVertices();

	}

	TubeGeometry.prototype = Object.create( Geometry.prototype );
	TubeGeometry.prototype.constructor = TubeGeometry;

	// TubeBufferGeometry

	function TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {

		BufferGeometry.call( this );

		this.type = 'TubeBufferGeometry';

		this.parameters = {
			path: path,
			tubularSegments: tubularSegments,
			radius: radius,
			radialSegments: radialSegments,
			closed: closed
		};

		tubularSegments = tubularSegments || 64;
		radius = radius || 1;
		radialSegments = radialSegments || 8;
		closed = closed || false;

		var frames = path.computeFrenetFrames( tubularSegments, closed );

		// expose internals

		this.tangents = frames.tangents;
		this.normals = frames.normals;
		this.binormals = frames.binormals;

		// helper variables

		var vertex = new Vector3();
		var normal = new Vector3();
		var uv = new Vector2();
		var P = new Vector3();

		var i, j;

		// buffer

		var vertices = [];
		var normals = [];
		var uvs = [];
		var indices = [];

		// create buffer data

		generateBufferData();

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// functions

		function generateBufferData() {

			for ( i = 0; i < tubularSegments; i ++ ) {

				generateSegment( i );

			}

			// if the geometry is not closed, generate the last row of vertices and normals
			// at the regular position on the given path
			//
			// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)

			generateSegment( ( closed === false ) ? tubularSegments : 0 );

			// uvs are generated in a separate function.
			// this makes it easy compute correct values for closed geometries

			generateUVs();

			// finally create faces

			generateIndices();

		}

		function generateSegment( i ) {

			// we use getPointAt to sample evenly distributed points from the given path

			P = path.getPointAt( i / tubularSegments, P );

			// retrieve corresponding normal and binormal

			var N = frames.normals[ i ];
			var B = frames.binormals[ i ];

			// generate normals and vertices for the current segment

			for ( j = 0; j <= radialSegments; j ++ ) {

				var v = j / radialSegments * Math.PI * 2;

				var sin = Math.sin( v );
				var cos = - Math.cos( v );

				// normal

				normal.x = ( cos * N.x + sin * B.x );
				normal.y = ( cos * N.y + sin * B.y );
				normal.z = ( cos * N.z + sin * B.z );
				normal.normalize();

				normals.push( normal.x, normal.y, normal.z );

				// vertex

				vertex.x = P.x + radius * normal.x;
				vertex.y = P.y + radius * normal.y;
				vertex.z = P.z + radius * normal.z;

				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		}

		function generateIndices() {

			for ( j = 1; j <= tubularSegments; j ++ ) {

				for ( i = 1; i <= radialSegments; i ++ ) {

					var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
					var b = ( radialSegments + 1 ) * j + ( i - 1 );
					var c = ( radialSegments + 1 ) * j + i;
					var d = ( radialSegments + 1 ) * ( j - 1 ) + i;

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

				}

			}

		}

		function generateUVs() {

			for ( i = 0; i <= tubularSegments; i ++ ) {

				for ( j = 0; j <= radialSegments; j ++ ) {

					uv.x = i / tubularSegments;
					uv.y = j / radialSegments;

					uvs.push( uv.x, uv.y );

				}

			}

		}

	}

	TubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;

	TubeBufferGeometry.prototype.toJSON = function () {

		var data = BufferGeometry.prototype.toJSON.call( this );

		data.path = this.parameters.path.toJSON();

		return data;

	};

	/**
	 * @author oosmoxiecode
	 * @author Mugen87 / https://github.com/Mugen87
	 *
	 * based on http://www.blackpawn.com/texts/pqtorus/
	 */

	// TorusKnotGeometry

	function TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {

		Geometry.call( this );

		this.type = 'TorusKnotGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			tubularSegments: tubularSegments,
			radialSegments: radialSegments,
			p: p,
			q: q
		};

		if ( heightScale !== undefined ) { console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' ); }

		this.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );
		this.mergeVertices();

	}

	TorusKnotGeometry.prototype = Object.create( Geometry.prototype );
	TorusKnotGeometry.prototype.constructor = TorusKnotGeometry;

	// TorusKnotBufferGeometry

	function TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {

		BufferGeometry.call( this );

		this.type = 'TorusKnotBufferGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			tubularSegments: tubularSegments,
			radialSegments: radialSegments,
			p: p,
			q: q
		};

		radius = radius || 1;
		tube = tube || 0.4;
		tubularSegments = Math.floor( tubularSegments ) || 64;
		radialSegments = Math.floor( radialSegments ) || 8;
		p = p || 2;
		q = q || 3;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// helper variables

		var i, j;

		var vertex = new Vector3();
		var normal = new Vector3();

		var P1 = new Vector3();
		var P2 = new Vector3();

		var B = new Vector3();
		var T = new Vector3();
		var N = new Vector3();

		// generate vertices, normals and uvs

		for ( i = 0; i <= tubularSegments; ++ i ) {

			// the radian "u" is used to calculate the position on the torus curve of the current tubular segement

			var u = i / tubularSegments * p * Math.PI * 2;

			// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.
			// these points are used to create a special "coordinate space", which is necessary to calculate the correct vertex positions

			calculatePositionOnCurve( u, p, q, radius, P1 );
			calculatePositionOnCurve( u + 0.01, p, q, radius, P2 );

			// calculate orthonormal basis

			T.subVectors( P2, P1 );
			N.addVectors( P2, P1 );
			B.crossVectors( T, N );
			N.crossVectors( B, T );

			// normalize B, N. T can be ignored, we don't use it

			B.normalize();
			N.normalize();

			for ( j = 0; j <= radialSegments; ++ j ) {

				// now calculate the vertices. they are nothing more than an extrusion of the torus curve.
				// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.

				var v = j / radialSegments * Math.PI * 2;
				var cx = - tube * Math.cos( v );
				var cy = tube * Math.sin( v );

				// now calculate the final vertex position.
				// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve

				vertex.x = P1.x + ( cx * N.x + cy * B.x );
				vertex.y = P1.y + ( cx * N.y + cy * B.y );
				vertex.z = P1.z + ( cx * N.z + cy * B.z );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)

				normal.subVectors( vertex, P1 ).normalize();

				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( i / tubularSegments );
				uvs.push( j / radialSegments );

			}

		}

		// generate indices

		for ( j = 1; j <= tubularSegments; j ++ ) {

			for ( i = 1; i <= radialSegments; i ++ ) {

				// indices

				var a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );
				var b = ( radialSegments + 1 ) * j + ( i - 1 );
				var c = ( radialSegments + 1 ) * j + i;
				var d = ( radialSegments + 1 ) * ( j - 1 ) + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// this function calculates the current position on the torus curve

		function calculatePositionOnCurve( u, p, q, radius, position ) {

			var cu = Math.cos( u );
			var su = Math.sin( u );
			var quOverP = q / p * u;
			var cs = Math.cos( quOverP );

			position.x = radius * ( 2 + cs ) * 0.5 * cu;
			position.y = radius * ( 2 + cs ) * su * 0.5;
			position.z = radius * Math.sin( quOverP ) * 0.5;

		}

	}

	TorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;

	/**
	 * @author oosmoxiecode
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// TorusGeometry

	function TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {

		Geometry.call( this );

		this.type = 'TorusGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			radialSegments: radialSegments,
			tubularSegments: tubularSegments,
			arc: arc
		};

		this.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );
		this.mergeVertices();

	}

	TorusGeometry.prototype = Object.create( Geometry.prototype );
	TorusGeometry.prototype.constructor = TorusGeometry;

	// TorusBufferGeometry

	function TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {

		BufferGeometry.call( this );

		this.type = 'TorusBufferGeometry';

		this.parameters = {
			radius: radius,
			tube: tube,
			radialSegments: radialSegments,
			tubularSegments: tubularSegments,
			arc: arc
		};

		radius = radius || 1;
		tube = tube || 0.4;
		radialSegments = Math.floor( radialSegments ) || 8;
		tubularSegments = Math.floor( tubularSegments ) || 6;
		arc = arc || Math.PI * 2;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// helper variables

		var center = new Vector3();
		var vertex = new Vector3();
		var normal = new Vector3();

		var j, i;

		// generate vertices, normals and uvs

		for ( j = 0; j <= radialSegments; j ++ ) {

			for ( i = 0; i <= tubularSegments; i ++ ) {

				var u = i / tubularSegments * arc;
				var v = j / radialSegments * Math.PI * 2;

				// vertex

				vertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );
				vertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );
				vertex.z = tube * Math.sin( v );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				center.x = radius * Math.cos( u );
				center.y = radius * Math.sin( u );
				normal.subVectors( vertex, center ).normalize();

				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( i / tubularSegments );
				uvs.push( j / radialSegments );

			}

		}

		// generate indices

		for ( j = 1; j <= radialSegments; j ++ ) {

			for ( i = 1; i <= tubularSegments; i ++ ) {

				// indices

				var a = ( tubularSegments + 1 ) * j + i - 1;
				var b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;
				var c = ( tubularSegments + 1 ) * ( j - 1 ) + i;
				var d = ( tubularSegments + 1 ) * j + i;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	TorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;

	/**
	 * @author Mugen87 / https://github.com/Mugen87
	 * Port from https://github.com/mapbox/earcut (v2.1.5)
	 */

	var Earcut = {

		triangulate: function ( data, holeIndices, dim ) {

			dim = dim || 2;

			var hasHoles = holeIndices && holeIndices.length,
				outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,
				outerNode = linkedList( data, 0, outerLen, dim, true ),
				triangles = [];

			if ( ! outerNode || outerNode.next === outerNode.prev ) { return triangles; }

			var minX, minY, maxX, maxY, x, y, invSize;

			if ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }

			// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox
			if ( data.length > 80 * dim ) {

				minX = maxX = data[ 0 ];
				minY = maxY = data[ 1 ];

				for ( var i = dim; i < outerLen; i += dim ) {

					x = data[ i ];
					y = data[ i + 1 ];
					if ( x < minX ) { minX = x; }
					if ( y < minY ) { minY = y; }
					if ( x > maxX ) { maxX = x; }
					if ( y > maxY ) { maxY = y; }

				}

				// minX, minY and invSize are later used to transform coords into integers for z-order calculation
				invSize = Math.max( maxX - minX, maxY - minY );
				invSize = invSize !== 0 ? 1 / invSize : 0;

			}

			earcutLinked( outerNode, triangles, dim, minX, minY, invSize );

			return triangles;

		}

	};

	// create a circular doubly linked list from polygon points in the specified winding order
	function linkedList( data, start, end, dim, clockwise ) {

		var i, last;

		if ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {

			for ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }

		} else {

			for ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }

		}

		if ( last && equals( last, last.next ) ) {

			removeNode( last );
			last = last.next;

		}

		return last;

	}

	// eliminate colinear or duplicate points
	function filterPoints( start, end ) {

		if ( ! start ) { return start; }
		if ( ! end ) { end = start; }

		var p = start,
			again;
		do {

			again = false;

			if ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {

				removeNode( p );
				p = end = p.prev;
				if ( p === p.next ) { break; }
				again = true;

			} else {

				p = p.next;

			}

		} while ( again || p !== end );

		return end;

	}

	// main ear slicing loop which triangulates a polygon (given as a linked list)
	function earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {

		if ( ! ear ) { return; }

		// interlink polygon nodes in z-order
		if ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }

		var stop = ear,
			prev, next;

		// iterate through ears, slicing them one by one
		while ( ear.prev !== ear.next ) {

			prev = ear.prev;
			next = ear.next;

			if ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {

				// cut off the triangle
				triangles.push( prev.i / dim );
				triangles.push( ear.i / dim );
				triangles.push( next.i / dim );

				removeNode( ear );

				// skipping the next vertex leads to less sliver triangles
				ear = next.next;
				stop = next.next;

				continue;

			}

			ear = next;

			// if we looped through the whole remaining polygon and can't find any more ears
			if ( ear === stop ) {

				// try filtering points and slicing again
				if ( ! pass ) {

					earcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );

					// if this didn't work, try curing all small self-intersections locally

				} else if ( pass === 1 ) {

					ear = cureLocalIntersections( ear, triangles, dim );
					earcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );

					// as a last resort, try splitting the remaining polygon into two

				} else if ( pass === 2 ) {

					splitEarcut( ear, triangles, dim, minX, minY, invSize );

				}

				break;

			}

		}

	}

	// check whether a polygon node forms a valid ear with adjacent nodes
	function isEar( ear ) {

		var a = ear.prev,
			b = ear,
			c = ear.next;

		if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear

		// now make sure we don't have other points inside the potential ear
		var p = ear.next.next;

		while ( p !== ear.prev ) {

			if ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
				area( p.prev, p, p.next ) >= 0 ) { return false; }
			p = p.next;

		}

		return true;

	}

	function isEarHashed( ear, minX, minY, invSize ) {

		var a = ear.prev,
			b = ear,
			c = ear.next;

		if ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear

		// triangle bbox; min & max are calculated like this for speed
		var minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),
			minTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),
			maxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),
			maxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );

		// z-order range for the current triangle bbox;
		var minZ = zOrder( minTX, minTY, minX, minY, invSize ),
			maxZ = zOrder( maxTX, maxTY, minX, minY, invSize );

		var p = ear.prevZ,
			n = ear.nextZ;

		// look for points inside the triangle in both directions
		while ( p && p.z >= minZ && n && n.z <= maxZ ) {

			if ( p !== ear.prev && p !== ear.next &&
				pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
				area( p.prev, p, p.next ) >= 0 ) { return false; }
			p = p.prevZ;

			if ( n !== ear.prev && n !== ear.next &&
				pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&
				area( n.prev, n, n.next ) >= 0 ) { return false; }
			n = n.nextZ;

		}

		// look for remaining points in decreasing z-order
		while ( p && p.z >= minZ ) {

			if ( p !== ear.prev && p !== ear.next &&
				pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&
				area( p.prev, p, p.next ) >= 0 ) { return false; }
			p = p.prevZ;

		}

		// look for remaining points in increasing z-order
		while ( n && n.z <= maxZ ) {

			if ( n !== ear.prev && n !== ear.next &&
				pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&
				area( n.prev, n, n.next ) >= 0 ) { return false; }
			n = n.nextZ;

		}

		return true;

	}

	// go through all polygon nodes and cure small local self-intersections
	function cureLocalIntersections( start, triangles, dim ) {

		var p = start;
		do {

			var a = p.prev,
				b = p.next.next;

			if ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {

				triangles.push( a.i / dim );
				triangles.push( p.i / dim );
				triangles.push( b.i / dim );

				// remove two nodes involved
				removeNode( p );
				removeNode( p.next );

				p = start = b;

			}

			p = p.next;

		} while ( p !== start );

		return p;

	}

	// try splitting polygon into two and triangulate them independently
	function splitEarcut( start, triangles, dim, minX, minY, invSize ) {

		// look for a valid diagonal that divides the polygon into two
		var a = start;
		do {

			var b = a.next.next;
			while ( b !== a.prev ) {

				if ( a.i !== b.i && isValidDiagonal( a, b ) ) {

					// split the polygon in two by the diagonal
					var c = splitPolygon( a, b );

					// filter colinear points around the cuts
					a = filterPoints( a, a.next );
					c = filterPoints( c, c.next );

					// run earcut on each half
					earcutLinked( a, triangles, dim, minX, minY, invSize );
					earcutLinked( c, triangles, dim, minX, minY, invSize );
					return;

				}

				b = b.next;

			}

			a = a.next;

		} while ( a !== start );

	}

	// link every hole into the outer loop, producing a single-ring polygon without holes
	function eliminateHoles( data, holeIndices, outerNode, dim ) {

		var queue = [],
			i, len, start, end, list;

		for ( i = 0, len = holeIndices.length; i < len; i ++ ) {

			start = holeIndices[ i ] * dim;
			end = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;
			list = linkedList( data, start, end, dim, false );
			if ( list === list.next ) { list.steiner = true; }
			queue.push( getLeftmost( list ) );

		}

		queue.sort( compareX );

		// process holes from left to right
		for ( i = 0; i < queue.length; i ++ ) {

			eliminateHole( queue[ i ], outerNode );
			outerNode = filterPoints( outerNode, outerNode.next );

		}

		return outerNode;

	}

	function compareX( a, b ) {

		return a.x - b.x;

	}

	// find a bridge between vertices that connects hole with an outer ring and and link it
	function eliminateHole( hole, outerNode ) {

		outerNode = findHoleBridge( hole, outerNode );
		if ( outerNode ) {

			var b = splitPolygon( outerNode, hole );
			filterPoints( b, b.next );

		}

	}

	// David Eberly's algorithm for finding a bridge between hole and outer polygon
	function findHoleBridge( hole, outerNode ) {

		var p = outerNode,
			hx = hole.x,
			hy = hole.y,
			qx = - Infinity,
			m;

		// find a segment intersected by a ray from the hole's leftmost point to the left;
		// segment's endpoint with lesser x will be potential connection point
		do {

			if ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {

				var x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );
				if ( x <= hx && x > qx ) {

					qx = x;
					if ( x === hx ) {

						if ( hy === p.y ) { return p; }
						if ( hy === p.next.y ) { return p.next; }

					}

					m = p.x < p.next.x ? p : p.next;

				}

			}

			p = p.next;

		} while ( p !== outerNode );

		if ( ! m ) { return null; }

		if ( hx === qx ) { return m.prev; } // hole touches outer segment; pick lower endpoint

		// look for points inside the triangle of hole point, segment intersection and endpoint;
		// if there are no points found, we have a valid connection;
		// otherwise choose the point of the minimum angle with the ray as connection point

		var stop = m,
			mx = m.x,
			my = m.y,
			tanMin = Infinity,
			tan;

		p = m.next;

		while ( p !== stop ) {

			if ( hx >= p.x && p.x >= mx && hx !== p.x &&
					pointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {

				tan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential

				if ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {

					m = p;
					tanMin = tan;

				}

			}

			p = p.next;

		}

		return m;

	}

	// interlink polygon nodes in z-order
	function indexCurve( start, minX, minY, invSize ) {

		var p = start;
		do {

			if ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }
			p.prevZ = p.prev;
			p.nextZ = p.next;
			p = p.next;

		} while ( p !== start );

		p.prevZ.nextZ = null;
		p.prevZ = null;

		sortLinked( p );

	}

	// Simon Tatham's linked list merge sort algorithm
	// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html
	function sortLinked( list ) {

		var i, p, q, e, tail, numMerges, pSize, qSize,
			inSize = 1;

		do {

			p = list;
			list = null;
			tail = null;
			numMerges = 0;

			while ( p ) {

				numMerges ++;
				q = p;
				pSize = 0;
				for ( i = 0; i < inSize; i ++ ) {

					pSize ++;
					q = q.nextZ;
					if ( ! q ) { break; }

				}

				qSize = inSize;

				while ( pSize > 0 || ( qSize > 0 && q ) ) {

					if ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {

						e = p;
						p = p.nextZ;
						pSize --;

					} else {

						e = q;
						q = q.nextZ;
						qSize --;

					}

					if ( tail ) { tail.nextZ = e; }
					else { list = e; }

					e.prevZ = tail;
					tail = e;

				}

				p = q;

			}

			tail.nextZ = null;
			inSize *= 2;

		} while ( numMerges > 1 );

		return list;

	}

	// z-order of a point given coords and inverse of the longer side of data bbox
	function zOrder( x, y, minX, minY, invSize ) {

		// coords are transformed into non-negative 15-bit integer range
		x = 32767 * ( x - minX ) * invSize;
		y = 32767 * ( y - minY ) * invSize;

		x = ( x | ( x << 8 ) ) & 0x00FF00FF;
		x = ( x | ( x << 4 ) ) & 0x0F0F0F0F;
		x = ( x | ( x << 2 ) ) & 0x33333333;
		x = ( x | ( x << 1 ) ) & 0x55555555;

		y = ( y | ( y << 8 ) ) & 0x00FF00FF;
		y = ( y | ( y << 4 ) ) & 0x0F0F0F0F;
		y = ( y | ( y << 2 ) ) & 0x33333333;
		y = ( y | ( y << 1 ) ) & 0x55555555;

		return x | ( y << 1 );

	}

	// find the leftmost node of a polygon ring
	function getLeftmost( start ) {

		var p = start,
			leftmost = start;
		do {

			if ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) { leftmost = p; }
			p = p.next;

		} while ( p !== start );

		return leftmost;

	}

	// check if a point lies within a convex triangle
	function pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {

		return ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&
			   ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&
			   ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;

	}

	// check if a diagonal between two polygon nodes is valid (lies in polygon interior)
	function isValidDiagonal( a, b ) {

		return a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&
			   locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );

	}

	// signed area of a triangle
	function area( p, q, r ) {

		return ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );

	}

	// check if two points are equal
	function equals( p1, p2 ) {

		return p1.x === p2.x && p1.y === p2.y;

	}

	// check if two segments intersect
	function intersects( p1, q1, p2, q2 ) {

		if ( ( equals( p1, p2 ) && equals( q1, q2 ) ) ||
			( equals( p1, q2 ) && equals( p2, q1 ) ) ) { return true; }
		return area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&
			   area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;

	}

	// check if a polygon diagonal intersects any polygon segments
	function intersectsPolygon( a, b ) {

		var p = a;
		do {

			if ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&
					intersects( p, p.next, a, b ) ) { return true; }
			p = p.next;

		} while ( p !== a );

		return false;

	}

	// check if a polygon diagonal is locally inside the polygon
	function locallyInside( a, b ) {

		return area( a.prev, a, a.next ) < 0 ?
			area( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :
			area( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;

	}

	// check if the middle point of a polygon diagonal is inside the polygon
	function middleInside( a, b ) {

		var p = a,
			inside = false,
			px = ( a.x + b.x ) / 2,
			py = ( a.y + b.y ) / 2;
		do {

			if ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&
					( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )
				{ inside = ! inside; }
			p = p.next;

		} while ( p !== a );

		return inside;

	}

	// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;
	// if one belongs to the outer ring and another to a hole, it merges it into a single ring
	function splitPolygon( a, b ) {

		var a2 = new Node( a.i, a.x, a.y ),
			b2 = new Node( b.i, b.x, b.y ),
			an = a.next,
			bp = b.prev;

		a.next = b;
		b.prev = a;

		a2.next = an;
		an.prev = a2;

		b2.next = a2;
		a2.prev = b2;

		bp.next = b2;
		b2.prev = bp;

		return b2;

	}

	// create a node and optionally link it with previous one (in a circular doubly linked list)
	function insertNode( i, x, y, last ) {

		var p = new Node( i, x, y );

		if ( ! last ) {

			p.prev = p;
			p.next = p;

		} else {

			p.next = last.next;
			p.prev = last;
			last.next.prev = p;
			last.next = p;

		}

		return p;

	}

	function removeNode( p ) {

		p.next.prev = p.prev;
		p.prev.next = p.next;

		if ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }
		if ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }

	}

	function Node( i, x, y ) {

		// vertex index in coordinates array
		this.i = i;

		// vertex coordinates
		this.x = x;
		this.y = y;

		// previous and next vertex nodes in a polygon ring
		this.prev = null;
		this.next = null;

		// z-order curve value
		this.z = null;

		// previous and next nodes in z-order
		this.prevZ = null;
		this.nextZ = null;

		// indicates whether this is a steiner point
		this.steiner = false;

	}

	function signedArea( data, start, end, dim ) {

		var sum = 0;
		for ( var i = start, j = end - dim; i < end; i += dim ) {

			sum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );
			j = i;

		}

		return sum;

	}

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 */

	var ShapeUtils = {

		// calculate area of the contour polygon

		area: function ( contour ) {

			var n = contour.length;
			var a = 0.0;

			for ( var p = n - 1, q = 0; q < n; p = q ++ ) {

				a += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;

			}

			return a * 0.5;

		},

		isClockWise: function ( pts ) {

			return ShapeUtils.area( pts ) < 0;

		},

		triangulateShape: function ( contour, holes ) {

			var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]
			var holeIndices = []; // array of hole indices
			var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]

			removeDupEndPts( contour );
			addContour( vertices, contour );

			//

			var holeIndex = contour.length;

			holes.forEach( removeDupEndPts );

			for ( var i = 0; i < holes.length; i ++ ) {

				holeIndices.push( holeIndex );
				holeIndex += holes[ i ].length;
				addContour( vertices, holes[ i ] );

			}

			//

			var triangles = Earcut.triangulate( vertices, holeIndices );

			//

			for ( var i = 0; i < triangles.length; i += 3 ) {

				faces.push( triangles.slice( i, i + 3 ) );

			}

			return faces;

		}

	};

	function removeDupEndPts( points ) {

		var l = points.length;

		if ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {

			points.pop();

		}

	}

	function addContour( vertices, contour ) {

		for ( var i = 0; i < contour.length; i ++ ) {

			vertices.push( contour[ i ].x );
			vertices.push( contour[ i ].y );

		}

	}

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 *
	 * Creates extruded geometry from a path shape.
	 *
	 * parameters = {
	 *
	 *  curveSegments: <int>, // number of points on the curves
	 *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too
	 *  depth: <float>, // Depth to extrude the shape
	 *
	 *  bevelEnabled: <bool>, // turn on bevel
	 *  bevelThickness: <float>, // how deep into the original shape bevel goes
	 *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel
	 *  bevelOffset: <float>, // how far from shape outline does bevel start
	 *  bevelSegments: <int>, // number of bevel layers
	 *
	 *  extrudePath: <THREE.Curve> // curve to extrude shape along
	 *
	 *  UVGenerator: <Object> // object that provides UV generator functions
	 *
	 * }
	 */

	// ExtrudeGeometry

	function ExtrudeGeometry( shapes, options ) {

		Geometry.call( this );

		this.type = 'ExtrudeGeometry';

		this.parameters = {
			shapes: shapes,
			options: options
		};

		this.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );
		this.mergeVertices();

	}

	ExtrudeGeometry.prototype = Object.create( Geometry.prototype );
	ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;

	ExtrudeGeometry.prototype.toJSON = function () {

		var data = Geometry.prototype.toJSON.call( this );

		var shapes = this.parameters.shapes;
		var options = this.parameters.options;

		return toJSON( shapes, options, data );

	};

	// ExtrudeBufferGeometry

	function ExtrudeBufferGeometry( shapes, options ) {

		BufferGeometry.call( this );

		this.type = 'ExtrudeBufferGeometry';

		this.parameters = {
			shapes: shapes,
			options: options
		};

		shapes = Array.isArray( shapes ) ? shapes : [ shapes ];

		var scope = this;

		var verticesArray = [];
		var uvArray = [];

		for ( var i = 0, l = shapes.length; i < l; i ++ ) {

			var shape = shapes[ i ];
			addShape( shape );

		}

		// build geometry

		this.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );

		this.computeVertexNormals();

		// functions

		function addShape( shape ) {

			var placeholder = [];

			// options

			var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;
			var steps = options.steps !== undefined ? options.steps : 1;
			var depth = options.depth !== undefined ? options.depth : 100;

			var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;
			var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;
			var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;
			var bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;
			var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;

			var extrudePath = options.extrudePath;

			var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;

			// deprecated options

			if ( options.amount !== undefined ) {

				console.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );
				depth = options.amount;

			}

			//

			var extrudePts, extrudeByPath = false;
			var splineTube, binormal, normal, position2;

			if ( extrudePath ) {

				extrudePts = extrudePath.getSpacedPoints( steps );

				extrudeByPath = true;
				bevelEnabled = false; // bevels not supported for path extrusion

				// SETUP TNB variables

				// TODO1 - have a .isClosed in spline?

				splineTube = extrudePath.computeFrenetFrames( steps, false );

				// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);

				binormal = new Vector3();
				normal = new Vector3();
				position2 = new Vector3();

			}

			// Safeguards if bevels are not enabled

			if ( ! bevelEnabled ) {

				bevelSegments = 0;
				bevelThickness = 0;
				bevelSize = 0;
				bevelOffset = 0;

			}

			// Variables initialization

			var ahole, h, hl; // looping of holes

			var shapePoints = shape.extractPoints( curveSegments );

			var vertices = shapePoints.shape;
			var holes = shapePoints.holes;

			var reverse = ! ShapeUtils.isClockWise( vertices );

			if ( reverse ) {

				vertices = vertices.reverse();

				// Maybe we should also check if holes are in the opposite direction, just to be safe ...

				for ( h = 0, hl = holes.length; h < hl; h ++ ) {

					ahole = holes[ h ];

					if ( ShapeUtils.isClockWise( ahole ) ) {

						holes[ h ] = ahole.reverse();

					}

				}

			}


			var faces = ShapeUtils.triangulateShape( vertices, holes );

			/* Vertices */

			var contour = vertices; // vertices has all points but contour has only points of circumference

			for ( h = 0, hl = holes.length; h < hl; h ++ ) {

				ahole = holes[ h ];

				vertices = vertices.concat( ahole );

			}


			function scalePt2( pt, vec, size ) {

				if ( ! vec ) { console.error( "THREE.ExtrudeGeometry: vec does not exist" ); }

				return vec.clone().multiplyScalar( size ).add( pt );

			}

			var b, bs, t, z,
				vert, vlen = vertices.length,
				face, flen = faces.length;


			// Find directions for point movement


			function getBevelVec( inPt, inPrev, inNext ) {

				// computes for inPt the corresponding point inPt' on a new contour
				//   shifted by 1 unit (length of normalized vector) to the left
				// if we walk along contour clockwise, this new contour is outside the old one
				//
				// inPt' is the intersection of the two lines parallel to the two
				//  adjacent edges of inPt at a distance of 1 unit on the left side.

				var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt

				// good reading for geometry algorithms (here: line-line intersection)
				// http://geomalgorithms.com/a05-_intersect-1.html

				var v_prev_x = inPt.x - inPrev.x,
					v_prev_y = inPt.y - inPrev.y;
				var v_next_x = inNext.x - inPt.x,
					v_next_y = inNext.y - inPt.y;

				var v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );

				// check for collinear edges
				var collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );

				if ( Math.abs( collinear0 ) > Number.EPSILON ) {

					// not collinear

					// length of vectors for normalizing

					var v_prev_len = Math.sqrt( v_prev_lensq );
					var v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );

					// shift adjacent points by unit vectors to the left

					var ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );
					var ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );

					var ptNextShift_x = ( inNext.x - v_next_y / v_next_len );
					var ptNextShift_y = ( inNext.y + v_next_x / v_next_len );

					// scaling factor for v_prev to intersection point

					var sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -
							( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /
						( v_prev_x * v_next_y - v_prev_y * v_next_x );

					// vector from inPt to intersection point

					v_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );
					v_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );

					// Don't normalize!, otherwise sharp corners become ugly
					//  but prevent crazy spikes
					var v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );
					if ( v_trans_lensq <= 2 ) {

						return new Vector2( v_trans_x, v_trans_y );

					} else {

						shrink_by = Math.sqrt( v_trans_lensq / 2 );

					}

				} else {

					// handle special case of collinear edges

					var direction_eq = false; // assumes: opposite
					if ( v_prev_x > Number.EPSILON ) {

						if ( v_next_x > Number.EPSILON ) {

							direction_eq = true;

						}

					} else {

						if ( v_prev_x < - Number.EPSILON ) {

							if ( v_next_x < - Number.EPSILON ) {

								direction_eq = true;

							}

						} else {

							if ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {

								direction_eq = true;

							}

						}

					}

					if ( direction_eq ) {

						// console.log("Warning: lines are a straight sequence");
						v_trans_x = - v_prev_y;
						v_trans_y = v_prev_x;
						shrink_by = Math.sqrt( v_prev_lensq );

					} else {

						// console.log("Warning: lines are a straight spike");
						v_trans_x = v_prev_x;
						v_trans_y = v_prev_y;
						shrink_by = Math.sqrt( v_prev_lensq / 2 );

					}

				}

				return new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );

			}


			var contourMovements = [];

			for ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

				if ( j === il ) { j = 0; }
				if ( k === il ) { k = 0; }

				//  (j)---(i)---(k)
				// console.log('i,j,k', i, j , k)

				contourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );

			}

			var holesMovements = [],
				oneHoleMovements, verticesMovements = contourMovements.concat();

			for ( h = 0, hl = holes.length; h < hl; h ++ ) {

				ahole = holes[ h ];

				oneHoleMovements = [];

				for ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {

					if ( j === il ) { j = 0; }
					if ( k === il ) { k = 0; }

					//  (j)---(i)---(k)
					oneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );

				}

				holesMovements.push( oneHoleMovements );
				verticesMovements = verticesMovements.concat( oneHoleMovements );

			}


			// Loop bevelSegments, 1 for the front, 1 for the back

			for ( b = 0; b < bevelSegments; b ++ ) {

				//for ( b = bevelSegments; b > 0; b -- ) {

				t = b / bevelSegments;
				z = bevelThickness * Math.cos( t * Math.PI / 2 );
				bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;

				// contract shape

				for ( i = 0, il = contour.length; i < il; i ++ ) {

					vert = scalePt2( contour[ i ], contourMovements[ i ], bs );

					v( vert.x, vert.y, - z );

				}

				// expand holes

				for ( h = 0, hl = holes.length; h < hl; h ++ ) {

					ahole = holes[ h ];
					oneHoleMovements = holesMovements[ h ];

					for ( i = 0, il = ahole.length; i < il; i ++ ) {

						vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

						v( vert.x, vert.y, - z );

					}

				}

			}

			bs = bevelSize + bevelOffset;

			// Back facing vertices

			for ( i = 0; i < vlen; i ++ ) {

				vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

				if ( ! extrudeByPath ) {

					v( vert.x, vert.y, 0 );

				} else {

					// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );

					normal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );
					binormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );

					position2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );

					v( position2.x, position2.y, position2.z );

				}

			}

			// Add stepped vertices...
			// Including front facing vertices

			var s;

			for ( s = 1; s <= steps; s ++ ) {

				for ( i = 0; i < vlen; i ++ ) {

					vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];

					if ( ! extrudeByPath ) {

						v( vert.x, vert.y, depth / steps * s );

					} else {

						// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );

						normal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );
						binormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );

						position2.copy( extrudePts[ s ] ).add( normal ).add( binormal );

						v( position2.x, position2.y, position2.z );

					}

				}

			}


			// Add bevel segments planes

			//for ( b = 1; b <= bevelSegments; b ++ ) {
			for ( b = bevelSegments - 1; b >= 0; b -- ) {

				t = b / bevelSegments;
				z = bevelThickness * Math.cos( t * Math.PI / 2 );
				bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;

				// contract shape

				for ( i = 0, il = contour.length; i < il; i ++ ) {

					vert = scalePt2( contour[ i ], contourMovements[ i ], bs );
					v( vert.x, vert.y, depth + z );

				}

				// expand holes

				for ( h = 0, hl = holes.length; h < hl; h ++ ) {

					ahole = holes[ h ];
					oneHoleMovements = holesMovements[ h ];

					for ( i = 0, il = ahole.length; i < il; i ++ ) {

						vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );

						if ( ! extrudeByPath ) {

							v( vert.x, vert.y, depth + z );

						} else {

							v( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );

						}

					}

				}

			}

			/* Faces */

			// Top and bottom faces

			buildLidFaces();

			// Sides faces

			buildSideFaces();


			/////  Internal functions

			function buildLidFaces() {

				var start = verticesArray.length / 3;

				if ( bevelEnabled ) {

					var layer = 0; // steps + 1
					var offset = vlen * layer;

					// Bottom faces

					for ( i = 0; i < flen; i ++ ) {

						face = faces[ i ];
						f3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );

					}

					layer = steps + bevelSegments * 2;
					offset = vlen * layer;

					// Top faces

					for ( i = 0; i < flen; i ++ ) {

						face = faces[ i ];
						f3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );

					}

				} else {

					// Bottom faces

					for ( i = 0; i < flen; i ++ ) {

						face = faces[ i ];
						f3( face[ 2 ], face[ 1 ], face[ 0 ] );

					}

					// Top faces

					for ( i = 0; i < flen; i ++ ) {

						face = faces[ i ];
						f3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );

					}

				}

				scope.addGroup( start, verticesArray.length / 3 - start, 0 );

			}

			// Create faces for the z-sides of the shape

			function buildSideFaces() {

				var start = verticesArray.length / 3;
				var layeroffset = 0;
				sidewalls( contour, layeroffset );
				layeroffset += contour.length;

				for ( h = 0, hl = holes.length; h < hl; h ++ ) {

					ahole = holes[ h ];
					sidewalls( ahole, layeroffset );

					//, true
					layeroffset += ahole.length;

				}


				scope.addGroup( start, verticesArray.length / 3 - start, 1 );


			}

			function sidewalls( contour, layeroffset ) {

				var j, k;
				i = contour.length;

				while ( -- i >= 0 ) {

					j = i;
					k = i - 1;
					if ( k < 0 ) { k = contour.length - 1; }

					//console.log('b', i,j, i-1, k,vertices.length);

					var s = 0,
						sl = steps + bevelSegments * 2;

					for ( s = 0; s < sl; s ++ ) {

						var slen1 = vlen * s;
						var slen2 = vlen * ( s + 1 );

						var a = layeroffset + j + slen1,
							b = layeroffset + k + slen1,
							c = layeroffset + k + slen2,
							d = layeroffset + j + slen2;

						f4( a, b, c, d );

					}

				}

			}

			function v( x, y, z ) {

				placeholder.push( x );
				placeholder.push( y );
				placeholder.push( z );

			}


			function f3( a, b, c ) {

				addVertex( a );
				addVertex( b );
				addVertex( c );

				var nextIndex = verticesArray.length / 3;
				var uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

				addUV( uvs[ 0 ] );
				addUV( uvs[ 1 ] );
				addUV( uvs[ 2 ] );

			}

			function f4( a, b, c, d ) {

				addVertex( a );
				addVertex( b );
				addVertex( d );

				addVertex( b );
				addVertex( c );
				addVertex( d );


				var nextIndex = verticesArray.length / 3;
				var uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );

				addUV( uvs[ 0 ] );
				addUV( uvs[ 1 ] );
				addUV( uvs[ 3 ] );

				addUV( uvs[ 1 ] );
				addUV( uvs[ 2 ] );
				addUV( uvs[ 3 ] );

			}

			function addVertex( index ) {

				verticesArray.push( placeholder[ index * 3 + 0 ] );
				verticesArray.push( placeholder[ index * 3 + 1 ] );
				verticesArray.push( placeholder[ index * 3 + 2 ] );

			}


			function addUV( vector2 ) {

				uvArray.push( vector2.x );
				uvArray.push( vector2.y );

			}

		}

	}

	ExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;

	ExtrudeBufferGeometry.prototype.toJSON = function () {

		var data = BufferGeometry.prototype.toJSON.call( this );

		var shapes = this.parameters.shapes;
		var options = this.parameters.options;

		return toJSON( shapes, options, data );

	};

	//

	var WorldUVGenerator = {

		generateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {

			var a_x = vertices[ indexA * 3 ];
			var a_y = vertices[ indexA * 3 + 1 ];
			var b_x = vertices[ indexB * 3 ];
			var b_y = vertices[ indexB * 3 + 1 ];
			var c_x = vertices[ indexC * 3 ];
			var c_y = vertices[ indexC * 3 + 1 ];

			return [
				new Vector2( a_x, a_y ),
				new Vector2( b_x, b_y ),
				new Vector2( c_x, c_y )
			];

		},

		generateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {

			var a_x = vertices[ indexA * 3 ];
			var a_y = vertices[ indexA * 3 + 1 ];
			var a_z = vertices[ indexA * 3 + 2 ];
			var b_x = vertices[ indexB * 3 ];
			var b_y = vertices[ indexB * 3 + 1 ];
			var b_z = vertices[ indexB * 3 + 2 ];
			var c_x = vertices[ indexC * 3 ];
			var c_y = vertices[ indexC * 3 + 1 ];
			var c_z = vertices[ indexC * 3 + 2 ];
			var d_x = vertices[ indexD * 3 ];
			var d_y = vertices[ indexD * 3 + 1 ];
			var d_z = vertices[ indexD * 3 + 2 ];

			if ( Math.abs( a_y - b_y ) < 0.01 ) {

				return [
					new Vector2( a_x, 1 - a_z ),
					new Vector2( b_x, 1 - b_z ),
					new Vector2( c_x, 1 - c_z ),
					new Vector2( d_x, 1 - d_z )
				];

			} else {

				return [
					new Vector2( a_y, 1 - a_z ),
					new Vector2( b_y, 1 - b_z ),
					new Vector2( c_y, 1 - c_z ),
					new Vector2( d_y, 1 - d_z )
				];

			}

		}
	};

	function toJSON( shapes, options, data ) {

		//

		data.shapes = [];

		if ( Array.isArray( shapes ) ) {

			for ( var i = 0, l = shapes.length; i < l; i ++ ) {

				var shape = shapes[ i ];

				data.shapes.push( shape.uuid );

			}

		} else {

			data.shapes.push( shapes.uuid );

		}

		//

		if ( options.extrudePath !== undefined ) { data.options.extrudePath = options.extrudePath.toJSON(); }

		return data;

	}

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * Text = 3D Text
	 *
	 * parameters = {
	 *  font: <THREE.Font>, // font
	 *
	 *  size: <float>, // size of the text
	 *  height: <float>, // thickness to extrude text
	 *  curveSegments: <int>, // number of points on the curves
	 *
	 *  bevelEnabled: <bool>, // turn on bevel
	 *  bevelThickness: <float>, // how deep into text bevel goes
	 *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel
	 *  bevelOffset: <float> // how far from text outline does bevel start
	 * }
	 */

	// TextGeometry

	function TextGeometry( text, parameters ) {

		Geometry.call( this );

		this.type = 'TextGeometry';

		this.parameters = {
			text: text,
			parameters: parameters
		};

		this.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );
		this.mergeVertices();

	}

	TextGeometry.prototype = Object.create( Geometry.prototype );
	TextGeometry.prototype.constructor = TextGeometry;

	// TextBufferGeometry

	function TextBufferGeometry( text, parameters ) {

		parameters = parameters || {};

		var font = parameters.font;

		if ( ! ( font && font.isFont ) ) {

			console.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );
			return new Geometry();

		}

		var shapes = font.generateShapes( text, parameters.size );

		// translate parameters to ExtrudeGeometry API

		parameters.depth = parameters.height !== undefined ? parameters.height : 50;

		// defaults

		if ( parameters.bevelThickness === undefined ) { parameters.bevelThickness = 10; }
		if ( parameters.bevelSize === undefined ) { parameters.bevelSize = 8; }
		if ( parameters.bevelEnabled === undefined ) { parameters.bevelEnabled = false; }

		ExtrudeBufferGeometry.call( this, shapes, parameters );

		this.type = 'TextBufferGeometry';

	}

	TextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );
	TextBufferGeometry.prototype.constructor = TextBufferGeometry;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author benaadams / https://twitter.com/ben_a_adams
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// SphereGeometry

	function SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {

		Geometry.call( this );

		this.type = 'SphereGeometry';

		this.parameters = {
			radius: radius,
			widthSegments: widthSegments,
			heightSegments: heightSegments,
			phiStart: phiStart,
			phiLength: phiLength,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		this.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );
		this.mergeVertices();

	}

	SphereGeometry.prototype = Object.create( Geometry.prototype );
	SphereGeometry.prototype.constructor = SphereGeometry;

	// SphereBufferGeometry

	function SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {

		BufferGeometry.call( this );

		this.type = 'SphereBufferGeometry';

		this.parameters = {
			radius: radius,
			widthSegments: widthSegments,
			heightSegments: heightSegments,
			phiStart: phiStart,
			phiLength: phiLength,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		radius = radius || 1;

		widthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );
		heightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );

		phiStart = phiStart !== undefined ? phiStart : 0;
		phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;

		thetaStart = thetaStart !== undefined ? thetaStart : 0;
		thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;

		var thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );

		var ix, iy;

		var index = 0;
		var grid = [];

		var vertex = new Vector3();
		var normal = new Vector3();

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// generate vertices, normals and uvs

		for ( iy = 0; iy <= heightSegments; iy ++ ) {

			var verticesRow = [];

			var v = iy / heightSegments;

			// special case for the poles

			var uOffset = 0;

			if ( iy == 0 && thetaStart == 0 ) {

				uOffset = 0.5 / widthSegments;

			} else if ( iy == heightSegments && thetaEnd == Math.PI ) {

				uOffset = - 0.5 / widthSegments;

			}

			for ( ix = 0; ix <= widthSegments; ix ++ ) {

				var u = ix / widthSegments;

				// vertex

				vertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );
				vertex.y = radius * Math.cos( thetaStart + v * thetaLength );
				vertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normal.copy( vertex ).normalize();
				normals.push( normal.x, normal.y, normal.z );

				// uv

				uvs.push( u + uOffset, 1 - v );

				verticesRow.push( index ++ );

			}

			grid.push( verticesRow );

		}

		// indices

		for ( iy = 0; iy < heightSegments; iy ++ ) {

			for ( ix = 0; ix < widthSegments; ix ++ ) {

				var a = grid[ iy ][ ix + 1 ];
				var b = grid[ iy ][ ix ];
				var c = grid[ iy + 1 ][ ix ];
				var d = grid[ iy + 1 ][ ix + 1 ];

				if ( iy !== 0 || thetaStart > 0 ) { indices.push( a, b, d ); }
				if ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) { indices.push( b, c, d ); }

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	SphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;

	/**
	 * @author Kaleb Murphy
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// RingGeometry

	function RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {

		Geometry.call( this );

		this.type = 'RingGeometry';

		this.parameters = {
			innerRadius: innerRadius,
			outerRadius: outerRadius,
			thetaSegments: thetaSegments,
			phiSegments: phiSegments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		this.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );
		this.mergeVertices();

	}

	RingGeometry.prototype = Object.create( Geometry.prototype );
	RingGeometry.prototype.constructor = RingGeometry;

	// RingBufferGeometry

	function RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {

		BufferGeometry.call( this );

		this.type = 'RingBufferGeometry';

		this.parameters = {
			innerRadius: innerRadius,
			outerRadius: outerRadius,
			thetaSegments: thetaSegments,
			phiSegments: phiSegments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		innerRadius = innerRadius || 0.5;
		outerRadius = outerRadius || 1;

		thetaStart = thetaStart !== undefined ? thetaStart : 0;
		thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;

		thetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;
		phiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// some helper variables

		var segment;
		var radius = innerRadius;
		var radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );
		var vertex = new Vector3();
		var uv = new Vector2();
		var j, i;

		// generate vertices, normals and uvs

		for ( j = 0; j <= phiSegments; j ++ ) {

			for ( i = 0; i <= thetaSegments; i ++ ) {

				// values are generate from the inside of the ring to the outside

				segment = thetaStart + i / thetaSegments * thetaLength;

				// vertex

				vertex.x = radius * Math.cos( segment );
				vertex.y = radius * Math.sin( segment );

				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normals.push( 0, 0, 1 );

				// uv

				uv.x = ( vertex.x / outerRadius + 1 ) / 2;
				uv.y = ( vertex.y / outerRadius + 1 ) / 2;

				uvs.push( uv.x, uv.y );

			}

			// increase the radius for next row of vertices

			radius += radiusStep;

		}

		// indices

		for ( j = 0; j < phiSegments; j ++ ) {

			var thetaSegmentLevel = j * ( thetaSegments + 1 );

			for ( i = 0; i < thetaSegments; i ++ ) {

				segment = i + thetaSegmentLevel;

				var a = segment;
				var b = segment + thetaSegments + 1;
				var c = segment + thetaSegments + 2;
				var d = segment + 1;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	RingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	RingBufferGeometry.prototype.constructor = RingBufferGeometry;

	/**
	 * @author zz85 / https://github.com/zz85
	 * @author bhouston / http://clara.io
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// LatheGeometry

	function LatheGeometry( points, segments, phiStart, phiLength ) {

		Geometry.call( this );

		this.type = 'LatheGeometry';

		this.parameters = {
			points: points,
			segments: segments,
			phiStart: phiStart,
			phiLength: phiLength
		};

		this.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );
		this.mergeVertices();

	}

	LatheGeometry.prototype = Object.create( Geometry.prototype );
	LatheGeometry.prototype.constructor = LatheGeometry;

	// LatheBufferGeometry

	function LatheBufferGeometry( points, segments, phiStart, phiLength ) {

		BufferGeometry.call( this );

		this.type = 'LatheBufferGeometry';

		this.parameters = {
			points: points,
			segments: segments,
			phiStart: phiStart,
			phiLength: phiLength
		};

		segments = Math.floor( segments ) || 12;
		phiStart = phiStart || 0;
		phiLength = phiLength || Math.PI * 2;

		// clamp phiLength so it's in range of [ 0, 2PI ]

		phiLength = MathUtils.clamp( phiLength, 0, Math.PI * 2 );


		// buffers

		var indices = [];
		var vertices = [];
		var uvs = [];

		// helper variables

		var base;
		var inverseSegments = 1.0 / segments;
		var vertex = new Vector3();
		var uv = new Vector2();
		var i, j;

		// generate vertices and uvs

		for ( i = 0; i <= segments; i ++ ) {

			var phi = phiStart + i * inverseSegments * phiLength;

			var sin = Math.sin( phi );
			var cos = Math.cos( phi );

			for ( j = 0; j <= ( points.length - 1 ); j ++ ) {

				// vertex

				vertex.x = points[ j ].x * sin;
				vertex.y = points[ j ].y;
				vertex.z = points[ j ].x * cos;

				vertices.push( vertex.x, vertex.y, vertex.z );

				// uv

				uv.x = i / segments;
				uv.y = j / ( points.length - 1 );

				uvs.push( uv.x, uv.y );


			}

		}

		// indices

		for ( i = 0; i < segments; i ++ ) {

			for ( j = 0; j < ( points.length - 1 ); j ++ ) {

				base = j + i * points.length;

				var a = base;
				var b = base + points.length;
				var c = base + points.length + 1;
				var d = base + 1;

				// faces

				indices.push( a, b, d );
				indices.push( b, c, d );

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		// generate normals

		this.computeVertexNormals();

		// if the geometry is closed, we need to average the normals along the seam.
		// because the corresponding vertices are identical (but still have different UVs).

		if ( phiLength === Math.PI * 2 ) {

			var normals = this.attributes.normal.array;
			var n1 = new Vector3();
			var n2 = new Vector3();
			var n = new Vector3();

			// this is the buffer offset for the last line of vertices

			base = segments * points.length * 3;

			for ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {

				// select the normal of the vertex in the first line

				n1.x = normals[ j + 0 ];
				n1.y = normals[ j + 1 ];
				n1.z = normals[ j + 2 ];

				// select the normal of the vertex in the last line

				n2.x = normals[ base + j + 0 ];
				n2.y = normals[ base + j + 1 ];
				n2.z = normals[ base + j + 2 ];

				// average normals

				n.addVectors( n1, n2 ).normalize();

				// assign the new values to both normals

				normals[ j + 0 ] = normals[ base + j + 0 ] = n.x;
				normals[ j + 1 ] = normals[ base + j + 1 ] = n.y;
				normals[ j + 2 ] = normals[ base + j + 2 ] = n.z;

			}

		}

	}

	LatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;

	/**
	 * @author jonobr1 / http://jonobr1.com
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// ShapeGeometry

	function ShapeGeometry( shapes, curveSegments ) {

		Geometry.call( this );

		this.type = 'ShapeGeometry';

		if ( typeof curveSegments === 'object' ) {

			console.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );

			curveSegments = curveSegments.curveSegments;

		}

		this.parameters = {
			shapes: shapes,
			curveSegments: curveSegments
		};

		this.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );
		this.mergeVertices();

	}

	ShapeGeometry.prototype = Object.create( Geometry.prototype );
	ShapeGeometry.prototype.constructor = ShapeGeometry;

	ShapeGeometry.prototype.toJSON = function () {

		var data = Geometry.prototype.toJSON.call( this );

		var shapes = this.parameters.shapes;

		return toJSON$1( shapes, data );

	};

	// ShapeBufferGeometry

	function ShapeBufferGeometry( shapes, curveSegments ) {

		BufferGeometry.call( this );

		this.type = 'ShapeBufferGeometry';

		this.parameters = {
			shapes: shapes,
			curveSegments: curveSegments
		};

		curveSegments = curveSegments || 12;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// helper variables

		var groupStart = 0;
		var groupCount = 0;

		// allow single and array values for "shapes" parameter

		if ( Array.isArray( shapes ) === false ) {

			addShape( shapes );

		} else {

			for ( var i = 0; i < shapes.length; i ++ ) {

				addShape( shapes[ i ] );

				this.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support

				groupStart += groupCount;
				groupCount = 0;

			}

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );


		// helper functions

		function addShape( shape ) {

			var i, l, shapeHole;

			var indexOffset = vertices.length / 3;
			var points = shape.extractPoints( curveSegments );

			var shapeVertices = points.shape;
			var shapeHoles = points.holes;

			// check direction of vertices

			if ( ShapeUtils.isClockWise( shapeVertices ) === false ) {

				shapeVertices = shapeVertices.reverse();

			}

			for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {

				shapeHole = shapeHoles[ i ];

				if ( ShapeUtils.isClockWise( shapeHole ) === true ) {

					shapeHoles[ i ] = shapeHole.reverse();

				}

			}

			var faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );

			// join vertices of inner and outer paths to a single array

			for ( i = 0, l = shapeHoles.length; i < l; i ++ ) {

				shapeHole = shapeHoles[ i ];
				shapeVertices = shapeVertices.concat( shapeHole );

			}

			// vertices, normals, uvs

			for ( i = 0, l = shapeVertices.length; i < l; i ++ ) {

				var vertex = shapeVertices[ i ];

				vertices.push( vertex.x, vertex.y, 0 );
				normals.push( 0, 0, 1 );
				uvs.push( vertex.x, vertex.y ); // world uvs

			}

			// incides

			for ( i = 0, l = faces.length; i < l; i ++ ) {

				var face = faces[ i ];

				var a = face[ 0 ] + indexOffset;
				var b = face[ 1 ] + indexOffset;
				var c = face[ 2 ] + indexOffset;

				indices.push( a, b, c );
				groupCount += 3;

			}

		}

	}

	ShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;

	ShapeBufferGeometry.prototype.toJSON = function () {

		var data = BufferGeometry.prototype.toJSON.call( this );

		var shapes = this.parameters.shapes;

		return toJSON$1( shapes, data );

	};

	//

	function toJSON$1( shapes, data ) {

		data.shapes = [];

		if ( Array.isArray( shapes ) ) {

			for ( var i = 0, l = shapes.length; i < l; i ++ ) {

				var shape = shapes[ i ];

				data.shapes.push( shape.uuid );

			}

		} else {

			data.shapes.push( shapes.uuid );

		}

		return data;

	}

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	function EdgesGeometry( geometry, thresholdAngle ) {

		BufferGeometry.call( this );

		this.type = 'EdgesGeometry';

		this.parameters = {
			thresholdAngle: thresholdAngle
		};

		thresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;

		// buffer

		var vertices = [];

		// helper variables

		var thresholdDot = Math.cos( MathUtils.DEG2RAD * thresholdAngle );
		var edge = [ 0, 0 ], edges = {}, edge1, edge2;
		var key, keys = [ 'a', 'b', 'c' ];

		// prepare source geometry

		var geometry2;

		if ( geometry.isBufferGeometry ) {

			geometry2 = new Geometry();
			geometry2.fromBufferGeometry( geometry );

		} else {

			geometry2 = geometry.clone();

		}

		geometry2.mergeVertices();
		geometry2.computeFaceNormals();

		var sourceVertices = geometry2.vertices;
		var faces = geometry2.faces;

		// now create a data structure where each entry represents an edge with its adjoining faces

		for ( var i = 0, l = faces.length; i < l; i ++ ) {

			var face = faces[ i ];

			for ( var j = 0; j < 3; j ++ ) {

				edge1 = face[ keys[ j ] ];
				edge2 = face[ keys[ ( j + 1 ) % 3 ] ];
				edge[ 0 ] = Math.min( edge1, edge2 );
				edge[ 1 ] = Math.max( edge1, edge2 );

				key = edge[ 0 ] + ',' + edge[ 1 ];

				if ( edges[ key ] === undefined ) {

					edges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };

				} else {

					edges[ key ].face2 = i;

				}

			}

		}

		// generate vertices

		for ( key in edges ) {

			var e = edges[ key ];

			// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.

			if ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {

				var vertex = sourceVertices[ e.index1 ];
				vertices.push( vertex.x, vertex.y, vertex.z );

				vertex = sourceVertices[ e.index2 ];
				vertices.push( vertex.x, vertex.y, vertex.z );

			}

		}

		// build geometry

		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );

	}

	EdgesGeometry.prototype = Object.create( BufferGeometry.prototype );
	EdgesGeometry.prototype.constructor = EdgesGeometry;

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	// CylinderGeometry

	function CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

		Geometry.call( this );

		this.type = 'CylinderGeometry';

		this.parameters = {
			radiusTop: radiusTop,
			radiusBottom: radiusBottom,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		this.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );
		this.mergeVertices();

	}

	CylinderGeometry.prototype = Object.create( Geometry.prototype );
	CylinderGeometry.prototype.constructor = CylinderGeometry;

	// CylinderBufferGeometry

	function CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

		BufferGeometry.call( this );

		this.type = 'CylinderBufferGeometry';

		this.parameters = {
			radiusTop: radiusTop,
			radiusBottom: radiusBottom,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		var scope = this;

		radiusTop = radiusTop !== undefined ? radiusTop : 1;
		radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;
		height = height || 1;

		radialSegments = Math.floor( radialSegments ) || 8;
		heightSegments = Math.floor( heightSegments ) || 1;

		openEnded = openEnded !== undefined ? openEnded : false;
		thetaStart = thetaStart !== undefined ? thetaStart : 0.0;
		thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// helper variables

		var index = 0;
		var indexArray = [];
		var halfHeight = height / 2;
		var groupStart = 0;

		// generate geometry

		generateTorso();

		if ( openEnded === false ) {

			if ( radiusTop > 0 ) { generateCap( true ); }
			if ( radiusBottom > 0 ) { generateCap( false ); }

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

		function generateTorso() {

			var x, y;
			var normal = new Vector3();
			var vertex = new Vector3();

			var groupCount = 0;

			// this will be used to calculate the normal
			var slope = ( radiusBottom - radiusTop ) / height;

			// generate vertices, normals and uvs

			for ( y = 0; y <= heightSegments; y ++ ) {

				var indexRow = [];

				var v = y / heightSegments;

				// calculate the radius of the current row

				var radius = v * ( radiusBottom - radiusTop ) + radiusTop;

				for ( x = 0; x <= radialSegments; x ++ ) {

					var u = x / radialSegments;

					var theta = u * thetaLength + thetaStart;

					var sinTheta = Math.sin( theta );
					var cosTheta = Math.cos( theta );

					// vertex

					vertex.x = radius * sinTheta;
					vertex.y = - v * height + halfHeight;
					vertex.z = radius * cosTheta;
					vertices.push( vertex.x, vertex.y, vertex.z );

					// normal

					normal.set( sinTheta, slope, cosTheta ).normalize();
					normals.push( normal.x, normal.y, normal.z );

					// uv

					uvs.push( u, 1 - v );

					// save index of vertex in respective row

					indexRow.push( index ++ );

				}

				// now save vertices of the row in our index array

				indexArray.push( indexRow );

			}

			// generate indices

			for ( x = 0; x < radialSegments; x ++ ) {

				for ( y = 0; y < heightSegments; y ++ ) {

					// we use the index array to access the correct indices

					var a = indexArray[ y ][ x ];
					var b = indexArray[ y + 1 ][ x ];
					var c = indexArray[ y + 1 ][ x + 1 ];
					var d = indexArray[ y ][ x + 1 ];

					// faces

					indices.push( a, b, d );
					indices.push( b, c, d );

					// update group counter

					groupCount += 6;

				}

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, 0 );

			// calculate new start value for groups

			groupStart += groupCount;

		}

		function generateCap( top ) {

			var x, centerIndexStart, centerIndexEnd;

			var uv = new Vector2();
			var vertex = new Vector3();

			var groupCount = 0;

			var radius = ( top === true ) ? radiusTop : radiusBottom;
			var sign = ( top === true ) ? 1 : - 1;

			// save the index of the first center vertex
			centerIndexStart = index;

			// first we generate the center vertex data of the cap.
			// because the geometry needs one set of uvs per face,
			// we must generate a center vertex per face/segment

			for ( x = 1; x <= radialSegments; x ++ ) {

				// vertex

				vertices.push( 0, halfHeight * sign, 0 );

				// normal

				normals.push( 0, sign, 0 );

				// uv

				uvs.push( 0.5, 0.5 );

				// increase index

				index ++;

			}

			// save the index of the last center vertex

			centerIndexEnd = index;

			// now we generate the surrounding vertices, normals and uvs

			for ( x = 0; x <= radialSegments; x ++ ) {

				var u = x / radialSegments;
				var theta = u * thetaLength + thetaStart;

				var cosTheta = Math.cos( theta );
				var sinTheta = Math.sin( theta );

				// vertex

				vertex.x = radius * sinTheta;
				vertex.y = halfHeight * sign;
				vertex.z = radius * cosTheta;
				vertices.push( vertex.x, vertex.y, vertex.z );

				// normal

				normals.push( 0, sign, 0 );

				// uv

				uv.x = ( cosTheta * 0.5 ) + 0.5;
				uv.y = ( sinTheta * 0.5 * sign ) + 0.5;
				uvs.push( uv.x, uv.y );

				// increase index

				index ++;

			}

			// generate indices

			for ( x = 0; x < radialSegments; x ++ ) {

				var c = centerIndexStart + x;
				var i = centerIndexEnd + x;

				if ( top === true ) {

					// face top

					indices.push( i, i + 1, c );

				} else {

					// face bottom

					indices.push( i + 1, i, c );

				}

				groupCount += 3;

			}

			// add a group to the geometry. this will ensure multi material support

			scope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );

			// calculate new start value for groups

			groupStart += groupCount;

		}

	}

	CylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;

	/**
	 * @author abelnation / http://github.com/abelnation
	 */

	// ConeGeometry

	function ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

		CylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );

		this.type = 'ConeGeometry';

		this.parameters = {
			radius: radius,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

	}

	ConeGeometry.prototype = Object.create( CylinderGeometry.prototype );
	ConeGeometry.prototype.constructor = ConeGeometry;

	// ConeBufferGeometry

	function ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {

		CylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );

		this.type = 'ConeBufferGeometry';

		this.parameters = {
			radius: radius,
			height: height,
			radialSegments: radialSegments,
			heightSegments: heightSegments,
			openEnded: openEnded,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

	}

	ConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );
	ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;

	/**
	 * @author benaadams / https://twitter.com/ben_a_adams
	 * @author Mugen87 / https://github.com/Mugen87
	 * @author hughes
	 */

	// CircleGeometry

	function CircleGeometry( radius, segments, thetaStart, thetaLength ) {

		Geometry.call( this );

		this.type = 'CircleGeometry';

		this.parameters = {
			radius: radius,
			segments: segments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		this.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );
		this.mergeVertices();

	}

	CircleGeometry.prototype = Object.create( Geometry.prototype );
	CircleGeometry.prototype.constructor = CircleGeometry;

	// CircleBufferGeometry

	function CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {

		BufferGeometry.call( this );

		this.type = 'CircleBufferGeometry';

		this.parameters = {
			radius: radius,
			segments: segments,
			thetaStart: thetaStart,
			thetaLength: thetaLength
		};

		radius = radius || 1;
		segments = segments !== undefined ? Math.max( 3, segments ) : 8;

		thetaStart = thetaStart !== undefined ? thetaStart : 0;
		thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;

		// buffers

		var indices = [];
		var vertices = [];
		var normals = [];
		var uvs = [];

		// helper variables

		var i, s;
		var vertex = new Vector3();
		var uv = new Vector2();

		// center point

		vertices.push( 0, 0, 0 );
		normals.push( 0, 0, 1 );
		uvs.push( 0.5, 0.5 );

		for ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {

			var segment = thetaStart + s / segments * thetaLength;

			// vertex

			vertex.x = radius * Math.cos( segment );
			vertex.y = radius * Math.sin( segment );

			vertices.push( vertex.x, vertex.y, vertex.z );

			// normal

			normals.push( 0, 0, 1 );

			// uvs

			uv.x = ( vertices[ i ] / radius + 1 ) / 2;
			uv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;

			uvs.push( uv.x, uv.y );

		}

		// indices

		for ( i = 1; i <= segments; i ++ ) {

			indices.push( i, i + 1, 0 );

		}

		// build geometry

		this.setIndex( indices );
		this.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		this.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );
		this.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );

	}

	CircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );
	CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;



	var Geometries = /*#__PURE__*/Object.freeze({
		__proto__: null,
		WireframeGeometry: WireframeGeometry,
		ParametricGeometry: ParametricGeometry,
		ParametricBufferGeometry: ParametricBufferGeometry,
		TetrahedronGeometry: TetrahedronGeometry,
		TetrahedronBufferGeometry: TetrahedronBufferGeometry,
		OctahedronGeometry: OctahedronGeometry,
		OctahedronBufferGeometry: OctahedronBufferGeometry,
		IcosahedronGeometry: IcosahedronGeometry,
		IcosahedronBufferGeometry: IcosahedronBufferGeometry,
		DodecahedronGeometry: DodecahedronGeometry,
		DodecahedronBufferGeometry: DodecahedronBufferGeometry,
		PolyhedronGeometry: PolyhedronGeometry,
		PolyhedronBufferGeometry: PolyhedronBufferGeometry,
		TubeGeometry: TubeGeometry,
		TubeBufferGeometry: TubeBufferGeometry,
		TorusKnotGeometry: TorusKnotGeometry,
		TorusKnotBufferGeometry: TorusKnotBufferGeometry,
		TorusGeometry: TorusGeometry,
		TorusBufferGeometry: TorusBufferGeometry,
		TextGeometry: TextGeometry,
		TextBufferGeometry: TextBufferGeometry,
		SphereGeometry: SphereGeometry,
		SphereBufferGeometry: SphereBufferGeometry,
		RingGeometry: RingGeometry,
		RingBufferGeometry: RingBufferGeometry,
		PlaneGeometry: PlaneGeometry,
		PlaneBufferGeometry: PlaneBufferGeometry,
		LatheGeometry: LatheGeometry,
		LatheBufferGeometry: LatheBufferGeometry,
		ShapeGeometry: ShapeGeometry,
		ShapeBufferGeometry: ShapeBufferGeometry,
		ExtrudeGeometry: ExtrudeGeometry,
		ExtrudeBufferGeometry: ExtrudeBufferGeometry,
		EdgesGeometry: EdgesGeometry,
		ConeGeometry: ConeGeometry,
		ConeBufferGeometry: ConeBufferGeometry,
		CylinderGeometry: CylinderGeometry,
		CylinderBufferGeometry: CylinderBufferGeometry,
		CircleGeometry: CircleGeometry,
		CircleBufferGeometry: CircleBufferGeometry,
		BoxGeometry: BoxGeometry,
		BoxBufferGeometry: BoxBufferGeometry
	});

	/**
	 * @author mrdoob / http://mrdoob.com/
	 *
	 * parameters = {
	 *  color: <THREE.Color>
	 * }
	 */

	function ShadowMaterial( parameters ) {

		Material.call( this );

		this.type = 'ShadowMaterial';

		this.color = new Color( 0x000000 );
		this.transparent = true;

		this.setValues( parameters );

	}

	ShadowMaterial.prototype = Object.create( Material.prototype );
	ShadowMaterial.prototype.constructor = ShadowMaterial;

	ShadowMaterial.prototype.isShadowMaterial = true;

	ShadowMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );

		return this;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function RawShaderMaterial( parameters ) {

		ShaderMaterial.call( this, parameters );

		this.type = 'RawShaderMaterial';

	}

	RawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );
	RawShaderMaterial.prototype.constructor = RawShaderMaterial;

	RawShaderMaterial.prototype.isRawShaderMaterial = true;

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  roughness: <float>,
	 *  metalness: <float>,
	 *  opacity: <float>,
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  lightMap: new THREE.Texture( <Image> ),
	 *  lightMapIntensity: <float>
	 *
	 *  aoMap: new THREE.Texture( <Image> ),
	 *  aoMapIntensity: <float>
	 *
	 *  emissive: <hex>,
	 *  emissiveIntensity: <float>
	 *  emissiveMap: new THREE.Texture( <Image> ),
	 *
	 *  bumpMap: new THREE.Texture( <Image> ),
	 *  bumpScale: <float>,
	 *
	 *  normalMap: new THREE.Texture( <Image> ),
	 *  normalMapType: THREE.TangentSpaceNormalMap,
	 *  normalScale: <Vector2>,
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>,
	 *
	 *  roughnessMap: new THREE.Texture( <Image> ),
	 *
	 *  metalnessMap: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
	 *  envMapIntensity: <float>
	 *
	 *  refractionRatio: <float>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function MeshStandardMaterial( parameters ) {

		Material.call( this );

		this.defines = { 'STANDARD': '' };

		this.type = 'MeshStandardMaterial';

		this.color = new Color( 0xffffff ); // diffuse
		this.roughness = 1.0;
		this.metalness = 0.0;

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.roughnessMap = null;

		this.metalnessMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.envMapIntensity = 1.0;

		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.vertexTangents = false;

		this.setValues( parameters );

	}

	MeshStandardMaterial.prototype = Object.create( Material.prototype );
	MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;

	MeshStandardMaterial.prototype.isMeshStandardMaterial = true;

	MeshStandardMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.defines = { 'STANDARD': '' };

		this.color.copy( source.color );
		this.roughness = source.roughness;
		this.metalness = source.metalness;

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.roughnessMap = source.roughnessMap;

		this.metalnessMap = source.metalnessMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.envMapIntensity = source.envMapIntensity;

		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		this.vertexTangents = source.vertexTangents;

		return this;

	};

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * parameters = {
	 *  clearcoat: <float>,
	 *  clearcoatMap: new THREE.Texture( <Image> ),
	 *  clearcoatRoughness: <float>,
	 *  clearcoatRoughnessMap: new THREE.Texture( <Image> ),
	 *  clearcoatNormalScale: <Vector2>,
	 *  clearcoatNormalMap: new THREE.Texture( <Image> ),
	 *
	 *  reflectivity: <float>,
	 *
	 *  sheen: <Color>,
	 *
	 *  transparency: <float>
	 * }
	 */

	function MeshPhysicalMaterial( parameters ) {

		MeshStandardMaterial.call( this );

		this.defines = {

			'STANDARD': '',
			'PHYSICAL': ''

		};

		this.type = 'MeshPhysicalMaterial';

		this.clearcoat = 0.0;
		this.clearcoatMap = null;
		this.clearcoatRoughness = 0.0;
		this.clearcoatRoughnessMap = null;
		this.clearcoatNormalScale = new Vector2( 1, 1 );
		this.clearcoatNormalMap = null;

		this.reflectivity = 0.5; // maps to F0 = 0.04

		this.sheen = null; // null will disable sheen bsdf

		this.transparency = 0.0;

		this.setValues( parameters );

	}

	MeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );
	MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;

	MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;

	MeshPhysicalMaterial.prototype.copy = function ( source ) {

		MeshStandardMaterial.prototype.copy.call( this, source );

		this.defines = {

			'STANDARD': '',
			'PHYSICAL': ''

		};

		this.clearcoat = source.clearcoat;
		this.clearcoatMap = source.clearcoatMap;
		this.clearcoatRoughness = source.clearcoatRoughness;
		this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;
		this.clearcoatNormalMap = source.clearcoatNormalMap;
		this.clearcoatNormalScale.copy( source.clearcoatNormalScale );

		this.reflectivity = source.reflectivity;

		if ( source.sheen ) {

			this.sheen = ( this.sheen || new Color() ).copy( source.sheen );

		} else {

			this.sheen = null;

		}

		this.transparency = source.transparency;

		return this;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  specular: <hex>,
	 *  shininess: <float>,
	 *  opacity: <float>,
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  lightMap: new THREE.Texture( <Image> ),
	 *  lightMapIntensity: <float>
	 *
	 *  aoMap: new THREE.Texture( <Image> ),
	 *  aoMapIntensity: <float>
	 *
	 *  emissive: <hex>,
	 *  emissiveIntensity: <float>
	 *  emissiveMap: new THREE.Texture( <Image> ),
	 *
	 *  bumpMap: new THREE.Texture( <Image> ),
	 *  bumpScale: <float>,
	 *
	 *  normalMap: new THREE.Texture( <Image> ),
	 *  normalMapType: THREE.TangentSpaceNormalMap,
	 *  normalScale: <Vector2>,
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>,
	 *
	 *  specularMap: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
	 *  combine: THREE.MultiplyOperation,
	 *  reflectivity: <float>,
	 *  refractionRatio: <float>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function MeshPhongMaterial( parameters ) {

		Material.call( this );

		this.type = 'MeshPhongMaterial';

		this.color = new Color( 0xffffff ); // diffuse
		this.specular = new Color( 0x111111 );
		this.shininess = 30;

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	MeshPhongMaterial.prototype = Object.create( Material.prototype );
	MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;

	MeshPhongMaterial.prototype.isMeshPhongMaterial = true;

	MeshPhongMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );
		this.specular.copy( source.specular );
		this.shininess = source.shininess;

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	};

	/**
	 * @author takahirox / http://github.com/takahirox
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  specular: <hex>,
	 *  shininess: <float>,
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *  gradientMap: new THREE.Texture( <Image> ),
	 *
	 *  lightMap: new THREE.Texture( <Image> ),
	 *  lightMapIntensity: <float>
	 *
	 *  aoMap: new THREE.Texture( <Image> ),
	 *  aoMapIntensity: <float>
	 *
	 *  emissive: <hex>,
	 *  emissiveIntensity: <float>
	 *  emissiveMap: new THREE.Texture( <Image> ),
	 *
	 *  bumpMap: new THREE.Texture( <Image> ),
	 *  bumpScale: <float>,
	 *
	 *  normalMap: new THREE.Texture( <Image> ),
	 *  normalMapType: THREE.TangentSpaceNormalMap,
	 *  normalScale: <Vector2>,
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>,
	 *
	 *  specularMap: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function MeshToonMaterial( parameters ) {

		Material.call( this );

		this.defines = { 'TOON': '' };

		this.type = 'MeshToonMaterial';

		this.color = new Color( 0xffffff );
		this.specular = new Color( 0x111111 );
		this.shininess = 30;

		this.map = null;
		this.gradientMap = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.specularMap = null;

		this.alphaMap = null;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	MeshToonMaterial.prototype = Object.create( Material.prototype );
	MeshToonMaterial.prototype.constructor = MeshToonMaterial;

	MeshToonMaterial.prototype.isMeshToonMaterial = true;

	MeshToonMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );
		this.specular.copy( source.specular );
		this.shininess = source.shininess;

		this.map = source.map;
		this.gradientMap = source.gradientMap;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * parameters = {
	 *  opacity: <float>,
	 *
	 *  bumpMap: new THREE.Texture( <Image> ),
	 *  bumpScale: <float>,
	 *
	 *  normalMap: new THREE.Texture( <Image> ),
	 *  normalMapType: THREE.TangentSpaceNormalMap,
	 *  normalScale: <Vector2>,
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function MeshNormalMaterial( parameters ) {

		Material.call( this );

		this.type = 'MeshNormalMaterial';

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.wireframe = false;
		this.wireframeLinewidth = 1;

		this.fog = false;

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	MeshNormalMaterial.prototype = Object.create( Material.prototype );
	MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;

	MeshNormalMaterial.prototype.isMeshNormalMaterial = true;

	MeshNormalMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  opacity: <float>,
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  lightMap: new THREE.Texture( <Image> ),
	 *  lightMapIntensity: <float>
	 *
	 *  aoMap: new THREE.Texture( <Image> ),
	 *  aoMapIntensity: <float>
	 *
	 *  emissive: <hex>,
	 *  emissiveIntensity: <float>
	 *  emissiveMap: new THREE.Texture( <Image> ),
	 *
	 *  specularMap: new THREE.Texture( <Image> ),
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),
	 *  combine: THREE.Multiply,
	 *  reflectivity: <float>,
	 *  refractionRatio: <float>,
	 *
	 *  wireframe: <boolean>,
	 *  wireframeLinewidth: <float>,
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function MeshLambertMaterial( parameters ) {

		Material.call( this );

		this.type = 'MeshLambertMaterial';

		this.color = new Color( 0xffffff ); // diffuse

		this.map = null;

		this.lightMap = null;
		this.lightMapIntensity = 1.0;

		this.aoMap = null;
		this.aoMapIntensity = 1.0;

		this.emissive = new Color( 0x000000 );
		this.emissiveIntensity = 1.0;
		this.emissiveMap = null;

		this.specularMap = null;

		this.alphaMap = null;

		this.envMap = null;
		this.combine = MultiplyOperation;
		this.reflectivity = 1;
		this.refractionRatio = 0.98;

		this.wireframe = false;
		this.wireframeLinewidth = 1;
		this.wireframeLinecap = 'round';
		this.wireframeLinejoin = 'round';

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	MeshLambertMaterial.prototype = Object.create( Material.prototype );
	MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;

	MeshLambertMaterial.prototype.isMeshLambertMaterial = true;

	MeshLambertMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.color.copy( source.color );

		this.map = source.map;

		this.lightMap = source.lightMap;
		this.lightMapIntensity = source.lightMapIntensity;

		this.aoMap = source.aoMap;
		this.aoMapIntensity = source.aoMapIntensity;

		this.emissive.copy( source.emissive );
		this.emissiveMap = source.emissiveMap;
		this.emissiveIntensity = source.emissiveIntensity;

		this.specularMap = source.specularMap;

		this.alphaMap = source.alphaMap;

		this.envMap = source.envMap;
		this.combine = source.combine;
		this.reflectivity = source.reflectivity;
		this.refractionRatio = source.refractionRatio;

		this.wireframe = source.wireframe;
		this.wireframeLinewidth = source.wireframeLinewidth;
		this.wireframeLinecap = source.wireframeLinecap;
		this.wireframeLinejoin = source.wireframeLinejoin;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	};

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  opacity: <float>,
	 *
	 *  matcap: new THREE.Texture( <Image> ),
	 *
	 *  map: new THREE.Texture( <Image> ),
	 *
	 *  bumpMap: new THREE.Texture( <Image> ),
	 *  bumpScale: <float>,
	 *
	 *  normalMap: new THREE.Texture( <Image> ),
	 *  normalMapType: THREE.TangentSpaceNormalMap,
	 *  normalScale: <Vector2>,
	 *
	 *  displacementMap: new THREE.Texture( <Image> ),
	 *  displacementScale: <float>,
	 *  displacementBias: <float>,
	 *
	 *  alphaMap: new THREE.Texture( <Image> ),
	 *
	 *  skinning: <bool>,
	 *  morphTargets: <bool>,
	 *  morphNormals: <bool>
	 * }
	 */

	function MeshMatcapMaterial( parameters ) {

		Material.call( this );

		this.defines = { 'MATCAP': '' };

		this.type = 'MeshMatcapMaterial';

		this.color = new Color( 0xffffff ); // diffuse

		this.matcap = null;

		this.map = null;

		this.bumpMap = null;
		this.bumpScale = 1;

		this.normalMap = null;
		this.normalMapType = TangentSpaceNormalMap;
		this.normalScale = new Vector2( 1, 1 );

		this.displacementMap = null;
		this.displacementScale = 1;
		this.displacementBias = 0;

		this.alphaMap = null;

		this.skinning = false;
		this.morphTargets = false;
		this.morphNormals = false;

		this.setValues( parameters );

	}

	MeshMatcapMaterial.prototype = Object.create( Material.prototype );
	MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;

	MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;

	MeshMatcapMaterial.prototype.copy = function ( source ) {

		Material.prototype.copy.call( this, source );

		this.defines = { 'MATCAP': '' };

		this.color.copy( source.color );

		this.matcap = source.matcap;

		this.map = source.map;

		this.bumpMap = source.bumpMap;
		this.bumpScale = source.bumpScale;

		this.normalMap = source.normalMap;
		this.normalMapType = source.normalMapType;
		this.normalScale.copy( source.normalScale );

		this.displacementMap = source.displacementMap;
		this.displacementScale = source.displacementScale;
		this.displacementBias = source.displacementBias;

		this.alphaMap = source.alphaMap;

		this.skinning = source.skinning;
		this.morphTargets = source.morphTargets;
		this.morphNormals = source.morphNormals;

		return this;

	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 *
	 * parameters = {
	 *  color: <hex>,
	 *  opacity: <float>,
	 *
	 *  linewidth: <float>,
	 *
	 *  scale: <float>,
	 *  dashSize: <float>,
	 *  gapSize: <float>
	 * }
	 */

	function LineDashedMaterial( parameters ) {

		LineBasicMaterial.call( this );

		this.type = 'LineDashedMaterial';

		this.scale = 1;
		this.dashSize = 3;
		this.gapSize = 1;

		this.setValues( parameters );

	}

	LineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );
	LineDashedMaterial.prototype.constructor = LineDashedMaterial;

	LineDashedMaterial.prototype.isLineDashedMaterial = true;

	LineDashedMaterial.prototype.copy = function ( source ) {

		LineBasicMaterial.prototype.copy.call( this, source );

		this.scale = source.scale;
		this.dashSize = source.dashSize;
		this.gapSize = source.gapSize;

		return this;

	};



	var Materials = /*#__PURE__*/Object.freeze({
		__proto__: null,
		ShadowMaterial: ShadowMaterial,
		SpriteMaterial: SpriteMaterial,
		RawShaderMaterial: RawShaderMaterial,
		ShaderMaterial: ShaderMaterial,
		PointsMaterial: PointsMaterial,
		MeshPhysicalMaterial: MeshPhysicalMaterial,
		MeshStandardMaterial: MeshStandardMaterial,
		MeshPhongMaterial: MeshPhongMaterial,
		MeshToonMaterial: MeshToonMaterial,
		MeshNormalMaterial: MeshNormalMaterial,
		MeshLambertMaterial: MeshLambertMaterial,
		MeshDepthMaterial: MeshDepthMaterial,
		MeshDistanceMaterial: MeshDistanceMaterial,
		MeshBasicMaterial: MeshBasicMaterial,
		MeshMatcapMaterial: MeshMatcapMaterial,
		LineDashedMaterial: LineDashedMaterial,
		LineBasicMaterial: LineBasicMaterial,
		Material: Material
	});

	/**
	 * @author tschw
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 */

	var AnimationUtils = {

		// same as Array.prototype.slice, but also works on typed arrays
		arraySlice: function ( array, from, to ) {

			if ( AnimationUtils.isTypedArray( array ) ) {

				// in ios9 array.subarray(from, undefined) will return empty array
				// but array.subarray(from) or array.subarray(from, len) is correct
				return new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );

			}

			return array.slice( from, to );

		},

		// converts an array to a specific type
		convertArray: function ( array, type, forceClone ) {

			if ( ! array || // let 'undefined' and 'null' pass
				! forceClone && array.constructor === type ) { return array; }

			if ( typeof type.BYTES_PER_ELEMENT === 'number' ) {

				return new type( array ); // create typed array

			}

			return Array.prototype.slice.call( array ); // create Array

		},

		isTypedArray: function ( object ) {

			return ArrayBuffer.isView( object ) &&
				! ( object instanceof DataView );

		},

		// returns an array by which times and values can be sorted
		getKeyframeOrder: function ( times ) {

			function compareTime( i, j ) {

				return times[ i ] - times[ j ];

			}

			var n = times.length;
			var result = new Array( n );
			for ( var i = 0; i !== n; ++ i ) { result[ i ] = i; }

			result.sort( compareTime );

			return result;

		},

		// uses the array previously returned by 'getKeyframeOrder' to sort data
		sortedArray: function ( values, stride, order ) {

			var nValues = values.length;
			var result = new values.constructor( nValues );

			for ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {

				var srcOffset = order[ i ] * stride;

				for ( var j = 0; j !== stride; ++ j ) {

					result[ dstOffset ++ ] = values[ srcOffset + j ];

				}

			}

			return result;

		},

		// function for parsing AOS keyframe formats
		flattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {

			var i = 1, key = jsonKeys[ 0 ];

			while ( key !== undefined && key[ valuePropertyName ] === undefined ) {

				key = jsonKeys[ i ++ ];

			}

			if ( key === undefined ) { return; } // no data

			var value = key[ valuePropertyName ];
			if ( value === undefined ) { return; } // no data

			if ( Array.isArray( value ) ) {

				do {

					value = key[ valuePropertyName ];

					if ( value !== undefined ) {

						times.push( key.time );
						values.push.apply( values, value ); // push all elements

					}

					key = jsonKeys[ i ++ ];

				} while ( key !== undefined );

			} else if ( value.toArray !== undefined ) {

				// ...assume THREE.Math-ish

				do {

					value = key[ valuePropertyName ];

					if ( value !== undefined ) {

						times.push( key.time );
						value.toArray( values, values.length );

					}

					key = jsonKeys[ i ++ ];

				} while ( key !== undefined );

			} else {

				// otherwise push as-is

				do {

					value = key[ valuePropertyName ];

					if ( value !== undefined ) {

						times.push( key.time );
						values.push( value );

					}

					key = jsonKeys[ i ++ ];

				} while ( key !== undefined );

			}

		},

		subclip: function ( sourceClip, name, startFrame, endFrame, fps ) {

			fps = fps || 30;

			var clip = sourceClip.clone();

			clip.name = name;

			var tracks = [];

			for ( var i = 0; i < clip.tracks.length; ++ i ) {

				var track = clip.tracks[ i ];
				var valueSize = track.getValueSize();

				var times = [];
				var values = [];

				for ( var j = 0; j < track.times.length; ++ j ) {

					var frame = track.times[ j ] * fps;

					if ( frame < startFrame || frame >= endFrame ) { continue; }

					times.push( track.times[ j ] );

					for ( var k = 0; k < valueSize; ++ k ) {

						values.push( track.values[ j * valueSize + k ] );

					}

				}

				if ( times.length === 0 ) { continue; }

				track.times = AnimationUtils.convertArray( times, track.times.constructor );
				track.values = AnimationUtils.convertArray( values, track.values.constructor );

				tracks.push( track );

			}

			clip.tracks = tracks;

			// find minimum .times value across all tracks in the trimmed clip

			var minStartTime = Infinity;

			for ( var i = 0; i < clip.tracks.length; ++ i ) {

				if ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {

					minStartTime = clip.tracks[ i ].times[ 0 ];

				}

			}

			// shift all tracks such that clip begins at t=0

			for ( var i = 0; i < clip.tracks.length; ++ i ) {

				clip.tracks[ i ].shift( - 1 * minStartTime );

			}

			clip.resetDuration();

			return clip;

		}

	};

	/**
	 * Abstract base class of interpolants over parametric samples.
	 *
	 * The parameter domain is one dimensional, typically the time or a path
	 * along a curve defined by the data.
	 *
	 * The sample values can have any dimensionality and derived classes may
	 * apply special interpretations to the data.
	 *
	 * This class provides the interval seek in a Template Method, deferring
	 * the actual interpolation to derived classes.
	 *
	 * Time complexity is O(1) for linear access crossing at most two points
	 * and O(log N) for random access, where N is the number of positions.
	 *
	 * References:
	 *
	 * 		http://www.oodesign.com/template-method-pattern.html
	 *
	 * @author tschw
	 */

	function Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		this.parameterPositions = parameterPositions;
		this._cachedIndex = 0;

		this.resultBuffer = resultBuffer !== undefined ?
			resultBuffer : new sampleValues.constructor( sampleSize );
		this.sampleValues = sampleValues;
		this.valueSize = sampleSize;

	}

	Object.assign( Interpolant.prototype, {

		evaluate: function ( t ) {

			var pp = this.parameterPositions,
				i1 = this._cachedIndex,

				t1 = pp[ i1 ],
				t0 = pp[ i1 - 1 ];

			validate_interval: {

				seek: {

					var right;

					linear_scan: {

						//- See http://jsperf.com/comparison-to-undefined/3
						//- slower code:
						//-
						//- 				if ( t >= t1 || t1 === undefined ) {
						forward_scan: if ( ! ( t < t1 ) ) {

							for ( var giveUpAt = i1 + 2; ; ) {

								if ( t1 === undefined ) {

									if ( t < t0 ) { break forward_scan; }

									// after end

									i1 = pp.length;
									this._cachedIndex = i1;
									return this.afterEnd_( i1 - 1, t, t0 );

								}

								if ( i1 === giveUpAt ) { break; } // this loop

								t0 = t1;
								t1 = pp[ ++ i1 ];

								if ( t < t1 ) {

									// we have arrived at the sought interval
									break seek;

								}

							}

							// prepare binary search on the right side of the index
							right = pp.length;
							break linear_scan;

						}

						//- slower code:
						//-					if ( t < t0 || t0 === undefined ) {
						if ( ! ( t >= t0 ) ) {

							// looping?

							var t1global = pp[ 1 ];

							if ( t < t1global ) {

								i1 = 2; // + 1, using the scan for the details
								t0 = t1global;

							}

							// linear reverse scan

							for ( var giveUpAt = i1 - 2; ; ) {

								if ( t0 === undefined ) {

									// before start

									this._cachedIndex = 0;
									return this.beforeStart_( 0, t, t1 );

								}

								if ( i1 === giveUpAt ) { break; } // this loop

								t1 = t0;
								t0 = pp[ -- i1 - 1 ];

								if ( t >= t0 ) {

									// we have arrived at the sought interval
									break seek;

								}

							}

							// prepare binary search on the left side of the index
							right = i1;
							i1 = 0;
							break linear_scan;

						}

						// the interval is valid

						break validate_interval;

					} // linear scan

					// binary search

					while ( i1 < right ) {

						var mid = ( i1 + right ) >>> 1;

						if ( t < pp[ mid ] ) {

							right = mid;

						} else {

							i1 = mid + 1;

						}

					}

					t1 = pp[ i1 ];
					t0 = pp[ i1 - 1 ];

					// check boundary cases, again

					if ( t0 === undefined ) {

						this._cachedIndex = 0;
						return this.beforeStart_( 0, t, t1 );

					}

					if ( t1 === undefined ) {

						i1 = pp.length;
						this._cachedIndex = i1;
						return this.afterEnd_( i1 - 1, t0, t );

					}

				} // seek

				this._cachedIndex = i1;

				this.intervalChanged_( i1, t0, t1 );

			} // validate_interval

			return this.interpolate_( i1, t0, t, t1 );

		},

		settings: null, // optional, subclass-specific settings structure
		// Note: The indirection allows central control of many interpolants.

		// --- Protected interface

		DefaultSettings_: {},

		getSettings_: function () {

			return this.settings || this.DefaultSettings_;

		},

		copySampleValue_: function ( index ) {

			// copies a sample value to the result buffer

			var result = this.resultBuffer,
				values = this.sampleValues,
				stride = this.valueSize,
				offset = index * stride;

			for ( var i = 0; i !== stride; ++ i ) {

				result[ i ] = values[ offset + i ];

			}

			return result;

		},

		// Template methods for derived classes:

		interpolate_: function ( /* i1, t0, t, t1 */ ) {

			throw new Error( 'call to abstract method' );
			// implementations shall return this.resultBuffer

		},

		intervalChanged_: function ( /* i1, t0, t1 */ ) {

			// empty

		}

	} );

	// DECLARE ALIAS AFTER assign prototype
	Object.assign( Interpolant.prototype, {

		//( 0, t, t0 ), returns this.resultBuffer
		beforeStart_: Interpolant.prototype.copySampleValue_,

		//( N-1, tN-1, t ), returns this.resultBuffer
		afterEnd_: Interpolant.prototype.copySampleValue_,

	} );

	/**
	 * Fast and simple cubic spline interpolant.
	 *
	 * It was derived from a Hermitian construction setting the first derivative
	 * at each sample position to the linear slope between neighboring positions
	 * over their parameter interval.
	 *
	 * @author tschw
	 */

	function CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

		this._weightPrev = - 0;
		this._offsetPrev = - 0;
		this._weightNext = - 0;
		this._offsetNext = - 0;

	}

	CubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

		constructor: CubicInterpolant,

		DefaultSettings_: {

			endingStart: ZeroCurvatureEnding,
			endingEnd: ZeroCurvatureEnding

		},

		intervalChanged_: function ( i1, t0, t1 ) {

			var pp = this.parameterPositions,
				iPrev = i1 - 2,
				iNext = i1 + 1,

				tPrev = pp[ iPrev ],
				tNext = pp[ iNext ];

			if ( tPrev === undefined ) {

				switch ( this.getSettings_().endingStart ) {

					case ZeroSlopeEnding:

						// f'(t0) = 0
						iPrev = i1;
						tPrev = 2 * t0 - t1;

						break;

					case WrapAroundEnding:

						// use the other end of the curve
						iPrev = pp.length - 2;
						tPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];

						break;

					default: // ZeroCurvatureEnding

						// f''(t0) = 0 a.k.a. Natural Spline
						iPrev = i1;
						tPrev = t1;

				}

			}

			if ( tNext === undefined ) {

				switch ( this.getSettings_().endingEnd ) {

					case ZeroSlopeEnding:

						// f'(tN) = 0
						iNext = i1;
						tNext = 2 * t1 - t0;

						break;

					case WrapAroundEnding:

						// use the other end of the curve
						iNext = 1;
						tNext = t1 + pp[ 1 ] - pp[ 0 ];

						break;

					default: // ZeroCurvatureEnding

						// f''(tN) = 0, a.k.a. Natural Spline
						iNext = i1 - 1;
						tNext = t0;

				}

			}

			var halfDt = ( t1 - t0 ) * 0.5,
				stride = this.valueSize;

			this._weightPrev = halfDt / ( t0 - tPrev );
			this._weightNext = halfDt / ( tNext - t1 );
			this._offsetPrev = iPrev * stride;
			this._offsetNext = iNext * stride;

		},

		interpolate_: function ( i1, t0, t, t1 ) {

			var result = this.resultBuffer,
				values = this.sampleValues,
				stride = this.valueSize,

				o1 = i1 * stride,		o0 = o1 - stride,
				oP = this._offsetPrev, 	oN = this._offsetNext,
				wP = this._weightPrev,	wN = this._weightNext,

				p = ( t - t0 ) / ( t1 - t0 ),
				pp = p * p,
				ppp = pp * p;

			// evaluate polynomials

			var sP = - wP * ppp + 2 * wP * pp - wP * p;
			var s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;
			var s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;
			var sN = wN * ppp - wN * pp;

			// combine data linearly

			for ( var i = 0; i !== stride; ++ i ) {

				result[ i ] =
						sP * values[ oP + i ] +
						s0 * values[ o0 + i ] +
						s1 * values[ o1 + i ] +
						sN * values[ oN + i ];

			}

			return result;

		}

	} );

	/**
	 * @author tschw
	 */

	function LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

	}

	LinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

		constructor: LinearInterpolant,

		interpolate_: function ( i1, t0, t, t1 ) {

			var result = this.resultBuffer,
				values = this.sampleValues,
				stride = this.valueSize,

				offset1 = i1 * stride,
				offset0 = offset1 - stride,

				weight1 = ( t - t0 ) / ( t1 - t0 ),
				weight0 = 1 - weight1;

			for ( var i = 0; i !== stride; ++ i ) {

				result[ i ] =
						values[ offset0 + i ] * weight0 +
						values[ offset1 + i ] * weight1;

			}

			return result;

		}

	} );

	/**
	 *
	 * Interpolant that evaluates to the sample value at the position preceeding
	 * the parameter.
	 *
	 * @author tschw
	 */

	function DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

	}

	DiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

		constructor: DiscreteInterpolant,

		interpolate_: function ( i1 /*, t0, t, t1 */ ) {

			return this.copySampleValue_( i1 - 1 );

		}

	} );

	/**
	 *
	 * A timed sequence of keyframes for a specific property.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function KeyframeTrack( name, times, values, interpolation ) {

		if ( name === undefined ) { throw new Error( 'THREE.KeyframeTrack: track name is undefined' ); }
		if ( times === undefined || times.length === 0 ) { throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name ); }

		this.name = name;

		this.times = AnimationUtils.convertArray( times, this.TimeBufferType );
		this.values = AnimationUtils.convertArray( values, this.ValueBufferType );

		this.setInterpolation( interpolation || this.DefaultInterpolation );

	}

	// Static methods

	Object.assign( KeyframeTrack, {

		// Serialization (in static context, because of constructor invocation
		// and automatic invocation of .toJSON):

		toJSON: function ( track ) {

			var trackType = track.constructor;

			var json;

			// derived classes can define a static toJSON method
			if ( trackType.toJSON !== undefined ) {

				json = trackType.toJSON( track );

			} else {

				// by default, we assume the data can be serialized as-is
				json = {

					'name': track.name,
					'times': AnimationUtils.convertArray( track.times, Array ),
					'values': AnimationUtils.convertArray( track.values, Array )

				};

				var interpolation = track.getInterpolation();

				if ( interpolation !== track.DefaultInterpolation ) {

					json.interpolation = interpolation;

				}

			}

			json.type = track.ValueTypeName; // mandatory

			return json;

		}

	} );

	Object.assign( KeyframeTrack.prototype, {

		constructor: KeyframeTrack,

		TimeBufferType: Float32Array,

		ValueBufferType: Float32Array,

		DefaultInterpolation: InterpolateLinear,

		InterpolantFactoryMethodDiscrete: function ( result ) {

			return new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );

		},

		InterpolantFactoryMethodLinear: function ( result ) {

			return new LinearInterpolant( this.times, this.values, this.getValueSize(), result );

		},

		InterpolantFactoryMethodSmooth: function ( result ) {

			return new CubicInterpolant( this.times, this.values, this.getValueSize(), result );

		},

		setInterpolation: function ( interpolation ) {

			var factoryMethod;

			switch ( interpolation ) {

				case InterpolateDiscrete:

					factoryMethod = this.InterpolantFactoryMethodDiscrete;

					break;

				case InterpolateLinear:

					factoryMethod = this.InterpolantFactoryMethodLinear;

					break;

				case InterpolateSmooth:

					factoryMethod = this.InterpolantFactoryMethodSmooth;

					break;

			}

			if ( factoryMethod === undefined ) {

				var message = "unsupported interpolation for " +
					this.ValueTypeName + " keyframe track named " + this.name;

				if ( this.createInterpolant === undefined ) {

					// fall back to default, unless the default itself is messed up
					if ( interpolation !== this.DefaultInterpolation ) {

						this.setInterpolation( this.DefaultInterpolation );

					} else {

						throw new Error( message ); // fatal, in this case

					}

				}

				console.warn( 'THREE.KeyframeTrack:', message );
				return this;

			}

			this.createInterpolant = factoryMethod;

			return this;

		},

		getInterpolation: function () {

			switch ( this.createInterpolant ) {

				case this.InterpolantFactoryMethodDiscrete:

					return InterpolateDiscrete;

				case this.InterpolantFactoryMethodLinear:

					return InterpolateLinear;

				case this.InterpolantFactoryMethodSmooth:

					return InterpolateSmooth;

			}

		},

		getValueSize: function () {

			return this.values.length / this.times.length;

		},

		// move all keyframes either forwards or backwards in time
		shift: function ( timeOffset ) {

			if ( timeOffset !== 0.0 ) {

				var times = this.times;

				for ( var i = 0, n = times.length; i !== n; ++ i ) {

					times[ i ] += timeOffset;

				}

			}

			return this;

		},

		// scale all keyframe times by a factor (useful for frame <-> seconds conversions)
		scale: function ( timeScale ) {

			if ( timeScale !== 1.0 ) {

				var times = this.times;

				for ( var i = 0, n = times.length; i !== n; ++ i ) {

					times[ i ] *= timeScale;

				}

			}

			return this;

		},

		// removes keyframes before and after animation without changing any values within the range [startTime, endTime].
		// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values
		trim: function ( startTime, endTime ) {

			var times = this.times,
				nKeys = times.length,
				from = 0,
				to = nKeys - 1;

			while ( from !== nKeys && times[ from ] < startTime ) {

				++ from;

			}

			while ( to !== - 1 && times[ to ] > endTime ) {

				-- to;

			}

			++ to; // inclusive -> exclusive bound

			if ( from !== 0 || to !== nKeys ) {

				// empty tracks are forbidden, so keep at least one keyframe
				if ( from >= to ) {

					to = Math.max( to, 1 );
					from = to - 1;

				}

				var stride = this.getValueSize();
				this.times = AnimationUtils.arraySlice( times, from, to );
				this.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );

			}

			return this;

		},

		// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable
		validate: function () {

			var valid = true;

			var valueSize = this.getValueSize();
			if ( valueSize - Math.floor( valueSize ) !== 0 ) {

				console.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );
				valid = false;

			}

			var times = this.times,
				values = this.values,

				nKeys = times.length;

			if ( nKeys === 0 ) {

				console.error( 'THREE.KeyframeTrack: Track is empty.', this );
				valid = false;

			}

			var prevTime = null;

			for ( var i = 0; i !== nKeys; i ++ ) {

				var currTime = times[ i ];

				if ( typeof currTime === 'number' && isNaN( currTime ) ) {

					console.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );
					valid = false;
					break;

				}

				if ( prevTime !== null && prevTime > currTime ) {

					console.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );
					valid = false;
					break;

				}

				prevTime = currTime;

			}

			if ( values !== undefined ) {

				if ( AnimationUtils.isTypedArray( values ) ) {

					for ( var i = 0, n = values.length; i !== n; ++ i ) {

						var value = values[ i ];

						if ( isNaN( value ) ) {

							console.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );
							valid = false;
							break;

						}

					}

				}

			}

			return valid;

		},

		// removes equivalent sequential keys as common in morph target sequences
		// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)
		optimize: function () {

			// times or values may be shared with other tracks, so overwriting is unsafe
			var times = AnimationUtils.arraySlice( this.times ),
				values = AnimationUtils.arraySlice( this.values ),
				stride = this.getValueSize(),

				smoothInterpolation = this.getInterpolation() === InterpolateSmooth,

				writeIndex = 1,
				lastIndex = times.length - 1;

			for ( var i = 1; i < lastIndex; ++ i ) {

				var keep = false;

				var time = times[ i ];
				var timeNext = times[ i + 1 ];

				// remove adjacent keyframes scheduled at the same time

				if ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {

					if ( ! smoothInterpolation ) {

						// remove unnecessary keyframes same as their neighbors

						var offset = i * stride,
							offsetP = offset - stride,
							offsetN = offset + stride;

						for ( var j = 0; j !== stride; ++ j ) {

							var value = values[ offset + j ];

							if ( value !== values[ offsetP + j ] ||
								value !== values[ offsetN + j ] ) {

								keep = true;
								break;

							}

						}

					} else {

						keep = true;

					}

				}

				// in-place compaction

				if ( keep ) {

					if ( i !== writeIndex ) {

						times[ writeIndex ] = times[ i ];

						var readOffset = i * stride,
							writeOffset = writeIndex * stride;

						for ( var j = 0; j !== stride; ++ j ) {

							values[ writeOffset + j ] = values[ readOffset + j ];

						}

					}

					++ writeIndex;

				}

			}

			// flush last keyframe (compaction looks ahead)

			if ( lastIndex > 0 ) {

				times[ writeIndex ] = times[ lastIndex ];

				for ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {

					values[ writeOffset + j ] = values[ readOffset + j ];

				}

				++ writeIndex;

			}

			if ( writeIndex !== times.length ) {

				this.times = AnimationUtils.arraySlice( times, 0, writeIndex );
				this.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );

			} else {

				this.times = times;
				this.values = values;

			}

			return this;

		},

		clone: function () {

			var times = AnimationUtils.arraySlice( this.times, 0 );
			var values = AnimationUtils.arraySlice( this.values, 0 );

			var TypedKeyframeTrack = this.constructor;
			var track = new TypedKeyframeTrack( this.name, times, values );

			// Interpolant argument to constructor is not saved, so copy the factory method directly.
			track.createInterpolant = this.createInterpolant;

			return track;

		}

	} );

	/**
	 *
	 * A Track of Boolean keyframe values.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function BooleanKeyframeTrack( name, times, values ) {

		KeyframeTrack.call( this, name, times, values );

	}

	BooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {

		constructor: BooleanKeyframeTrack,

		ValueTypeName: 'bool',
		ValueBufferType: Array,

		DefaultInterpolation: InterpolateDiscrete,

		InterpolantFactoryMethodLinear: undefined,
		InterpolantFactoryMethodSmooth: undefined

		// Note: Actually this track could have a optimized / compressed
		// representation of a single value and a custom interpolant that
		// computes "firstValue ^ isOdd( index )".

	} );

	/**
	 *
	 * A Track of keyframe values that represent color.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function ColorKeyframeTrack( name, times, values, interpolation ) {

		KeyframeTrack.call( this, name, times, values, interpolation );

	}

	ColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {

		constructor: ColorKeyframeTrack,

		ValueTypeName: 'color'

		// ValueBufferType is inherited

		// DefaultInterpolation is inherited

		// Note: Very basic implementation and nothing special yet.
		// However, this is the place for color space parameterization.

	} );

	/**
	 *
	 * A Track of numeric keyframe values.
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function NumberKeyframeTrack( name, times, values, interpolation ) {

		KeyframeTrack.call( this, name, times, values, interpolation );

	}

	NumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {

		constructor: NumberKeyframeTrack,

		ValueTypeName: 'number'

		// ValueBufferType is inherited

		// DefaultInterpolation is inherited

	} );

	/**
	 * Spherical linear unit quaternion interpolant.
	 *
	 * @author tschw
	 */

	function QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {

		Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );

	}

	QuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {

		constructor: QuaternionLinearInterpolant,

		interpolate_: function ( i1, t0, t, t1 ) {

			var result = this.resultBuffer,
				values = this.sampleValues,
				stride = this.valueSize,

				offset = i1 * stride,

				alpha = ( t - t0 ) / ( t1 - t0 );

			for ( var end = offset + stride; offset !== end; offset += 4 ) {

				Quaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );

			}

			return result;

		}

	} );

	/**
	 *
	 * A Track of quaternion keyframe values.
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function QuaternionKeyframeTrack( name, times, values, interpolation ) {

		KeyframeTrack.call( this, name, times, values, interpolation );

	}

	QuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {

		constructor: QuaternionKeyframeTrack,

		ValueTypeName: 'quaternion',

		// ValueBufferType is inherited

		DefaultInterpolation: InterpolateLinear,

		InterpolantFactoryMethodLinear: function ( result ) {

			return new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );

		},

		InterpolantFactoryMethodSmooth: undefined // not yet implemented

	} );

	/**
	 *
	 * A Track that interpolates Strings
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function StringKeyframeTrack( name, times, values, interpolation ) {

		KeyframeTrack.call( this, name, times, values, interpolation );

	}

	StringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {

		constructor: StringKeyframeTrack,

		ValueTypeName: 'string',
		ValueBufferType: Array,

		DefaultInterpolation: InterpolateDiscrete,

		InterpolantFactoryMethodLinear: undefined,

		InterpolantFactoryMethodSmooth: undefined

	} );

	/**
	 *
	 * A Track of vectored keyframe values.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function VectorKeyframeTrack( name, times, values, interpolation ) {

		KeyframeTrack.call( this, name, times, values, interpolation );

	}

	VectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {

		constructor: VectorKeyframeTrack,

		ValueTypeName: 'vector'

		// ValueBufferType is inherited

		// DefaultInterpolation is inherited

	} );

	/**
	 *
	 * Reusable set of Tracks that represent an animation.
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 */

	function AnimationClip( name, duration, tracks ) {

		this.name = name;
		this.tracks = tracks;
		this.duration = ( duration !== undefined ) ? duration : - 1;

		this.uuid = MathUtils.generateUUID();

		// this means it should figure out its duration by scanning the tracks
		if ( this.duration < 0 ) {

			this.resetDuration();

		}

	}

	function getTrackTypeForValueTypeName( typeName ) {

		switch ( typeName.toLowerCase() ) {

			case 'scalar':
			case 'double':
			case 'float':
			case 'number':
			case 'integer':

				return NumberKeyframeTrack;

			case 'vector':
			case 'vector2':
			case 'vector3':
			case 'vector4':

				return VectorKeyframeTrack;

			case 'color':

				return ColorKeyframeTrack;

			case 'quaternion':

				return QuaternionKeyframeTrack;

			case 'bool':
			case 'boolean':

				return BooleanKeyframeTrack;

			case 'string':

				return StringKeyframeTrack;

		}

		throw new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );

	}

	function parseKeyframeTrack( json ) {

		if ( json.type === undefined ) {

			throw new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );

		}

		var trackType = getTrackTypeForValueTypeName( json.type );

		if ( json.times === undefined ) {

			var times = [], values = [];

			AnimationUtils.flattenJSON( json.keys, times, values, 'value' );

			json.times = times;
			json.values = values;

		}

		// derived classes can define a static parse method
		if ( trackType.parse !== undefined ) {

			return trackType.parse( json );

		} else {

			// by default, we assume a constructor compatible with the base
			return new trackType( json.name, json.times, json.values, json.interpolation );

		}

	}

	Object.assign( AnimationClip, {

		parse: function ( json ) {

			var tracks = [],
				jsonTracks = json.tracks,
				frameTime = 1.0 / ( json.fps || 1.0 );

			for ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {

				tracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );

			}

			return new AnimationClip( json.name, json.duration, tracks );

		},

		toJSON: function ( clip ) {

			var tracks = [],
				clipTracks = clip.tracks;

			var json = {

				'name': clip.name,
				'duration': clip.duration,
				'tracks': tracks,
				'uuid': clip.uuid

			};

			for ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {

				tracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );

			}

			return json;

		},

		CreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {

			var numMorphTargets = morphTargetSequence.length;
			var tracks = [];

			for ( var i = 0; i < numMorphTargets; i ++ ) {

				var times = [];
				var values = [];

				times.push(
					( i + numMorphTargets - 1 ) % numMorphTargets,
					i,
					( i + 1 ) % numMorphTargets );

				values.push( 0, 1, 0 );

				var order = AnimationUtils.getKeyframeOrder( times );
				times = AnimationUtils.sortedArray( times, 1, order );
				values = AnimationUtils.sortedArray( values, 1, order );

				// if there is a key at the first frame, duplicate it as the
				// last frame as well for perfect loop.
				if ( ! noLoop && times[ 0 ] === 0 ) {

					times.push( numMorphTargets );
					values.push( values[ 0 ] );

				}

				tracks.push(
					new NumberKeyframeTrack(
						'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',
						times, values
					).scale( 1.0 / fps ) );

			}

			return new AnimationClip( name, - 1, tracks );

		},

		findByName: function ( objectOrClipArray, name ) {

			var clipArray = objectOrClipArray;

			if ( ! Array.isArray( objectOrClipArray ) ) {

				var o = objectOrClipArray;
				clipArray = o.geometry && o.geometry.animations || o.animations;

			}

			for ( var i = 0; i < clipArray.length; i ++ ) {

				if ( clipArray[ i ].name === name ) {

					return clipArray[ i ];

				}

			}

			return null;

		},

		CreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {

			var animationToMorphTargets = {};

			// tested with https://regex101.com/ on trick sequences
			// such flamingo_flyA_003, flamingo_run1_003, crdeath0059
			var pattern = /^([\w-]*?)([\d]+)$/;

			// sort morph target names into animation groups based
			// patterns like Walk_001, Walk_002, Run_001, Run_002
			for ( var i = 0, il = morphTargets.length; i < il; i ++ ) {

				var morphTarget = morphTargets[ i ];
				var parts = morphTarget.name.match( pattern );

				if ( parts && parts.length > 1 ) {

					var name = parts[ 1 ];

					var animationMorphTargets = animationToMorphTargets[ name ];
					if ( ! animationMorphTargets ) {

						animationToMorphTargets[ name ] = animationMorphTargets = [];

					}

					animationMorphTargets.push( morphTarget );

				}

			}

			var clips = [];

			for ( var name in animationToMorphTargets ) {

				clips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );

			}

			return clips;

		},

		// parse the animation.hierarchy format
		parseAnimation: function ( animation, bones ) {

			if ( ! animation ) {

				console.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );
				return null;

			}

			var addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {

				// only return track if there are actually keys.
				if ( animationKeys.length !== 0 ) {

					var times = [];
					var values = [];

					AnimationUtils.flattenJSON( animationKeys, times, values, propertyName );

					// empty keys are filtered out, so check again
					if ( times.length !== 0 ) {

						destTracks.push( new trackType( trackName, times, values ) );

					}

				}

			};

			var tracks = [];

			var clipName = animation.name || 'default';
			// automatic length determination in AnimationClip.
			var duration = animation.length || - 1;
			var fps = animation.fps || 30;

			var hierarchyTracks = animation.hierarchy || [];

			for ( var h = 0; h < hierarchyTracks.length; h ++ ) {

				var animationKeys = hierarchyTracks[ h ].keys;

				// skip empty tracks
				if ( ! animationKeys || animationKeys.length === 0 ) { continue; }

				// process morph targets
				if ( animationKeys[ 0 ].morphTargets ) {

					// figure out all morph targets used in this track
					var morphTargetNames = {};

					for ( var k = 0; k < animationKeys.length; k ++ ) {

						if ( animationKeys[ k ].morphTargets ) {

							for ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {

								morphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;

							}

						}

					}

					// create a track for each morph target with all zero
					// morphTargetInfluences except for the keys in which
					// the morphTarget is named.
					for ( var morphTargetName in morphTargetNames ) {

						var times = [];
						var values = [];

						for ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {

							var animationKey = animationKeys[ k ];

							times.push( animationKey.time );
							values.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );

						}

						tracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );

					}

					duration = morphTargetNames.length * ( fps || 1.0 );

				} else {

					// ...assume skeletal animation

					var boneName = '.bones[' + bones[ h ].name + ']';

					addNonemptyTrack(
						VectorKeyframeTrack, boneName + '.position',
						animationKeys, 'pos', tracks );

					addNonemptyTrack(
						QuaternionKeyframeTrack, boneName + '.quaternion',
						animationKeys, 'rot', tracks );

					addNonemptyTrack(
						VectorKeyframeTrack, boneName + '.scale',
						animationKeys, 'scl', tracks );

				}

			}

			if ( tracks.length === 0 ) {

				return null;

			}

			var clip = new AnimationClip( clipName, duration, tracks );

			return clip;

		}

	} );

	Object.assign( AnimationClip.prototype, {

		resetDuration: function () {

			var tracks = this.tracks, duration = 0;

			for ( var i = 0, n = tracks.length; i !== n; ++ i ) {

				var track = this.tracks[ i ];

				duration = Math.max( duration, track.times[ track.times.length - 1 ] );

			}

			this.duration = duration;

			return this;

		},

		trim: function () {

			for ( var i = 0; i < this.tracks.length; i ++ ) {

				this.tracks[ i ].trim( 0, this.duration );

			}

			return this;

		},

		validate: function () {

			var valid = true;

			for ( var i = 0; i < this.tracks.length; i ++ ) {

				valid = valid && this.tracks[ i ].validate();

			}

			return valid;

		},

		optimize: function () {

			for ( var i = 0; i < this.tracks.length; i ++ ) {

				this.tracks[ i ].optimize();

			}

			return this;

		},

		clone: function () {

			var tracks = [];

			for ( var i = 0; i < this.tracks.length; i ++ ) {

				tracks.push( this.tracks[ i ].clone() );

			}

			return new AnimationClip( this.name, this.duration, tracks );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var Cache = {

		enabled: false,

		files: {},

		add: function ( key, file ) {

			if ( this.enabled === false ) { return; }

			// console.log( 'THREE.Cache', 'Adding key:', key );

			this.files[ key ] = file;

		},

		get: function ( key ) {

			if ( this.enabled === false ) { return; }

			// console.log( 'THREE.Cache', 'Checking key:', key );

			return this.files[ key ];

		},

		remove: function ( key ) {

			delete this.files[ key ];

		},

		clear: function () {

			this.files = {};

		}

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function LoadingManager( onLoad, onProgress, onError ) {

		var scope = this;

		var isLoading = false;
		var itemsLoaded = 0;
		var itemsTotal = 0;
		var urlModifier = undefined;
		var handlers = [];

		// Refer to #5689 for the reason why we don't set .onStart
		// in the constructor

		this.onStart = undefined;
		this.onLoad = onLoad;
		this.onProgress = onProgress;
		this.onError = onError;

		this.itemStart = function ( url ) {

			itemsTotal ++;

			if ( isLoading === false ) {

				if ( scope.onStart !== undefined ) {

					scope.onStart( url, itemsLoaded, itemsTotal );

				}

			}

			isLoading = true;

		};

		this.itemEnd = function ( url ) {

			itemsLoaded ++;

			if ( scope.onProgress !== undefined ) {

				scope.onProgress( url, itemsLoaded, itemsTotal );

			}

			if ( itemsLoaded === itemsTotal ) {

				isLoading = false;

				if ( scope.onLoad !== undefined ) {

					scope.onLoad();

				}

			}

		};

		this.itemError = function ( url ) {

			if ( scope.onError !== undefined ) {

				scope.onError( url );

			}

		};

		this.resolveURL = function ( url ) {

			if ( urlModifier ) {

				return urlModifier( url );

			}

			return url;

		};

		this.setURLModifier = function ( transform ) {

			urlModifier = transform;

			return this;

		};

		this.addHandler = function ( regex, loader ) {

			handlers.push( regex, loader );

			return this;

		};

		this.removeHandler = function ( regex ) {

			var index = handlers.indexOf( regex );

			if ( index !== - 1 ) {

				handlers.splice( index, 2 );

			}

			return this;

		};

		this.getHandler = function ( file ) {

			for ( var i = 0, l = handlers.length; i < l; i += 2 ) {

				var regex = handlers[ i ];
				var loader = handlers[ i + 1 ];

				if ( regex.global ) { regex.lastIndex = 0; } // see #17920

				if ( regex.test( file ) ) {

					return loader;

				}

			}

			return null;

		};

	}

	var DefaultLoadingManager = new LoadingManager();

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function Loader( manager ) {

		this.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;

		this.crossOrigin = 'anonymous';
		this.path = '';
		this.resourcePath = '';

	}

	Object.assign( Loader.prototype, {

		load: function ( /* url, onLoad, onProgress, onError */ ) {},

		parse: function ( /* data */ ) {},

		setCrossOrigin: function ( crossOrigin ) {

			this.crossOrigin = crossOrigin;
			return this;

		},

		setPath: function ( path ) {

			this.path = path;
			return this;

		},

		setResourcePath: function ( resourcePath ) {

			this.resourcePath = resourcePath;
			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var loading = {};

	function FileLoader( manager ) {

		Loader.call( this, manager );

	}

	FileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: FileLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			if ( url === undefined ) { url = ''; }

			if ( this.path !== undefined ) { url = this.path + url; }

			url = this.manager.resolveURL( url );

			var scope = this;

			var cached = Cache.get( url );

			if ( cached !== undefined ) {

				scope.manager.itemStart( url );

				setTimeout( function () {

					if ( onLoad ) { onLoad( cached ); }

					scope.manager.itemEnd( url );

				}, 0 );

				return cached;

			}

			// Check if request is duplicate

			if ( loading[ url ] !== undefined ) {

				loading[ url ].push( {

					onLoad: onLoad,
					onProgress: onProgress,
					onError: onError

				} );

				return;

			}

			// Check for data: URI
			var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;
			var dataUriRegexResult = url.match( dataUriRegex );

			// Safari can not handle Data URIs through XMLHttpRequest so process manually
			if ( dataUriRegexResult ) {

				var mimeType = dataUriRegexResult[ 1 ];
				var isBase64 = !! dataUriRegexResult[ 2 ];
				var data = dataUriRegexResult[ 3 ];

				data = decodeURIComponent( data );

				if ( isBase64 ) { data = atob( data ); }

				try {

					var response;
					var responseType = ( this.responseType || '' ).toLowerCase();

					switch ( responseType ) {

						case 'arraybuffer':
						case 'blob':

							var view = new Uint8Array( data.length );

							for ( var i = 0; i < data.length; i ++ ) {

								view[ i ] = data.charCodeAt( i );

							}

							if ( responseType === 'blob' ) {

								response = new Blob( [ view.buffer ], { type: mimeType } );

							} else {

								response = view.buffer;

							}

							break;

						case 'document':

							var parser = new DOMParser();
							response = parser.parseFromString( data, mimeType );

							break;

						case 'json':

							response = JSON.parse( data );

							break;

						default: // 'text' or other

							response = data;

							break;

					}

					// Wait for next browser tick like standard XMLHttpRequest event dispatching does
					setTimeout( function () {

						if ( onLoad ) { onLoad( response ); }

						scope.manager.itemEnd( url );

					}, 0 );

				} catch ( error ) {

					// Wait for next browser tick like standard XMLHttpRequest event dispatching does
					setTimeout( function () {

						if ( onError ) { onError( error ); }

						scope.manager.itemError( url );
						scope.manager.itemEnd( url );

					}, 0 );

				}

			} else {

				// Initialise array for duplicate requests

				loading[ url ] = [];

				loading[ url ].push( {

					onLoad: onLoad,
					onProgress: onProgress,
					onError: onError

				} );

				var request = new XMLHttpRequest();

				request.open( 'GET', url, true );

				request.addEventListener( 'load', function ( event ) {

					var response = this.response;

					var callbacks = loading[ url ];

					delete loading[ url ];

					if ( this.status === 200 || this.status === 0 ) {

						// Some browsers return HTTP Status 0 when using non-http protocol
						// e.g. 'file://' or 'data://'. Handle as success.

						if ( this.status === 0 ) { console.warn( 'THREE.FileLoader: HTTP Status 0 received.' ); }

						// Add to cache only on HTTP success, so that we do not cache
						// error response bodies as proper responses to requests.
						Cache.add( url, response );

						for ( var i = 0, il = callbacks.length; i < il; i ++ ) {

							var callback = callbacks[ i ];
							if ( callback.onLoad ) { callback.onLoad( response ); }

						}

						scope.manager.itemEnd( url );

					} else {

						for ( var i = 0, il = callbacks.length; i < il; i ++ ) {

							var callback = callbacks[ i ];
							if ( callback.onError ) { callback.onError( event ); }

						}

						scope.manager.itemError( url );
						scope.manager.itemEnd( url );

					}

				}, false );

				request.addEventListener( 'progress', function ( event ) {

					var callbacks = loading[ url ];

					for ( var i = 0, il = callbacks.length; i < il; i ++ ) {

						var callback = callbacks[ i ];
						if ( callback.onProgress ) { callback.onProgress( event ); }

					}

				}, false );

				request.addEventListener( 'error', function ( event ) {

					var callbacks = loading[ url ];

					delete loading[ url ];

					for ( var i = 0, il = callbacks.length; i < il; i ++ ) {

						var callback = callbacks[ i ];
						if ( callback.onError ) { callback.onError( event ); }

					}

					scope.manager.itemError( url );
					scope.manager.itemEnd( url );

				}, false );

				request.addEventListener( 'abort', function ( event ) {

					var callbacks = loading[ url ];

					delete loading[ url ];

					for ( var i = 0, il = callbacks.length; i < il; i ++ ) {

						var callback = callbacks[ i ];
						if ( callback.onError ) { callback.onError( event ); }

					}

					scope.manager.itemError( url );
					scope.manager.itemEnd( url );

				}, false );

				if ( this.responseType !== undefined ) { request.responseType = this.responseType; }
				if ( this.withCredentials !== undefined ) { request.withCredentials = this.withCredentials; }

				if ( request.overrideMimeType ) { request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' ); }

				for ( var header in this.requestHeader ) {

					request.setRequestHeader( header, this.requestHeader[ header ] );

				}

				request.send( null );

			}

			scope.manager.itemStart( url );

			return request;

		},

		setResponseType: function ( value ) {

			this.responseType = value;
			return this;

		},

		setWithCredentials: function ( value ) {

			this.withCredentials = value;
			return this;

		},

		setMimeType: function ( value ) {

			this.mimeType = value;
			return this;

		},

		setRequestHeader: function ( value ) {

			this.requestHeader = value;
			return this;

		}

	} );

	/**
	 * @author bhouston / http://clara.io/
	 */

	function AnimationLoader( manager ) {

		Loader.call( this, manager );

	}

	AnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: AnimationLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var loader = new FileLoader( scope.manager );
			loader.setPath( scope.path );
			loader.load( url, function ( text ) {

				onLoad( scope.parse( JSON.parse( text ) ) );

			}, onProgress, onError );

		},

		parse: function ( json ) {

			var animations = [];

			for ( var i = 0; i < json.length; i ++ ) {

				var clip = AnimationClip.parse( json[ i ] );

				animations.push( clip );

			}

			return animations;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 *
	 * Abstract Base class to block based textures loader (dds, pvr, ...)
	 *
	 * Sub classes have to implement the parse() method which will be used in load().
	 */

	function CompressedTextureLoader( manager ) {

		Loader.call( this, manager );

	}

	CompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: CompressedTextureLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var images = [];

			var texture = new CompressedTexture();
			texture.image = images;

			var loader = new FileLoader( this.manager );
			loader.setPath( this.path );
			loader.setResponseType( 'arraybuffer' );

			function loadTexture( i ) {

				loader.load( url[ i ], function ( buffer ) {

					var texDatas = scope.parse( buffer, true );

					images[ i ] = {
						width: texDatas.width,
						height: texDatas.height,
						format: texDatas.format,
						mipmaps: texDatas.mipmaps
					};

					loaded += 1;

					if ( loaded === 6 ) {

						if ( texDatas.mipmapCount === 1 )
							{ texture.minFilter = LinearFilter; }

						texture.format = texDatas.format;
						texture.needsUpdate = true;

						if ( onLoad ) { onLoad( texture ); }

					}

				}, onProgress, onError );

			}

			if ( Array.isArray( url ) ) {

				var loaded = 0;

				for ( var i = 0, il = url.length; i < il; ++ i ) {

					loadTexture( i );

				}

			} else {

				// compressed cubemap texture stored in a single DDS file

				loader.load( url, function ( buffer ) {

					var texDatas = scope.parse( buffer, true );

					if ( texDatas.isCubemap ) {

						var faces = texDatas.mipmaps.length / texDatas.mipmapCount;

						for ( var f = 0; f < faces; f ++ ) {

							images[ f ] = { mipmaps: [] };

							for ( var i = 0; i < texDatas.mipmapCount; i ++ ) {

								images[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );
								images[ f ].format = texDatas.format;
								images[ f ].width = texDatas.width;
								images[ f ].height = texDatas.height;

							}

						}

					} else {

						texture.image.width = texDatas.width;
						texture.image.height = texDatas.height;
						texture.mipmaps = texDatas.mipmaps;

					}

					if ( texDatas.mipmapCount === 1 ) {

						texture.minFilter = LinearFilter;

					}

					texture.format = texDatas.format;
					texture.needsUpdate = true;

					if ( onLoad ) { onLoad( texture ); }

				}, onProgress, onError );

			}

			return texture;

		}

	} );

	/**
	 * @author Nikos M. / https://github.com/foo123/
	 *
	 * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)
	 *
	 * Sub classes have to implement the parse() method which will be used in load().
	 */

	function DataTextureLoader( manager ) {

		Loader.call( this, manager );

	}

	DataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: DataTextureLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var texture = new DataTexture();

			var loader = new FileLoader( this.manager );
			loader.setResponseType( 'arraybuffer' );
			loader.setPath( this.path );
			loader.load( url, function ( buffer ) {

				var texData = scope.parse( buffer );

				if ( ! texData ) { return; }

				if ( texData.image !== undefined ) {

					texture.image = texData.image;

				} else if ( texData.data !== undefined ) {

					texture.image.width = texData.width;
					texture.image.height = texData.height;
					texture.image.data = texData.data;

				}

				texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;
				texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;

				texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;
				texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;

				texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;

				if ( texData.format !== undefined ) {

					texture.format = texData.format;

				}
				if ( texData.type !== undefined ) {

					texture.type = texData.type;

				}

				if ( texData.mipmaps !== undefined ) {

					texture.mipmaps = texData.mipmaps;
					texture.minFilter = LinearMipmapLinearFilter; // presumably...

				}

				if ( texData.mipmapCount === 1 ) {

					texture.minFilter = LinearFilter;

				}

				texture.needsUpdate = true;

				if ( onLoad ) { onLoad( texture, texData ); }

			}, onProgress, onError );


			return texture;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function ImageLoader( manager ) {

		Loader.call( this, manager );

	}

	ImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: ImageLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			if ( this.path !== undefined ) { url = this.path + url; }

			url = this.manager.resolveURL( url );

			var scope = this;

			var cached = Cache.get( url );

			if ( cached !== undefined ) {

				scope.manager.itemStart( url );

				setTimeout( function () {

					if ( onLoad ) { onLoad( cached ); }

					scope.manager.itemEnd( url );

				}, 0 );

				return cached;

			}

			var image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );

			function onImageLoad() {

				image.removeEventListener( 'load', onImageLoad, false );
				image.removeEventListener( 'error', onImageError, false );

				Cache.add( url, this );

				if ( onLoad ) { onLoad( this ); }

				scope.manager.itemEnd( url );

			}

			function onImageError( event ) {

				image.removeEventListener( 'load', onImageLoad, false );
				image.removeEventListener( 'error', onImageError, false );

				if ( onError ) { onError( event ); }

				scope.manager.itemError( url );
				scope.manager.itemEnd( url );

			}

			image.addEventListener( 'load', onImageLoad, false );
			image.addEventListener( 'error', onImageError, false );

			if ( url.substr( 0, 5 ) !== 'data:' ) {

				if ( this.crossOrigin !== undefined ) { image.crossOrigin = this.crossOrigin; }

			}

			scope.manager.itemStart( url );

			image.src = url;

			return image;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */


	function CubeTextureLoader( manager ) {

		Loader.call( this, manager );

	}

	CubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: CubeTextureLoader,

		load: function ( urls, onLoad, onProgress, onError ) {

			var texture = new CubeTexture();

			var loader = new ImageLoader( this.manager );
			loader.setCrossOrigin( this.crossOrigin );
			loader.setPath( this.path );

			var loaded = 0;

			function loadTexture( i ) {

				loader.load( urls[ i ], function ( image ) {

					texture.images[ i ] = image;

					loaded ++;

					if ( loaded === 6 ) {

						texture.needsUpdate = true;

						if ( onLoad ) { onLoad( texture ); }

					}

				}, undefined, onError );

			}

			for ( var i = 0; i < urls.length; ++ i ) {

				loadTexture( i );

			}

			return texture;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function TextureLoader( manager ) {

		Loader.call( this, manager );

	}

	TextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: TextureLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var texture = new Texture();

			var loader = new ImageLoader( this.manager );
			loader.setCrossOrigin( this.crossOrigin );
			loader.setPath( this.path );

			loader.load( url, function ( image ) {

				texture.image = image;

				// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.
				var isJPEG = url.search( /\.jpe?g($|\?)/i ) > 0 || url.search( /^data\:image\/jpeg/ ) === 0;

				texture.format = isJPEG ? RGBFormat : RGBAFormat;
				texture.needsUpdate = true;

				if ( onLoad !== undefined ) {

					onLoad( texture );

				}

			}, onProgress, onError );

			return texture;

		}

	} );

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * Extensible curve object
	 *
	 * Some common of curve methods:
	 * .getPoint( t, optionalTarget ), .getTangent( t )
	 * .getPointAt( u, optionalTarget ), .getTangentAt( u )
	 * .getPoints(), .getSpacedPoints()
	 * .getLength()
	 * .updateArcLengths()
	 *
	 * This following curves inherit from THREE.Curve:
	 *
	 * -- 2D curves --
	 * THREE.ArcCurve
	 * THREE.CubicBezierCurve
	 * THREE.EllipseCurve
	 * THREE.LineCurve
	 * THREE.QuadraticBezierCurve
	 * THREE.SplineCurve
	 *
	 * -- 3D curves --
	 * THREE.CatmullRomCurve3
	 * THREE.CubicBezierCurve3
	 * THREE.LineCurve3
	 * THREE.QuadraticBezierCurve3
	 *
	 * A series of curves can be represented as a THREE.CurvePath.
	 *
	 **/

	/**************************************************************
	 *	Abstract Curve base class
	 **************************************************************/

	function Curve() {

		this.type = 'Curve';

		this.arcLengthDivisions = 200;

	}

	Object.assign( Curve.prototype, {

		// Virtual base class method to overwrite and implement in subclasses
		//	- t [0 .. 1]

		getPoint: function ( /* t, optionalTarget */ ) {

			console.warn( 'THREE.Curve: .getPoint() not implemented.' );
			return null;

		},

		// Get point at relative position in curve according to arc length
		// - u [0 .. 1]

		getPointAt: function ( u, optionalTarget ) {

			var t = this.getUtoTmapping( u );
			return this.getPoint( t, optionalTarget );

		},

		// Get sequence of points using getPoint( t )

		getPoints: function ( divisions ) {

			if ( divisions === undefined ) { divisions = 5; }

			var points = [];

			for ( var d = 0; d <= divisions; d ++ ) {

				points.push( this.getPoint( d / divisions ) );

			}

			return points;

		},

		// Get sequence of points using getPointAt( u )

		getSpacedPoints: function ( divisions ) {

			if ( divisions === undefined ) { divisions = 5; }

			var points = [];

			for ( var d = 0; d <= divisions; d ++ ) {

				points.push( this.getPointAt( d / divisions ) );

			}

			return points;

		},

		// Get total curve arc length

		getLength: function () {

			var lengths = this.getLengths();
			return lengths[ lengths.length - 1 ];

		},

		// Get list of cumulative segment lengths

		getLengths: function ( divisions ) {

			if ( divisions === undefined ) { divisions = this.arcLengthDivisions; }

			if ( this.cacheArcLengths &&
				( this.cacheArcLengths.length === divisions + 1 ) &&
				! this.needsUpdate ) {

				return this.cacheArcLengths;

			}

			this.needsUpdate = false;

			var cache = [];
			var current, last = this.getPoint( 0 );
			var p, sum = 0;

			cache.push( 0 );

			for ( p = 1; p <= divisions; p ++ ) {

				current = this.getPoint( p / divisions );
				sum += current.distanceTo( last );
				cache.push( sum );
				last = current;

			}

			this.cacheArcLengths = cache;

			return cache; // { sums: cache, sum: sum }; Sum is in the last element.

		},

		updateArcLengths: function () {

			this.needsUpdate = true;
			this.getLengths();

		},

		// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant

		getUtoTmapping: function ( u, distance ) {

			var arcLengths = this.getLengths();

			var i = 0, il = arcLengths.length;

			var targetArcLength; // The targeted u distance value to get

			if ( distance ) {

				targetArcLength = distance;

			} else {

				targetArcLength = u * arcLengths[ il - 1 ];

			}

			// binary search for the index with largest value smaller than target u distance

			var low = 0, high = il - 1, comparison;

			while ( low <= high ) {

				i = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats

				comparison = arcLengths[ i ] - targetArcLength;

				if ( comparison < 0 ) {

					low = i + 1;

				} else if ( comparison > 0 ) {

					high = i - 1;

				} else {

					high = i;
					break;

					// DONE

				}

			}

			i = high;

			if ( arcLengths[ i ] === targetArcLength ) {

				return i / ( il - 1 );

			}

			// we could get finer grain at lengths, or use simple interpolation between two points

			var lengthBefore = arcLengths[ i ];
			var lengthAfter = arcLengths[ i + 1 ];

			var segmentLength = lengthAfter - lengthBefore;

			// determine where we are between the 'before' and 'after' points

			var segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;

			// add that fractional amount to t

			var t = ( i + segmentFraction ) / ( il - 1 );

			return t;

		},

		// Returns a unit vector tangent at t
		// In case any sub curve does not implement its tangent derivation,
		// 2 points a small delta apart will be used to find its gradient
		// which seems to give a reasonable approximation

		getTangent: function ( t ) {

			var delta = 0.0001;
			var t1 = t - delta;
			var t2 = t + delta;

			// Capping in case of danger

			if ( t1 < 0 ) { t1 = 0; }
			if ( t2 > 1 ) { t2 = 1; }

			var pt1 = this.getPoint( t1 );
			var pt2 = this.getPoint( t2 );

			var vec = pt2.clone().sub( pt1 );
			return vec.normalize();

		},

		getTangentAt: function ( u ) {

			var t = this.getUtoTmapping( u );
			return this.getTangent( t );

		},

		computeFrenetFrames: function ( segments, closed ) {

			// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf

			var normal = new Vector3();

			var tangents = [];
			var normals = [];
			var binormals = [];

			var vec = new Vector3();
			var mat = new Matrix4();

			var i, u, theta;

			// compute the tangent vectors for each segment on the curve

			for ( i = 0; i <= segments; i ++ ) {

				u = i / segments;

				tangents[ i ] = this.getTangentAt( u );
				tangents[ i ].normalize();

			}

			// select an initial normal vector perpendicular to the first tangent vector,
			// and in the direction of the minimum tangent xyz component

			normals[ 0 ] = new Vector3();
			binormals[ 0 ] = new Vector3();
			var min = Number.MAX_VALUE;
			var tx = Math.abs( tangents[ 0 ].x );
			var ty = Math.abs( tangents[ 0 ].y );
			var tz = Math.abs( tangents[ 0 ].z );

			if ( tx <= min ) {

				min = tx;
				normal.set( 1, 0, 0 );

			}

			if ( ty <= min ) {

				min = ty;
				normal.set( 0, 1, 0 );

			}

			if ( tz <= min ) {

				normal.set( 0, 0, 1 );

			}

			vec.crossVectors( tangents[ 0 ], normal ).normalize();

			normals[ 0 ].crossVectors( tangents[ 0 ], vec );
			binormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );


			// compute the slowly-varying normal and binormal vectors for each segment on the curve

			for ( i = 1; i <= segments; i ++ ) {

				normals[ i ] = normals[ i - 1 ].clone();

				binormals[ i ] = binormals[ i - 1 ].clone();

				vec.crossVectors( tangents[ i - 1 ], tangents[ i ] );

				if ( vec.length() > Number.EPSILON ) {

					vec.normalize();

					theta = Math.acos( MathUtils.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors

					normals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );

				}

				binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

			}

			// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same

			if ( closed === true ) {

				theta = Math.acos( MathUtils.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );
				theta /= segments;

				if ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {

					theta = - theta;

				}

				for ( i = 1; i <= segments; i ++ ) {

					// twist a little...
					normals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );
					binormals[ i ].crossVectors( tangents[ i ], normals[ i ] );

				}

			}

			return {
				tangents: tangents,
				normals: normals,
				binormals: binormals
			};

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( source ) {

			this.arcLengthDivisions = source.arcLengthDivisions;

			return this;

		},

		toJSON: function () {

			var data = {
				metadata: {
					version: 4.5,
					type: 'Curve',
					generator: 'Curve.toJSON'
				}
			};

			data.arcLengthDivisions = this.arcLengthDivisions;
			data.type = this.type;

			return data;

		},

		fromJSON: function ( json ) {

			this.arcLengthDivisions = json.arcLengthDivisions;

			return this;

		}

	} );

	function EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

		Curve.call( this );

		this.type = 'EllipseCurve';

		this.aX = aX || 0;
		this.aY = aY || 0;

		this.xRadius = xRadius || 1;
		this.yRadius = yRadius || 1;

		this.aStartAngle = aStartAngle || 0;
		this.aEndAngle = aEndAngle || 2 * Math.PI;

		this.aClockwise = aClockwise || false;

		this.aRotation = aRotation || 0;

	}

	EllipseCurve.prototype = Object.create( Curve.prototype );
	EllipseCurve.prototype.constructor = EllipseCurve;

	EllipseCurve.prototype.isEllipseCurve = true;

	EllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector2();

		var twoPi = Math.PI * 2;
		var deltaAngle = this.aEndAngle - this.aStartAngle;
		var samePoints = Math.abs( deltaAngle ) < Number.EPSILON;

		// ensures that deltaAngle is 0 .. 2 PI
		while ( deltaAngle < 0 ) { deltaAngle += twoPi; }
		while ( deltaAngle > twoPi ) { deltaAngle -= twoPi; }

		if ( deltaAngle < Number.EPSILON ) {

			if ( samePoints ) {

				deltaAngle = 0;

			} else {

				deltaAngle = twoPi;

			}

		}

		if ( this.aClockwise === true && ! samePoints ) {

			if ( deltaAngle === twoPi ) {

				deltaAngle = - twoPi;

			} else {

				deltaAngle = deltaAngle - twoPi;

			}

		}

		var angle = this.aStartAngle + t * deltaAngle;
		var x = this.aX + this.xRadius * Math.cos( angle );
		var y = this.aY + this.yRadius * Math.sin( angle );

		if ( this.aRotation !== 0 ) {

			var cos = Math.cos( this.aRotation );
			var sin = Math.sin( this.aRotation );

			var tx = x - this.aX;
			var ty = y - this.aY;

			// Rotate the point about the center of the ellipse.
			x = tx * cos - ty * sin + this.aX;
			y = tx * sin + ty * cos + this.aY;

		}

		return point.set( x, y );

	};

	EllipseCurve.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.aX = source.aX;
		this.aY = source.aY;

		this.xRadius = source.xRadius;
		this.yRadius = source.yRadius;

		this.aStartAngle = source.aStartAngle;
		this.aEndAngle = source.aEndAngle;

		this.aClockwise = source.aClockwise;

		this.aRotation = source.aRotation;

		return this;

	};


	EllipseCurve.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.aX = this.aX;
		data.aY = this.aY;

		data.xRadius = this.xRadius;
		data.yRadius = this.yRadius;

		data.aStartAngle = this.aStartAngle;
		data.aEndAngle = this.aEndAngle;

		data.aClockwise = this.aClockwise;

		data.aRotation = this.aRotation;

		return data;

	};

	EllipseCurve.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.aX = json.aX;
		this.aY = json.aY;

		this.xRadius = json.xRadius;
		this.yRadius = json.yRadius;

		this.aStartAngle = json.aStartAngle;
		this.aEndAngle = json.aEndAngle;

		this.aClockwise = json.aClockwise;

		this.aRotation = json.aRotation;

		return this;

	};

	function ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

		EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

		this.type = 'ArcCurve';

	}

	ArcCurve.prototype = Object.create( EllipseCurve.prototype );
	ArcCurve.prototype.constructor = ArcCurve;

	ArcCurve.prototype.isArcCurve = true;

	/**
	 * @author zz85 https://github.com/zz85
	 *
	 * Centripetal CatmullRom Curve - which is useful for avoiding
	 * cusps and self-intersections in non-uniform catmull rom curves.
	 * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf
	 *
	 * curve.type accepts centripetal(default), chordal and catmullrom
	 * curve.tension is used for catmullrom which defaults to 0.5
	 */


	/*
	Based on an optimized c++ solution in
	 - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/
	 - http://ideone.com/NoEbVM

	This CubicPoly class could be used for reusing some variables and calculations,
	but for three.js curve use, it could be possible inlined and flatten into a single function call
	which can be placed in CurveUtils.
	*/

	function CubicPoly() {

		var c0 = 0, c1 = 0, c2 = 0, c3 = 0;

		/*
		 * Compute coefficients for a cubic polynomial
		 *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3
		 * such that
		 *   p(0) = x0, p(1) = x1
		 *  and
		 *   p'(0) = t0, p'(1) = t1.
		 */
		function init( x0, x1, t0, t1 ) {

			c0 = x0;
			c1 = t0;
			c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;
			c3 = 2 * x0 - 2 * x1 + t0 + t1;

		}

		return {

			initCatmullRom: function ( x0, x1, x2, x3, tension ) {

				init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );

			},

			initNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {

				// compute tangents when parameterized in [t1,t2]
				var t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;
				var t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;

				// rescale tangents for parametrization in [0,1]
				t1 *= dt1;
				t2 *= dt1;

				init( x1, x2, t1, t2 );

			},

			calc: function ( t ) {

				var t2 = t * t;
				var t3 = t2 * t;
				return c0 + c1 * t + c2 * t2 + c3 * t3;

			}

		};

	}

	//

	var tmp = new Vector3();
	var px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();

	function CatmullRomCurve3( points, closed, curveType, tension ) {

		Curve.call( this );

		this.type = 'CatmullRomCurve3';

		this.points = points || [];
		this.closed = closed || false;
		this.curveType = curveType || 'centripetal';
		this.tension = tension || 0.5;

	}

	CatmullRomCurve3.prototype = Object.create( Curve.prototype );
	CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;

	CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;

	CatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector3();

		var points = this.points;
		var l = points.length;

		var p = ( l - ( this.closed ? 0 : 1 ) ) * t;
		var intPoint = Math.floor( p );
		var weight = p - intPoint;

		if ( this.closed ) {

			intPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;

		} else if ( weight === 0 && intPoint === l - 1 ) {

			intPoint = l - 2;
			weight = 1;

		}

		var p0, p1, p2, p3; // 4 points

		if ( this.closed || intPoint > 0 ) {

			p0 = points[ ( intPoint - 1 ) % l ];

		} else {

			// extrapolate first point
			tmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );
			p0 = tmp;

		}

		p1 = points[ intPoint % l ];
		p2 = points[ ( intPoint + 1 ) % l ];

		if ( this.closed || intPoint + 2 < l ) {

			p3 = points[ ( intPoint + 2 ) % l ];

		} else {

			// extrapolate last point
			tmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );
			p3 = tmp;

		}

		if ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {

			// init Centripetal / Chordal Catmull-Rom
			var pow = this.curveType === 'chordal' ? 0.5 : 0.25;
			var dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );
			var dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );
			var dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );

			// safety check for repeated points
			if ( dt1 < 1e-4 ) { dt1 = 1.0; }
			if ( dt0 < 1e-4 ) { dt0 = dt1; }
			if ( dt2 < 1e-4 ) { dt2 = dt1; }

			px.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );
			py.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );
			pz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );

		} else if ( this.curveType === 'catmullrom' ) {

			px.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );
			py.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );
			pz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );

		}

		point.set(
			px.calc( weight ),
			py.calc( weight ),
			pz.calc( weight )
		);

		return point;

	};

	CatmullRomCurve3.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.points = [];

		for ( var i = 0, l = source.points.length; i < l; i ++ ) {

			var point = source.points[ i ];

			this.points.push( point.clone() );

		}

		this.closed = source.closed;
		this.curveType = source.curveType;
		this.tension = source.tension;

		return this;

	};

	CatmullRomCurve3.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.points = [];

		for ( var i = 0, l = this.points.length; i < l; i ++ ) {

			var point = this.points[ i ];
			data.points.push( point.toArray() );

		}

		data.closed = this.closed;
		data.curveType = this.curveType;
		data.tension = this.tension;

		return data;

	};

	CatmullRomCurve3.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.points = [];

		for ( var i = 0, l = json.points.length; i < l; i ++ ) {

			var point = json.points[ i ];
			this.points.push( new Vector3().fromArray( point ) );

		}

		this.closed = json.closed;
		this.curveType = json.curveType;
		this.tension = json.tension;

		return this;

	};

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 *
	 * Bezier Curves formulas obtained from
	 * http://en.wikipedia.org/wiki/Bézier_curve
	 */

	function CatmullRom( t, p0, p1, p2, p3 ) {

		var v0 = ( p2 - p0 ) * 0.5;
		var v1 = ( p3 - p1 ) * 0.5;
		var t2 = t * t;
		var t3 = t * t2;
		return ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;

	}

	//

	function QuadraticBezierP0( t, p ) {

		var k = 1 - t;
		return k * k * p;

	}

	function QuadraticBezierP1( t, p ) {

		return 2 * ( 1 - t ) * t * p;

	}

	function QuadraticBezierP2( t, p ) {

		return t * t * p;

	}

	function QuadraticBezier( t, p0, p1, p2 ) {

		return QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +
			QuadraticBezierP2( t, p2 );

	}

	//

	function CubicBezierP0( t, p ) {

		var k = 1 - t;
		return k * k * k * p;

	}

	function CubicBezierP1( t, p ) {

		var k = 1 - t;
		return 3 * k * k * t * p;

	}

	function CubicBezierP2( t, p ) {

		return 3 * ( 1 - t ) * t * t * p;

	}

	function CubicBezierP3( t, p ) {

		return t * t * t * p;

	}

	function CubicBezier( t, p0, p1, p2, p3 ) {

		return CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +
			CubicBezierP3( t, p3 );

	}

	function CubicBezierCurve( v0, v1, v2, v3 ) {

		Curve.call( this );

		this.type = 'CubicBezierCurve';

		this.v0 = v0 || new Vector2();
		this.v1 = v1 || new Vector2();
		this.v2 = v2 || new Vector2();
		this.v3 = v3 || new Vector2();

	}

	CubicBezierCurve.prototype = Object.create( Curve.prototype );
	CubicBezierCurve.prototype.constructor = CubicBezierCurve;

	CubicBezierCurve.prototype.isCubicBezierCurve = true;

	CubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector2();

		var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

		point.set(
			CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
			CubicBezier( t, v0.y, v1.y, v2.y, v3.y )
		);

		return point;

	};

	CubicBezierCurve.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );
		this.v3.copy( source.v3 );

		return this;

	};

	CubicBezierCurve.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();
		data.v3 = this.v3.toArray();

		return data;

	};

	CubicBezierCurve.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );
		this.v3.fromArray( json.v3 );

		return this;

	};

	function CubicBezierCurve3( v0, v1, v2, v3 ) {

		Curve.call( this );

		this.type = 'CubicBezierCurve3';

		this.v0 = v0 || new Vector3();
		this.v1 = v1 || new Vector3();
		this.v2 = v2 || new Vector3();
		this.v3 = v3 || new Vector3();

	}

	CubicBezierCurve3.prototype = Object.create( Curve.prototype );
	CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;

	CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;

	CubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector3();

		var v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;

		point.set(
			CubicBezier( t, v0.x, v1.x, v2.x, v3.x ),
			CubicBezier( t, v0.y, v1.y, v2.y, v3.y ),
			CubicBezier( t, v0.z, v1.z, v2.z, v3.z )
		);

		return point;

	};

	CubicBezierCurve3.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );
		this.v3.copy( source.v3 );

		return this;

	};

	CubicBezierCurve3.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();
		data.v3 = this.v3.toArray();

		return data;

	};

	CubicBezierCurve3.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );
		this.v3.fromArray( json.v3 );

		return this;

	};

	function LineCurve( v1, v2 ) {

		Curve.call( this );

		this.type = 'LineCurve';

		this.v1 = v1 || new Vector2();
		this.v2 = v2 || new Vector2();

	}

	LineCurve.prototype = Object.create( Curve.prototype );
	LineCurve.prototype.constructor = LineCurve;

	LineCurve.prototype.isLineCurve = true;

	LineCurve.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector2();

		if ( t === 1 ) {

			point.copy( this.v2 );

		} else {

			point.copy( this.v2 ).sub( this.v1 );
			point.multiplyScalar( t ).add( this.v1 );

		}

		return point;

	};

	// Line curve is linear, so we can overwrite default getPointAt

	LineCurve.prototype.getPointAt = function ( u, optionalTarget ) {

		return this.getPoint( u, optionalTarget );

	};

	LineCurve.prototype.getTangent = function ( /* t */ ) {

		var tangent = this.v2.clone().sub( this.v1 );

		return tangent.normalize();

	};

	LineCurve.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	};

	LineCurve.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	};

	LineCurve.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	};

	function LineCurve3( v1, v2 ) {

		Curve.call( this );

		this.type = 'LineCurve3';

		this.v1 = v1 || new Vector3();
		this.v2 = v2 || new Vector3();

	}

	LineCurve3.prototype = Object.create( Curve.prototype );
	LineCurve3.prototype.constructor = LineCurve3;

	LineCurve3.prototype.isLineCurve3 = true;

	LineCurve3.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector3();

		if ( t === 1 ) {

			point.copy( this.v2 );

		} else {

			point.copy( this.v2 ).sub( this.v1 );
			point.multiplyScalar( t ).add( this.v1 );

		}

		return point;

	};

	// Line curve is linear, so we can overwrite default getPointAt

	LineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {

		return this.getPoint( u, optionalTarget );

	};

	LineCurve3.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	};

	LineCurve3.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	};

	LineCurve3.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	};

	function QuadraticBezierCurve( v0, v1, v2 ) {

		Curve.call( this );

		this.type = 'QuadraticBezierCurve';

		this.v0 = v0 || new Vector2();
		this.v1 = v1 || new Vector2();
		this.v2 = v2 || new Vector2();

	}

	QuadraticBezierCurve.prototype = Object.create( Curve.prototype );
	QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;

	QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;

	QuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector2();

		var v0 = this.v0, v1 = this.v1, v2 = this.v2;

		point.set(
			QuadraticBezier( t, v0.x, v1.x, v2.x ),
			QuadraticBezier( t, v0.y, v1.y, v2.y )
		);

		return point;

	};

	QuadraticBezierCurve.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	};

	QuadraticBezierCurve.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	};

	QuadraticBezierCurve.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	};

	function QuadraticBezierCurve3( v0, v1, v2 ) {

		Curve.call( this );

		this.type = 'QuadraticBezierCurve3';

		this.v0 = v0 || new Vector3();
		this.v1 = v1 || new Vector3();
		this.v2 = v2 || new Vector3();

	}

	QuadraticBezierCurve3.prototype = Object.create( Curve.prototype );
	QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;

	QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;

	QuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector3();

		var v0 = this.v0, v1 = this.v1, v2 = this.v2;

		point.set(
			QuadraticBezier( t, v0.x, v1.x, v2.x ),
			QuadraticBezier( t, v0.y, v1.y, v2.y ),
			QuadraticBezier( t, v0.z, v1.z, v2.z )
		);

		return point;

	};

	QuadraticBezierCurve3.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.v0.copy( source.v0 );
		this.v1.copy( source.v1 );
		this.v2.copy( source.v2 );

		return this;

	};

	QuadraticBezierCurve3.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.v0 = this.v0.toArray();
		data.v1 = this.v1.toArray();
		data.v2 = this.v2.toArray();

		return data;

	};

	QuadraticBezierCurve3.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.v0.fromArray( json.v0 );
		this.v1.fromArray( json.v1 );
		this.v2.fromArray( json.v2 );

		return this;

	};

	function SplineCurve( points /* array of Vector2 */ ) {

		Curve.call( this );

		this.type = 'SplineCurve';

		this.points = points || [];

	}

	SplineCurve.prototype = Object.create( Curve.prototype );
	SplineCurve.prototype.constructor = SplineCurve;

	SplineCurve.prototype.isSplineCurve = true;

	SplineCurve.prototype.getPoint = function ( t, optionalTarget ) {

		var point = optionalTarget || new Vector2();

		var points = this.points;
		var p = ( points.length - 1 ) * t;

		var intPoint = Math.floor( p );
		var weight = p - intPoint;

		var p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];
		var p1 = points[ intPoint ];
		var p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];
		var p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];

		point.set(
			CatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),
			CatmullRom( weight, p0.y, p1.y, p2.y, p3.y )
		);

		return point;

	};

	SplineCurve.prototype.copy = function ( source ) {

		Curve.prototype.copy.call( this, source );

		this.points = [];

		for ( var i = 0, l = source.points.length; i < l; i ++ ) {

			var point = source.points[ i ];

			this.points.push( point.clone() );

		}

		return this;

	};

	SplineCurve.prototype.toJSON = function () {

		var data = Curve.prototype.toJSON.call( this );

		data.points = [];

		for ( var i = 0, l = this.points.length; i < l; i ++ ) {

			var point = this.points[ i ];
			data.points.push( point.toArray() );

		}

		return data;

	};

	SplineCurve.prototype.fromJSON = function ( json ) {

		Curve.prototype.fromJSON.call( this, json );

		this.points = [];

		for ( var i = 0, l = json.points.length; i < l; i ++ ) {

			var point = json.points[ i ];
			this.points.push( new Vector2().fromArray( point ) );

		}

		return this;

	};



	var Curves = /*#__PURE__*/Object.freeze({
		__proto__: null,
		ArcCurve: ArcCurve,
		CatmullRomCurve3: CatmullRomCurve3,
		CubicBezierCurve: CubicBezierCurve,
		CubicBezierCurve3: CubicBezierCurve3,
		EllipseCurve: EllipseCurve,
		LineCurve: LineCurve,
		LineCurve3: LineCurve3,
		QuadraticBezierCurve: QuadraticBezierCurve,
		QuadraticBezierCurve3: QuadraticBezierCurve3,
		SplineCurve: SplineCurve
	});

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 *
	 **/

	/**************************************************************
	 *	Curved Path - a curve path is simply a array of connected
	 *  curves, but retains the api of a curve
	 **************************************************************/

	function CurvePath() {

		Curve.call( this );

		this.type = 'CurvePath';

		this.curves = [];
		this.autoClose = false; // Automatically closes the path

	}

	CurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {

		constructor: CurvePath,

		add: function ( curve ) {

			this.curves.push( curve );

		},

		closePath: function () {

			// Add a line curve if start and end of lines are not connected
			var startPoint = this.curves[ 0 ].getPoint( 0 );
			var endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );

			if ( ! startPoint.equals( endPoint ) ) {

				this.curves.push( new LineCurve( endPoint, startPoint ) );

			}

		},

		// To get accurate point with reference to
		// entire path distance at time t,
		// following has to be done:

		// 1. Length of each sub path have to be known
		// 2. Locate and identify type of curve
		// 3. Get t for the curve
		// 4. Return curve.getPointAt(t')

		getPoint: function ( t ) {

			var d = t * this.getLength();
			var curveLengths = this.getCurveLengths();
			var i = 0;

			// To think about boundaries points.

			while ( i < curveLengths.length ) {

				if ( curveLengths[ i ] >= d ) {

					var diff = curveLengths[ i ] - d;
					var curve = this.curves[ i ];

					var segmentLength = curve.getLength();
					var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;

					return curve.getPointAt( u );

				}

				i ++;

			}

			return null;

			// loop where sum != 0, sum > d , sum+1 <d

		},

		// We cannot use the default THREE.Curve getPoint() with getLength() because in
		// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath
		// getPoint() depends on getLength

		getLength: function () {

			var lens = this.getCurveLengths();
			return lens[ lens.length - 1 ];

		},

		// cacheLengths must be recalculated.
		updateArcLengths: function () {

			this.needsUpdate = true;
			this.cacheLengths = null;
			this.getCurveLengths();

		},

		// Compute lengths and cache them
		// We cannot overwrite getLengths() because UtoT mapping uses it.

		getCurveLengths: function () {

			// We use cache values if curves and cache array are same length

			if ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {

				return this.cacheLengths;

			}

			// Get length of sub-curve
			// Push sums into cached array

			var lengths = [], sums = 0;

			for ( var i = 0, l = this.curves.length; i < l; i ++ ) {

				sums += this.curves[ i ].getLength();
				lengths.push( sums );

			}

			this.cacheLengths = lengths;

			return lengths;

		},

		getSpacedPoints: function ( divisions ) {

			if ( divisions === undefined ) { divisions = 40; }

			var points = [];

			for ( var i = 0; i <= divisions; i ++ ) {

				points.push( this.getPoint( i / divisions ) );

			}

			if ( this.autoClose ) {

				points.push( points[ 0 ] );

			}

			return points;

		},

		getPoints: function ( divisions ) {

			divisions = divisions || 12;

			var points = [], last;

			for ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {

				var curve = curves[ i ];
				var resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2
					: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1
						: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length
							: divisions;

				var pts = curve.getPoints( resolution );

				for ( var j = 0; j < pts.length; j ++ ) {

					var point = pts[ j ];

					if ( last && last.equals( point ) ) { continue; } // ensures no consecutive points are duplicates

					points.push( point );
					last = point;

				}

			}

			if ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {

				points.push( points[ 0 ] );

			}

			return points;

		},

		copy: function ( source ) {

			Curve.prototype.copy.call( this, source );

			this.curves = [];

			for ( var i = 0, l = source.curves.length; i < l; i ++ ) {

				var curve = source.curves[ i ];

				this.curves.push( curve.clone() );

			}

			this.autoClose = source.autoClose;

			return this;

		},

		toJSON: function () {

			var data = Curve.prototype.toJSON.call( this );

			data.autoClose = this.autoClose;
			data.curves = [];

			for ( var i = 0, l = this.curves.length; i < l; i ++ ) {

				var curve = this.curves[ i ];
				data.curves.push( curve.toJSON() );

			}

			return data;

		},

		fromJSON: function ( json ) {

			Curve.prototype.fromJSON.call( this, json );

			this.autoClose = json.autoClose;
			this.curves = [];

			for ( var i = 0, l = json.curves.length; i < l; i ++ ) {

				var curve = json.curves[ i ];
				this.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );

			}

			return this;

		}

	} );

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * Creates free form 2d path using series of points, lines or curves.
	 **/

	function Path( points ) {

		CurvePath.call( this );

		this.type = 'Path';

		this.currentPoint = new Vector2();

		if ( points ) {

			this.setFromPoints( points );

		}

	}

	Path.prototype = Object.assign( Object.create( CurvePath.prototype ), {

		constructor: Path,

		setFromPoints: function ( points ) {

			this.moveTo( points[ 0 ].x, points[ 0 ].y );

			for ( var i = 1, l = points.length; i < l; i ++ ) {

				this.lineTo( points[ i ].x, points[ i ].y );

			}

			return this;

		},

		moveTo: function ( x, y ) {

			this.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?

			return this;

		},

		lineTo: function ( x, y ) {

			var curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );
			this.curves.push( curve );

			this.currentPoint.set( x, y );

			return this;

		},

		quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {

			var curve = new QuadraticBezierCurve(
				this.currentPoint.clone(),
				new Vector2( aCPx, aCPy ),
				new Vector2( aX, aY )
			);

			this.curves.push( curve );

			this.currentPoint.set( aX, aY );

			return this;

		},

		bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

			var curve = new CubicBezierCurve(
				this.currentPoint.clone(),
				new Vector2( aCP1x, aCP1y ),
				new Vector2( aCP2x, aCP2y ),
				new Vector2( aX, aY )
			);

			this.curves.push( curve );

			this.currentPoint.set( aX, aY );

			return this;

		},

		splineThru: function ( pts /*Array of Vector*/ ) {

			var npts = [ this.currentPoint.clone() ].concat( pts );

			var curve = new SplineCurve( npts );
			this.curves.push( curve );

			this.currentPoint.copy( pts[ pts.length - 1 ] );

			return this;

		},

		arc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

			var x0 = this.currentPoint.x;
			var y0 = this.currentPoint.y;

			this.absarc( aX + x0, aY + y0, aRadius,
				aStartAngle, aEndAngle, aClockwise );

			return this;

		},

		absarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {

			this.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );

			return this;

		},

		ellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

			var x0 = this.currentPoint.x;
			var y0 = this.currentPoint.y;

			this.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

			return this;

		},

		absellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {

			var curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );

			if ( this.curves.length > 0 ) {

				// if a previous curve is present, attempt to join
				var firstPoint = curve.getPoint( 0 );

				if ( ! firstPoint.equals( this.currentPoint ) ) {

					this.lineTo( firstPoint.x, firstPoint.y );

				}

			}

			this.curves.push( curve );

			var lastPoint = curve.getPoint( 1 );
			this.currentPoint.copy( lastPoint );

			return this;

		},

		copy: function ( source ) {

			CurvePath.prototype.copy.call( this, source );

			this.currentPoint.copy( source.currentPoint );

			return this;

		},

		toJSON: function () {

			var data = CurvePath.prototype.toJSON.call( this );

			data.currentPoint = this.currentPoint.toArray();

			return data;

		},

		fromJSON: function ( json ) {

			CurvePath.prototype.fromJSON.call( this, json );

			this.currentPoint.fromArray( json.currentPoint );

			return this;

		}

	} );

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * Defines a 2d shape plane using paths.
	 **/

	// STEP 1 Create a path.
	// STEP 2 Turn path into shape.
	// STEP 3 ExtrudeGeometry takes in Shape/Shapes
	// STEP 3a - Extract points from each shape, turn to vertices
	// STEP 3b - Triangulate each shape, add faces.

	function Shape( points ) {

		Path.call( this, points );

		this.uuid = MathUtils.generateUUID();

		this.type = 'Shape';

		this.holes = [];

	}

	Shape.prototype = Object.assign( Object.create( Path.prototype ), {

		constructor: Shape,

		getPointsHoles: function ( divisions ) {

			var holesPts = [];

			for ( var i = 0, l = this.holes.length; i < l; i ++ ) {

				holesPts[ i ] = this.holes[ i ].getPoints( divisions );

			}

			return holesPts;

		},

		// get points of shape and holes (keypoints based on segments parameter)

		extractPoints: function ( divisions ) {

			return {

				shape: this.getPoints( divisions ),
				holes: this.getPointsHoles( divisions )

			};

		},

		copy: function ( source ) {

			Path.prototype.copy.call( this, source );

			this.holes = [];

			for ( var i = 0, l = source.holes.length; i < l; i ++ ) {

				var hole = source.holes[ i ];

				this.holes.push( hole.clone() );

			}

			return this;

		},

		toJSON: function () {

			var data = Path.prototype.toJSON.call( this );

			data.uuid = this.uuid;
			data.holes = [];

			for ( var i = 0, l = this.holes.length; i < l; i ++ ) {

				var hole = this.holes[ i ];
				data.holes.push( hole.toJSON() );

			}

			return data;

		},

		fromJSON: function ( json ) {

			Path.prototype.fromJSON.call( this, json );

			this.uuid = json.uuid;
			this.holes = [];

			for ( var i = 0, l = json.holes.length; i < l; i ++ ) {

				var hole = json.holes[ i ];
				this.holes.push( new Path().fromJSON( hole ) );

			}

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 */

	function Light( color, intensity ) {

		Object3D.call( this );

		this.type = 'Light';

		this.color = new Color( color );
		this.intensity = intensity !== undefined ? intensity : 1;

		this.receiveShadow = undefined;

	}

	Light.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Light,

		isLight: true,

		copy: function ( source ) {

			Object3D.prototype.copy.call( this, source );

			this.color.copy( source.color );
			this.intensity = source.intensity;

			return this;

		},

		toJSON: function ( meta ) {

			var data = Object3D.prototype.toJSON.call( this, meta );

			data.object.color = this.color.getHex();
			data.object.intensity = this.intensity;

			if ( this.groundColor !== undefined ) { data.object.groundColor = this.groundColor.getHex(); }

			if ( this.distance !== undefined ) { data.object.distance = this.distance; }
			if ( this.angle !== undefined ) { data.object.angle = this.angle; }
			if ( this.decay !== undefined ) { data.object.decay = this.decay; }
			if ( this.penumbra !== undefined ) { data.object.penumbra = this.penumbra; }

			if ( this.shadow !== undefined ) { data.object.shadow = this.shadow.toJSON(); }

			return data;

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function HemisphereLight( skyColor, groundColor, intensity ) {

		Light.call( this, skyColor, intensity );

		this.type = 'HemisphereLight';

		this.castShadow = undefined;

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.groundColor = new Color( groundColor );

	}

	HemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: HemisphereLight,

		isHemisphereLight: true,

		copy: function ( source ) {

			Light.prototype.copy.call( this, source );

			this.groundColor.copy( source.groundColor );

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function LightShadow( camera ) {

		this.camera = camera;

		this.bias = 0;
		this.radius = 1;

		this.mapSize = new Vector2( 512, 512 );

		this.map = null;
		this.mapPass = null;
		this.matrix = new Matrix4();

		this._frustum = new Frustum();
		this._frameExtents = new Vector2( 1, 1 );

		this._viewportCount = 1;

		this._viewports = [

			new Vector4( 0, 0, 1, 1 )

		];

	}

	Object.assign( LightShadow.prototype, {

		_projScreenMatrix: new Matrix4(),

		_lightPositionWorld: new Vector3(),

		_lookTarget: new Vector3(),

		getViewportCount: function () {

			return this._viewportCount;

		},

		getFrustum: function () {

			return this._frustum;

		},

		updateMatrices: function ( light ) {

			var shadowCamera = this.camera,
				shadowMatrix = this.matrix,
				projScreenMatrix = this._projScreenMatrix,
				lookTarget = this._lookTarget,
				lightPositionWorld = this._lightPositionWorld;

			lightPositionWorld.setFromMatrixPosition( light.matrixWorld );
			shadowCamera.position.copy( lightPositionWorld );

			lookTarget.setFromMatrixPosition( light.target.matrixWorld );
			shadowCamera.lookAt( lookTarget );
			shadowCamera.updateMatrixWorld();

			projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );
			this._frustum.setFromProjectionMatrix( projScreenMatrix );

			shadowMatrix.set(
				0.5, 0.0, 0.0, 0.5,
				0.0, 0.5, 0.0, 0.5,
				0.0, 0.0, 0.5, 0.5,
				0.0, 0.0, 0.0, 1.0
			);

			shadowMatrix.multiply( shadowCamera.projectionMatrix );
			shadowMatrix.multiply( shadowCamera.matrixWorldInverse );

		},

		getViewport: function ( viewportIndex ) {

			return this._viewports[ viewportIndex ];

		},

		getFrameExtents: function () {

			return this._frameExtents;

		},

		copy: function ( source ) {

			this.camera = source.camera.clone();

			this.bias = source.bias;
			this.radius = source.radius;

			this.mapSize.copy( source.mapSize );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		toJSON: function () {

			var object = {};

			if ( this.bias !== 0 ) { object.bias = this.bias; }
			if ( this.radius !== 1 ) { object.radius = this.radius; }
			if ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) { object.mapSize = this.mapSize.toArray(); }

			object.camera = this.camera.toJSON( false ).object;
			delete object.camera.matrix;

			return object;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function SpotLightShadow() {

		LightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );

	}

	SpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {

		constructor: SpotLightShadow,

		isSpotLightShadow: true,

		updateMatrices: function ( light ) {

			var camera = this.camera;

			var fov = MathUtils.RAD2DEG * 2 * light.angle;
			var aspect = this.mapSize.width / this.mapSize.height;
			var far = light.distance || camera.far;

			if ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {

				camera.fov = fov;
				camera.aspect = aspect;
				camera.far = far;
				camera.updateProjectionMatrix();

			}

			LightShadow.prototype.updateMatrices.call( this, light );

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function SpotLight( color, intensity, distance, angle, penumbra, decay ) {

		Light.call( this, color, intensity );

		this.type = 'SpotLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.target = new Object3D();

		Object.defineProperty( this, 'power', {
			get: function () {

				// intensity = power per solid angle.
				// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
				return this.intensity * Math.PI;

			},
			set: function ( power ) {

				// intensity = power per solid angle.
				// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
				this.intensity = power / Math.PI;

			}
		} );

		this.distance = ( distance !== undefined ) ? distance : 0;
		this.angle = ( angle !== undefined ) ? angle : Math.PI / 3;
		this.penumbra = ( penumbra !== undefined ) ? penumbra : 0;
		this.decay = ( decay !== undefined ) ? decay : 1;	// for physically correct lights, should be 2.

		this.shadow = new SpotLightShadow();

	}

	SpotLight.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: SpotLight,

		isSpotLight: true,

		copy: function ( source ) {

			Light.prototype.copy.call( this, source );

			this.distance = source.distance;
			this.angle = source.angle;
			this.penumbra = source.penumbra;
			this.decay = source.decay;

			this.target = source.target.clone();

			this.shadow = source.shadow.clone();

			return this;

		}

	} );

	function PointLightShadow() {

		LightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );

		this._frameExtents = new Vector2( 4, 2 );

		this._viewportCount = 6;

		this._viewports = [
			// These viewports map a cube-map onto a 2D texture with the
			// following orientation:
			//
			//  xzXZ
			//   y Y
			//
			// X - Positive x direction
			// x - Negative x direction
			// Y - Positive y direction
			// y - Negative y direction
			// Z - Positive z direction
			// z - Negative z direction

			// positive X
			new Vector4( 2, 1, 1, 1 ),
			// negative X
			new Vector4( 0, 1, 1, 1 ),
			// positive Z
			new Vector4( 3, 1, 1, 1 ),
			// negative Z
			new Vector4( 1, 1, 1, 1 ),
			// positive Y
			new Vector4( 3, 0, 1, 1 ),
			// negative Y
			new Vector4( 1, 0, 1, 1 )
		];

		this._cubeDirections = [
			new Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),
			new Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )
		];

		this._cubeUps = [
			new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),
			new Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),	new Vector3( 0, 0, - 1 )
		];

	}

	PointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {

		constructor: PointLightShadow,

		isPointLightShadow: true,

		updateMatrices: function ( light, viewportIndex ) {

			if ( viewportIndex === undefined ) { viewportIndex = 0; }

			var camera = this.camera,
				shadowMatrix = this.matrix,
				lightPositionWorld = this._lightPositionWorld,
				lookTarget = this._lookTarget,
				projScreenMatrix = this._projScreenMatrix;

			lightPositionWorld.setFromMatrixPosition( light.matrixWorld );
			camera.position.copy( lightPositionWorld );

			lookTarget.copy( camera.position );
			lookTarget.add( this._cubeDirections[ viewportIndex ] );
			camera.up.copy( this._cubeUps[ viewportIndex ] );
			camera.lookAt( lookTarget );
			camera.updateMatrixWorld();

			shadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );

			projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );
			this._frustum.setFromProjectionMatrix( projScreenMatrix );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */


	function PointLight( color, intensity, distance, decay ) {

		Light.call( this, color, intensity );

		this.type = 'PointLight';

		Object.defineProperty( this, 'power', {
			get: function () {

				// intensity = power per solid angle.
				// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
				return this.intensity * 4 * Math.PI;

			},
			set: function ( power ) {

				// intensity = power per solid angle.
				// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf
				this.intensity = power / ( 4 * Math.PI );

			}
		} );

		this.distance = ( distance !== undefined ) ? distance : 0;
		this.decay = ( decay !== undefined ) ? decay : 1;	// for physically correct lights, should be 2.

		this.shadow = new PointLightShadow();

	}

	PointLight.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: PointLight,

		isPointLight: true,

		copy: function ( source ) {

			Light.prototype.copy.call( this, source );

			this.distance = source.distance;
			this.decay = source.decay;

			this.shadow = source.shadow.clone();

			return this;

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author arose / http://github.com/arose
	 */

	function OrthographicCamera( left, right, top, bottom, near, far ) {

		Camera.call( this );

		this.type = 'OrthographicCamera';

		this.zoom = 1;
		this.view = null;

		this.left = ( left !== undefined ) ? left : - 1;
		this.right = ( right !== undefined ) ? right : 1;
		this.top = ( top !== undefined ) ? top : 1;
		this.bottom = ( bottom !== undefined ) ? bottom : - 1;

		this.near = ( near !== undefined ) ? near : 0.1;
		this.far = ( far !== undefined ) ? far : 2000;

		this.updateProjectionMatrix();

	}

	OrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {

		constructor: OrthographicCamera,

		isOrthographicCamera: true,

		copy: function ( source, recursive ) {

			Camera.prototype.copy.call( this, source, recursive );

			this.left = source.left;
			this.right = source.right;
			this.top = source.top;
			this.bottom = source.bottom;
			this.near = source.near;
			this.far = source.far;

			this.zoom = source.zoom;
			this.view = source.view === null ? null : Object.assign( {}, source.view );

			return this;

		},

		setViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {

			if ( this.view === null ) {

				this.view = {
					enabled: true,
					fullWidth: 1,
					fullHeight: 1,
					offsetX: 0,
					offsetY: 0,
					width: 1,
					height: 1
				};

			}

			this.view.enabled = true;
			this.view.fullWidth = fullWidth;
			this.view.fullHeight = fullHeight;
			this.view.offsetX = x;
			this.view.offsetY = y;
			this.view.width = width;
			this.view.height = height;

			this.updateProjectionMatrix();

		},

		clearViewOffset: function () {

			if ( this.view !== null ) {

				this.view.enabled = false;

			}

			this.updateProjectionMatrix();

		},

		updateProjectionMatrix: function () {

			var dx = ( this.right - this.left ) / ( 2 * this.zoom );
			var dy = ( this.top - this.bottom ) / ( 2 * this.zoom );
			var cx = ( this.right + this.left ) / 2;
			var cy = ( this.top + this.bottom ) / 2;

			var left = cx - dx;
			var right = cx + dx;
			var top = cy + dy;
			var bottom = cy - dy;

			if ( this.view !== null && this.view.enabled ) {

				var scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;
				var scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;

				left += scaleW * this.view.offsetX;
				right = left + scaleW * this.view.width;
				top -= scaleH * this.view.offsetY;
				bottom = top - scaleH * this.view.height;

			}

			this.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );

			this.projectionMatrixInverse.getInverse( this.projectionMatrix );

		},

		toJSON: function ( meta ) {

			var data = Object3D.prototype.toJSON.call( this, meta );

			data.object.zoom = this.zoom;
			data.object.left = this.left;
			data.object.right = this.right;
			data.object.top = this.top;
			data.object.bottom = this.bottom;
			data.object.near = this.near;
			data.object.far = this.far;

			if ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }

			return data;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function DirectionalLightShadow() {

		LightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );

	}

	DirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {

		constructor: DirectionalLightShadow,

		isDirectionalLightShadow: true,

		updateMatrices: function ( light ) {

			LightShadow.prototype.updateMatrices.call( this, light );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author alteredq / http://alteredqualia.com/
	 */

	function DirectionalLight( color, intensity ) {

		Light.call( this, color, intensity );

		this.type = 'DirectionalLight';

		this.position.copy( Object3D.DefaultUp );
		this.updateMatrix();

		this.target = new Object3D();

		this.shadow = new DirectionalLightShadow();

	}

	DirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: DirectionalLight,

		isDirectionalLight: true,

		copy: function ( source ) {

			Light.prototype.copy.call( this, source );

			this.target = source.target.clone();

			this.shadow = source.shadow.clone();

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function AmbientLight( color, intensity ) {

		Light.call( this, color, intensity );

		this.type = 'AmbientLight';

		this.castShadow = undefined;

	}

	AmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: AmbientLight,

		isAmbientLight: true

	} );

	/**
	 * @author abelnation / http://github.com/abelnation
	 */

	function RectAreaLight( color, intensity, width, height ) {

		Light.call( this, color, intensity );

		this.type = 'RectAreaLight';

		this.width = ( width !== undefined ) ? width : 10;
		this.height = ( height !== undefined ) ? height : 10;

	}

	RectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: RectAreaLight,

		isRectAreaLight: true,

		copy: function ( source ) {

			Light.prototype.copy.call( this, source );

			this.width = source.width;
			this.height = source.height;

			return this;

		},

		toJSON: function ( meta ) {

			var data = Light.prototype.toJSON.call( this, meta );

			data.object.width = this.width;
			data.object.height = this.height;

			return data;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function MaterialLoader( manager ) {

		Loader.call( this, manager );

		this.textures = {};

	}

	MaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: MaterialLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var loader = new FileLoader( scope.manager );
			loader.setPath( scope.path );
			loader.load( url, function ( text ) {

				onLoad( scope.parse( JSON.parse( text ) ) );

			}, onProgress, onError );

		},

		parse: function ( json ) {

			var textures = this.textures;

			function getTexture( name ) {

				if ( textures[ name ] === undefined ) {

					console.warn( 'THREE.MaterialLoader: Undefined texture', name );

				}

				return textures[ name ];

			}

			var material = new Materials[ json.type ]();

			if ( json.uuid !== undefined ) { material.uuid = json.uuid; }
			if ( json.name !== undefined ) { material.name = json.name; }
			if ( json.color !== undefined ) { material.color.setHex( json.color ); }
			if ( json.roughness !== undefined ) { material.roughness = json.roughness; }
			if ( json.metalness !== undefined ) { material.metalness = json.metalness; }
			if ( json.sheen !== undefined ) { material.sheen = new Color().setHex( json.sheen ); }
			if ( json.emissive !== undefined ) { material.emissive.setHex( json.emissive ); }
			if ( json.specular !== undefined ) { material.specular.setHex( json.specular ); }
			if ( json.shininess !== undefined ) { material.shininess = json.shininess; }
			if ( json.clearcoat !== undefined ) { material.clearcoat = json.clearcoat; }
			if ( json.clearcoatRoughness !== undefined ) { material.clearcoatRoughness = json.clearcoatRoughness; }
			if ( json.fog !== undefined ) { material.fog = json.fog; }
			if ( json.flatShading !== undefined ) { material.flatShading = json.flatShading; }
			if ( json.blending !== undefined ) { material.blending = json.blending; }
			if ( json.combine !== undefined ) { material.combine = json.combine; }
			if ( json.side !== undefined ) { material.side = json.side; }
			if ( json.opacity !== undefined ) { material.opacity = json.opacity; }
			if ( json.transparent !== undefined ) { material.transparent = json.transparent; }
			if ( json.alphaTest !== undefined ) { material.alphaTest = json.alphaTest; }
			if ( json.depthTest !== undefined ) { material.depthTest = json.depthTest; }
			if ( json.depthWrite !== undefined ) { material.depthWrite = json.depthWrite; }
			if ( json.colorWrite !== undefined ) { material.colorWrite = json.colorWrite; }

			if ( json.stencilWrite !== undefined ) { material.stencilWrite = json.stencilWrite; }
			if ( json.stencilWriteMask !== undefined ) { material.stencilWriteMask = json.stencilWriteMask; }
			if ( json.stencilFunc !== undefined ) { material.stencilFunc = json.stencilFunc; }
			if ( json.stencilRef !== undefined ) { material.stencilRef = json.stencilRef; }
			if ( json.stencilFuncMask !== undefined ) { material.stencilFuncMask = json.stencilFuncMask; }
			if ( json.stencilFail !== undefined ) { material.stencilFail = json.stencilFail; }
			if ( json.stencilZFail !== undefined ) { material.stencilZFail = json.stencilZFail; }
			if ( json.stencilZPass !== undefined ) { material.stencilZPass = json.stencilZPass; }

			if ( json.wireframe !== undefined ) { material.wireframe = json.wireframe; }
			if ( json.wireframeLinewidth !== undefined ) { material.wireframeLinewidth = json.wireframeLinewidth; }
			if ( json.wireframeLinecap !== undefined ) { material.wireframeLinecap = json.wireframeLinecap; }
			if ( json.wireframeLinejoin !== undefined ) { material.wireframeLinejoin = json.wireframeLinejoin; }

			if ( json.rotation !== undefined ) { material.rotation = json.rotation; }

			if ( json.linewidth !== 1 ) { material.linewidth = json.linewidth; }
			if ( json.dashSize !== undefined ) { material.dashSize = json.dashSize; }
			if ( json.gapSize !== undefined ) { material.gapSize = json.gapSize; }
			if ( json.scale !== undefined ) { material.scale = json.scale; }

			if ( json.polygonOffset !== undefined ) { material.polygonOffset = json.polygonOffset; }
			if ( json.polygonOffsetFactor !== undefined ) { material.polygonOffsetFactor = json.polygonOffsetFactor; }
			if ( json.polygonOffsetUnits !== undefined ) { material.polygonOffsetUnits = json.polygonOffsetUnits; }

			if ( json.skinning !== undefined ) { material.skinning = json.skinning; }
			if ( json.morphTargets !== undefined ) { material.morphTargets = json.morphTargets; }
			if ( json.morphNormals !== undefined ) { material.morphNormals = json.morphNormals; }
			if ( json.dithering !== undefined ) { material.dithering = json.dithering; }

			if ( json.vertexTangents !== undefined ) { material.vertexTangents = json.vertexTangents; }

			if ( json.visible !== undefined ) { material.visible = json.visible; }

			if ( json.toneMapped !== undefined ) { material.toneMapped = json.toneMapped; }

			if ( json.userData !== undefined ) { material.userData = json.userData; }

			if ( json.vertexColors !== undefined ) {

				if ( typeof json.vertexColors === 'number' ) {

					material.vertexColors = ( json.vertexColors > 0 ) ? true : false;

				} else {

					material.vertexColors = json.vertexColors;

				}

			}

			// Shader Material

			if ( json.uniforms !== undefined ) {

				for ( var name in json.uniforms ) {

					var uniform = json.uniforms[ name ];

					material.uniforms[ name ] = {};

					switch ( uniform.type ) {

						case 't':
							material.uniforms[ name ].value = getTexture( uniform.value );
							break;

						case 'c':
							material.uniforms[ name ].value = new Color().setHex( uniform.value );
							break;

						case 'v2':
							material.uniforms[ name ].value = new Vector2().fromArray( uniform.value );
							break;

						case 'v3':
							material.uniforms[ name ].value = new Vector3().fromArray( uniform.value );
							break;

						case 'v4':
							material.uniforms[ name ].value = new Vector4().fromArray( uniform.value );
							break;

						case 'm3':
							material.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );

						case 'm4':
							material.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );
							break;

						default:
							material.uniforms[ name ].value = uniform.value;

					}

				}

			}

			if ( json.defines !== undefined ) { material.defines = json.defines; }
			if ( json.vertexShader !== undefined ) { material.vertexShader = json.vertexShader; }
			if ( json.fragmentShader !== undefined ) { material.fragmentShader = json.fragmentShader; }

			if ( json.extensions !== undefined ) {

				for ( var key in json.extensions ) {

					material.extensions[ key ] = json.extensions[ key ];

				}

			}

			// Deprecated

			if ( json.shading !== undefined ) { material.flatShading = json.shading === 1; } // THREE.FlatShading

			// for PointsMaterial

			if ( json.size !== undefined ) { material.size = json.size; }
			if ( json.sizeAttenuation !== undefined ) { material.sizeAttenuation = json.sizeAttenuation; }

			// maps

			if ( json.map !== undefined ) { material.map = getTexture( json.map ); }
			if ( json.matcap !== undefined ) { material.matcap = getTexture( json.matcap ); }

			if ( json.alphaMap !== undefined ) { material.alphaMap = getTexture( json.alphaMap ); }

			if ( json.bumpMap !== undefined ) { material.bumpMap = getTexture( json.bumpMap ); }
			if ( json.bumpScale !== undefined ) { material.bumpScale = json.bumpScale; }

			if ( json.normalMap !== undefined ) { material.normalMap = getTexture( json.normalMap ); }
			if ( json.normalMapType !== undefined ) { material.normalMapType = json.normalMapType; }
			if ( json.normalScale !== undefined ) {

				var normalScale = json.normalScale;

				if ( Array.isArray( normalScale ) === false ) {

					// Blender exporter used to export a scalar. See #7459

					normalScale = [ normalScale, normalScale ];

				}

				material.normalScale = new Vector2().fromArray( normalScale );

			}

			if ( json.displacementMap !== undefined ) { material.displacementMap = getTexture( json.displacementMap ); }
			if ( json.displacementScale !== undefined ) { material.displacementScale = json.displacementScale; }
			if ( json.displacementBias !== undefined ) { material.displacementBias = json.displacementBias; }

			if ( json.roughnessMap !== undefined ) { material.roughnessMap = getTexture( json.roughnessMap ); }
			if ( json.metalnessMap !== undefined ) { material.metalnessMap = getTexture( json.metalnessMap ); }

			if ( json.emissiveMap !== undefined ) { material.emissiveMap = getTexture( json.emissiveMap ); }
			if ( json.emissiveIntensity !== undefined ) { material.emissiveIntensity = json.emissiveIntensity; }

			if ( json.specularMap !== undefined ) { material.specularMap = getTexture( json.specularMap ); }

			if ( json.envMap !== undefined ) { material.envMap = getTexture( json.envMap ); }
			if ( json.envMapIntensity !== undefined ) { material.envMapIntensity = json.envMapIntensity; }

			if ( json.reflectivity !== undefined ) { material.reflectivity = json.reflectivity; }
			if ( json.refractionRatio !== undefined ) { material.refractionRatio = json.refractionRatio; }

			if ( json.lightMap !== undefined ) { material.lightMap = getTexture( json.lightMap ); }
			if ( json.lightMapIntensity !== undefined ) { material.lightMapIntensity = json.lightMapIntensity; }

			if ( json.aoMap !== undefined ) { material.aoMap = getTexture( json.aoMap ); }
			if ( json.aoMapIntensity !== undefined ) { material.aoMapIntensity = json.aoMapIntensity; }

			if ( json.gradientMap !== undefined ) { material.gradientMap = getTexture( json.gradientMap ); }

			if ( json.clearcoatMap !== undefined ) { material.clearcoatMap = getTexture( json.clearcoatMap ); }
			if ( json.clearcoatRoughnessMap !== undefined ) { material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap ); }
			if ( json.clearcoatNormalMap !== undefined ) { material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap ); }
			if ( json.clearcoatNormalScale !== undefined ) { material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale ); }

			return material;

		},

		setTextures: function ( value ) {

			this.textures = value;
			return this;

		}

	} );

	/**
	 * @author Don McCurdy / https://www.donmccurdy.com
	 */

	var LoaderUtils = {

		decodeText: function ( array ) {

			if ( typeof TextDecoder !== 'undefined' ) {

				return new TextDecoder().decode( array );

			}

			// Avoid the String.fromCharCode.apply(null, array) shortcut, which
			// throws a "maximum call stack size exceeded" error for large arrays.

			var s = '';

			for ( var i = 0, il = array.length; i < il; i ++ ) {

				// Implicitly assumes little-endian.
				s += String.fromCharCode( array[ i ] );

			}

			try {

				// merges multi-byte utf-8 characters.

				return decodeURIComponent( escape( s ) );

			} catch ( e ) { // see #16358

				return s;

			}

		},

		extractUrlBase: function ( url ) {

			var index = url.lastIndexOf( '/' );

			if ( index === - 1 ) { return './'; }

			return url.substr( 0, index + 1 );

		}

	};

	/**
	 * @author benaadams / https://twitter.com/ben_a_adams
	 */

	function InstancedBufferGeometry() {

		BufferGeometry.call( this );

		this.type = 'InstancedBufferGeometry';
		this.maxInstancedCount = undefined;

	}

	InstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {

		constructor: InstancedBufferGeometry,

		isInstancedBufferGeometry: true,

		copy: function ( source ) {

			BufferGeometry.prototype.copy.call( this, source );

			this.maxInstancedCount = source.maxInstancedCount;

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		toJSON: function () {

			var data = BufferGeometry.prototype.toJSON.call( this );

			data.maxInstancedCount = this.maxInstancedCount;

			data.isInstancedBufferGeometry = true;

			return data;

		}

	} );

	/**
	 * @author benaadams / https://twitter.com/ben_a_adams
	 */

	function InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {

		if ( typeof ( normalized ) === 'number' ) {

			meshPerAttribute = normalized;

			normalized = false;

			console.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );

		}

		BufferAttribute.call( this, array, itemSize, normalized );

		this.meshPerAttribute = meshPerAttribute || 1;

	}

	InstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {

		constructor: InstancedBufferAttribute,

		isInstancedBufferAttribute: true,

		copy: function ( source ) {

			BufferAttribute.prototype.copy.call( this, source );

			this.meshPerAttribute = source.meshPerAttribute;

			return this;

		},

		toJSON: function ()	{

			var data = BufferAttribute.prototype.toJSON.call( this );

			data.meshPerAttribute = this.meshPerAttribute;

			data.isInstancedBufferAttribute = true;

			return data;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function BufferGeometryLoader( manager ) {

		Loader.call( this, manager );

	}

	BufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: BufferGeometryLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var loader = new FileLoader( scope.manager );
			loader.setPath( scope.path );
			loader.load( url, function ( text ) {

				onLoad( scope.parse( JSON.parse( text ) ) );

			}, onProgress, onError );

		},

		parse: function ( json ) {

			var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();

			var index = json.data.index;

			if ( index !== undefined ) {

				var typedArray = new TYPED_ARRAYS[ index.type ]( index.array );
				geometry.setIndex( new BufferAttribute( typedArray, 1 ) );

			}

			var attributes = json.data.attributes;

			for ( var key in attributes ) {

				var attribute = attributes[ key ];
				var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );
				var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;
				var bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );
				if ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }
				geometry.setAttribute( key, bufferAttribute );

			}

			var morphAttributes = json.data.morphAttributes;

			if ( morphAttributes ) {

				for ( var key in morphAttributes ) {

					var attributeArray = morphAttributes[ key ];

					var array = [];

					for ( var i = 0, il = attributeArray.length; i < il; i ++ ) {

						var attribute = attributeArray[ i ];
						var typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );

						var bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );
						if ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }
						array.push( bufferAttribute );

					}

					geometry.morphAttributes[ key ] = array;

				}

			}

			var morphTargetsRelative = json.data.morphTargetsRelative;

			if ( morphTargetsRelative ) {

				geometry.morphTargetsRelative = true;

			}

			var groups = json.data.groups || json.data.drawcalls || json.data.offsets;

			if ( groups !== undefined ) {

				for ( var i = 0, n = groups.length; i !== n; ++ i ) {

					var group = groups[ i ];

					geometry.addGroup( group.start, group.count, group.materialIndex );

				}

			}

			var boundingSphere = json.data.boundingSphere;

			if ( boundingSphere !== undefined ) {

				var center = new Vector3();

				if ( boundingSphere.center !== undefined ) {

					center.fromArray( boundingSphere.center );

				}

				geometry.boundingSphere = new Sphere( center, boundingSphere.radius );

			}

			if ( json.name ) { geometry.name = json.name; }
			if ( json.userData ) { geometry.userData = json.userData; }

			return geometry;

		}

	} );

	var TYPED_ARRAYS = {
		Int8Array: Int8Array,
		Uint8Array: Uint8Array,
		// Workaround for IE11 pre KB2929437. See #11440
		Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,
		Int16Array: Int16Array,
		Uint16Array: Uint16Array,
		Int32Array: Int32Array,
		Uint32Array: Uint32Array,
		Float32Array: Float32Array,
		Float64Array: Float64Array
	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function ObjectLoader( manager ) {

		Loader.call( this, manager );

	}

	ObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: ObjectLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;
			this.resourcePath = this.resourcePath || path;

			var loader = new FileLoader( scope.manager );
			loader.setPath( this.path );
			loader.load( url, function ( text ) {

				var json = null;

				try {

					json = JSON.parse( text );

				} catch ( error ) {

					if ( onError !== undefined ) { onError( error ); }

					console.error( 'THREE:ObjectLoader: Can\'t parse ' + url + '.', error.message );

					return;

				}

				var metadata = json.metadata;

				if ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {

					console.error( 'THREE.ObjectLoader: Can\'t load ' + url );
					return;

				}

				scope.parse( json, onLoad );

			}, onProgress, onError );

		},

		parse: function ( json, onLoad ) {

			var shapes = this.parseShape( json.shapes );
			var geometries = this.parseGeometries( json.geometries, shapes );

			var images = this.parseImages( json.images, function () {

				if ( onLoad !== undefined ) { onLoad( object ); }

			} );

			var textures = this.parseTextures( json.textures, images );
			var materials = this.parseMaterials( json.materials, textures );

			var object = this.parseObject( json.object, geometries, materials );

			if ( json.animations ) {

				object.animations = this.parseAnimations( json.animations );

			}

			if ( json.images === undefined || json.images.length === 0 ) {

				if ( onLoad !== undefined ) { onLoad( object ); }

			}

			return object;

		},

		parseShape: function ( json ) {

			var shapes = {};

			if ( json !== undefined ) {

				for ( var i = 0, l = json.length; i < l; i ++ ) {

					var shape = new Shape().fromJSON( json[ i ] );

					shapes[ shape.uuid ] = shape;

				}

			}

			return shapes;

		},

		parseGeometries: function ( json, shapes ) {

			var geometries = {};

			if ( json !== undefined ) {

				var bufferGeometryLoader = new BufferGeometryLoader();

				for ( var i = 0, l = json.length; i < l; i ++ ) {

					var geometry;
					var data = json[ i ];

					switch ( data.type ) {

						case 'PlaneGeometry':
						case 'PlaneBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.width,
								data.height,
								data.widthSegments,
								data.heightSegments
							);

							break;

						case 'BoxGeometry':
						case 'BoxBufferGeometry':
						case 'CubeGeometry': // backwards compatible

							geometry = new Geometries[ data.type ](
								data.width,
								data.height,
								data.depth,
								data.widthSegments,
								data.heightSegments,
								data.depthSegments
							);

							break;

						case 'CircleGeometry':
						case 'CircleBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radius,
								data.segments,
								data.thetaStart,
								data.thetaLength
							);

							break;

						case 'CylinderGeometry':
						case 'CylinderBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radiusTop,
								data.radiusBottom,
								data.height,
								data.radialSegments,
								data.heightSegments,
								data.openEnded,
								data.thetaStart,
								data.thetaLength
							);

							break;

						case 'ConeGeometry':
						case 'ConeBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radius,
								data.height,
								data.radialSegments,
								data.heightSegments,
								data.openEnded,
								data.thetaStart,
								data.thetaLength
							);

							break;

						case 'SphereGeometry':
						case 'SphereBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radius,
								data.widthSegments,
								data.heightSegments,
								data.phiStart,
								data.phiLength,
								data.thetaStart,
								data.thetaLength
							);

							break;

						case 'DodecahedronGeometry':
						case 'DodecahedronBufferGeometry':
						case 'IcosahedronGeometry':
						case 'IcosahedronBufferGeometry':
						case 'OctahedronGeometry':
						case 'OctahedronBufferGeometry':
						case 'TetrahedronGeometry':
						case 'TetrahedronBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radius,
								data.detail
							);

							break;

						case 'RingGeometry':
						case 'RingBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.innerRadius,
								data.outerRadius,
								data.thetaSegments,
								data.phiSegments,
								data.thetaStart,
								data.thetaLength
							);

							break;

						case 'TorusGeometry':
						case 'TorusBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radius,
								data.tube,
								data.radialSegments,
								data.tubularSegments,
								data.arc
							);

							break;

						case 'TorusKnotGeometry':
						case 'TorusKnotBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.radius,
								data.tube,
								data.tubularSegments,
								data.radialSegments,
								data.p,
								data.q
							);

							break;

						case 'TubeGeometry':
						case 'TubeBufferGeometry':

							// This only works for built-in curves (e.g. CatmullRomCurve3).
							// User defined curves or instances of CurvePath will not be deserialized.
							geometry = new Geometries[ data.type ](
								new Curves[ data.path.type ]().fromJSON( data.path ),
								data.tubularSegments,
								data.radius,
								data.radialSegments,
								data.closed
							);

							break;

						case 'LatheGeometry':
						case 'LatheBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.points,
								data.segments,
								data.phiStart,
								data.phiLength
							);

							break;

						case 'PolyhedronGeometry':
						case 'PolyhedronBufferGeometry':

							geometry = new Geometries[ data.type ](
								data.vertices,
								data.indices,
								data.radius,
								data.details
							);

							break;

						case 'ShapeGeometry':
						case 'ShapeBufferGeometry':

							var geometryShapes = [];

							for ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {

								var shape = shapes[ data.shapes[ j ] ];

								geometryShapes.push( shape );

							}

							geometry = new Geometries[ data.type ](
								geometryShapes,
								data.curveSegments
							);

							break;


						case 'ExtrudeGeometry':
						case 'ExtrudeBufferGeometry':

							var geometryShapes = [];

							for ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {

								var shape = shapes[ data.shapes[ j ] ];

								geometryShapes.push( shape );

							}

							var extrudePath = data.options.extrudePath;

							if ( extrudePath !== undefined ) {

								data.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );

							}

							geometry = new Geometries[ data.type ](
								geometryShapes,
								data.options
							);

							break;

						case 'BufferGeometry':
						case 'InstancedBufferGeometry':

							geometry = bufferGeometryLoader.parse( data );

							break;

						case 'Geometry':

							console.error( 'THREE.ObjectLoader: Loading "Geometry" is not supported anymore.' );

							break;

						default:

							console.warn( 'THREE.ObjectLoader: Unsupported geometry type "' + data.type + '"' );

							continue;

					}

					geometry.uuid = data.uuid;

					if ( data.name !== undefined ) { geometry.name = data.name; }
					if ( geometry.isBufferGeometry === true && data.userData !== undefined ) { geometry.userData = data.userData; }

					geometries[ data.uuid ] = geometry;

				}

			}

			return geometries;

		},

		parseMaterials: function ( json, textures ) {

			var cache = {}; // MultiMaterial
			var materials = {};

			if ( json !== undefined ) {

				var loader = new MaterialLoader();
				loader.setTextures( textures );

				for ( var i = 0, l = json.length; i < l; i ++ ) {

					var data = json[ i ];

					if ( data.type === 'MultiMaterial' ) {

						// Deprecated

						var array = [];

						for ( var j = 0; j < data.materials.length; j ++ ) {

							var material = data.materials[ j ];

							if ( cache[ material.uuid ] === undefined ) {

								cache[ material.uuid ] = loader.parse( material );

							}

							array.push( cache[ material.uuid ] );

						}

						materials[ data.uuid ] = array;

					} else {

						if ( cache[ data.uuid ] === undefined ) {

							cache[ data.uuid ] = loader.parse( data );

						}

						materials[ data.uuid ] = cache[ data.uuid ];

					}

				}

			}

			return materials;

		},

		parseAnimations: function ( json ) {

			var animations = [];

			for ( var i = 0; i < json.length; i ++ ) {

				var data = json[ i ];

				var clip = AnimationClip.parse( data );

				if ( data.uuid !== undefined ) { clip.uuid = data.uuid; }

				animations.push( clip );

			}

			return animations;

		},

		parseImages: function ( json, onLoad ) {

			var scope = this;
			var images = {};

			function loadImage( url ) {

				scope.manager.itemStart( url );

				return loader.load( url, function () {

					scope.manager.itemEnd( url );

				}, undefined, function () {

					scope.manager.itemError( url );
					scope.manager.itemEnd( url );

				} );

			}

			if ( json !== undefined && json.length > 0 ) {

				var manager = new LoadingManager( onLoad );

				var loader = new ImageLoader( manager );
				loader.setCrossOrigin( this.crossOrigin );

				for ( var i = 0, il = json.length; i < il; i ++ ) {

					var image = json[ i ];
					var url = image.url;

					if ( Array.isArray( url ) ) {

						// load array of images e.g CubeTexture

						images[ image.uuid ] = [];

						for ( var j = 0, jl = url.length; j < jl; j ++ ) {

							var currentUrl = url[ j ];

							var path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;

							images[ image.uuid ].push( loadImage( path ) );

						}

					} else {

						// load single image

						var path = /^(\/\/)|([a-z]+:(\/\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;

						images[ image.uuid ] = loadImage( path );

					}

				}

			}

			return images;

		},

		parseTextures: function ( json, images ) {

			function parseConstant( value, type ) {

				if ( typeof value === 'number' ) { return value; }

				console.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );

				return type[ value ];

			}

			var textures = {};

			if ( json !== undefined ) {

				for ( var i = 0, l = json.length; i < l; i ++ ) {

					var data = json[ i ];

					if ( data.image === undefined ) {

						console.warn( 'THREE.ObjectLoader: No "image" specified for', data.uuid );

					}

					if ( images[ data.image ] === undefined ) {

						console.warn( 'THREE.ObjectLoader: Undefined image', data.image );

					}

					var texture;

					if ( Array.isArray( images[ data.image ] ) ) {

						texture = new CubeTexture( images[ data.image ] );

					} else {

						texture = new Texture( images[ data.image ] );

					}

					texture.needsUpdate = true;

					texture.uuid = data.uuid;

					if ( data.name !== undefined ) { texture.name = data.name; }

					if ( data.mapping !== undefined ) { texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING ); }

					if ( data.offset !== undefined ) { texture.offset.fromArray( data.offset ); }
					if ( data.repeat !== undefined ) { texture.repeat.fromArray( data.repeat ); }
					if ( data.center !== undefined ) { texture.center.fromArray( data.center ); }
					if ( data.rotation !== undefined ) { texture.rotation = data.rotation; }

					if ( data.wrap !== undefined ) {

						texture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );
						texture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );

					}

					if ( data.format !== undefined ) { texture.format = data.format; }
					if ( data.type !== undefined ) { texture.type = data.type; }
					if ( data.encoding !== undefined ) { texture.encoding = data.encoding; }

					if ( data.minFilter !== undefined ) { texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER ); }
					if ( data.magFilter !== undefined ) { texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER ); }
					if ( data.anisotropy !== undefined ) { texture.anisotropy = data.anisotropy; }

					if ( data.flipY !== undefined ) { texture.flipY = data.flipY; }

					if ( data.premultiplyAlpha !== undefined ) { texture.premultiplyAlpha = data.premultiplyAlpha; }
					if ( data.unpackAlignment !== undefined ) { texture.unpackAlignment = data.unpackAlignment; }

					textures[ data.uuid ] = texture;

				}

			}

			return textures;

		},

		parseObject: function ( data, geometries, materials ) {

			var object;

			function getGeometry( name ) {

				if ( geometries[ name ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined geometry', name );

				}

				return geometries[ name ];

			}

			function getMaterial( name ) {

				if ( name === undefined ) { return undefined; }

				if ( Array.isArray( name ) ) {

					var array = [];

					for ( var i = 0, l = name.length; i < l; i ++ ) {

						var uuid = name[ i ];

						if ( materials[ uuid ] === undefined ) {

							console.warn( 'THREE.ObjectLoader: Undefined material', uuid );

						}

						array.push( materials[ uuid ] );

					}

					return array;

				}

				if ( materials[ name ] === undefined ) {

					console.warn( 'THREE.ObjectLoader: Undefined material', name );

				}

				return materials[ name ];

			}

			switch ( data.type ) {

				case 'Scene':

					object = new Scene();

					if ( data.background !== undefined ) {

						if ( Number.isInteger( data.background ) ) {

							object.background = new Color( data.background );

						}

					}

					if ( data.fog !== undefined ) {

						if ( data.fog.type === 'Fog' ) {

							object.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );

						} else if ( data.fog.type === 'FogExp2' ) {

							object.fog = new FogExp2( data.fog.color, data.fog.density );

						}

					}

					break;

				case 'PerspectiveCamera':

					object = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );

					if ( data.focus !== undefined ) { object.focus = data.focus; }
					if ( data.zoom !== undefined ) { object.zoom = data.zoom; }
					if ( data.filmGauge !== undefined ) { object.filmGauge = data.filmGauge; }
					if ( data.filmOffset !== undefined ) { object.filmOffset = data.filmOffset; }
					if ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }

					break;

				case 'OrthographicCamera':

					object = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );

					if ( data.zoom !== undefined ) { object.zoom = data.zoom; }
					if ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }

					break;

				case 'AmbientLight':

					object = new AmbientLight( data.color, data.intensity );

					break;

				case 'DirectionalLight':

					object = new DirectionalLight( data.color, data.intensity );

					break;

				case 'PointLight':

					object = new PointLight( data.color, data.intensity, data.distance, data.decay );

					break;

				case 'RectAreaLight':

					object = new RectAreaLight( data.color, data.intensity, data.width, data.height );

					break;

				case 'SpotLight':

					object = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );

					break;

				case 'HemisphereLight':

					object = new HemisphereLight( data.color, data.groundColor, data.intensity );

					break;

				case 'SkinnedMesh':

					console.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );

				case 'Mesh':

					var geometry = getGeometry( data.geometry );
					var material = getMaterial( data.material );

					object = new Mesh( geometry, material );

					break;

				case 'InstancedMesh':

					var geometry = getGeometry( data.geometry );
					var material = getMaterial( data.material );
					var count = data.count;
					var instanceMatrix = data.instanceMatrix;

					object = new InstancedMesh( geometry, material, count );
					object.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );

					break;

				case 'LOD':

					object = new LOD();

					break;

				case 'Line':

					object = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );

					break;

				case 'LineLoop':

					object = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );

					break;

				case 'LineSegments':

					object = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );

					break;

				case 'PointCloud':
				case 'Points':

					object = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );

					break;

				case 'Sprite':

					object = new Sprite( getMaterial( data.material ) );

					break;

				case 'Group':

					object = new Group();

					break;

				default:

					object = new Object3D();

			}

			object.uuid = data.uuid;

			if ( data.name !== undefined ) { object.name = data.name; }

			if ( data.matrix !== undefined ) {

				object.matrix.fromArray( data.matrix );

				if ( data.matrixAutoUpdate !== undefined ) { object.matrixAutoUpdate = data.matrixAutoUpdate; }
				if ( object.matrixAutoUpdate ) { object.matrix.decompose( object.position, object.quaternion, object.scale ); }

			} else {

				if ( data.position !== undefined ) { object.position.fromArray( data.position ); }
				if ( data.rotation !== undefined ) { object.rotation.fromArray( data.rotation ); }
				if ( data.quaternion !== undefined ) { object.quaternion.fromArray( data.quaternion ); }
				if ( data.scale !== undefined ) { object.scale.fromArray( data.scale ); }

			}

			if ( data.castShadow !== undefined ) { object.castShadow = data.castShadow; }
			if ( data.receiveShadow !== undefined ) { object.receiveShadow = data.receiveShadow; }

			if ( data.shadow ) {

				if ( data.shadow.bias !== undefined ) { object.shadow.bias = data.shadow.bias; }
				if ( data.shadow.radius !== undefined ) { object.shadow.radius = data.shadow.radius; }
				if ( data.shadow.mapSize !== undefined ) { object.shadow.mapSize.fromArray( data.shadow.mapSize ); }
				if ( data.shadow.camera !== undefined ) { object.shadow.camera = this.parseObject( data.shadow.camera ); }

			}

			if ( data.visible !== undefined ) { object.visible = data.visible; }
			if ( data.frustumCulled !== undefined ) { object.frustumCulled = data.frustumCulled; }
			if ( data.renderOrder !== undefined ) { object.renderOrder = data.renderOrder; }
			if ( data.userData !== undefined ) { object.userData = data.userData; }
			if ( data.layers !== undefined ) { object.layers.mask = data.layers; }

			if ( data.children !== undefined ) {

				var children = data.children;

				for ( var i = 0; i < children.length; i ++ ) {

					object.add( this.parseObject( children[ i ], geometries, materials ) );

				}

			}

			if ( data.type === 'LOD' ) {

				if ( data.autoUpdate !== undefined ) { object.autoUpdate = data.autoUpdate; }

				var levels = data.levels;

				for ( var l = 0; l < levels.length; l ++ ) {

					var level = levels[ l ];
					var child = object.getObjectByProperty( 'uuid', level.object );

					if ( child !== undefined ) {

						object.addLevel( child, level.distance );

					}

				}

			}

			return object;

		}

	} );

	var TEXTURE_MAPPING = {
		UVMapping: UVMapping,
		CubeReflectionMapping: CubeReflectionMapping,
		CubeRefractionMapping: CubeRefractionMapping,
		EquirectangularReflectionMapping: EquirectangularReflectionMapping,
		EquirectangularRefractionMapping: EquirectangularRefractionMapping,
		SphericalReflectionMapping: SphericalReflectionMapping,
		CubeUVReflectionMapping: CubeUVReflectionMapping,
		CubeUVRefractionMapping: CubeUVRefractionMapping
	};

	var TEXTURE_WRAPPING = {
		RepeatWrapping: RepeatWrapping,
		ClampToEdgeWrapping: ClampToEdgeWrapping,
		MirroredRepeatWrapping: MirroredRepeatWrapping
	};

	var TEXTURE_FILTER = {
		NearestFilter: NearestFilter,
		NearestMipmapNearestFilter: NearestMipmapNearestFilter,
		NearestMipmapLinearFilter: NearestMipmapLinearFilter,
		LinearFilter: LinearFilter,
		LinearMipmapNearestFilter: LinearMipmapNearestFilter,
		LinearMipmapLinearFilter: LinearMipmapLinearFilter
	};

	/**
	 * @author thespite / http://clicktorelease.com/
	 */


	function ImageBitmapLoader( manager ) {

		if ( typeof createImageBitmap === 'undefined' ) {

			console.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );

		}

		if ( typeof fetch === 'undefined' ) {

			console.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );

		}

		Loader.call( this, manager );

		this.options = undefined;

	}

	ImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: ImageBitmapLoader,

		setOptions: function setOptions( options ) {

			this.options = options;

			return this;

		},

		load: function ( url, onLoad, onProgress, onError ) {

			if ( url === undefined ) { url = ''; }

			if ( this.path !== undefined ) { url = this.path + url; }

			url = this.manager.resolveURL( url );

			var scope = this;

			var cached = Cache.get( url );

			if ( cached !== undefined ) {

				scope.manager.itemStart( url );

				setTimeout( function () {

					if ( onLoad ) { onLoad( cached ); }

					scope.manager.itemEnd( url );

				}, 0 );

				return cached;

			}

			fetch( url ).then( function ( res ) {

				return res.blob();

			} ).then( function ( blob ) {

				if ( scope.options === undefined ) {

					// Workaround for FireFox. It causes an error if you pass options.
					return createImageBitmap( blob );

				} else {

					return createImageBitmap( blob, scope.options );

				}

			} ).then( function ( imageBitmap ) {

				Cache.add( url, imageBitmap );

				if ( onLoad ) { onLoad( imageBitmap ); }

				scope.manager.itemEnd( url );

			} ).catch( function ( e ) {

				if ( onError ) { onError( e ); }

				scope.manager.itemError( url );
				scope.manager.itemEnd( url );

			} );

			scope.manager.itemStart( url );

		}

	} );

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * minimal class for proxing functions to Path. Replaces old "extractSubpaths()"
	 **/

	function ShapePath() {

		this.type = 'ShapePath';

		this.color = new Color();

		this.subPaths = [];
		this.currentPath = null;

	}

	Object.assign( ShapePath.prototype, {

		moveTo: function ( x, y ) {

			this.currentPath = new Path();
			this.subPaths.push( this.currentPath );
			this.currentPath.moveTo( x, y );

			return this;

		},

		lineTo: function ( x, y ) {

			this.currentPath.lineTo( x, y );

			return this;

		},

		quadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {

			this.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );

			return this;

		},

		bezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {

			this.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );

			return this;

		},

		splineThru: function ( pts ) {

			this.currentPath.splineThru( pts );

			return this;

		},

		toShapes: function ( isCCW, noHoles ) {

			function toShapesNoHoles( inSubpaths ) {

				var shapes = [];

				for ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {

					var tmpPath = inSubpaths[ i ];

					var tmpShape = new Shape();
					tmpShape.curves = tmpPath.curves;

					shapes.push( tmpShape );

				}

				return shapes;

			}

			function isPointInsidePolygon( inPt, inPolygon ) {

				var polyLen = inPolygon.length;

				// inPt on polygon contour => immediate success    or
				// toggling of inside/outside at every single! intersection point of an edge
				//  with the horizontal line through inPt, left of inPt
				//  not counting lowerY endpoints of edges and whole edges on that line
				var inside = false;
				for ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {

					var edgeLowPt = inPolygon[ p ];
					var edgeHighPt = inPolygon[ q ];

					var edgeDx = edgeHighPt.x - edgeLowPt.x;
					var edgeDy = edgeHighPt.y - edgeLowPt.y;

					if ( Math.abs( edgeDy ) > Number.EPSILON ) {

						// not parallel
						if ( edgeDy < 0 ) {

							edgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;
							edgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;

						}
						if ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) 		{ continue; }

						if ( inPt.y === edgeLowPt.y ) {

							if ( inPt.x === edgeLowPt.x )		{ return	true; }		// inPt is on contour ?
							// continue;				// no intersection or edgeLowPt => doesn't count !!!

						} else {

							var perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );
							if ( perpEdge === 0 )				{ return	true; }		// inPt is on contour ?
							if ( perpEdge < 0 ) 				{ continue; }
							inside = ! inside;		// true intersection left of inPt

						}

					} else {

						// parallel or collinear
						if ( inPt.y !== edgeLowPt.y ) 		{ continue; }			// parallel
						// edge lies on the same horizontal line as inPt
						if ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||
							 ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )		{ return	true; }	// inPt: Point on contour !
						// continue;

					}

				}

				return	inside;

			}

			var isClockWise = ShapeUtils.isClockWise;

			var subPaths = this.subPaths;
			if ( subPaths.length === 0 ) { return []; }

			if ( noHoles === true )	{ return	toShapesNoHoles( subPaths ); }


			var solid, tmpPath, tmpShape, shapes = [];

			if ( subPaths.length === 1 ) {

				tmpPath = subPaths[ 0 ];
				tmpShape = new Shape();
				tmpShape.curves = tmpPath.curves;
				shapes.push( tmpShape );
				return shapes;

			}

			var holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );
			holesFirst = isCCW ? ! holesFirst : holesFirst;

			// console.log("Holes first", holesFirst);

			var betterShapeHoles = [];
			var newShapes = [];
			var newShapeHoles = [];
			var mainIdx = 0;
			var tmpPoints;

			newShapes[ mainIdx ] = undefined;
			newShapeHoles[ mainIdx ] = [];

			for ( var i = 0, l = subPaths.length; i < l; i ++ ) {

				tmpPath = subPaths[ i ];
				tmpPoints = tmpPath.getPoints();
				solid = isClockWise( tmpPoints );
				solid = isCCW ? ! solid : solid;

				if ( solid ) {

					if ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )	{ mainIdx ++; }

					newShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };
					newShapes[ mainIdx ].s.curves = tmpPath.curves;

					if ( holesFirst )	{ mainIdx ++; }
					newShapeHoles[ mainIdx ] = [];

					//console.log('cw', i);

				} else {

					newShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );

					//console.log('ccw', i);

				}

			}

			// only Holes? -> probably all Shapes with wrong orientation
			if ( ! newShapes[ 0 ] )	{ return	toShapesNoHoles( subPaths ); }


			if ( newShapes.length > 1 ) {

				var ambiguous = false;
				var toChange = [];

				for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

					betterShapeHoles[ sIdx ] = [];

				}

				for ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {

					var sho = newShapeHoles[ sIdx ];

					for ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {

						var ho = sho[ hIdx ];
						var hole_unassigned = true;

						for ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {

							if ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {

								if ( sIdx !== s2Idx )	{ toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } ); }
								if ( hole_unassigned ) {

									hole_unassigned = false;
									betterShapeHoles[ s2Idx ].push( ho );

								} else {

									ambiguous = true;

								}

							}

						}
						if ( hole_unassigned ) {

							betterShapeHoles[ sIdx ].push( ho );

						}

					}

				}
				// console.log("ambiguous: ", ambiguous);
				if ( toChange.length > 0 ) {

					// console.log("to change: ", toChange);
					if ( ! ambiguous )	{ newShapeHoles = betterShapeHoles; }

				}

			}

			var tmpHoles;

			for ( var i = 0, il = newShapes.length; i < il; i ++ ) {

				tmpShape = newShapes[ i ].s;
				shapes.push( tmpShape );
				tmpHoles = newShapeHoles[ i ];

				for ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {

					tmpShape.holes.push( tmpHoles[ j ].h );

				}

			}

			//console.log("shape", shapes);

			return shapes;

		}

	} );

	/**
	 * @author zz85 / http://www.lab4games.net/zz85/blog
	 * @author mrdoob / http://mrdoob.com/
	 */


	function Font( data ) {

		this.type = 'Font';

		this.data = data;

	}

	Object.assign( Font.prototype, {

		isFont: true,

		generateShapes: function ( text, size ) {

			if ( size === undefined ) { size = 100; }

			var shapes = [];
			var paths = createPaths( text, size, this.data );

			for ( var p = 0, pl = paths.length; p < pl; p ++ ) {

				Array.prototype.push.apply( shapes, paths[ p ].toShapes() );

			}

			return shapes;

		}

	} );

	function createPaths( text, size, data ) {

		var chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // workaround for IE11, see #13988
		var scale = size / data.resolution;
		var line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;

		var paths = [];

		var offsetX = 0, offsetY = 0;

		for ( var i = 0; i < chars.length; i ++ ) {

			var char = chars[ i ];

			if ( char === '\n' ) {

				offsetX = 0;
				offsetY -= line_height;

			} else {

				var ret = createPath( char, scale, offsetX, offsetY, data );
				offsetX += ret.offsetX;
				paths.push( ret.path );

			}

		}

		return paths;

	}

	function createPath( char, scale, offsetX, offsetY, data ) {

		var glyph = data.glyphs[ char ] || data.glyphs[ '?' ];

		if ( ! glyph ) {

			console.error( 'THREE.Font: character "' + char + '" does not exists in font family ' + data.familyName + '.' );

			return;

		}

		var path = new ShapePath();

		var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;

		if ( glyph.o ) {

			var outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );

			for ( var i = 0, l = outline.length; i < l; ) {

				var action = outline[ i ++ ];

				switch ( action ) {

					case 'm': // moveTo

						x = outline[ i ++ ] * scale + offsetX;
						y = outline[ i ++ ] * scale + offsetY;

						path.moveTo( x, y );

						break;

					case 'l': // lineTo

						x = outline[ i ++ ] * scale + offsetX;
						y = outline[ i ++ ] * scale + offsetY;

						path.lineTo( x, y );

						break;

					case 'q': // quadraticCurveTo

						cpx = outline[ i ++ ] * scale + offsetX;
						cpy = outline[ i ++ ] * scale + offsetY;
						cpx1 = outline[ i ++ ] * scale + offsetX;
						cpy1 = outline[ i ++ ] * scale + offsetY;

						path.quadraticCurveTo( cpx1, cpy1, cpx, cpy );

						break;

					case 'b': // bezierCurveTo

						cpx = outline[ i ++ ] * scale + offsetX;
						cpy = outline[ i ++ ] * scale + offsetY;
						cpx1 = outline[ i ++ ] * scale + offsetX;
						cpy1 = outline[ i ++ ] * scale + offsetY;
						cpx2 = outline[ i ++ ] * scale + offsetX;
						cpy2 = outline[ i ++ ] * scale + offsetY;

						path.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );

						break;

				}

			}

		}

		return { offsetX: glyph.ha * scale, path: path };

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function FontLoader( manager ) {

		Loader.call( this, manager );

	}

	FontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: FontLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var scope = this;

			var loader = new FileLoader( this.manager );
			loader.setPath( this.path );
			loader.load( url, function ( text ) {

				var json;

				try {

					json = JSON.parse( text );

				} catch ( e ) {

					console.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );
					json = JSON.parse( text.substring( 65, text.length - 2 ) );

				}

				var font = scope.parse( json );

				if ( onLoad ) { onLoad( font ); }

			}, onProgress, onError );

		},

		parse: function ( json ) {

			return new Font( json );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _context;

	var AudioContext = {

		getContext: function () {

			if ( _context === undefined ) {

				_context = new ( window.AudioContext || window.webkitAudioContext )();

			}

			return _context;

		},

		setContext: function ( value ) {

			_context = value;

		}

	};

	/**
	 * @author Reece Aaron Lecrivain / http://reecenotes.com/
	 */

	function AudioLoader( manager ) {

		Loader.call( this, manager );

	}

	AudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {

		constructor: AudioLoader,

		load: function ( url, onLoad, onProgress, onError ) {

			var loader = new FileLoader( this.manager );
			loader.setResponseType( 'arraybuffer' );
			loader.setPath( this.path );
			loader.load( url, function ( buffer ) {

				// Create a copy of the buffer. The `decodeAudioData` method
				// detaches the buffer when complete, preventing reuse.
				var bufferCopy = buffer.slice( 0 );

				var context = AudioContext.getContext();
				context.decodeAudioData( bufferCopy, function ( audioBuffer ) {

					onLoad( audioBuffer );

				} );

			}, onProgress, onError );

		}

	} );

	/**
	 * @author bhouston / http://clara.io
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * Primary reference:
	 *   https://graphics.stanford.edu/papers/envmap/envmap.pdf
	 *
	 * Secondary reference:
	 *   https://www.ppsloan.org/publications/StupidSH36.pdf
	 */

	// 3-band SH defined by 9 coefficients

	function SphericalHarmonics3() {

		this.coefficients = [];

		for ( var i = 0; i < 9; i ++ ) {

			this.coefficients.push( new Vector3() );

		}

	}

	Object.assign( SphericalHarmonics3.prototype, {

		isSphericalHarmonics3: true,

		set: function ( coefficients ) {

			for ( var i = 0; i < 9; i ++ ) {

				this.coefficients[ i ].copy( coefficients[ i ] );

			}

			return this;

		},

		zero: function () {

			for ( var i = 0; i < 9; i ++ ) {

				this.coefficients[ i ].set( 0, 0, 0 );

			}

			return this;

		},

		// get the radiance in the direction of the normal
		// target is a Vector3
		getAt: function ( normal, target ) {

			// normal is assumed to be unit length

			var x = normal.x, y = normal.y, z = normal.z;

			var coeff = this.coefficients;

			// band 0
			target.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );

			// band 1
			target.addScaledVector( coeff[ 1 ], 0.488603 * y );
			target.addScaledVector( coeff[ 2 ], 0.488603 * z );
			target.addScaledVector( coeff[ 3 ], 0.488603 * x );

			// band 2
			target.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );
			target.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );
			target.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );
			target.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );
			target.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );

			return target;

		},

		// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal
		// target is a Vector3
		// https://graphics.stanford.edu/papers/envmap/envmap.pdf
		getIrradianceAt: function ( normal, target ) {

			// normal is assumed to be unit length

			var x = normal.x, y = normal.y, z = normal.z;

			var coeff = this.coefficients;

			// band 0
			target.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095

			// band 1
			target.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603
			target.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );
			target.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );

			// band 2
			target.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548
			target.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );
			target.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3
			target.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );
			target.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274

			return target;

		},

		add: function ( sh ) {

			for ( var i = 0; i < 9; i ++ ) {

				this.coefficients[ i ].add( sh.coefficients[ i ] );

			}

			return this;

		},

		addScaledSH: function ( sh, s ) {

			for ( var i = 0; i < 9; i ++ ) {

				this.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );

			}

			return this;

		},

		scale: function ( s ) {

			for ( var i = 0; i < 9; i ++ ) {

				this.coefficients[ i ].multiplyScalar( s );

			}

			return this;

		},

		lerp: function ( sh, alpha ) {

			for ( var i = 0; i < 9; i ++ ) {

				this.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );

			}

			return this;

		},

		equals: function ( sh ) {

			for ( var i = 0; i < 9; i ++ ) {

				if ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {

					return false;

				}

			}

			return true;

		},

		copy: function ( sh ) {

			return this.set( sh.coefficients );

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		fromArray: function ( array, offset ) {

			if ( offset === undefined ) { offset = 0; }

			var coefficients = this.coefficients;

			for ( var i = 0; i < 9; i ++ ) {

				coefficients[ i ].fromArray( array, offset + ( i * 3 ) );

			}

			return this;

		},

		toArray: function ( array, offset ) {

			if ( array === undefined ) { array = []; }
			if ( offset === undefined ) { offset = 0; }

			var coefficients = this.coefficients;

			for ( var i = 0; i < 9; i ++ ) {

				coefficients[ i ].toArray( array, offset + ( i * 3 ) );

			}

			return array;

		}

	} );

	Object.assign( SphericalHarmonics3, {

		// evaluate the basis functions
		// shBasis is an Array[ 9 ]
		getBasisAt: function ( normal, shBasis ) {

			// normal is assumed to be unit length

			var x = normal.x, y = normal.y, z = normal.z;

			// band 0
			shBasis[ 0 ] = 0.282095;

			// band 1
			shBasis[ 1 ] = 0.488603 * y;
			shBasis[ 2 ] = 0.488603 * z;
			shBasis[ 3 ] = 0.488603 * x;

			// band 2
			shBasis[ 4 ] = 1.092548 * x * y;
			shBasis[ 5 ] = 1.092548 * y * z;
			shBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );
			shBasis[ 7 ] = 1.092548 * x * z;
			shBasis[ 8 ] = 0.546274 * ( x * x - y * y );

		}

	} );

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * A LightProbe is a source of indirect-diffuse light
	 */

	function LightProbe( sh, intensity ) {

		Light.call( this, undefined, intensity );

		this.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();

	}

	LightProbe.prototype = Object.assign( Object.create( Light.prototype ), {

		constructor: LightProbe,

		isLightProbe: true,

		copy: function ( source ) {

			Light.prototype.copy.call( this, source );

			this.sh.copy( source.sh );
			this.intensity = source.intensity;

			return this;

		},

		toJSON: function ( meta ) {

			var data = Light.prototype.toJSON.call( this, meta );

			// data.sh = this.sh.toArray(); // todo

			return data;

		}

	} );

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function HemisphereLightProbe( skyColor, groundColor, intensity ) {

		LightProbe.call( this, undefined, intensity );

		var color1 = new Color().set( skyColor );
		var color2 = new Color().set( groundColor );

		var sky = new Vector3( color1.r, color1.g, color1.b );
		var ground = new Vector3( color2.r, color2.g, color2.b );

		// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );
		var c0 = Math.sqrt( Math.PI );
		var c1 = c0 * Math.sqrt( 0.75 );

		this.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );
		this.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );

	}

	HemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {

		constructor: HemisphereLightProbe,

		isHemisphereLightProbe: true,

		copy: function ( source ) { // modifying colors not currently supported

			LightProbe.prototype.copy.call( this, source );

			return this;

		},

		toJSON: function ( meta ) {

			var data = LightProbe.prototype.toJSON.call( this, meta );

			// data.sh = this.sh.toArray(); // todo

			return data;

		}

	} );

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function AmbientLightProbe( color, intensity ) {

		LightProbe.call( this, undefined, intensity );

		var color1 = new Color().set( color );

		// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );
		this.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );

	}

	AmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {

		constructor: AmbientLightProbe,

		isAmbientLightProbe: true,

		copy: function ( source ) { // modifying color not currently supported

			LightProbe.prototype.copy.call( this, source );

			return this;

		},

		toJSON: function ( meta ) {

			var data = LightProbe.prototype.toJSON.call( this, meta );

			// data.sh = this.sh.toArray(); // todo

			return data;

		}

	} );

	var _eyeRight = new Matrix4();
	var _eyeLeft = new Matrix4();

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function StereoCamera() {

		this.type = 'StereoCamera';

		this.aspect = 1;

		this.eyeSep = 0.064;

		this.cameraL = new PerspectiveCamera();
		this.cameraL.layers.enable( 1 );
		this.cameraL.matrixAutoUpdate = false;

		this.cameraR = new PerspectiveCamera();
		this.cameraR.layers.enable( 2 );
		this.cameraR.matrixAutoUpdate = false;

		this._cache = {
			focus: null,
			fov: null,
			aspect: null,
			near: null,
			far: null,
			zoom: null,
			eyeSep: null
		};

	}

	Object.assign( StereoCamera.prototype, {

		update: function ( camera ) {

			var cache = this._cache;

			var needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||
				cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||
				cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;

			if ( needsUpdate ) {

				cache.focus = camera.focus;
				cache.fov = camera.fov;
				cache.aspect = camera.aspect * this.aspect;
				cache.near = camera.near;
				cache.far = camera.far;
				cache.zoom = camera.zoom;
				cache.eyeSep = this.eyeSep;

				// Off-axis stereoscopic effect based on
				// http://paulbourke.net/stereographics/stereorender/

				var projectionMatrix = camera.projectionMatrix.clone();
				var eyeSepHalf = cache.eyeSep / 2;
				var eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;
				var ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;
				var xmin, xmax;

				// translate xOffset

				_eyeLeft.elements[ 12 ] = - eyeSepHalf;
				_eyeRight.elements[ 12 ] = eyeSepHalf;

				// for left eye

				xmin = - ymax * cache.aspect + eyeSepOnProjection;
				xmax = ymax * cache.aspect + eyeSepOnProjection;

				projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );
				projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

				this.cameraL.projectionMatrix.copy( projectionMatrix );

				// for right eye

				xmin = - ymax * cache.aspect - eyeSepOnProjection;
				xmax = ymax * cache.aspect - eyeSepOnProjection;

				projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );
				projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );

				this.cameraR.projectionMatrix.copy( projectionMatrix );

			}

			this.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );
			this.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function Clock( autoStart ) {

		this.autoStart = ( autoStart !== undefined ) ? autoStart : true;

		this.startTime = 0;
		this.oldTime = 0;
		this.elapsedTime = 0;

		this.running = false;

	}

	Object.assign( Clock.prototype, {

		start: function () {

			this.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732

			this.oldTime = this.startTime;
			this.elapsedTime = 0;
			this.running = true;

		},

		stop: function () {

			this.getElapsedTime();
			this.running = false;
			this.autoStart = false;

		},

		getElapsedTime: function () {

			this.getDelta();
			return this.elapsedTime;

		},

		getDelta: function () {

			var diff = 0;

			if ( this.autoStart && ! this.running ) {

				this.start();
				return 0;

			}

			if ( this.running ) {

				var newTime = ( typeof performance === 'undefined' ? Date : performance ).now();

				diff = ( newTime - this.oldTime ) / 1000;
				this.oldTime = newTime;

				this.elapsedTime += diff;

			}

			return diff;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _position$2 = new Vector3();
	var _quaternion$3 = new Quaternion();
	var _scale$1 = new Vector3();
	var _orientation = new Vector3();

	function AudioListener() {

		Object3D.call( this );

		this.type = 'AudioListener';

		this.context = AudioContext.getContext();

		this.gain = this.context.createGain();
		this.gain.connect( this.context.destination );

		this.filter = null;

		this.timeDelta = 0;

		// private

		this._clock = new Clock();

	}

	AudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: AudioListener,

		getInput: function () {

			return this.gain;

		},

		removeFilter: function ( ) {

			if ( this.filter !== null ) {

				this.gain.disconnect( this.filter );
				this.filter.disconnect( this.context.destination );
				this.gain.connect( this.context.destination );
				this.filter = null;

			}

			return this;

		},

		getFilter: function () {

			return this.filter;

		},

		setFilter: function ( value ) {

			if ( this.filter !== null ) {

				this.gain.disconnect( this.filter );
				this.filter.disconnect( this.context.destination );

			} else {

				this.gain.disconnect( this.context.destination );

			}

			this.filter = value;
			this.gain.connect( this.filter );
			this.filter.connect( this.context.destination );

			return this;

		},

		getMasterVolume: function () {

			return this.gain.gain.value;

		},

		setMasterVolume: function ( value ) {

			this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );

			return this;

		},

		updateMatrixWorld: function ( force ) {

			Object3D.prototype.updateMatrixWorld.call( this, force );

			var listener = this.context.listener;
			var up = this.up;

			this.timeDelta = this._clock.getDelta();

			this.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );

			_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );

			if ( listener.positionX ) {

				// code path for Chrome (see #14393)

				var endTime = this.context.currentTime + this.timeDelta;

				listener.positionX.linearRampToValueAtTime( _position$2.x, endTime );
				listener.positionY.linearRampToValueAtTime( _position$2.y, endTime );
				listener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );
				listener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );
				listener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );
				listener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );
				listener.upX.linearRampToValueAtTime( up.x, endTime );
				listener.upY.linearRampToValueAtTime( up.y, endTime );
				listener.upZ.linearRampToValueAtTime( up.z, endTime );

			} else {

				listener.setPosition( _position$2.x, _position$2.y, _position$2.z );
				listener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );

			}

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Reece Aaron Lecrivain / http://reecenotes.com/
	 */

	function Audio( listener ) {

		Object3D.call( this );

		this.type = 'Audio';

		this.listener = listener;
		this.context = listener.context;

		this.gain = this.context.createGain();
		this.gain.connect( listener.getInput() );

		this.autoplay = false;

		this.buffer = null;
		this.detune = 0;
		this.loop = false;
		this.loopStart = 0;
		this.loopEnd = 0;
		this.offset = 0;
		this.duration = undefined;
		this.playbackRate = 1;
		this.isPlaying = false;
		this.hasPlaybackControl = true;
		this.sourceType = 'empty';

		this._startedAt = 0;
		this._pausedAt = 0;

		this.filters = [];

	}

	Audio.prototype = Object.assign( Object.create( Object3D.prototype ), {

		constructor: Audio,

		getOutput: function () {

			return this.gain;

		},

		setNodeSource: function ( audioNode ) {

			this.hasPlaybackControl = false;
			this.sourceType = 'audioNode';
			this.source = audioNode;
			this.connect();

			return this;

		},

		setMediaElementSource: function ( mediaElement ) {

			this.hasPlaybackControl = false;
			this.sourceType = 'mediaNode';
			this.source = this.context.createMediaElementSource( mediaElement );
			this.connect();

			return this;

		},

		setMediaStreamSource: function ( mediaStream ) {

			this.hasPlaybackControl = false;
			this.sourceType = 'mediaStreamNode';
			this.source = this.context.createMediaStreamSource( mediaStream );
			this.connect();

			return this;

		},

		setBuffer: function ( audioBuffer ) {

			this.buffer = audioBuffer;
			this.sourceType = 'buffer';

			if ( this.autoplay ) { this.play(); }

			return this;

		},

		play: function ( delay ) {

			if ( delay === undefined ) { delay = 0; }

			if ( this.isPlaying === true ) {

				console.warn( 'THREE.Audio: Audio is already playing.' );
				return;

			}

			if ( this.hasPlaybackControl === false ) {

				console.warn( 'THREE.Audio: this Audio has no playback control.' );
				return;

			}

			this._startedAt = this.context.currentTime + delay;

			var source = this.context.createBufferSource();
			source.buffer = this.buffer;
			source.loop = this.loop;
			source.loopStart = this.loopStart;
			source.loopEnd = this.loopEnd;
			source.onended = this.onEnded.bind( this );
			source.start( this._startedAt, this._pausedAt + this.offset, this.duration );

			this.isPlaying = true;

			this.source = source;

			this.setDetune( this.detune );
			this.setPlaybackRate( this.playbackRate );

			return this.connect();

		},

		pause: function () {

			if ( this.hasPlaybackControl === false ) {

				console.warn( 'THREE.Audio: this Audio has no playback control.' );
				return;

			}

			if ( this.isPlaying === true ) {

				this._pausedAt += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;

				this.source.stop();
				this.source.onended = null;

				this.isPlaying = false;

			}

			return this;

		},

		stop: function () {

			if ( this.hasPlaybackControl === false ) {

				console.warn( 'THREE.Audio: this Audio has no playback control.' );
				return;

			}

			this._pausedAt = 0;

			this.source.stop();
			this.source.onended = null;
			this.isPlaying = false;

			return this;

		},

		connect: function () {

			if ( this.filters.length > 0 ) {

				this.source.connect( this.filters[ 0 ] );

				for ( var i = 1, l = this.filters.length; i < l; i ++ ) {

					this.filters[ i - 1 ].connect( this.filters[ i ] );

				}

				this.filters[ this.filters.length - 1 ].connect( this.getOutput() );

			} else {

				this.source.connect( this.getOutput() );

			}

			return this;

		},

		disconnect: function () {

			if ( this.filters.length > 0 ) {

				this.source.disconnect( this.filters[ 0 ] );

				for ( var i = 1, l = this.filters.length; i < l; i ++ ) {

					this.filters[ i - 1 ].disconnect( this.filters[ i ] );

				}

				this.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );

			} else {

				this.source.disconnect( this.getOutput() );

			}

			return this;

		},

		getFilters: function () {

			return this.filters;

		},

		setFilters: function ( value ) {

			if ( ! value ) { value = []; }

			if ( this.isPlaying === true ) {

				this.disconnect();
				this.filters = value;
				this.connect();

			} else {

				this.filters = value;

			}

			return this;

		},

		setDetune: function ( value ) {

			this.detune = value;

			if ( this.source.detune === undefined ) { return; } // only set detune when available

			if ( this.isPlaying === true ) {

				this.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );

			}

			return this;

		},

		getDetune: function () {

			return this.detune;

		},

		getFilter: function () {

			return this.getFilters()[ 0 ];

		},

		setFilter: function ( filter ) {

			return this.setFilters( filter ? [ filter ] : [] );

		},

		setPlaybackRate: function ( value ) {

			if ( this.hasPlaybackControl === false ) {

				console.warn( 'THREE.Audio: this Audio has no playback control.' );
				return;

			}

			this.playbackRate = value;

			if ( this.isPlaying === true ) {

				this.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );

			}

			return this;

		},

		getPlaybackRate: function () {

			return this.playbackRate;

		},

		onEnded: function () {

			this.isPlaying = false;

		},

		getLoop: function () {

			if ( this.hasPlaybackControl === false ) {

				console.warn( 'THREE.Audio: this Audio has no playback control.' );
				return false;

			}

			return this.loop;

		},

		setLoop: function ( value ) {

			if ( this.hasPlaybackControl === false ) {

				console.warn( 'THREE.Audio: this Audio has no playback control.' );
				return;

			}

			this.loop = value;

			if ( this.isPlaying === true ) {

				this.source.loop = this.loop;

			}

			return this;

		},

		setLoopStart: function ( value ) {

			this.loopStart = value;

			return this;

		},

		setLoopEnd: function ( value ) {

			this.loopEnd = value;

			return this;

		},

		getVolume: function () {

			return this.gain.gain.value;

		},

		setVolume: function ( value ) {

			this.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	var _position$3 = new Vector3();
	var _quaternion$4 = new Quaternion();
	var _scale$2 = new Vector3();
	var _orientation$1 = new Vector3();

	function PositionalAudio( listener ) {

		Audio.call( this, listener );

		this.panner = this.context.createPanner();
		this.panner.panningModel = 'HRTF';
		this.panner.connect( this.gain );

	}

	PositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {

		constructor: PositionalAudio,

		getOutput: function () {

			return this.panner;

		},

		getRefDistance: function () {

			return this.panner.refDistance;

		},

		setRefDistance: function ( value ) {

			this.panner.refDistance = value;

			return this;

		},

		getRolloffFactor: function () {

			return this.panner.rolloffFactor;

		},

		setRolloffFactor: function ( value ) {

			this.panner.rolloffFactor = value;

			return this;

		},

		getDistanceModel: function () {

			return this.panner.distanceModel;

		},

		setDistanceModel: function ( value ) {

			this.panner.distanceModel = value;

			return this;

		},

		getMaxDistance: function () {

			return this.panner.maxDistance;

		},

		setMaxDistance: function ( value ) {

			this.panner.maxDistance = value;

			return this;

		},

		setDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {

			this.panner.coneInnerAngle = coneInnerAngle;
			this.panner.coneOuterAngle = coneOuterAngle;
			this.panner.coneOuterGain = coneOuterGain;

			return this;

		},

		updateMatrixWorld: function ( force ) {

			Object3D.prototype.updateMatrixWorld.call( this, force );

			if ( this.hasPlaybackControl === true && this.isPlaying === false ) { return; }

			this.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );

			_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );

			var panner = this.panner;

			if ( panner.positionX ) {

				// code path for Chrome and Firefox (see #14393)

				var endTime = this.context.currentTime + this.listener.timeDelta;

				panner.positionX.linearRampToValueAtTime( _position$3.x, endTime );
				panner.positionY.linearRampToValueAtTime( _position$3.y, endTime );
				panner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );
				panner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );
				panner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );
				panner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );

			} else {

				panner.setPosition( _position$3.x, _position$3.y, _position$3.z );
				panner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );

			}

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function AudioAnalyser( audio, fftSize ) {

		this.analyser = audio.context.createAnalyser();
		this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;

		this.data = new Uint8Array( this.analyser.frequencyBinCount );

		audio.getOutput().connect( this.analyser );

	}

	Object.assign( AudioAnalyser.prototype, {

		getFrequencyData: function () {

			this.analyser.getByteFrequencyData( this.data );

			return this.data;

		},

		getAverageFrequency: function () {

			var value = 0, data = this.getFrequencyData();

			for ( var i = 0; i < data.length; i ++ ) {

				value += data[ i ];

			}

			return value / data.length;

		}

	} );

	/**
	 *
	 * Buffered scene graph property that allows weighted accumulation.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function PropertyMixer( binding, typeName, valueSize ) {

		this.binding = binding;
		this.valueSize = valueSize;

		var bufferType = Float64Array,
			mixFunction;

		switch ( typeName ) {

			case 'quaternion':
				mixFunction = this._slerp;
				break;

			case 'string':
			case 'bool':
				bufferType = Array;
				mixFunction = this._select;
				break;

			default:
				mixFunction = this._lerp;

		}

		this.buffer = new bufferType( valueSize * 4 );
		// layout: [ incoming | accu0 | accu1 | orig ]
		//
		// interpolators can use .buffer as their .result
		// the data then goes to 'incoming'
		//
		// 'accu0' and 'accu1' are used frame-interleaved for
		// the cumulative result and are compared to detect
		// changes
		//
		// 'orig' stores the original state of the property

		this._mixBufferRegion = mixFunction;

		this.cumulativeWeight = 0;

		this.useCount = 0;
		this.referenceCount = 0;

	}

	Object.assign( PropertyMixer.prototype, {

		// accumulate data in the 'incoming' region into 'accu<i>'
		accumulate: function ( accuIndex, weight ) {

			// note: happily accumulating nothing when weight = 0, the caller knows
			// the weight and shouldn't have made the call in the first place

			var buffer = this.buffer,
				stride = this.valueSize,
				offset = accuIndex * stride + stride,

				currentWeight = this.cumulativeWeight;

			if ( currentWeight === 0 ) {

				// accuN := incoming * weight

				for ( var i = 0; i !== stride; ++ i ) {

					buffer[ offset + i ] = buffer[ i ];

				}

				currentWeight = weight;

			} else {

				// accuN := accuN + incoming * weight

				currentWeight += weight;
				var mix = weight / currentWeight;
				this._mixBufferRegion( buffer, offset, 0, mix, stride );

			}

			this.cumulativeWeight = currentWeight;

		},

		// apply the state of 'accu<i>' to the binding when accus differ
		apply: function ( accuIndex ) {

			var stride = this.valueSize,
				buffer = this.buffer,
				offset = accuIndex * stride + stride,

				weight = this.cumulativeWeight,

				binding = this.binding;

			this.cumulativeWeight = 0;

			if ( weight < 1 ) {

				// accuN := accuN + original * ( 1 - cumulativeWeight )

				var originalValueOffset = stride * 3;

				this._mixBufferRegion(
					buffer, offset, originalValueOffset, 1 - weight, stride );

			}

			for ( var i = stride, e = stride + stride; i !== e; ++ i ) {

				if ( buffer[ i ] !== buffer[ i + stride ] ) {

					// value has changed -> update scene graph

					binding.setValue( buffer, offset );
					break;

				}

			}

		},

		// remember the state of the bound property and copy it to both accus
		saveOriginalState: function () {

			var binding = this.binding;

			var buffer = this.buffer,
				stride = this.valueSize,

				originalValueOffset = stride * 3;

			binding.getValue( buffer, originalValueOffset );

			// accu[0..1] := orig -- initially detect changes against the original
			for ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {

				buffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];

			}

			this.cumulativeWeight = 0;

		},

		// apply the state previously taken via 'saveOriginalState' to the binding
		restoreOriginalState: function () {

			var originalValueOffset = this.valueSize * 3;
			this.binding.setValue( this.buffer, originalValueOffset );

		},


		// mix functions

		_select: function ( buffer, dstOffset, srcOffset, t, stride ) {

			if ( t >= 0.5 ) {

				for ( var i = 0; i !== stride; ++ i ) {

					buffer[ dstOffset + i ] = buffer[ srcOffset + i ];

				}

			}

		},

		_slerp: function ( buffer, dstOffset, srcOffset, t ) {

			Quaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );

		},

		_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {

			var s = 1 - t;

			for ( var i = 0; i !== stride; ++ i ) {

				var j = dstOffset + i;

				buffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;

			}

		}

	} );

	/**
	 *
	 * A reference to a real property in the scene graph.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	// Characters [].:/ are reserved for track binding syntax.
	var _RESERVED_CHARS_RE = '\\[\\]\\.:\\/';
	var _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );

	// Attempts to allow node names from any language. ES5's `\w` regexp matches
	// only latin characters, and the unicode \p{L} is not yet supported. So
	// instead, we exclude reserved characters and match everything else.
	var _wordChar = '[^' + _RESERVED_CHARS_RE + ']';
	var _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\.', '' ) + ']';

	// Parent directories, delimited by '/' or ':'. Currently unused, but must
	// be matched to parse the rest of the track name.
	var _directoryRe = /((?:WC+[\/:])*)/.source.replace( 'WC', _wordChar );

	// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.
	var _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );

	// Object on target node, and accessor. May not contain reserved
	// characters. Accessor may contain any character except closing bracket.
	var _objectRe = /(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace( 'WC', _wordChar );

	// Property and accessor. May not contain reserved characters. Accessor may
	// contain any non-bracket characters.
	var _propertyRe = /\.(WC+)(?:\[(.+)\])?/.source.replace( 'WC', _wordChar );

	var _trackRe = new RegExp( ''
		+ '^'
		+ _directoryRe
		+ _nodeRe
		+ _objectRe
		+ _propertyRe
		+ '$'
	);

	var _supportedObjectNames = [ 'material', 'materials', 'bones' ];

	function Composite( targetGroup, path, optionalParsedPath ) {

		var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );

		this._targetGroup = targetGroup;
		this._bindings = targetGroup.subscribe_( path, parsedPath );

	}

	Object.assign( Composite.prototype, {

		getValue: function ( array, offset ) {

			this.bind(); // bind all binding

			var firstValidIndex = this._targetGroup.nCachedObjects_,
				binding = this._bindings[ firstValidIndex ];

			// and only call .getValue on the first
			if ( binding !== undefined ) { binding.getValue( array, offset ); }

		},

		setValue: function ( array, offset ) {

			var bindings = this._bindings;

			for ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

				bindings[ i ].setValue( array, offset );

			}

		},

		bind: function () {

			var bindings = this._bindings;

			for ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

				bindings[ i ].bind();

			}

		},

		unbind: function () {

			var bindings = this._bindings;

			for ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {

				bindings[ i ].unbind();

			}

		}

	} );


	function PropertyBinding( rootNode, path, parsedPath ) {

		this.path = path;
		this.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );

		this.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;

		this.rootNode = rootNode;

	}

	Object.assign( PropertyBinding, {

		Composite: Composite,

		create: function ( root, path, parsedPath ) {

			if ( ! ( root && root.isAnimationObjectGroup ) ) {

				return new PropertyBinding( root, path, parsedPath );

			} else {

				return new PropertyBinding.Composite( root, path, parsedPath );

			}

		},

		/**
		 * Replaces spaces with underscores and removes unsupported characters from
		 * node names, to ensure compatibility with parseTrackName().
		 *
		 * @param {string} name Node name to be sanitized.
		 * @return {string}
		 */
		sanitizeNodeName: function ( name ) {

			return name.replace( /\s/g, '_' ).replace( _reservedRe, '' );

		},

		parseTrackName: function ( trackName ) {

			var matches = _trackRe.exec( trackName );

			if ( ! matches ) {

				throw new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );

			}

			var results = {
				// directoryName: matches[ 1 ], // (tschw) currently unused
				nodeName: matches[ 2 ],
				objectName: matches[ 3 ],
				objectIndex: matches[ 4 ],
				propertyName: matches[ 5 ], // required
				propertyIndex: matches[ 6 ]
			};

			var lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );

			if ( lastDot !== undefined && lastDot !== - 1 ) {

				var objectName = results.nodeName.substring( lastDot + 1 );

				// Object names must be checked against a whitelist. Otherwise, there
				// is no way to parse 'foo.bar.baz': 'baz' must be a property, but
				// 'bar' could be the objectName, or part of a nodeName (which can
				// include '.' characters).
				if ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {

					results.nodeName = results.nodeName.substring( 0, lastDot );
					results.objectName = objectName;

				}

			}

			if ( results.propertyName === null || results.propertyName.length === 0 ) {

				throw new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );

			}

			return results;

		},

		findNode: function ( root, nodeName ) {

			if ( ! nodeName || nodeName === "" || nodeName === "." || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {

				return root;

			}

			// search into skeleton bones.
			if ( root.skeleton ) {

				var bone = root.skeleton.getBoneByName( nodeName );

				if ( bone !== undefined ) {

					return bone;

				}

			}

			// search into node subtree.
			if ( root.children ) {

				var searchNodeSubtree = function ( children ) {

					for ( var i = 0; i < children.length; i ++ ) {

						var childNode = children[ i ];

						if ( childNode.name === nodeName || childNode.uuid === nodeName ) {

							return childNode;

						}

						var result = searchNodeSubtree( childNode.children );

						if ( result ) { return result; }

					}

					return null;

				};

				var subTreeNode = searchNodeSubtree( root.children );

				if ( subTreeNode ) {

					return subTreeNode;

				}

			}

			return null;

		}

	} );

	Object.assign( PropertyBinding.prototype, { // prototype, continued

		// these are used to "bind" a nonexistent property
		_getValue_unavailable: function () {},
		_setValue_unavailable: function () {},

		BindingType: {
			Direct: 0,
			EntireArray: 1,
			ArrayElement: 2,
			HasFromToArray: 3
		},

		Versioning: {
			None: 0,
			NeedsUpdate: 1,
			MatrixWorldNeedsUpdate: 2
		},

		GetterByBindingType: [

			function getValue_direct( buffer, offset ) {

				buffer[ offset ] = this.node[ this.propertyName ];

			},

			function getValue_array( buffer, offset ) {

				var source = this.resolvedProperty;

				for ( var i = 0, n = source.length; i !== n; ++ i ) {

					buffer[ offset ++ ] = source[ i ];

				}

			},

			function getValue_arrayElement( buffer, offset ) {

				buffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];

			},

			function getValue_toArray( buffer, offset ) {

				this.resolvedProperty.toArray( buffer, offset );

			}

		],

		SetterByBindingTypeAndVersioning: [

			[
				// Direct

				function setValue_direct( buffer, offset ) {

					this.targetObject[ this.propertyName ] = buffer[ offset ];

				},

				function setValue_direct_setNeedsUpdate( buffer, offset ) {

					this.targetObject[ this.propertyName ] = buffer[ offset ];
					this.targetObject.needsUpdate = true;

				},

				function setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {

					this.targetObject[ this.propertyName ] = buffer[ offset ];
					this.targetObject.matrixWorldNeedsUpdate = true;

				}

			], [

				// EntireArray

				function setValue_array( buffer, offset ) {

					var dest = this.resolvedProperty;

					for ( var i = 0, n = dest.length; i !== n; ++ i ) {

						dest[ i ] = buffer[ offset ++ ];

					}

				},

				function setValue_array_setNeedsUpdate( buffer, offset ) {

					var dest = this.resolvedProperty;

					for ( var i = 0, n = dest.length; i !== n; ++ i ) {

						dest[ i ] = buffer[ offset ++ ];

					}

					this.targetObject.needsUpdate = true;

				},

				function setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {

					var dest = this.resolvedProperty;

					for ( var i = 0, n = dest.length; i !== n; ++ i ) {

						dest[ i ] = buffer[ offset ++ ];

					}

					this.targetObject.matrixWorldNeedsUpdate = true;

				}

			], [

				// ArrayElement

				function setValue_arrayElement( buffer, offset ) {

					this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];

				},

				function setValue_arrayElement_setNeedsUpdate( buffer, offset ) {

					this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
					this.targetObject.needsUpdate = true;

				},

				function setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {

					this.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];
					this.targetObject.matrixWorldNeedsUpdate = true;

				}

			], [

				// HasToFromArray

				function setValue_fromArray( buffer, offset ) {

					this.resolvedProperty.fromArray( buffer, offset );

				},

				function setValue_fromArray_setNeedsUpdate( buffer, offset ) {

					this.resolvedProperty.fromArray( buffer, offset );
					this.targetObject.needsUpdate = true;

				},

				function setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {

					this.resolvedProperty.fromArray( buffer, offset );
					this.targetObject.matrixWorldNeedsUpdate = true;

				}

			]

		],

		getValue: function getValue_unbound( targetArray, offset ) {

			this.bind();
			this.getValue( targetArray, offset );

			// Note: This class uses a State pattern on a per-method basis:
			// 'bind' sets 'this.getValue' / 'setValue' and shadows the
			// prototype version of these methods with one that represents
			// the bound state. When the property is not found, the methods
			// become no-ops.

		},

		setValue: function getValue_unbound( sourceArray, offset ) {

			this.bind();
			this.setValue( sourceArray, offset );

		},

		// create getter / setter pair for a property in the scene graph
		bind: function () {

			var targetObject = this.node,
				parsedPath = this.parsedPath,

				objectName = parsedPath.objectName,
				propertyName = parsedPath.propertyName,
				propertyIndex = parsedPath.propertyIndex;

			if ( ! targetObject ) {

				targetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;

				this.node = targetObject;

			}

			// set fail state so we can just 'return' on error
			this.getValue = this._getValue_unavailable;
			this.setValue = this._setValue_unavailable;

			// ensure there is a value node
			if ( ! targetObject ) {

				console.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\'t found.' );
				return;

			}

			if ( objectName ) {

				var objectIndex = parsedPath.objectIndex;

				// special cases were we need to reach deeper into the hierarchy to get the face materials....
				switch ( objectName ) {

					case 'materials':

						if ( ! targetObject.material ) {

							console.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );
							return;

						}

						if ( ! targetObject.material.materials ) {

							console.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );
							return;

						}

						targetObject = targetObject.material.materials;

						break;

					case 'bones':

						if ( ! targetObject.skeleton ) {

							console.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );
							return;

						}

						// potential future optimization: skip this if propertyIndex is already an integer
						// and convert the integer string to a true integer.

						targetObject = targetObject.skeleton.bones;

						// support resolving morphTarget names into indices.
						for ( var i = 0; i < targetObject.length; i ++ ) {

							if ( targetObject[ i ].name === objectIndex ) {

								objectIndex = i;
								break;

							}

						}

						break;

					default:

						if ( targetObject[ objectName ] === undefined ) {

							console.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );
							return;

						}

						targetObject = targetObject[ objectName ];

				}


				if ( objectIndex !== undefined ) {

					if ( targetObject[ objectIndex ] === undefined ) {

						console.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );
						return;

					}

					targetObject = targetObject[ objectIndex ];

				}

			}

			// resolve property
			var nodeProperty = targetObject[ propertyName ];

			if ( nodeProperty === undefined ) {

				var nodeName = parsedPath.nodeName;

				console.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +
					'.' + propertyName + ' but it wasn\'t found.', targetObject );
				return;

			}

			// determine versioning scheme
			var versioning = this.Versioning.None;

			this.targetObject = targetObject;

			if ( targetObject.needsUpdate !== undefined ) { // material

				versioning = this.Versioning.NeedsUpdate;

			} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform

				versioning = this.Versioning.MatrixWorldNeedsUpdate;

			}

			// determine how the property gets bound
			var bindingType = this.BindingType.Direct;

			if ( propertyIndex !== undefined ) {

				// access a sub element of the property array (only primitives are supported right now)

				if ( propertyName === "morphTargetInfluences" ) {

					// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.

					// support resolving morphTarget names into indices.
					if ( ! targetObject.geometry ) {

						console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );
						return;

					}

					if ( targetObject.geometry.isBufferGeometry ) {

						if ( ! targetObject.geometry.morphAttributes ) {

							console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );
							return;

						}

						for ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {

							if ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {

								propertyIndex = i;
								break;

							}

						}


					} else {

						if ( ! targetObject.geometry.morphTargets ) {

							console.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );
							return;

						}

						for ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {

							if ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {

								propertyIndex = i;
								break;

							}

						}

					}

				}

				bindingType = this.BindingType.ArrayElement;

				this.resolvedProperty = nodeProperty;
				this.propertyIndex = propertyIndex;

			} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {

				// must use copy for Object3D.Euler/Quaternion

				bindingType = this.BindingType.HasFromToArray;

				this.resolvedProperty = nodeProperty;

			} else if ( Array.isArray( nodeProperty ) ) {

				bindingType = this.BindingType.EntireArray;

				this.resolvedProperty = nodeProperty;

			} else {

				this.propertyName = propertyName;

			}

			// select getter / setter
			this.getValue = this.GetterByBindingType[ bindingType ];
			this.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];

		},

		unbind: function () {

			this.node = null;

			// back to the prototype version of getValue / setValue
			// note: avoiding to mutate the shape of 'this' via 'delete'
			this.getValue = this._getValue_unbound;
			this.setValue = this._setValue_unbound;

		}

	} );

	// DECLARE ALIAS AFTER assign prototype
	Object.assign( PropertyBinding.prototype, {

		// initial state of these methods that calls 'bind'
		_getValue_unbound: PropertyBinding.prototype.getValue,
		_setValue_unbound: PropertyBinding.prototype.setValue,

	} );

	/**
	 *
	 * A group of objects that receives a shared animation state.
	 *
	 * Usage:
	 *
	 *  - Add objects you would otherwise pass as 'root' to the
	 *    constructor or the .clipAction method of AnimationMixer.
	 *
	 *  - Instead pass this object as 'root'.
	 *
	 *  - You can also add and remove objects later when the mixer
	 *    is running.
	 *
	 * Note:
	 *
	 *    Objects of this class appear as one object to the mixer,
	 *    so cache control of the individual objects must be done
	 *    on the group.
	 *
	 * Limitation:
	 *
	 *  - The animated properties must be compatible among the
	 *    all objects in the group.
	 *
	 *  - A single property can either be controlled through a
	 *    target group or directly, but not both.
	 *
	 * @author tschw
	 */

	function AnimationObjectGroup() {

		this.uuid = MathUtils.generateUUID();

		// cached objects followed by the active ones
		this._objects = Array.prototype.slice.call( arguments );

		this.nCachedObjects_ = 0; // threshold
		// note: read by PropertyBinding.Composite

		var indices = {};
		this._indicesByUUID = indices; // for bookkeeping

		for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

			indices[ arguments[ i ].uuid ] = i;

		}

		this._paths = []; // inside: string
		this._parsedPaths = []; // inside: { we don't care, here }
		this._bindings = []; // inside: Array< PropertyBinding >
		this._bindingsIndicesByPath = {}; // inside: indices in these arrays

		var scope = this;

		this.stats = {

			objects: {
				get total() {

					return scope._objects.length;

				},
				get inUse() {

					return this.total - scope.nCachedObjects_;

				}
			},
			get bindingsPerObject() {

				return scope._bindings.length;

			}

		};

	}

	Object.assign( AnimationObjectGroup.prototype, {

		isAnimationObjectGroup: true,

		add: function () {

			var objects = this._objects,
				nObjects = objects.length,
				nCachedObjects = this.nCachedObjects_,
				indicesByUUID = this._indicesByUUID,
				paths = this._paths,
				parsedPaths = this._parsedPaths,
				bindings = this._bindings,
				nBindings = bindings.length,
				knownObject = undefined;

			for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

				var object = arguments[ i ],
					uuid = object.uuid,
					index = indicesByUUID[ uuid ];

				if ( index === undefined ) {

					// unknown object -> add it to the ACTIVE region

					index = nObjects ++;
					indicesByUUID[ uuid ] = index;
					objects.push( object );

					// accounting is done, now do the same for all bindings

					for ( var j = 0, m = nBindings; j !== m; ++ j ) {

						bindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );

					}

				} else if ( index < nCachedObjects ) {

					knownObject = objects[ index ];

					// move existing object to the ACTIVE region

					var firstActiveIndex = -- nCachedObjects,
						lastCachedObject = objects[ firstActiveIndex ];

					indicesByUUID[ lastCachedObject.uuid ] = index;
					objects[ index ] = lastCachedObject;

					indicesByUUID[ uuid ] = firstActiveIndex;
					objects[ firstActiveIndex ] = object;

					// accounting is done, now do the same for all bindings

					for ( var j = 0, m = nBindings; j !== m; ++ j ) {

						var bindingsForPath = bindings[ j ],
							lastCached = bindingsForPath[ firstActiveIndex ],
							binding = bindingsForPath[ index ];

						bindingsForPath[ index ] = lastCached;

						if ( binding === undefined ) {

							// since we do not bother to create new bindings
							// for objects that are cached, the binding may
							// or may not exist

							binding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );

						}

						bindingsForPath[ firstActiveIndex ] = binding;

					}

				} else if ( objects[ index ] !== knownObject ) {

					console.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +
						'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );

				} // else the object is already where we want it to be

			} // for arguments

			this.nCachedObjects_ = nCachedObjects;

		},

		remove: function () {

			var objects = this._objects,
				nCachedObjects = this.nCachedObjects_,
				indicesByUUID = this._indicesByUUID,
				bindings = this._bindings,
				nBindings = bindings.length;

			for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

				var object = arguments[ i ],
					uuid = object.uuid,
					index = indicesByUUID[ uuid ];

				if ( index !== undefined && index >= nCachedObjects ) {

					// move existing object into the CACHED region

					var lastCachedIndex = nCachedObjects ++,
						firstActiveObject = objects[ lastCachedIndex ];

					indicesByUUID[ firstActiveObject.uuid ] = index;
					objects[ index ] = firstActiveObject;

					indicesByUUID[ uuid ] = lastCachedIndex;
					objects[ lastCachedIndex ] = object;

					// accounting is done, now do the same for all bindings

					for ( var j = 0, m = nBindings; j !== m; ++ j ) {

						var bindingsForPath = bindings[ j ],
							firstActive = bindingsForPath[ lastCachedIndex ],
							binding = bindingsForPath[ index ];

						bindingsForPath[ index ] = firstActive;
						bindingsForPath[ lastCachedIndex ] = binding;

					}

				}

			} // for arguments

			this.nCachedObjects_ = nCachedObjects;

		},

		// remove & forget
		uncache: function () {

			var objects = this._objects,
				nObjects = objects.length,
				nCachedObjects = this.nCachedObjects_,
				indicesByUUID = this._indicesByUUID,
				bindings = this._bindings,
				nBindings = bindings.length;

			for ( var i = 0, n = arguments.length; i !== n; ++ i ) {

				var object = arguments[ i ],
					uuid = object.uuid,
					index = indicesByUUID[ uuid ];

				if ( index !== undefined ) {

					delete indicesByUUID[ uuid ];

					if ( index < nCachedObjects ) {

						// object is cached, shrink the CACHED region

						var firstActiveIndex = -- nCachedObjects,
							lastCachedObject = objects[ firstActiveIndex ],
							lastIndex = -- nObjects,
							lastObject = objects[ lastIndex ];

						// last cached object takes this object's place
						indicesByUUID[ lastCachedObject.uuid ] = index;
						objects[ index ] = lastCachedObject;

						// last object goes to the activated slot and pop
						indicesByUUID[ lastObject.uuid ] = firstActiveIndex;
						objects[ firstActiveIndex ] = lastObject;
						objects.pop();

						// accounting is done, now do the same for all bindings

						for ( var j = 0, m = nBindings; j !== m; ++ j ) {

							var bindingsForPath = bindings[ j ],
								lastCached = bindingsForPath[ firstActiveIndex ],
								last = bindingsForPath[ lastIndex ];

							bindingsForPath[ index ] = lastCached;
							bindingsForPath[ firstActiveIndex ] = last;
							bindingsForPath.pop();

						}

					} else {

						// object is active, just swap with the last and pop

						var lastIndex = -- nObjects,
							lastObject = objects[ lastIndex ];

						indicesByUUID[ lastObject.uuid ] = index;
						objects[ index ] = lastObject;
						objects.pop();

						// accounting is done, now do the same for all bindings

						for ( var j = 0, m = nBindings; j !== m; ++ j ) {

							var bindingsForPath = bindings[ j ];

							bindingsForPath[ index ] = bindingsForPath[ lastIndex ];
							bindingsForPath.pop();

						}

					} // cached or active

				} // if object is known

			} // for arguments

			this.nCachedObjects_ = nCachedObjects;

		},

		// Internal interface used by befriended PropertyBinding.Composite:

		subscribe_: function ( path, parsedPath ) {

			// returns an array of bindings for the given path that is changed
			// according to the contained objects in the group

			var indicesByPath = this._bindingsIndicesByPath,
				index = indicesByPath[ path ],
				bindings = this._bindings;

			if ( index !== undefined ) { return bindings[ index ]; }

			var paths = this._paths,
				parsedPaths = this._parsedPaths,
				objects = this._objects,
				nObjects = objects.length,
				nCachedObjects = this.nCachedObjects_,
				bindingsForPath = new Array( nObjects );

			index = bindings.length;

			indicesByPath[ path ] = index;

			paths.push( path );
			parsedPaths.push( parsedPath );
			bindings.push( bindingsForPath );

			for ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {

				var object = objects[ i ];
				bindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );

			}

			return bindingsForPath;

		},

		unsubscribe_: function ( path ) {

			// tells the group to forget about a property path and no longer
			// update the array previously obtained with 'subscribe_'

			var indicesByPath = this._bindingsIndicesByPath,
				index = indicesByPath[ path ];

			if ( index !== undefined ) {

				var paths = this._paths,
					parsedPaths = this._parsedPaths,
					bindings = this._bindings,
					lastBindingsIndex = bindings.length - 1,
					lastBindings = bindings[ lastBindingsIndex ],
					lastBindingsPath = path[ lastBindingsIndex ];

				indicesByPath[ lastBindingsPath ] = index;

				bindings[ index ] = lastBindings;
				bindings.pop();

				parsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];
				parsedPaths.pop();

				paths[ index ] = paths[ lastBindingsIndex ];
				paths.pop();

			}

		}

	} );

	/**
	 *
	 * Action provided by AnimationMixer for scheduling clip playback on specific
	 * objects.
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 *
	 */

	function AnimationAction( mixer, clip, localRoot ) {

		this._mixer = mixer;
		this._clip = clip;
		this._localRoot = localRoot || null;

		var tracks = clip.tracks,
			nTracks = tracks.length,
			interpolants = new Array( nTracks );

		var interpolantSettings = {
			endingStart: ZeroCurvatureEnding,
			endingEnd: ZeroCurvatureEnding
		};

		for ( var i = 0; i !== nTracks; ++ i ) {

			var interpolant = tracks[ i ].createInterpolant( null );
			interpolants[ i ] = interpolant;
			interpolant.settings = interpolantSettings;

		}

		this._interpolantSettings = interpolantSettings;

		this._interpolants = interpolants; // bound by the mixer

		// inside: PropertyMixer (managed by the mixer)
		this._propertyBindings = new Array( nTracks );

		this._cacheIndex = null; // for the memory manager
		this._byClipCacheIndex = null; // for the memory manager

		this._timeScaleInterpolant = null;
		this._weightInterpolant = null;

		this.loop = LoopRepeat;
		this._loopCount = - 1;

		// global mixer time when the action is to be started
		// it's set back to 'null' upon start of the action
		this._startTime = null;

		// scaled local time of the action
		// gets clamped or wrapped to 0..clip.duration according to loop
		this.time = 0;

		this.timeScale = 1;
		this._effectiveTimeScale = 1;

		this.weight = 1;
		this._effectiveWeight = 1;

		this.repetitions = Infinity; // no. of repetitions when looping

		this.paused = false; // true -> zero effective time scale
		this.enabled = true; // false -> zero effective weight

		this.clampWhenFinished = false;// keep feeding the last frame?

		this.zeroSlopeAtStart = true;// for smooth interpolation w/o separate
		this.zeroSlopeAtEnd = true;// clips for start, loop and end

	}

	Object.assign( AnimationAction.prototype, {

		// State & Scheduling

		play: function () {

			this._mixer._activateAction( this );

			return this;

		},

		stop: function () {

			this._mixer._deactivateAction( this );

			return this.reset();

		},

		reset: function () {

			this.paused = false;
			this.enabled = true;

			this.time = 0; // restart clip
			this._loopCount = - 1;// forget previous loops
			this._startTime = null;// forget scheduling

			return this.stopFading().stopWarping();

		},

		isRunning: function () {

			return this.enabled && ! this.paused && this.timeScale !== 0 &&
				this._startTime === null && this._mixer._isActiveAction( this );

		},

		// return true when play has been called
		isScheduled: function () {

			return this._mixer._isActiveAction( this );

		},

		startAt: function ( time ) {

			this._startTime = time;

			return this;

		},

		setLoop: function ( mode, repetitions ) {

			this.loop = mode;
			this.repetitions = repetitions;

			return this;

		},

		// Weight

		// set the weight stopping any scheduled fading
		// although .enabled = false yields an effective weight of zero, this
		// method does *not* change .enabled, because it would be confusing
		setEffectiveWeight: function ( weight ) {

			this.weight = weight;

			// note: same logic as when updated at runtime
			this._effectiveWeight = this.enabled ? weight : 0;

			return this.stopFading();

		},

		// return the weight considering fading and .enabled
		getEffectiveWeight: function () {

			return this._effectiveWeight;

		},

		fadeIn: function ( duration ) {

			return this._scheduleFading( duration, 0, 1 );

		},

		fadeOut: function ( duration ) {

			return this._scheduleFading( duration, 1, 0 );

		},

		crossFadeFrom: function ( fadeOutAction, duration, warp ) {

			fadeOutAction.fadeOut( duration );
			this.fadeIn( duration );

			if ( warp ) {

				var fadeInDuration = this._clip.duration,
					fadeOutDuration = fadeOutAction._clip.duration,

					startEndRatio = fadeOutDuration / fadeInDuration,
					endStartRatio = fadeInDuration / fadeOutDuration;

				fadeOutAction.warp( 1.0, startEndRatio, duration );
				this.warp( endStartRatio, 1.0, duration );

			}

			return this;

		},

		crossFadeTo: function ( fadeInAction, duration, warp ) {

			return fadeInAction.crossFadeFrom( this, duration, warp );

		},

		stopFading: function () {

			var weightInterpolant = this._weightInterpolant;

			if ( weightInterpolant !== null ) {

				this._weightInterpolant = null;
				this._mixer._takeBackControlInterpolant( weightInterpolant );

			}

			return this;

		},

		// Time Scale Control

		// set the time scale stopping any scheduled warping
		// although .paused = true yields an effective time scale of zero, this
		// method does *not* change .paused, because it would be confusing
		setEffectiveTimeScale: function ( timeScale ) {

			this.timeScale = timeScale;
			this._effectiveTimeScale = this.paused ? 0 : timeScale;

			return this.stopWarping();

		},

		// return the time scale considering warping and .paused
		getEffectiveTimeScale: function () {

			return this._effectiveTimeScale;

		},

		setDuration: function ( duration ) {

			this.timeScale = this._clip.duration / duration;

			return this.stopWarping();

		},

		syncWith: function ( action ) {

			this.time = action.time;
			this.timeScale = action.timeScale;

			return this.stopWarping();

		},

		halt: function ( duration ) {

			return this.warp( this._effectiveTimeScale, 0, duration );

		},

		warp: function ( startTimeScale, endTimeScale, duration ) {

			var mixer = this._mixer, now = mixer.time,
				interpolant = this._timeScaleInterpolant,

				timeScale = this.timeScale;

			if ( interpolant === null ) {

				interpolant = mixer._lendControlInterpolant();
				this._timeScaleInterpolant = interpolant;

			}

			var times = interpolant.parameterPositions,
				values = interpolant.sampleValues;

			times[ 0 ] = now;
			times[ 1 ] = now + duration;

			values[ 0 ] = startTimeScale / timeScale;
			values[ 1 ] = endTimeScale / timeScale;

			return this;

		},

		stopWarping: function () {

			var timeScaleInterpolant = this._timeScaleInterpolant;

			if ( timeScaleInterpolant !== null ) {

				this._timeScaleInterpolant = null;
				this._mixer._takeBackControlInterpolant( timeScaleInterpolant );

			}

			return this;

		},

		// Object Accessors

		getMixer: function () {

			return this._mixer;

		},

		getClip: function () {

			return this._clip;

		},

		getRoot: function () {

			return this._localRoot || this._mixer._root;

		},

		// Interna

		_update: function ( time, deltaTime, timeDirection, accuIndex ) {

			// called by the mixer

			if ( ! this.enabled ) {

				// call ._updateWeight() to update ._effectiveWeight

				this._updateWeight( time );
				return;

			}

			var startTime = this._startTime;

			if ( startTime !== null ) {

				// check for scheduled start of action

				var timeRunning = ( time - startTime ) * timeDirection;
				if ( timeRunning < 0 || timeDirection === 0 ) {

					return; // yet to come / don't decide when delta = 0

				}

				// start

				this._startTime = null; // unschedule
				deltaTime = timeDirection * timeRunning;

			}

			// apply time scale and advance time

			deltaTime *= this._updateTimeScale( time );
			var clipTime = this._updateTime( deltaTime );

			// note: _updateTime may disable the action resulting in
			// an effective weight of 0

			var weight = this._updateWeight( time );

			if ( weight > 0 ) {

				var interpolants = this._interpolants;
				var propertyMixers = this._propertyBindings;

				for ( var j = 0, m = interpolants.length; j !== m; ++ j ) {

					interpolants[ j ].evaluate( clipTime );
					propertyMixers[ j ].accumulate( accuIndex, weight );

				}

			}

		},

		_updateWeight: function ( time ) {

			var weight = 0;

			if ( this.enabled ) {

				weight = this.weight;
				var interpolant = this._weightInterpolant;

				if ( interpolant !== null ) {

					var interpolantValue = interpolant.evaluate( time )[ 0 ];

					weight *= interpolantValue;

					if ( time > interpolant.parameterPositions[ 1 ] ) {

						this.stopFading();

						if ( interpolantValue === 0 ) {

							// faded out, disable
							this.enabled = false;

						}

					}

				}

			}

			this._effectiveWeight = weight;
			return weight;

		},

		_updateTimeScale: function ( time ) {

			var timeScale = 0;

			if ( ! this.paused ) {

				timeScale = this.timeScale;

				var interpolant = this._timeScaleInterpolant;

				if ( interpolant !== null ) {

					var interpolantValue = interpolant.evaluate( time )[ 0 ];

					timeScale *= interpolantValue;

					if ( time > interpolant.parameterPositions[ 1 ] ) {

						this.stopWarping();

						if ( timeScale === 0 ) {

							// motion has halted, pause
							this.paused = true;

						} else {

							// warp done - apply final time scale
							this.timeScale = timeScale;

						}

					}

				}

			}

			this._effectiveTimeScale = timeScale;
			return timeScale;

		},

		_updateTime: function ( deltaTime ) {

			var time = this.time + deltaTime;
			var duration = this._clip.duration;
			var loop = this.loop;
			var loopCount = this._loopCount;

			var pingPong = ( loop === LoopPingPong );

			if ( deltaTime === 0 ) {

				if ( loopCount === - 1 ) { return time; }

				return ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;

			}

			if ( loop === LoopOnce ) {

				if ( loopCount === - 1 ) {

					// just started

					this._loopCount = 0;
					this._setEndings( true, true, false );

				}

				handle_stop: {

					if ( time >= duration ) {

						time = duration;

					} else if ( time < 0 ) {

						time = 0;

					} else {

						this.time = time;

						break handle_stop;

					}

					if ( this.clampWhenFinished ) { this.paused = true; }
					else { this.enabled = false; }

					this.time = time;

					this._mixer.dispatchEvent( {
						type: 'finished', action: this,
						direction: deltaTime < 0 ? - 1 : 1
					} );

				}

			} else { // repetitive Repeat or PingPong

				if ( loopCount === - 1 ) {

					// just started

					if ( deltaTime >= 0 ) {

						loopCount = 0;

						this._setEndings( true, this.repetitions === 0, pingPong );

					} else {

						// when looping in reverse direction, the initial
						// transition through zero counts as a repetition,
						// so leave loopCount at -1

						this._setEndings( this.repetitions === 0, true, pingPong );

					}

				}

				if ( time >= duration || time < 0 ) {

					// wrap around

					var loopDelta = Math.floor( time / duration ); // signed
					time -= duration * loopDelta;

					loopCount += Math.abs( loopDelta );

					var pending = this.repetitions - loopCount;

					if ( pending <= 0 ) {

						// have to stop (switch state, clamp time, fire event)

						if ( this.clampWhenFinished ) { this.paused = true; }
						else { this.enabled = false; }

						time = deltaTime > 0 ? duration : 0;

						this.time = time;

						this._mixer.dispatchEvent( {
							type: 'finished', action: this,
							direction: deltaTime > 0 ? 1 : - 1
						} );

					} else {

						// keep running

						if ( pending === 1 ) {

							// entering the last round

							var atStart = deltaTime < 0;
							this._setEndings( atStart, ! atStart, pingPong );

						} else {

							this._setEndings( false, false, pingPong );

						}

						this._loopCount = loopCount;

						this.time = time;

						this._mixer.dispatchEvent( {
							type: 'loop', action: this, loopDelta: loopDelta
						} );

					}

				} else {

					this.time = time;

				}

				if ( pingPong && ( loopCount & 1 ) === 1 ) {

					// invert time for the "pong round"

					return duration - time;

				}

			}

			return time;

		},

		_setEndings: function ( atStart, atEnd, pingPong ) {

			var settings = this._interpolantSettings;

			if ( pingPong ) {

				settings.endingStart = ZeroSlopeEnding;
				settings.endingEnd = ZeroSlopeEnding;

			} else {

				// assuming for LoopOnce atStart == atEnd == true

				if ( atStart ) {

					settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;

				} else {

					settings.endingStart = WrapAroundEnding;

				}

				if ( atEnd ) {

					settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;

				} else {

					settings.endingEnd 	 = WrapAroundEnding;

				}

			}

		},

		_scheduleFading: function ( duration, weightNow, weightThen ) {

			var mixer = this._mixer, now = mixer.time,
				interpolant = this._weightInterpolant;

			if ( interpolant === null ) {

				interpolant = mixer._lendControlInterpolant();
				this._weightInterpolant = interpolant;

			}

			var times = interpolant.parameterPositions,
				values = interpolant.sampleValues;

			times[ 0 ] = now;
			values[ 0 ] = weightNow;
			times[ 1 ] = now + duration;
			values[ 1 ] = weightThen;

			return this;

		}

	} );

	/**
	 *
	 * Player for AnimationClips.
	 *
	 *
	 * @author Ben Houston / http://clara.io/
	 * @author David Sarno / http://lighthaus.us/
	 * @author tschw
	 */

	function AnimationMixer( root ) {

		this._root = root;
		this._initMemoryManager();
		this._accuIndex = 0;

		this.time = 0;

		this.timeScale = 1.0;

	}

	AnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {

		constructor: AnimationMixer,

		_bindAction: function ( action, prototypeAction ) {

			var root = action._localRoot || this._root,
				tracks = action._clip.tracks,
				nTracks = tracks.length,
				bindings = action._propertyBindings,
				interpolants = action._interpolants,
				rootUuid = root.uuid,
				bindingsByRoot = this._bindingsByRootAndName,
				bindingsByName = bindingsByRoot[ rootUuid ];

			if ( bindingsByName === undefined ) {

				bindingsByName = {};
				bindingsByRoot[ rootUuid ] = bindingsByName;

			}

			for ( var i = 0; i !== nTracks; ++ i ) {

				var track = tracks[ i ],
					trackName = track.name,
					binding = bindingsByName[ trackName ];

				if ( binding !== undefined ) {

					bindings[ i ] = binding;

				} else {

					binding = bindings[ i ];

					if ( binding !== undefined ) {

						// existing binding, make sure the cache knows

						if ( binding._cacheIndex === null ) {

							++ binding.referenceCount;
							this._addInactiveBinding( binding, rootUuid, trackName );

						}

						continue;

					}

					var path = prototypeAction && prototypeAction.
						_propertyBindings[ i ].binding.parsedPath;

					binding = new PropertyMixer(
						PropertyBinding.create( root, trackName, path ),
						track.ValueTypeName, track.getValueSize() );

					++ binding.referenceCount;
					this._addInactiveBinding( binding, rootUuid, trackName );

					bindings[ i ] = binding;

				}

				interpolants[ i ].resultBuffer = binding.buffer;

			}

		},

		_activateAction: function ( action ) {

			if ( ! this._isActiveAction( action ) ) {

				if ( action._cacheIndex === null ) {

					// this action has been forgotten by the cache, but the user
					// appears to be still using it -> rebind

					var rootUuid = ( action._localRoot || this._root ).uuid,
						clipUuid = action._clip.uuid,
						actionsForClip = this._actionsByClip[ clipUuid ];

					this._bindAction( action,
						actionsForClip && actionsForClip.knownActions[ 0 ] );

					this._addInactiveAction( action, clipUuid, rootUuid );

				}

				var bindings = action._propertyBindings;

				// increment reference counts / sort out state
				for ( var i = 0, n = bindings.length; i !== n; ++ i ) {

					var binding = bindings[ i ];

					if ( binding.useCount ++ === 0 ) {

						this._lendBinding( binding );
						binding.saveOriginalState();

					}

				}

				this._lendAction( action );

			}

		},

		_deactivateAction: function ( action ) {

			if ( this._isActiveAction( action ) ) {

				var bindings = action._propertyBindings;

				// decrement reference counts / sort out state
				for ( var i = 0, n = bindings.length; i !== n; ++ i ) {

					var binding = bindings[ i ];

					if ( -- binding.useCount === 0 ) {

						binding.restoreOriginalState();
						this._takeBackBinding( binding );

					}

				}

				this._takeBackAction( action );

			}

		},

		// Memory manager

		_initMemoryManager: function () {

			this._actions = []; // 'nActiveActions' followed by inactive ones
			this._nActiveActions = 0;

			this._actionsByClip = {};
			// inside:
			// {
			// 	knownActions: Array< AnimationAction > - used as prototypes
			// 	actionByRoot: AnimationAction - lookup
			// }


			this._bindings = []; // 'nActiveBindings' followed by inactive ones
			this._nActiveBindings = 0;

			this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >


			this._controlInterpolants = []; // same game as above
			this._nActiveControlInterpolants = 0;

			var scope = this;

			this.stats = {

				actions: {
					get total() {

						return scope._actions.length;

					},
					get inUse() {

						return scope._nActiveActions;

					}
				},
				bindings: {
					get total() {

						return scope._bindings.length;

					},
					get inUse() {

						return scope._nActiveBindings;

					}
				},
				controlInterpolants: {
					get total() {

						return scope._controlInterpolants.length;

					},
					get inUse() {

						return scope._nActiveControlInterpolants;

					}
				}

			};

		},

		// Memory management for AnimationAction objects

		_isActiveAction: function ( action ) {

			var index = action._cacheIndex;
			return index !== null && index < this._nActiveActions;

		},

		_addInactiveAction: function ( action, clipUuid, rootUuid ) {

			var actions = this._actions,
				actionsByClip = this._actionsByClip,
				actionsForClip = actionsByClip[ clipUuid ];

			if ( actionsForClip === undefined ) {

				actionsForClip = {

					knownActions: [ action ],
					actionByRoot: {}

				};

				action._byClipCacheIndex = 0;

				actionsByClip[ clipUuid ] = actionsForClip;

			} else {

				var knownActions = actionsForClip.knownActions;

				action._byClipCacheIndex = knownActions.length;
				knownActions.push( action );

			}

			action._cacheIndex = actions.length;
			actions.push( action );

			actionsForClip.actionByRoot[ rootUuid ] = action;

		},

		_removeInactiveAction: function ( action ) {

			var actions = this._actions,
				lastInactiveAction = actions[ actions.length - 1 ],
				cacheIndex = action._cacheIndex;

			lastInactiveAction._cacheIndex = cacheIndex;
			actions[ cacheIndex ] = lastInactiveAction;
			actions.pop();

			action._cacheIndex = null;


			var clipUuid = action._clip.uuid,
				actionsByClip = this._actionsByClip,
				actionsForClip = actionsByClip[ clipUuid ],
				knownActionsForClip = actionsForClip.knownActions,

				lastKnownAction =
					knownActionsForClip[ knownActionsForClip.length - 1 ],

				byClipCacheIndex = action._byClipCacheIndex;

			lastKnownAction._byClipCacheIndex = byClipCacheIndex;
			knownActionsForClip[ byClipCacheIndex ] = lastKnownAction;
			knownActionsForClip.pop();

			action._byClipCacheIndex = null;


			var actionByRoot = actionsForClip.actionByRoot,
				rootUuid = ( action._localRoot || this._root ).uuid;

			delete actionByRoot[ rootUuid ];

			if ( knownActionsForClip.length === 0 ) {

				delete actionsByClip[ clipUuid ];

			}

			this._removeInactiveBindingsForAction( action );

		},

		_removeInactiveBindingsForAction: function ( action ) {

			var bindings = action._propertyBindings;
			for ( var i = 0, n = bindings.length; i !== n; ++ i ) {

				var binding = bindings[ i ];

				if ( -- binding.referenceCount === 0 ) {

					this._removeInactiveBinding( binding );

				}

			}

		},

		_lendAction: function ( action ) {

			// [ active actions |  inactive actions  ]
			// [  active actions >| inactive actions ]
			//                 s        a
			//                  <-swap->
			//                 a        s

			var actions = this._actions,
				prevIndex = action._cacheIndex,

				lastActiveIndex = this._nActiveActions ++,

				firstInactiveAction = actions[ lastActiveIndex ];

			action._cacheIndex = lastActiveIndex;
			actions[ lastActiveIndex ] = action;

			firstInactiveAction._cacheIndex = prevIndex;
			actions[ prevIndex ] = firstInactiveAction;

		},

		_takeBackAction: function ( action ) {

			// [  active actions  | inactive actions ]
			// [ active actions |< inactive actions  ]
			//        a        s
			//         <-swap->
			//        s        a

			var actions = this._actions,
				prevIndex = action._cacheIndex,

				firstInactiveIndex = -- this._nActiveActions,

				lastActiveAction = actions[ firstInactiveIndex ];

			action._cacheIndex = firstInactiveIndex;
			actions[ firstInactiveIndex ] = action;

			lastActiveAction._cacheIndex = prevIndex;
			actions[ prevIndex ] = lastActiveAction;

		},

		// Memory management for PropertyMixer objects

		_addInactiveBinding: function ( binding, rootUuid, trackName ) {

			var bindingsByRoot = this._bindingsByRootAndName,
				bindingByName = bindingsByRoot[ rootUuid ],

				bindings = this._bindings;

			if ( bindingByName === undefined ) {

				bindingByName = {};
				bindingsByRoot[ rootUuid ] = bindingByName;

			}

			bindingByName[ trackName ] = binding;

			binding._cacheIndex = bindings.length;
			bindings.push( binding );

		},

		_removeInactiveBinding: function ( binding ) {

			var bindings = this._bindings,
				propBinding = binding.binding,
				rootUuid = propBinding.rootNode.uuid,
				trackName = propBinding.path,
				bindingsByRoot = this._bindingsByRootAndName,
				bindingByName = bindingsByRoot[ rootUuid ],

				lastInactiveBinding = bindings[ bindings.length - 1 ],
				cacheIndex = binding._cacheIndex;

			lastInactiveBinding._cacheIndex = cacheIndex;
			bindings[ cacheIndex ] = lastInactiveBinding;
			bindings.pop();

			delete bindingByName[ trackName ];

			if ( Object.keys( bindingByName ).length === 0 ) {

				delete bindingsByRoot[ rootUuid ];

			}

		},

		_lendBinding: function ( binding ) {

			var bindings = this._bindings,
				prevIndex = binding._cacheIndex,

				lastActiveIndex = this._nActiveBindings ++,

				firstInactiveBinding = bindings[ lastActiveIndex ];

			binding._cacheIndex = lastActiveIndex;
			bindings[ lastActiveIndex ] = binding;

			firstInactiveBinding._cacheIndex = prevIndex;
			bindings[ prevIndex ] = firstInactiveBinding;

		},

		_takeBackBinding: function ( binding ) {

			var bindings = this._bindings,
				prevIndex = binding._cacheIndex,

				firstInactiveIndex = -- this._nActiveBindings,

				lastActiveBinding = bindings[ firstInactiveIndex ];

			binding._cacheIndex = firstInactiveIndex;
			bindings[ firstInactiveIndex ] = binding;

			lastActiveBinding._cacheIndex = prevIndex;
			bindings[ prevIndex ] = lastActiveBinding;

		},


		// Memory management of Interpolants for weight and time scale

		_lendControlInterpolant: function () {

			var interpolants = this._controlInterpolants,
				lastActiveIndex = this._nActiveControlInterpolants ++,
				interpolant = interpolants[ lastActiveIndex ];

			if ( interpolant === undefined ) {

				interpolant = new LinearInterpolant(
					new Float32Array( 2 ), new Float32Array( 2 ),
					1, this._controlInterpolantsResultBuffer );

				interpolant.__cacheIndex = lastActiveIndex;
				interpolants[ lastActiveIndex ] = interpolant;

			}

			return interpolant;

		},

		_takeBackControlInterpolant: function ( interpolant ) {

			var interpolants = this._controlInterpolants,
				prevIndex = interpolant.__cacheIndex,

				firstInactiveIndex = -- this._nActiveControlInterpolants,

				lastActiveInterpolant = interpolants[ firstInactiveIndex ];

			interpolant.__cacheIndex = firstInactiveIndex;
			interpolants[ firstInactiveIndex ] = interpolant;

			lastActiveInterpolant.__cacheIndex = prevIndex;
			interpolants[ prevIndex ] = lastActiveInterpolant;

		},

		_controlInterpolantsResultBuffer: new Float32Array( 1 ),

		// return an action for a clip optionally using a custom root target
		// object (this method allocates a lot of dynamic memory in case a
		// previously unknown clip/root combination is specified)
		clipAction: function ( clip, optionalRoot ) {

			var root = optionalRoot || this._root,
				rootUuid = root.uuid,

				clipObject = typeof clip === 'string' ?
					AnimationClip.findByName( root, clip ) : clip,

				clipUuid = clipObject !== null ? clipObject.uuid : clip,

				actionsForClip = this._actionsByClip[ clipUuid ],
				prototypeAction = null;

			if ( actionsForClip !== undefined ) {

				var existingAction =
						actionsForClip.actionByRoot[ rootUuid ];

				if ( existingAction !== undefined ) {

					return existingAction;

				}

				// we know the clip, so we don't have to parse all
				// the bindings again but can just copy
				prototypeAction = actionsForClip.knownActions[ 0 ];

				// also, take the clip from the prototype action
				if ( clipObject === null )
					{ clipObject = prototypeAction._clip; }

			}

			// clip must be known when specified via string
			if ( clipObject === null ) { return null; }

			// allocate all resources required to run it
			var newAction = new AnimationAction( this, clipObject, optionalRoot );

			this._bindAction( newAction, prototypeAction );

			// and make the action known to the memory manager
			this._addInactiveAction( newAction, clipUuid, rootUuid );

			return newAction;

		},

		// get an existing action
		existingAction: function ( clip, optionalRoot ) {

			var root = optionalRoot || this._root,
				rootUuid = root.uuid,

				clipObject = typeof clip === 'string' ?
					AnimationClip.findByName( root, clip ) : clip,

				clipUuid = clipObject ? clipObject.uuid : clip,

				actionsForClip = this._actionsByClip[ clipUuid ];

			if ( actionsForClip !== undefined ) {

				return actionsForClip.actionByRoot[ rootUuid ] || null;

			}

			return null;

		},

		// deactivates all previously scheduled actions
		stopAllAction: function () {

			var actions = this._actions,
				nActions = this._nActiveActions,
				bindings = this._bindings,
				nBindings = this._nActiveBindings;

			this._nActiveActions = 0;
			this._nActiveBindings = 0;

			for ( var i = 0; i !== nActions; ++ i ) {

				actions[ i ].reset();

			}

			for ( var i = 0; i !== nBindings; ++ i ) {

				bindings[ i ].useCount = 0;

			}

			return this;

		},

		// advance the time and update apply the animation
		update: function ( deltaTime ) {

			deltaTime *= this.timeScale;

			var actions = this._actions,
				nActions = this._nActiveActions,

				time = this.time += deltaTime,
				timeDirection = Math.sign( deltaTime ),

				accuIndex = this._accuIndex ^= 1;

			// run active actions

			for ( var i = 0; i !== nActions; ++ i ) {

				var action = actions[ i ];

				action._update( time, deltaTime, timeDirection, accuIndex );

			}

			// update scene graph

			var bindings = this._bindings,
				nBindings = this._nActiveBindings;

			for ( var i = 0; i !== nBindings; ++ i ) {

				bindings[ i ].apply( accuIndex );

			}

			return this;

		},

		// Allows you to seek to a specific time in an animation.
		setTime: function ( timeInSeconds ) {

			this.time = 0; // Zero out time attribute for AnimationMixer object;
			for ( var i = 0; i < this._actions.length; i ++ ) {

				this._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.

			}

			return this.update( timeInSeconds ); // Update used to set exact time. Returns "this" AnimationMixer object.

		},

		// return this mixer's root target object
		getRoot: function () {

			return this._root;

		},

		// free all resources specific to a particular clip
		uncacheClip: function ( clip ) {

			var actions = this._actions,
				clipUuid = clip.uuid,
				actionsByClip = this._actionsByClip,
				actionsForClip = actionsByClip[ clipUuid ];

			if ( actionsForClip !== undefined ) {

				// note: just calling _removeInactiveAction would mess up the
				// iteration state and also require updating the state we can
				// just throw away

				var actionsToRemove = actionsForClip.knownActions;

				for ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {

					var action = actionsToRemove[ i ];

					this._deactivateAction( action );

					var cacheIndex = action._cacheIndex,
						lastInactiveAction = actions[ actions.length - 1 ];

					action._cacheIndex = null;
					action._byClipCacheIndex = null;

					lastInactiveAction._cacheIndex = cacheIndex;
					actions[ cacheIndex ] = lastInactiveAction;
					actions.pop();

					this._removeInactiveBindingsForAction( action );

				}

				delete actionsByClip[ clipUuid ];

			}

		},

		// free all resources specific to a particular root target object
		uncacheRoot: function ( root ) {

			var rootUuid = root.uuid,
				actionsByClip = this._actionsByClip;

			for ( var clipUuid in actionsByClip ) {

				var actionByRoot = actionsByClip[ clipUuid ].actionByRoot,
					action = actionByRoot[ rootUuid ];

				if ( action !== undefined ) {

					this._deactivateAction( action );
					this._removeInactiveAction( action );

				}

			}

			var bindingsByRoot = this._bindingsByRootAndName,
				bindingByName = bindingsByRoot[ rootUuid ];

			if ( bindingByName !== undefined ) {

				for ( var trackName in bindingByName ) {

					var binding = bindingByName[ trackName ];
					binding.restoreOriginalState();
					this._removeInactiveBinding( binding );

				}

			}

		},

		// remove a targeted clip from the cache
		uncacheAction: function ( clip, optionalRoot ) {

			var action = this.existingAction( clip, optionalRoot );

			if ( action !== null ) {

				this._deactivateAction( action );
				this._removeInactiveAction( action );

			}

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function Uniform( value ) {

		if ( typeof value === 'string' ) {

			console.warn( 'THREE.Uniform: Type parameter is no longer needed.' );
			value = arguments[ 1 ];

		}

		this.value = value;

	}

	Uniform.prototype.clone = function () {

		return new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );

	};

	/**
	 * @author benaadams / https://twitter.com/ben_a_adams
	 */

	function InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {

		InterleavedBuffer.call( this, array, stride );

		this.meshPerAttribute = meshPerAttribute || 1;

	}

	InstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {

		constructor: InstancedInterleavedBuffer,

		isInstancedInterleavedBuffer: true,

		copy: function ( source ) {

			InterleavedBuffer.prototype.copy.call( this, source );

			this.meshPerAttribute = source.meshPerAttribute;

			return this;

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author bhouston / http://clara.io/
	 * @author stephomi / http://stephaneginier.com/
	 */

	function Raycaster( origin, direction, near, far ) {

		this.ray = new Ray( origin, direction );
		// direction is assumed to be normalized (for accurate distance calculations)

		this.near = near || 0;
		this.far = far || Infinity;
		this.camera = null;
		this.layers = new Layers();

		this.params = {
			Mesh: {},
			Line: { threshold: 1 },
			LOD: {},
			Points: { threshold: 1 },
			Sprite: {}
		};

		Object.defineProperties( this.params, {
			PointCloud: {
				get: function () {

					console.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );
					return this.Points;

				}
			}
		} );

	}

	function ascSort( a, b ) {

		return a.distance - b.distance;

	}

	function intersectObject( object, raycaster, intersects, recursive ) {

		if ( object.layers.test( raycaster.layers ) ) {

			object.raycast( raycaster, intersects );

		}

		if ( recursive === true ) {

			var children = object.children;

			for ( var i = 0, l = children.length; i < l; i ++ ) {

				intersectObject( children[ i ], raycaster, intersects, true );

			}

		}

	}

	Object.assign( Raycaster.prototype, {

		set: function ( origin, direction ) {

			// direction is assumed to be normalized (for accurate distance calculations)

			this.ray.set( origin, direction );

		},

		setFromCamera: function ( coords, camera ) {

			if ( ( camera && camera.isPerspectiveCamera ) ) {

				this.ray.origin.setFromMatrixPosition( camera.matrixWorld );
				this.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();
				this.camera = camera;

			} else if ( ( camera && camera.isOrthographicCamera ) ) {

				this.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera
				this.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );
				this.camera = camera;

			} else {

				console.error( 'THREE.Raycaster: Unsupported camera type.' );

			}

		},

		intersectObject: function ( object, recursive, optionalTarget ) {

			var intersects = optionalTarget || [];

			intersectObject( object, this, intersects, recursive );

			intersects.sort( ascSort );

			return intersects;

		},

		intersectObjects: function ( objects, recursive, optionalTarget ) {

			var intersects = optionalTarget || [];

			if ( Array.isArray( objects ) === false ) {

				console.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );
				return intersects;

			}

			for ( var i = 0, l = objects.length; i < l; i ++ ) {

				intersectObject( objects[ i ], this, intersects, recursive );

			}

			intersects.sort( ascSort );

			return intersects;

		}

	} );

	/**
	 * @author bhouston / http://clara.io
	 * @author WestLangley / http://github.com/WestLangley
	 *
	 * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system
	 *
	 * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.
	 * The azimuthal angle (theta) is measured from the positive z-axis.
	 */

	function Spherical( radius, phi, theta ) {

		this.radius = ( radius !== undefined ) ? radius : 1.0;
		this.phi = ( phi !== undefined ) ? phi : 0; // polar angle
		this.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle

		return this;

	}

	Object.assign( Spherical.prototype, {

		set: function ( radius, phi, theta ) {

			this.radius = radius;
			this.phi = phi;
			this.theta = theta;

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( other ) {

			this.radius = other.radius;
			this.phi = other.phi;
			this.theta = other.theta;

			return this;

		},

		// restrict phi to be betwee EPS and PI-EPS
		makeSafe: function () {

			var EPS = 0.000001;
			this.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );

			return this;

		},

		setFromVector3: function ( v ) {

			return this.setFromCartesianCoords( v.x, v.y, v.z );

		},

		setFromCartesianCoords: function ( x, y, z ) {

			this.radius = Math.sqrt( x * x + y * y + z * z );

			if ( this.radius === 0 ) {

				this.theta = 0;
				this.phi = 0;

			} else {

				this.theta = Math.atan2( x, z );
				this.phi = Math.acos( MathUtils.clamp( y / this.radius, - 1, 1 ) );

			}

			return this;

		}

	} );

	/**
	 * @author Mugen87 / https://github.com/Mugen87
	 *
	 * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system
	 *
	 */

	function Cylindrical( radius, theta, y ) {

		this.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane
		this.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis
		this.y = ( y !== undefined ) ? y : 0; // height above the x-z plane

		return this;

	}

	Object.assign( Cylindrical.prototype, {

		set: function ( radius, theta, y ) {

			this.radius = radius;
			this.theta = theta;
			this.y = y;

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( other ) {

			this.radius = other.radius;
			this.theta = other.theta;
			this.y = other.y;

			return this;

		},

		setFromVector3: function ( v ) {

			return this.setFromCartesianCoords( v.x, v.y, v.z );

		},

		setFromCartesianCoords: function ( x, y, z ) {

			this.radius = Math.sqrt( x * x + z * z );
			this.theta = Math.atan2( x, z );
			this.y = y;

			return this;

		}

	} );

	/**
	 * @author bhouston / http://clara.io
	 */

	var _vector$7 = new Vector2();

	function Box2( min, max ) {

		this.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );
		this.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );

	}

	Object.assign( Box2.prototype, {

		set: function ( min, max ) {

			this.min.copy( min );
			this.max.copy( max );

			return this;

		},

		setFromPoints: function ( points ) {

			this.makeEmpty();

			for ( var i = 0, il = points.length; i < il; i ++ ) {

				this.expandByPoint( points[ i ] );

			}

			return this;

		},

		setFromCenterAndSize: function ( center, size ) {

			var halfSize = _vector$7.copy( size ).multiplyScalar( 0.5 );
			this.min.copy( center ).sub( halfSize );
			this.max.copy( center ).add( halfSize );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( box ) {

			this.min.copy( box.min );
			this.max.copy( box.max );

			return this;

		},

		makeEmpty: function () {

			this.min.x = this.min.y = + Infinity;
			this.max.x = this.max.y = - Infinity;

			return this;

		},

		isEmpty: function () {

			// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes

			return ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );

		},

		getCenter: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Box2: .getCenter() target is now required' );
				target = new Vector2();

			}

			return this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );

		},

		getSize: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Box2: .getSize() target is now required' );
				target = new Vector2();

			}

			return this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );

		},

		expandByPoint: function ( point ) {

			this.min.min( point );
			this.max.max( point );

			return this;

		},

		expandByVector: function ( vector ) {

			this.min.sub( vector );
			this.max.add( vector );

			return this;

		},

		expandByScalar: function ( scalar ) {

			this.min.addScalar( - scalar );
			this.max.addScalar( scalar );

			return this;

		},

		containsPoint: function ( point ) {

			return point.x < this.min.x || point.x > this.max.x ||
				point.y < this.min.y || point.y > this.max.y ? false : true;

		},

		containsBox: function ( box ) {

			return this.min.x <= box.min.x && box.max.x <= this.max.x &&
				this.min.y <= box.min.y && box.max.y <= this.max.y;

		},

		getParameter: function ( point, target ) {

			// This can potentially have a divide by zero if the box
			// has a size dimension of 0.

			if ( target === undefined ) {

				console.warn( 'THREE.Box2: .getParameter() target is now required' );
				target = new Vector2();

			}

			return target.set(
				( point.x - this.min.x ) / ( this.max.x - this.min.x ),
				( point.y - this.min.y ) / ( this.max.y - this.min.y )
			);

		},

		intersectsBox: function ( box ) {

			// using 4 splitting planes to rule out intersections

			return box.max.x < this.min.x || box.min.x > this.max.x ||
				box.max.y < this.min.y || box.min.y > this.max.y ? false : true;

		},

		clampPoint: function ( point, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Box2: .clampPoint() target is now required' );
				target = new Vector2();

			}

			return target.copy( point ).clamp( this.min, this.max );

		},

		distanceToPoint: function ( point ) {

			var clampedPoint = _vector$7.copy( point ).clamp( this.min, this.max );
			return clampedPoint.sub( point ).length();

		},

		intersect: function ( box ) {

			this.min.max( box.min );
			this.max.min( box.max );

			return this;

		},

		union: function ( box ) {

			this.min.min( box.min );
			this.max.max( box.max );

			return this;

		},

		translate: function ( offset ) {

			this.min.add( offset );
			this.max.add( offset );

			return this;

		},

		equals: function ( box ) {

			return box.min.equals( this.min ) && box.max.equals( this.max );

		}

	} );

	/**
	 * @author bhouston / http://clara.io
	 */

	var _startP = new Vector3();
	var _startEnd = new Vector3();

	function Line3( start, end ) {

		this.start = ( start !== undefined ) ? start : new Vector3();
		this.end = ( end !== undefined ) ? end : new Vector3();

	}

	Object.assign( Line3.prototype, {

		set: function ( start, end ) {

			this.start.copy( start );
			this.end.copy( end );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		},

		copy: function ( line ) {

			this.start.copy( line.start );
			this.end.copy( line.end );

			return this;

		},

		getCenter: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Line3: .getCenter() target is now required' );
				target = new Vector3();

			}

			return target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );

		},

		delta: function ( target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Line3: .delta() target is now required' );
				target = new Vector3();

			}

			return target.subVectors( this.end, this.start );

		},

		distanceSq: function () {

			return this.start.distanceToSquared( this.end );

		},

		distance: function () {

			return this.start.distanceTo( this.end );

		},

		at: function ( t, target ) {

			if ( target === undefined ) {

				console.warn( 'THREE.Line3: .at() target is now required' );
				target = new Vector3();

			}

			return this.delta( target ).multiplyScalar( t ).add( this.start );

		},

		closestPointToPointParameter: function ( point, clampToLine ) {

			_startP.subVectors( point, this.start );
			_startEnd.subVectors( this.end, this.start );

			var startEnd2 = _startEnd.dot( _startEnd );
			var startEnd_startP = _startEnd.dot( _startP );

			var t = startEnd_startP / startEnd2;

			if ( clampToLine ) {

				t = MathUtils.clamp( t, 0, 1 );

			}

			return t;

		},

		closestPointToPoint: function ( point, clampToLine, target ) {

			var t = this.closestPointToPointParameter( point, clampToLine );

			if ( target === undefined ) {

				console.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );
				target = new Vector3();

			}

			return this.delta( target ).multiplyScalar( t ).add( this.start );

		},

		applyMatrix4: function ( matrix ) {

			this.start.applyMatrix4( matrix );
			this.end.applyMatrix4( matrix );

			return this;

		},

		equals: function ( line ) {

			return line.start.equals( this.start ) && line.end.equals( this.end );

		}

	} );

	/**
	 * @author alteredq / http://alteredqualia.com/
	 */

	function ImmediateRenderObject( material ) {

		Object3D.call( this );

		this.material = material;
		this.render = function ( /* renderCallback */ ) {};

	}

	ImmediateRenderObject.prototype = Object.create( Object3D.prototype );
	ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;

	ImmediateRenderObject.prototype.isImmediateRenderObject = true;

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 * @author WestLangley / http://github.com/WestLangley
	 */

	var _vector$8 = new Vector3();

	function SpotLightHelper( light, color ) {

		Object3D.call( this );

		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		var geometry = new BufferGeometry();

		var positions = [
			0, 0, 0, 	0, 0, 1,
			0, 0, 0, 	1, 0, 1,
			0, 0, 0,	- 1, 0, 1,
			0, 0, 0, 	0, 1, 1,
			0, 0, 0, 	0, - 1, 1
		];

		for ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {

			var p1 = ( i / l ) * Math.PI * 2;
			var p2 = ( j / l ) * Math.PI * 2;

			positions.push(
				Math.cos( p1 ), Math.sin( p1 ), 1,
				Math.cos( p2 ), Math.sin( p2 ), 1
			);

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

		var material = new LineBasicMaterial( { fog: false, toneMapped: false } );

		this.cone = new LineSegments( geometry, material );
		this.add( this.cone );

		this.update();

	}

	SpotLightHelper.prototype = Object.create( Object3D.prototype );
	SpotLightHelper.prototype.constructor = SpotLightHelper;

	SpotLightHelper.prototype.dispose = function () {

		this.cone.geometry.dispose();
		this.cone.material.dispose();

	};

	SpotLightHelper.prototype.update = function () {

		this.light.updateMatrixWorld();

		var coneLength = this.light.distance ? this.light.distance : 1000;
		var coneWidth = coneLength * Math.tan( this.light.angle );

		this.cone.scale.set( coneWidth, coneWidth, coneLength );

		_vector$8.setFromMatrixPosition( this.light.target.matrixWorld );

		this.cone.lookAt( _vector$8 );

		if ( this.color !== undefined ) {

			this.cone.material.color.set( this.color );

		} else {

			this.cone.material.color.copy( this.light.color );

		}

	};

	/**
	 * @author Sean Griffin / http://twitter.com/sgrif
	 * @author Michael Guerrero / http://realitymeltdown.com
	 * @author mrdoob / http://mrdoob.com/
	 * @author ikerr / http://verold.com
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	var _vector$9 = new Vector3();
	var _boneMatrix = new Matrix4();
	var _matrixWorldInv = new Matrix4();

	function getBoneList( object ) {

		var boneList = [];

		if ( object && object.isBone ) {

			boneList.push( object );

		}

		for ( var i = 0; i < object.children.length; i ++ ) {

			boneList.push.apply( boneList, getBoneList( object.children[ i ] ) );

		}

		return boneList;

	}

	function SkeletonHelper( object ) {

		var bones = getBoneList( object );

		var geometry = new BufferGeometry();

		var vertices = [];
		var colors = [];

		var color1 = new Color( 0, 0, 1 );
		var color2 = new Color( 0, 1, 0 );

		for ( var i = 0; i < bones.length; i ++ ) {

			var bone = bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				vertices.push( 0, 0, 0 );
				vertices.push( 0, 0, 0 );
				colors.push( color1.r, color1.g, color1.b );
				colors.push( color2.r, color2.g, color2.b );

			}

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		var material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );

		LineSegments.call( this, geometry, material );

		this.root = object;
		this.bones = bones;

		this.matrix = object.matrixWorld;
		this.matrixAutoUpdate = false;

	}

	SkeletonHelper.prototype = Object.create( LineSegments.prototype );
	SkeletonHelper.prototype.constructor = SkeletonHelper;

	SkeletonHelper.prototype.isSkeletonHelper = true;

	SkeletonHelper.prototype.updateMatrixWorld = function ( force ) {

		var bones = this.bones;

		var geometry = this.geometry;
		var position = geometry.getAttribute( 'position' );

		_matrixWorldInv.getInverse( this.root.matrixWorld );

		for ( var i = 0, j = 0; i < bones.length; i ++ ) {

			var bone = bones[ i ];

			if ( bone.parent && bone.parent.isBone ) {

				_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );
				_vector$9.setFromMatrixPosition( _boneMatrix );
				position.setXYZ( j, _vector$9.x, _vector$9.y, _vector$9.z );

				_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );
				_vector$9.setFromMatrixPosition( _boneMatrix );
				position.setXYZ( j + 1, _vector$9.x, _vector$9.y, _vector$9.z );

				j += 2;

			}

		}

		geometry.getAttribute( 'position' ).needsUpdate = true;

		Object3D.prototype.updateMatrixWorld.call( this, force );

	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 */

	function PointLightHelper( light, sphereSize, color ) {

		this.light = light;
		this.light.updateMatrixWorld();

		this.color = color;

		var geometry = new SphereBufferGeometry( sphereSize, 4, 2 );
		var material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );

		Mesh.call( this, geometry, material );

		this.matrix = this.light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.update();


		/*
		var distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );
		var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );

		this.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );
		this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );

		var d = light.distance;

		if ( d === 0.0 ) {

			this.lightDistance.visible = false;

		} else {

			this.lightDistance.scale.set( d, d, d );

		}

		this.add( this.lightDistance );
		*/

	}

	PointLightHelper.prototype = Object.create( Mesh.prototype );
	PointLightHelper.prototype.constructor = PointLightHelper;

	PointLightHelper.prototype.dispose = function () {

		this.geometry.dispose();
		this.material.dispose();

	};

	PointLightHelper.prototype.update = function () {

		if ( this.color !== undefined ) {

			this.material.color.set( this.color );

		} else {

			this.material.color.copy( this.light.color );

		}

		/*
		var d = this.light.distance;

		if ( d === 0.0 ) {

			this.lightDistance.visible = false;

		} else {

			this.lightDistance.visible = true;
			this.lightDistance.scale.set( d, d, d );

		}
		*/

	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 */

	var _vector$a = new Vector3();
	var _color1 = new Color();
	var _color2 = new Color();

	function HemisphereLightHelper( light, size, color ) {

		Object3D.call( this );

		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		var geometry = new OctahedronBufferGeometry( size );
		geometry.rotateY( Math.PI * 0.5 );

		this.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );
		if ( this.color === undefined ) { this.material.vertexColors = true; }

		var position = geometry.getAttribute( 'position' );
		var colors = new Float32Array( position.count * 3 );

		geometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );

		this.add( new Mesh( geometry, this.material ) );

		this.update();

	}

	HemisphereLightHelper.prototype = Object.create( Object3D.prototype );
	HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;

	HemisphereLightHelper.prototype.dispose = function () {

		this.children[ 0 ].geometry.dispose();
		this.children[ 0 ].material.dispose();

	};

	HemisphereLightHelper.prototype.update = function () {

		var mesh = this.children[ 0 ];

		if ( this.color !== undefined ) {

			this.material.color.set( this.color );

		} else {

			var colors = mesh.geometry.getAttribute( 'color' );

			_color1.copy( this.light.color );
			_color2.copy( this.light.groundColor );

			for ( var i = 0, l = colors.count; i < l; i ++ ) {

				var color = ( i < ( l / 2 ) ) ? _color1 : _color2;

				colors.setXYZ( i, color.r, color.g, color.b );

			}

			colors.needsUpdate = true;

		}

		mesh.lookAt( _vector$a.setFromMatrixPosition( this.light.matrixWorld ).negate() );

	};

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function GridHelper( size, divisions, color1, color2 ) {

		size = size || 10;
		divisions = divisions || 10;
		color1 = new Color( color1 !== undefined ? color1 : 0x444444 );
		color2 = new Color( color2 !== undefined ? color2 : 0x888888 );

		var center = divisions / 2;
		var step = size / divisions;
		var halfSize = size / 2;

		var vertices = [], colors = [];

		for ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {

			vertices.push( - halfSize, 0, k, halfSize, 0, k );
			vertices.push( k, 0, - halfSize, k, 0, halfSize );

			var color = i === center ? color1 : color2;

			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;
			color.toArray( colors, j ); j += 3;

		}

		var geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		var material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		LineSegments.call( this, geometry, material );

	}

	GridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {

		constructor: GridHelper,

		copy: function ( source ) {

			LineSegments.prototype.copy.call( this, source );

			this.geometry.copy( source.geometry );
			this.material.copy( source.material );

			return this;

		},

		clone: function () {

			return new this.constructor().copy( this );

		}

	} );

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / http://github.com/Mugen87
	 * @author Hectate / http://www.github.com/Hectate
	 */

	function PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {

		radius = radius || 10;
		radials = radials || 16;
		circles = circles || 8;
		divisions = divisions || 64;
		color1 = new Color( color1 !== undefined ? color1 : 0x444444 );
		color2 = new Color( color2 !== undefined ? color2 : 0x888888 );

		var vertices = [];
		var colors = [];

		var x, z;
		var v, i, j, r, color;

		// create the radials

		for ( i = 0; i <= radials; i ++ ) {

			v = ( i / radials ) * ( Math.PI * 2 );

			x = Math.sin( v ) * radius;
			z = Math.cos( v ) * radius;

			vertices.push( 0, 0, 0 );
			vertices.push( x, 0, z );

			color = ( i & 1 ) ? color1 : color2;

			colors.push( color.r, color.g, color.b );
			colors.push( color.r, color.g, color.b );

		}

		// create the circles

		for ( i = 0; i <= circles; i ++ ) {

			color = ( i & 1 ) ? color1 : color2;

			r = radius - ( radius / circles * i );

			for ( j = 0; j < divisions; j ++ ) {

				// first vertex

				v = ( j / divisions ) * ( Math.PI * 2 );

				x = Math.sin( v ) * r;
				z = Math.cos( v ) * r;

				vertices.push( x, 0, z );
				colors.push( color.r, color.g, color.b );

				// second vertex

				v = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );

				x = Math.sin( v ) * r;
				z = Math.cos( v ) * r;

				vertices.push( x, 0, z );
				colors.push( color.r, color.g, color.b );

			}

		}

		var geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		var material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		LineSegments.call( this, geometry, material );

	}

	PolarGridHelper.prototype = Object.create( LineSegments.prototype );
	PolarGridHelper.prototype.constructor = PolarGridHelper;

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author mrdoob / http://mrdoob.com/
	 * @author WestLangley / http://github.com/WestLangley
	 */

	var _v1$5 = new Vector3();
	var _v2$3 = new Vector3();
	var _v3$1 = new Vector3();

	function DirectionalLightHelper( light, size, color ) {

		Object3D.call( this );

		this.light = light;
		this.light.updateMatrixWorld();

		this.matrix = light.matrixWorld;
		this.matrixAutoUpdate = false;

		this.color = color;

		if ( size === undefined ) { size = 1; }

		var geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( [
			- size, size, 0,
			size, size, 0,
			size, - size, 0,
			- size, - size, 0,
			- size, size, 0
		], 3 ) );

		var material = new LineBasicMaterial( { fog: false, toneMapped: false } );

		this.lightPlane = new Line( geometry, material );
		this.add( this.lightPlane );

		geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );

		this.targetLine = new Line( geometry, material );
		this.add( this.targetLine );

		this.update();

	}

	DirectionalLightHelper.prototype = Object.create( Object3D.prototype );
	DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;

	DirectionalLightHelper.prototype.dispose = function () {

		this.lightPlane.geometry.dispose();
		this.lightPlane.material.dispose();
		this.targetLine.geometry.dispose();
		this.targetLine.material.dispose();

	};

	DirectionalLightHelper.prototype.update = function () {

		_v1$5.setFromMatrixPosition( this.light.matrixWorld );
		_v2$3.setFromMatrixPosition( this.light.target.matrixWorld );
		_v3$1.subVectors( _v2$3, _v1$5 );

		this.lightPlane.lookAt( _v2$3 );

		if ( this.color !== undefined ) {

			this.lightPlane.material.color.set( this.color );
			this.targetLine.material.color.set( this.color );

		} else {

			this.lightPlane.material.color.copy( this.light.color );
			this.targetLine.material.color.copy( this.light.color );

		}

		this.targetLine.lookAt( _v2$3 );
		this.targetLine.scale.z = _v3$1.length();

	};

	/**
	 * @author alteredq / http://alteredqualia.com/
	 * @author Mugen87 / https://github.com/Mugen87
	 *
	 *	- shows frustum, line of sight and up of the camera
	 *	- suitable for fast updates
	 * 	- based on frustum visualization in lightgl.js shadowmap example
	 *		http://evanw.github.com/lightgl.js/tests/shadowmap.html
	 */

	var _vector$b = new Vector3();
	var _camera = new Camera();

	function CameraHelper( camera ) {

		var geometry = new BufferGeometry();
		var material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );

		var vertices = [];
		var colors = [];

		var pointMap = {};

		// colors

		var colorFrustum = new Color( 0xffaa00 );
		var colorCone = new Color( 0xff0000 );
		var colorUp = new Color( 0x00aaff );
		var colorTarget = new Color( 0xffffff );
		var colorCross = new Color( 0x333333 );

		// near

		addLine( 'n1', 'n2', colorFrustum );
		addLine( 'n2', 'n4', colorFrustum );
		addLine( 'n4', 'n3', colorFrustum );
		addLine( 'n3', 'n1', colorFrustum );

		// far

		addLine( 'f1', 'f2', colorFrustum );
		addLine( 'f2', 'f4', colorFrustum );
		addLine( 'f4', 'f3', colorFrustum );
		addLine( 'f3', 'f1', colorFrustum );

		// sides

		addLine( 'n1', 'f1', colorFrustum );
		addLine( 'n2', 'f2', colorFrustum );
		addLine( 'n3', 'f3', colorFrustum );
		addLine( 'n4', 'f4', colorFrustum );

		// cone

		addLine( 'p', 'n1', colorCone );
		addLine( 'p', 'n2', colorCone );
		addLine( 'p', 'n3', colorCone );
		addLine( 'p', 'n4', colorCone );

		// up

		addLine( 'u1', 'u2', colorUp );
		addLine( 'u2', 'u3', colorUp );
		addLine( 'u3', 'u1', colorUp );

		// target

		addLine( 'c', 't', colorTarget );
		addLine( 'p', 'c', colorCross );

		// cross

		addLine( 'cn1', 'cn2', colorCross );
		addLine( 'cn3', 'cn4', colorCross );

		addLine( 'cf1', 'cf2', colorCross );
		addLine( 'cf3', 'cf4', colorCross );

		function addLine( a, b, color ) {

			addPoint( a, color );
			addPoint( b, color );

		}

		function addPoint( id, color ) {

			vertices.push( 0, 0, 0 );
			colors.push( color.r, color.g, color.b );

			if ( pointMap[ id ] === undefined ) {

				pointMap[ id ] = [];

			}

			pointMap[ id ].push( ( vertices.length / 3 ) - 1 );

		}

		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		LineSegments.call( this, geometry, material );

		this.camera = camera;
		if ( this.camera.updateProjectionMatrix ) { this.camera.updateProjectionMatrix(); }

		this.matrix = camera.matrixWorld;
		this.matrixAutoUpdate = false;

		this.pointMap = pointMap;

		this.update();

	}

	CameraHelper.prototype = Object.create( LineSegments.prototype );
	CameraHelper.prototype.constructor = CameraHelper;

	CameraHelper.prototype.update = function () {

		var geometry = this.geometry;
		var pointMap = this.pointMap;

		var w = 1, h = 1;

		// we need just camera projection matrix inverse
		// world matrix must be identity

		_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );

		// center / target

		setPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );
		setPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );

		// near

		setPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );
		setPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );
		setPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );
		setPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );

		// far

		setPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );
		setPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );
		setPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );
		setPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );

		// up

		setPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );
		setPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );
		setPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );

		// cross

		setPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );
		setPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );
		setPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );
		setPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );

		setPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );
		setPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );
		setPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );
		setPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );

		geometry.getAttribute( 'position' ).needsUpdate = true;

	};

	function setPoint( point, pointMap, geometry, camera, x, y, z ) {

		_vector$b.set( x, y, z ).unproject( camera );

		var points = pointMap[ point ];

		if ( points !== undefined ) {

			var position = geometry.getAttribute( 'position' );

			for ( var i = 0, l = points.length; i < l; i ++ ) {

				position.setXYZ( points[ i ], _vector$b.x, _vector$b.y, _vector$b.z );

			}

		}

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 * @author Mugen87 / http://github.com/Mugen87
	 */

	var _box$3 = new Box3();

	function BoxHelper( object, color ) {

		this.object = object;

		if ( color === undefined ) { color = 0xffff00; }

		var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );
		var positions = new Float32Array( 8 * 3 );

		var geometry = new BufferGeometry();
		geometry.setIndex( new BufferAttribute( indices, 1 ) );
		geometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );

		LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.matrixAutoUpdate = false;

		this.update();

	}

	BoxHelper.prototype = Object.create( LineSegments.prototype );
	BoxHelper.prototype.constructor = BoxHelper;

	BoxHelper.prototype.update = function ( object ) {

		if ( object !== undefined ) {

			console.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );

		}

		if ( this.object !== undefined ) {

			_box$3.setFromObject( this.object );

		}

		if ( _box$3.isEmpty() ) { return; }

		var min = _box$3.min;
		var max = _box$3.max;

		/*
		  5____4
		1/___0/|
		| 6__|_7
		2/___3/

		0: max.x, max.y, max.z
		1: min.x, max.y, max.z
		2: min.x, min.y, max.z
		3: max.x, min.y, max.z
		4: max.x, max.y, min.z
		5: min.x, max.y, min.z
		6: min.x, min.y, min.z
		7: max.x, min.y, min.z
		*/

		var position = this.geometry.attributes.position;
		var array = position.array;

		array[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;
		array[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;
		array[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;
		array[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;
		array[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;
		array[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;
		array[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;
		array[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;

		position.needsUpdate = true;

		this.geometry.computeBoundingSphere();


	};

	BoxHelper.prototype.setFromObject = function ( object ) {

		this.object = object;
		this.update();

		return this;

	};

	BoxHelper.prototype.copy = function ( source ) {

		LineSegments.prototype.copy.call( this, source );

		this.object = source.object;

		return this;

	};

	BoxHelper.prototype.clone = function () {

		return new this.constructor().copy( this );

	};

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function Box3Helper( box, color ) {

		this.type = 'Box3Helper';

		this.box = box;

		color = color || 0xffff00;

		var indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );

		var positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];

		var geometry = new BufferGeometry();

		geometry.setIndex( new BufferAttribute( indices, 1 ) );

		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );

		LineSegments.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		this.geometry.computeBoundingSphere();

	}

	Box3Helper.prototype = Object.create( LineSegments.prototype );
	Box3Helper.prototype.constructor = Box3Helper;

	Box3Helper.prototype.updateMatrixWorld = function ( force ) {

		var box = this.box;

		if ( box.isEmpty() ) { return; }

		box.getCenter( this.position );

		box.getSize( this.scale );

		this.scale.multiplyScalar( 0.5 );

		Object3D.prototype.updateMatrixWorld.call( this, force );

	};

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 */

	function PlaneHelper( plane, size, hex ) {

		this.type = 'PlaneHelper';

		this.plane = plane;

		this.size = ( size === undefined ) ? 1 : size;

		var color = ( hex !== undefined ) ? hex : 0xffff00;

		var positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];

		var geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );
		geometry.computeBoundingSphere();

		Line.call( this, geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );

		//

		var positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];

		var geometry2 = new BufferGeometry();
		geometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );
		geometry2.computeBoundingSphere();

		this.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );

	}

	PlaneHelper.prototype = Object.create( Line.prototype );
	PlaneHelper.prototype.constructor = PlaneHelper;

	PlaneHelper.prototype.updateMatrixWorld = function ( force ) {

		var scale = - this.plane.constant;

		if ( Math.abs( scale ) < 1e-8 ) { scale = 1e-8; } // sign does not matter

		this.scale.set( 0.5 * this.size, 0.5 * this.size, scale );

		this.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here

		this.lookAt( this.plane.normal );

		Object3D.prototype.updateMatrixWorld.call( this, force );

	};

	/**
	 * @author WestLangley / http://github.com/WestLangley
	 * @author zz85 / http://github.com/zz85
	 * @author bhouston / http://clara.io
	 *
	 * Creates an arrow for visualizing directions
	 *
	 * Parameters:
	 *  dir - Vector3
	 *  origin - Vector3
	 *  length - Number
	 *  color - color in hex value
	 *  headLength - Number
	 *  headWidth - Number
	 */

	var _axis = new Vector3();
	var _lineGeometry, _coneGeometry;

	function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {

		// dir is assumed to be normalized

		Object3D.call( this );

		if ( dir === undefined ) { dir = new Vector3( 0, 0, 1 ); }
		if ( origin === undefined ) { origin = new Vector3( 0, 0, 0 ); }
		if ( length === undefined ) { length = 1; }
		if ( color === undefined ) { color = 0xffff00; }
		if ( headLength === undefined ) { headLength = 0.2 * length; }
		if ( headWidth === undefined ) { headWidth = 0.2 * headLength; }

		if ( _lineGeometry === undefined ) {

			_lineGeometry = new BufferGeometry();
			_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );

			_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );
			_coneGeometry.translate( 0, - 0.5, 0 );

		}

		this.position.copy( origin );

		this.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );
		this.line.matrixAutoUpdate = false;
		this.add( this.line );

		this.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );
		this.cone.matrixAutoUpdate = false;
		this.add( this.cone );

		this.setDirection( dir );
		this.setLength( length, headLength, headWidth );

	}

	ArrowHelper.prototype = Object.create( Object3D.prototype );
	ArrowHelper.prototype.constructor = ArrowHelper;

	ArrowHelper.prototype.setDirection = function ( dir ) {

		// dir is assumed to be normalized

		if ( dir.y > 0.99999 ) {

			this.quaternion.set( 0, 0, 0, 1 );

		} else if ( dir.y < - 0.99999 ) {

			this.quaternion.set( 1, 0, 0, 0 );

		} else {

			_axis.set( dir.z, 0, - dir.x ).normalize();

			var radians = Math.acos( dir.y );

			this.quaternion.setFromAxisAngle( _axis, radians );

		}

	};

	ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {

		if ( headLength === undefined ) { headLength = 0.2 * length; }
		if ( headWidth === undefined ) { headWidth = 0.2 * headLength; }

		this.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458
		this.line.updateMatrix();

		this.cone.scale.set( headWidth, headLength, headWidth );
		this.cone.position.y = length;
		this.cone.updateMatrix();

	};

	ArrowHelper.prototype.setColor = function ( color ) {

		this.line.material.color.set( color );
		this.cone.material.color.set( color );

	};

	ArrowHelper.prototype.copy = function ( source ) {

		Object3D.prototype.copy.call( this, source, false );

		this.line.copy( source.line );
		this.cone.copy( source.cone );

		return this;

	};

	ArrowHelper.prototype.clone = function () {

		return new this.constructor().copy( this );

	};

	/**
	 * @author sroucheray / http://sroucheray.org/
	 * @author mrdoob / http://mrdoob.com/
	 */

	function AxesHelper( size ) {

		size = size || 1;

		var vertices = [
			0, 0, 0,	size, 0, 0,
			0, 0, 0,	0, size, 0,
			0, 0, 0,	0, 0, size
		];

		var colors = [
			1, 0, 0,	1, 0.6, 0,
			0, 1, 0,	0.6, 1, 0,
			0, 0, 1,	0, 0.6, 1
		];

		var geometry = new BufferGeometry();
		geometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );
		geometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );

		var material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );

		LineSegments.call( this, geometry, material );

	}

	AxesHelper.prototype = Object.create( LineSegments.prototype );
	AxesHelper.prototype.constructor = AxesHelper;

	/**
	 * @author Emmett Lalish / elalish
	 *
	 * This class generates a Prefiltered, Mipmapped Radiance Environment Map
	 * (PMREM) from a cubeMap environment texture. This allows different levels of
	 * blur to be quickly accessed based on material roughness. It is packed into a
	 * special CubeUV format that allows us to perform custom interpolation so that
	 * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap
	 * chain, it only goes down to the LOD_MIN level (above), and then creates extra
	 * even more filtered 'mips' at the same LOD_MIN resolution, associated with
	 * higher roughness levels. In this way we maintain resolution to smoothly
	 * interpolate diffuse lighting while limiting sampling computation.
	 */

	var LOD_MIN = 4;
	var LOD_MAX = 8;
	var SIZE_MAX = Math.pow( 2, LOD_MAX );
	// The standard deviations (radians) associated with the extra mips. These are
	// chosen to approximate a Trowbridge-Reitz distribution function times the
	// geometric shadowing function. These sigma values squared must match the
	// variance #defines in cube_uv_reflection_fragment.glsl.js.
	var EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];
	var TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;
	// The maximum length of the blur for loop. Smaller sigmas will use fewer
	// samples and exit early, but not recompile the shader.
	var MAX_SAMPLES = 20;
	var ENCODINGS = {};
	ENCODINGS[ LinearEncoding ] = 0;
	ENCODINGS[ sRGBEncoding ] = 1;
	ENCODINGS[ RGBEEncoding ] = 2;
	ENCODINGS[ RGBM7Encoding ] = 3;
	ENCODINGS[ RGBM16Encoding ] = 4;
	ENCODINGS[ RGBDEncoding ] = 5;
	ENCODINGS[ GammaEncoding ] = 6;

	var _flatCamera = new OrthographicCamera();
	var _blurMaterial = _getBlurShader( MAX_SAMPLES );
	var _equirectShader = null;
	var _cubemapShader = null;

	var ref = _createPlanes();
	var _lodPlanes = ref._lodPlanes;
	var _sizeLods = ref._sizeLods;
	var _sigmas = ref._sigmas;
	var _pingPongRenderTarget = null;
	var _renderer = null;

	var _oldTarget = null;

	// Golden Ratio
	var PHI = ( 1 + Math.sqrt( 5 ) ) / 2;
	var INV_PHI = 1 / PHI;
	// Vertices of a dodecahedron (except the opposites, which represent the
	// same axis), used as axis directions evenly spread on a sphere.
	var _axisDirections = [
		new Vector3( 1, 1, 1 ),
		new Vector3( - 1, 1, 1 ),
		new Vector3( 1, 1, - 1 ),
		new Vector3( - 1, 1, - 1 ),
		new Vector3( 0, PHI, INV_PHI ),
		new Vector3( 0, PHI, - INV_PHI ),
		new Vector3( INV_PHI, 0, PHI ),
		new Vector3( - INV_PHI, 0, PHI ),
		new Vector3( PHI, INV_PHI, 0 ),
		new Vector3( - PHI, INV_PHI, 0 ) ];

	function PMREMGenerator( renderer ) {

		_renderer = renderer;
		_compileMaterial( _blurMaterial );

	}

	PMREMGenerator.prototype = {

		constructor: PMREMGenerator,

		/**
		 * Generates a PMREM from a supplied Scene, which can be faster than using an
		 * image if networking bandwidth is low. Optional sigma specifies a blur radius
		 * in radians to be applied to the scene before PMREM generation. Optional near
		 * and far planes ensure the scene is rendered in its entirety (the cubeCamera
		 * is placed at the origin).
		 */
		fromScene: function ( scene, sigma, near, far ) {
			if ( sigma === void 0 ) sigma = 0;
			if ( near === void 0 ) near = 0.1;
			if ( far === void 0 ) far = 100;


			_oldTarget = _renderer.getRenderTarget();
			var cubeUVRenderTarget = _allocateTargets();
			_sceneToCubeUV( scene, near, far, cubeUVRenderTarget );
			if ( sigma > 0 ) {

				_blur( cubeUVRenderTarget, 0, 0, sigma );

			}
			_applyPMREM( cubeUVRenderTarget );
			_cleanup( cubeUVRenderTarget );

			return cubeUVRenderTarget;

		},

		/**
		 * Generates a PMREM from an equirectangular texture, which can be either LDR
		 * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),
		 * as this matches best with the 256 x 256 cubemap output.
		 */
		fromEquirectangular: function ( equirectangular ) {

			equirectangular.magFilter = NearestFilter;
			equirectangular.minFilter = NearestFilter;
			equirectangular.generateMipmaps = false;

			return this.fromCubemap( equirectangular );

		},

		/**
		 * Generates a PMREM from an cubemap texture, which can be either LDR
		 * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,
		 * as this matches best with the 256 x 256 cubemap output.
		 */
		fromCubemap: function ( cubemap ) {

			_oldTarget = _renderer.getRenderTarget();
			var cubeUVRenderTarget = _allocateTargets( cubemap );
			_textureToCubeUV( cubemap, cubeUVRenderTarget );
			_applyPMREM( cubeUVRenderTarget );
			_cleanup( cubeUVRenderTarget );

			return cubeUVRenderTarget;

		},

		/**
		 * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during
		 * your texture's network fetch for increased concurrency.
		 */
		compileCubemapShader: function () {

			if ( _cubemapShader == null ) {

				_cubemapShader = _getCubemapShader();
				_compileMaterial( _cubemapShader );

			}

		},

		/**
		 * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during
		 * your texture's network fetch for increased concurrency.
		 */
		compileEquirectangularShader: function () {

			if ( _equirectShader == null ) {

				_equirectShader = _getEquirectShader();
				_compileMaterial( _equirectShader );

			}

		},

		/**
		 * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,
		 * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on
		 * one of them will cause any others to also become unusable.
		 */
		dispose: function () {

			_blurMaterial.dispose();

			if ( _cubemapShader != null ) { _cubemapShader.dispose(); }
			if ( _equirectShader != null ) { _equirectShader.dispose(); }

			for ( var i = 0; i < _lodPlanes.length; i ++ ) {

				_lodPlanes[ i ].dispose();

			}

		},

	};

	function _createPlanes() {

		var _lodPlanes = [];
		var _sizeLods = [];
		var _sigmas = [];

		var lod = LOD_MAX;
		for ( var i = 0; i < TOTAL_LODS; i ++ ) {

			var sizeLod = Math.pow( 2, lod );
			_sizeLods.push( sizeLod );
			var sigma = 1.0 / sizeLod;
			if ( i > LOD_MAX - LOD_MIN ) {

				sigma = EXTRA_LOD_SIGMA[ i - LOD_MAX + LOD_MIN - 1 ];

			} else if ( i == 0 ) {

				sigma = 0;

			}
			_sigmas.push( sigma );

			var texelSize = 1.0 / ( sizeLod - 1 );
			var min = - texelSize / 2;
			var max = 1 + texelSize / 2;
			var uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];

			var cubeFaces = 6;
			var vertices = 6;
			var positionSize = 3;
			var uvSize = 2;
			var faceIndexSize = 1;

			var position = new Float32Array( positionSize * vertices * cubeFaces );
			var uv = new Float32Array( uvSize * vertices * cubeFaces );
			var faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );

			for ( var face = 0; face < cubeFaces; face ++ ) {

				var x = ( face % 3 ) * 2 / 3 - 1;
				var y = face > 2 ? 0 : - 1;
				var coordinates = [
					x, y, 0,
					x + 2 / 3, y, 0,
					x + 2 / 3, y + 1, 0,
					x, y, 0,
					x + 2 / 3, y + 1, 0,
					x, y + 1, 0
				];
				position.set( coordinates, positionSize * vertices * face );
				uv.set( uv1, uvSize * vertices * face );
				var fill = [ face, face, face, face, face, face ];
				faceIndex.set( fill, faceIndexSize * vertices * face );

			}
			var planes = new BufferGeometry();
			planes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );
			planes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );
			planes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );
			_lodPlanes.push( planes );

			if ( lod > LOD_MIN ) {

				lod --;

			}

		}
		return { _lodPlanes: _lodPlanes, _sizeLods: _sizeLods, _sigmas: _sigmas };

	}

	function _allocateTargets( equirectangular ) {

		var params = {
			magFilter: NearestFilter,
			minFilter: NearestFilter,
			generateMipmaps: false,
			type: equirectangular ? equirectangular.type : UnsignedByteType,
			format: equirectangular ? equirectangular.format : RGBEFormat,
			encoding: equirectangular ? equirectangular.encoding : RGBEEncoding,
			depthBuffer: false,
			stencilBuffer: false
		};
		var cubeUVRenderTarget = _createRenderTarget( params );
		cubeUVRenderTarget.depthBuffer = equirectangular ? false : true;
		_pingPongRenderTarget = _createRenderTarget( params );
		return cubeUVRenderTarget;

	}

	function _cleanup( outputTarget ) {

		_pingPongRenderTarget.dispose();
		_renderer.setRenderTarget( _oldTarget );
		outputTarget.scissorTest = false;
		// reset viewport and scissor
		outputTarget.setSize( outputTarget.width, outputTarget.height );

	}

	function _sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {

		var fov = 90;
		var aspect = 1;
		var cubeCamera = new PerspectiveCamera( fov, aspect, near, far );
		var upSign = [ 1, 1, 1, 1, - 1, 1 ];
		var forwardSign = [ 1, 1, - 1, - 1, - 1, 1 ];

		var outputEncoding = _renderer.outputEncoding;
		var toneMapping = _renderer.toneMapping;
		var toneMappingExposure = _renderer.toneMappingExposure;
		var clearColor = _renderer.getClearColor();
		var clearAlpha = _renderer.getClearAlpha();

		_renderer.toneMapping = LinearToneMapping;
		_renderer.toneMappingExposure = 1.0;
		_renderer.outputEncoding = LinearEncoding;
		scene.scale.z *= - 1;

		var background = scene.background;
		if ( background && background.isColor ) {

			background.convertSRGBToLinear();
			// Convert linear to RGBE
			var maxComponent = Math.max( background.r, background.g, background.b );
			var fExp = Math.min( Math.max( Math.ceil( Math.log2( maxComponent ) ), - 128.0 ), 127.0 );
			background = background.multiplyScalar( Math.pow( 2.0, - fExp ) );
			var alpha = ( fExp + 128.0 ) / 255.0;
			_renderer.setClearColor( background, alpha );
			scene.background = null;

		}

		for ( var i = 0; i < 6; i ++ ) {

			var col = i % 3;
			if ( col == 0 ) {

				cubeCamera.up.set( 0, upSign[ i ], 0 );
				cubeCamera.lookAt( forwardSign[ i ], 0, 0 );

			} else if ( col == 1 ) {

				cubeCamera.up.set( 0, 0, upSign[ i ] );
				cubeCamera.lookAt( 0, forwardSign[ i ], 0 );

			} else {

				cubeCamera.up.set( 0, upSign[ i ], 0 );
				cubeCamera.lookAt( 0, 0, forwardSign[ i ] );

			}
			_setViewport( cubeUVRenderTarget,
				col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX );
			_renderer.setRenderTarget( cubeUVRenderTarget );
			_renderer.render( scene, cubeCamera );

		}

		_renderer.toneMapping = toneMapping;
		_renderer.toneMappingExposure = toneMappingExposure;
		_renderer.outputEncoding = outputEncoding;
		_renderer.setClearColor( clearColor, clearAlpha );
		scene.scale.z *= - 1;

	}

	function _textureToCubeUV( texture, cubeUVRenderTarget ) {

		var scene = new Scene();
		if ( texture.isCubeTexture ) {

			if ( _cubemapShader == null ) {

				_cubemapShader = _getCubemapShader();

			}

		} else {

			if ( _equirectShader == null ) {

				_equirectShader = _getEquirectShader();

			}

		}
		var material = texture.isCubeTexture ? _cubemapShader : _equirectShader;
		scene.add( new Mesh( _lodPlanes[ 0 ], material ) );
		var uniforms = material.uniforms;

		uniforms[ 'envMap' ].value = texture;
		if ( ! texture.isCubeTexture ) {

			uniforms[ 'texelSize' ].value.set( 1.0 / texture.image.width, 1.0 / texture.image.height );

		}
		uniforms[ 'inputEncoding' ].value = ENCODINGS[ texture.encoding ];
		uniforms[ 'outputEncoding' ].value = ENCODINGS[ texture.encoding ];

		_setViewport( cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX );
		_renderer.setRenderTarget( cubeUVRenderTarget );
		_renderer.render( scene, _flatCamera );

	}

	function _compileMaterial( material ) {

		var tmpScene = new Scene();
		tmpScene.add( new Mesh( _lodPlanes[ 0 ], material ) );
		_renderer.compile( tmpScene, _flatCamera );

	}

	function _createRenderTarget( params ) {

		var cubeUVRenderTarget = new WebGLRenderTarget( 3 * SIZE_MAX, 3 * SIZE_MAX, params );
		cubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;
		cubeUVRenderTarget.texture.name = 'PMREM.cubeUv';
		cubeUVRenderTarget.scissorTest = true;
		return cubeUVRenderTarget;

	}

	function _setViewport( target, x, y, width, height ) {

		target.viewport.set( x, y, width, height );
		target.scissor.set( x, y, width, height );

	}

	function _applyPMREM( cubeUVRenderTarget ) {

		var autoClear = _renderer.autoClear;
		_renderer.autoClear = false;

		for ( var i = 1; i < TOTAL_LODS; i ++ ) {

			var sigma = Math.sqrt(
				_sigmas[ i ] * _sigmas[ i ] -
			_sigmas[ i - 1 ] * _sigmas[ i - 1 ] );
			var poleAxis =
			_axisDirections[ ( i - 1 ) % _axisDirections.length ];
			_blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );

		}

		_renderer.autoClear = autoClear;

	}

	/**
	 * This is a two-pass Gaussian blur for a cubemap. Normally this is done
	 * vertically and horizontally, but this breaks down on a cube. Here we apply
	 * the blur latitudinally (around the poles), and then longitudinally (towards
	 * the poles) to approximate the orthogonally-separable blur. It is least
	 * accurate at the poles, but still does a decent job.
	 */
	function _blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {

		_halfBlur(
			cubeUVRenderTarget,
			_pingPongRenderTarget,
			lodIn,
			lodOut,
			sigma,
			'latitudinal',
			poleAxis );

		_halfBlur(
			_pingPongRenderTarget,
			cubeUVRenderTarget,
			lodOut,
			lodOut,
			sigma,
			'longitudinal',
			poleAxis );

	}

	function _halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {

		if ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {

			console.error(
				'blur direction must be either latitudinal or longitudinal!' );

		}

		// Number of standard deviations at which to cut off the discrete approximation.
		var STANDARD_DEVIATIONS = 3;

		var blurScene = new Scene();
		blurScene.add( new Mesh( _lodPlanes[ lodOut ], _blurMaterial ) );
		var blurUniforms = _blurMaterial.uniforms;

		var pixels = _sizeLods[ lodIn ] - 1;
		var radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );
		var sigmaPixels = sigmaRadians / radiansPerPixel;
		var samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;

		if ( samples > MAX_SAMPLES ) {

			console.warn( ("sigmaRadians, " + sigmaRadians + ", is too large and will clip, as it requested " + samples + " samples when the maximum is set to " + MAX_SAMPLES) );

		}

		var weights = [];
		var sum = 0;

		for ( var i = 0; i < MAX_SAMPLES; ++ i ) {

			var x = i / sigmaPixels;
			var weight = Math.exp( - x * x / 2 );
			weights.push( weight );

			if ( i == 0 ) {

				sum += weight;

			} else if ( i < samples ) {

				sum += 2 * weight;

			}

		}

		for ( var i = 0; i < weights.length; i ++ ) {

			weights[ i ] = weights[ i ] / sum;

		}

		blurUniforms[ 'envMap' ].value = targetIn.texture;
		blurUniforms[ 'samples' ].value = samples;
		blurUniforms[ 'weights' ].value = weights;
		blurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';
		if ( poleAxis ) {

			blurUniforms[ 'poleAxis' ].value = poleAxis;

		}
		blurUniforms[ 'dTheta' ].value = radiansPerPixel;
		blurUniforms[ 'mipInt' ].value = LOD_MAX - lodIn;
		blurUniforms[ 'inputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];
		blurUniforms[ 'outputEncoding' ].value = ENCODINGS[ targetIn.texture.encoding ];

		var outputSize = _sizeLods[ lodOut ];
		var x = 3 * Math.max( 0, SIZE_MAX - 2 * outputSize );
		var y = ( lodOut === 0 ? 0 : 2 * SIZE_MAX ) +
		2 * outputSize *
			( lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0 );

		_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );
		_renderer.setRenderTarget( targetOut );
		_renderer.render( blurScene, _flatCamera );

	}

	function _getBlurShader( maxSamples ) {

		var weights = new Float32Array( maxSamples );
		var poleAxis = new Vector3( 0, 1, 0 );
		var shaderMaterial = new RawShaderMaterial( {

			defines: { 'n': maxSamples },

			uniforms: {
				'envMap': { value: null },
				'samples': { value: 1 },
				'weights': { value: weights },
				'latitudinal': { value: false },
				'dTheta': { value: 0 },
				'mipInt': { value: 0 },
				'poleAxis': { value: poleAxis },
				'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },
				'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }
			},

			vertexShader: _getCommonVertexShader(),

			fragmentShader: ("\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform int samples;\nuniform float weights[n];\nuniform bool latitudinal;\nuniform float dTheta;\nuniform float mipInt;\nuniform vec3 poleAxis;\n\n" + (_getEncodings()) + "\n\n#define ENVMAP_TYPE_CUBE_UV\n#include <cube_uv_reflection_fragment>\n\nvec3 getSample(float theta, vec3 axis) {\n\tfloat cosTheta = cos(theta);\n\t// Rodrigues' axis-angle rotation\n\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t+ cross(axis, vOutputDirection) * sin(theta)\n\t\t+ axis * dot(axis, vOutputDirection) * (1.0 - cosTheta);\n\treturn bilinearCubeUV(envMap, sampleDirection, mipInt);\n}\n\nvoid main() {\n\tvec3 axis = latitudinal ? poleAxis : cross(poleAxis, vOutputDirection);\n\tif (all(equal(axis, vec3(0.0))))\n\t\taxis = vec3(vOutputDirection.z, 0.0, - vOutputDirection.x);\n\taxis = normalize(axis);\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb += weights[0] * getSample(0.0, axis);\n\tfor (int i = 1; i < n; i++) {\n\t\tif (i >= samples)\n\t\t\tbreak;\n\t\tfloat theta = dTheta * float(i);\n\t\tgl_FragColor.rgb += weights[i] * getSample(-1.0 * theta, axis);\n\t\tgl_FragColor.rgb += weights[i] * getSample(theta, axis);\n\t}\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),

			blending: NoBlending,
			depthTest: false,
			depthWrite: false

		} );

		shaderMaterial.type = 'SphericalGaussianBlur';

		return shaderMaterial;

	}

	function _getEquirectShader() {

		var texelSize = new Vector2( 1, 1 );
		var shaderMaterial = new RawShaderMaterial( {

			uniforms: {
				'envMap': { value: null },
				'texelSize': { value: texelSize },
				'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },
				'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }
			},

			vertexShader: _getCommonVertexShader(),

			fragmentShader: ("\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform sampler2D envMap;\nuniform vec2 texelSize;\n\n" + (_getEncodings()) + "\n\n#define RECIPROCAL_PI 0.31830988618\n#define RECIPROCAL_PI2 0.15915494\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tvec3 outputDirection = normalize(vOutputDirection);\n\tvec2 uv;\n\tuv.y = asin(clamp(outputDirection.y, -1.0, 1.0)) * RECIPROCAL_PI + 0.5;\n\tuv.x = atan(outputDirection.z, outputDirection.x) * RECIPROCAL_PI2 + 0.5;\n\tvec2 f = fract(uv / texelSize - 0.5);\n\tuv -= f * texelSize;\n\tvec3 tl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x += texelSize.x;\n\tvec3 tr = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.y += texelSize.y;\n\tvec3 br = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tuv.x -= texelSize.x;\n\tvec3 bl = envMapTexelToLinear(texture2D(envMap, uv)).rgb;\n\tvec3 tm = mix(tl, tr, f.x);\n\tvec3 bm = mix(bl, br, f.x);\n\tgl_FragColor.rgb = mix(tm, bm, f.y);\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),

			blending: NoBlending,
			depthTest: false,
			depthWrite: false

		} );

		shaderMaterial.type = 'EquirectangularToCubeUV';

		return shaderMaterial;

	}

	function _getCubemapShader() {

		var shaderMaterial = new RawShaderMaterial( {

			uniforms: {
				'envMap': { value: null },
				'inputEncoding': { value: ENCODINGS[ LinearEncoding ] },
				'outputEncoding': { value: ENCODINGS[ LinearEncoding ] }
			},

			vertexShader: _getCommonVertexShader(),

			fragmentShader: ("\nprecision mediump float;\nprecision mediump int;\nvarying vec3 vOutputDirection;\nuniform samplerCube envMap;\n\n" + (_getEncodings()) + "\n\nvoid main() {\n\tgl_FragColor = vec4(0.0);\n\tgl_FragColor.rgb = envMapTexelToLinear(textureCube(envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ))).rgb;\n\tgl_FragColor = linearToOutputTexel(gl_FragColor);\n}\n\t\t"),

			blending: NoBlending,
			depthTest: false,
			depthWrite: false

		} );

		shaderMaterial.type = 'CubemapToCubeUV';

		return shaderMaterial;

	}

	function _getCommonVertexShader() {

		return "\nprecision mediump float;\nprecision mediump int;\nattribute vec3 position;\nattribute vec2 uv;\nattribute float faceIndex;\nvarying vec3 vOutputDirection;\nvec3 getDirection(vec2 uv, float face) {\n\tuv = 2.0 * uv - 1.0;\n\tvec3 direction = vec3(uv, 1.0);\n\tif (face == 0.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 1.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.z *= -1.0;\n\t} else if (face == 3.0) {\n\t\tdirection = direction.zyx;\n\t\tdirection.x *= -1.0;\n\t} else if (face == 4.0) {\n\t\tdirection = direction.xzy;\n\t\tdirection.y *= -1.0;\n\t} else if (face == 5.0) {\n\t\tdirection.xz *= -1.0;\n\t}\n\treturn direction;\n}\nvoid main() {\n\tvOutputDirection = getDirection(uv, faceIndex);\n\tgl_Position = vec4( position, 1.0 );\n}\n\t";

	}

	function _getEncodings() {

		return "\nuniform int inputEncoding;\nuniform int outputEncoding;\n\n#include <encodings_pars_fragment>\n\nvec4 inputTexelToLinear(vec4 value){\n\tif(inputEncoding == 0){\n\t\treturn value;\n\t}else if(inputEncoding == 1){\n\t\treturn sRGBToLinear(value);\n\t}else if(inputEncoding == 2){\n\t\treturn RGBEToLinear(value);\n\t}else if(inputEncoding == 3){\n\t\treturn RGBMToLinear(value, 7.0);\n\t}else if(inputEncoding == 4){\n\t\treturn RGBMToLinear(value, 16.0);\n\t}else if(inputEncoding == 5){\n\t\treturn RGBDToLinear(value, 256.0);\n\t}else{\n\t\treturn GammaToLinear(value, 2.2);\n\t}\n}\n\nvec4 linearToOutputTexel(vec4 value){\n\tif(outputEncoding == 0){\n\t\treturn value;\n\t}else if(outputEncoding == 1){\n\t\treturn LinearTosRGB(value);\n\t}else if(outputEncoding == 2){\n\t\treturn LinearToRGBE(value);\n\t}else if(outputEncoding == 3){\n\t\treturn LinearToRGBM(value, 7.0);\n\t}else if(outputEncoding == 4){\n\t\treturn LinearToRGBM(value, 16.0);\n\t}else if(outputEncoding == 5){\n\t\treturn LinearToRGBD(value, 256.0);\n\t}else{\n\t\treturn LinearToGamma(value, 2.2);\n\t}\n}\n\nvec4 envMapTexelToLinear(vec4 color) {\n\treturn inputTexelToLinear(color);\n}\n\t";

	}

	/**
	 * @author mrdoob / http://mrdoob.com/
	 */

	function Face4( a, b, c, d, normal, color, materialIndex ) {

		console.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );
		return new Face3( a, b, c, normal, color, materialIndex );

	}

	var LineStrip = 0;
	var LinePieces = 1;
	var NoColors = 0;
	var FaceColors = 1;
	var VertexColors = 2;

	function MeshFaceMaterial( materials ) {

		console.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );
		return materials;

	}

	function MultiMaterial( materials ) {

		if ( materials === undefined ) { materials = []; }

		console.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );
		materials.isMultiMaterial = true;
		materials.materials = materials;
		materials.clone = function () {

			return materials.slice();

		};
		return materials;

	}

	function PointCloud( geometry, material ) {

		console.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );
		return new Points( geometry, material );

	}

	function Particle( material ) {

		console.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );
		return new Sprite( material );

	}

	function ParticleSystem( geometry, material ) {

		console.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );
		return new Points( geometry, material );

	}

	function PointCloudMaterial( parameters ) {

		console.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );
		return new PointsMaterial( parameters );

	}

	function ParticleBasicMaterial( parameters ) {

		console.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );
		return new PointsMaterial( parameters );

	}

	function ParticleSystemMaterial( parameters ) {

		console.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );
		return new PointsMaterial( parameters );

	}

	function Vertex( x, y, z ) {

		console.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );
		return new Vector3( x, y, z );

	}

	//

	function DynamicBufferAttribute( array, itemSize ) {

		console.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.' );
		return new BufferAttribute( array, itemSize ).setUsage( DynamicDrawUsage );

	}

	function Int8Attribute( array, itemSize ) {

		console.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );
		return new Int8BufferAttribute( array, itemSize );

	}

	function Uint8Attribute( array, itemSize ) {

		console.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );
		return new Uint8BufferAttribute( array, itemSize );

	}

	function Uint8ClampedAttribute( array, itemSize ) {

		console.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );
		return new Uint8ClampedBufferAttribute( array, itemSize );

	}

	function Int16Attribute( array, itemSize ) {

		console.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );
		return new Int16BufferAttribute( array, itemSize );

	}

	function Uint16Attribute( array, itemSize ) {

		console.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );
		return new Uint16BufferAttribute( array, itemSize );

	}

	function Int32Attribute( array, itemSize ) {

		console.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );
		return new Int32BufferAttribute( array, itemSize );

	}

	function Uint32Attribute( array, itemSize ) {

		console.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );
		return new Uint32BufferAttribute( array, itemSize );

	}

	function Float32Attribute( array, itemSize ) {

		console.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );
		return new Float32BufferAttribute( array, itemSize );

	}

	function Float64Attribute( array, itemSize ) {

		console.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );
		return new Float64BufferAttribute( array, itemSize );

	}

	//

	Curve.create = function ( construct, getPoint ) {

		console.log( 'THREE.Curve.create() has been deprecated' );

		construct.prototype = Object.create( Curve.prototype );
		construct.prototype.constructor = construct;
		construct.prototype.getPoint = getPoint;

		return construct;

	};

	//

	Object.assign( CurvePath.prototype, {

		createPointsGeometry: function ( divisions ) {

			console.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );

			// generate geometry from path points (for Line or Points objects)

			var pts = this.getPoints( divisions );
			return this.createGeometry( pts );

		},

		createSpacedPointsGeometry: function ( divisions ) {

			console.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );

			// generate geometry from equidistant sampling along the path

			var pts = this.getSpacedPoints( divisions );
			return this.createGeometry( pts );

		},

		createGeometry: function ( points ) {

			console.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );

			var geometry = new Geometry();

			for ( var i = 0, l = points.length; i < l; i ++ ) {

				var point = points[ i ];
				geometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );

			}

			return geometry;

		}

	} );

	//

	Object.assign( Path.prototype, {

		fromPoints: function ( points ) {

			console.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );
			return this.setFromPoints( points );

		}

	} );

	//

	function ClosedSplineCurve3( points ) {

		console.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );

		CatmullRomCurve3.call( this, points );
		this.type = 'catmullrom';
		this.closed = true;

	}

	ClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );

	//

	function SplineCurve3( points ) {

		console.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );

		CatmullRomCurve3.call( this, points );
		this.type = 'catmullrom';

	}

	SplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );

	//

	function Spline( points ) {

		console.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );

		CatmullRomCurve3.call( this, points );
		this.type = 'catmullrom';

	}

	Spline.prototype = Object.create( CatmullRomCurve3.prototype );

	Object.assign( Spline.prototype, {

		initFromArray: function ( /* a */ ) {

			console.error( 'THREE.Spline: .initFromArray() has been removed.' );

		},
		getControlPointsArray: function ( /* optionalTarget */ ) {

			console.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );

		},
		reparametrizeByArcLength: function ( /* samplingCoef */ ) {

			console.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );

		}

	} );

	//

	function AxisHelper( size ) {

		console.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );
		return new AxesHelper( size );

	}

	function BoundingBoxHelper( object, color ) {

		console.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );
		return new BoxHelper( object, color );

	}

	function EdgesHelper( object, hex ) {

		console.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );
		return new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

	}

	GridHelper.prototype.setColors = function () {

		console.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );

	};

	SkeletonHelper.prototype.update = function () {

		console.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );

	};

	function WireframeHelper( object, hex ) {

		console.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );
		return new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );

	}

	//

	Object.assign( Loader.prototype, {

		extractUrlBase: function ( url ) {

			console.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );
			return LoaderUtils.extractUrlBase( url );

		}

	} );

	Loader.Handlers = {

		add: function ( /* regex, loader */ ) {

			console.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );

		},

		get: function ( /* file */ ) {

			console.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );

		}

	};

	function XHRLoader( manager ) {

		console.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );
		return new FileLoader( manager );

	}

	function BinaryTextureLoader( manager ) {

		console.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );
		return new DataTextureLoader( manager );

	}

	Object.assign( ObjectLoader.prototype, {

		setTexturePath: function ( value ) {

			console.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );
			return this.setResourcePath( value );

		}

	} );

	//

	Object.assign( Box2.prototype, {

		center: function ( optionalTarget ) {

			console.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );
			return this.getCenter( optionalTarget );

		},
		empty: function () {

			console.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );
			return this.isEmpty();

		},
		isIntersectionBox: function ( box ) {

			console.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );
			return this.intersectsBox( box );

		},
		size: function ( optionalTarget ) {

			console.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );
			return this.getSize( optionalTarget );

		}
	} );

	Object.assign( Box3.prototype, {

		center: function ( optionalTarget ) {

			console.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );
			return this.getCenter( optionalTarget );

		},
		empty: function () {

			console.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );
			return this.isEmpty();

		},
		isIntersectionBox: function ( box ) {

			console.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );
			return this.intersectsBox( box );

		},
		isIntersectionSphere: function ( sphere ) {

			console.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
			return this.intersectsSphere( sphere );

		},
		size: function ( optionalTarget ) {

			console.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );
			return this.getSize( optionalTarget );

		}
	} );

	Frustum.prototype.setFromMatrix = function ( m ) {

		console.warn( 'THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().' );
		return this.setFromProjectionMatrix( m );

	};

	Line3.prototype.center = function ( optionalTarget ) {

		console.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );
		return this.getCenter( optionalTarget );

	};

	Object.assign( MathUtils, {

		random16: function () {

			console.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );
			return Math.random();

		},

		nearestPowerOfTwo: function ( value ) {

			console.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );
			return MathUtils.floorPowerOfTwo( value );

		},

		nextPowerOfTwo: function ( value ) {

			console.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );
			return MathUtils.ceilPowerOfTwo( value );

		}

	} );

	Object.assign( Matrix3.prototype, {

		flattenToArrayOffset: function ( array, offset ) {

			console.warn( "THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead." );
			return this.toArray( array, offset );

		},
		multiplyVector3: function ( vector ) {

			console.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );
			return vector.applyMatrix3( this );

		},
		multiplyVector3Array: function ( /* a */ ) {

			console.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );

		},
		applyToBufferAttribute: function ( attribute ) {

			console.warn( 'THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.' );
			return attribute.applyMatrix3( this );

		},
		applyToVector3Array: function ( /* array, offset, length */ ) {

			console.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );

		}

	} );

	Object.assign( Matrix4.prototype, {

		extractPosition: function ( m ) {

			console.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );
			return this.copyPosition( m );

		},
		flattenToArrayOffset: function ( array, offset ) {

			console.warn( "THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead." );
			return this.toArray( array, offset );

		},
		getPosition: function () {

			console.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );
			return new Vector3().setFromMatrixColumn( this, 3 );

		},
		setRotationFromQuaternion: function ( q ) {

			console.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );
			return this.makeRotationFromQuaternion( q );

		},
		multiplyToArray: function () {

			console.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );

		},
		multiplyVector3: function ( vector ) {

			console.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
			return vector.applyMatrix4( this );

		},
		multiplyVector4: function ( vector ) {

			console.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
			return vector.applyMatrix4( this );

		},
		multiplyVector3Array: function ( /* a */ ) {

			console.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );

		},
		rotateAxis: function ( v ) {

			console.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );
			v.transformDirection( this );

		},
		crossVector: function ( vector ) {

			console.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );
			return vector.applyMatrix4( this );

		},
		translate: function () {

			console.error( 'THREE.Matrix4: .translate() has been removed.' );

		},
		rotateX: function () {

			console.error( 'THREE.Matrix4: .rotateX() has been removed.' );

		},
		rotateY: function () {

			console.error( 'THREE.Matrix4: .rotateY() has been removed.' );

		},
		rotateZ: function () {

			console.error( 'THREE.Matrix4: .rotateZ() has been removed.' );

		},
		rotateByAxis: function () {

			console.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );

		},
		applyToBufferAttribute: function ( attribute ) {

			console.warn( 'THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.' );
			return attribute.applyMatrix4( this );

		},
		applyToVector3Array: function ( /* array, offset, length */ ) {

			console.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );

		},
		makeFrustum: function ( left, right, bottom, top, near, far ) {

			console.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );
			return this.makePerspective( left, right, top, bottom, near, far );

		}

	} );

	Plane.prototype.isIntersectionLine = function ( line ) {

		console.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );
		return this.intersectsLine( line );

	};

	Quaternion.prototype.multiplyVector3 = function ( vector ) {

		console.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );
		return vector.applyQuaternion( this );

	};

	Object.assign( Ray.prototype, {

		isIntersectionBox: function ( box ) {

			console.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );
			return this.intersectsBox( box );

		},
		isIntersectionPlane: function ( plane ) {

			console.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );
			return this.intersectsPlane( plane );

		},
		isIntersectionSphere: function ( sphere ) {

			console.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );
			return this.intersectsSphere( sphere );

		}

	} );

	Object.assign( Triangle.prototype, {

		area: function () {

			console.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );
			return this.getArea();

		},
		barycoordFromPoint: function ( point, target ) {

			console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );
			return this.getBarycoord( point, target );

		},
		midpoint: function ( target ) {

			console.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );
			return this.getMidpoint( target );

		},
		normal: function ( target ) {

			console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );
			return this.getNormal( target );

		},
		plane: function ( target ) {

			console.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );
			return this.getPlane( target );

		}

	} );

	Object.assign( Triangle, {

		barycoordFromPoint: function ( point, a, b, c, target ) {

			console.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );
			return Triangle.getBarycoord( point, a, b, c, target );

		},
		normal: function ( a, b, c, target ) {

			console.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );
			return Triangle.getNormal( a, b, c, target );

		}

	} );

	Object.assign( Shape.prototype, {

		extractAllPoints: function ( divisions ) {

			console.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );
			return this.extractPoints( divisions );

		},
		extrude: function ( options ) {

			console.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );
			return new ExtrudeGeometry( this, options );

		},
		makeGeometry: function ( options ) {

			console.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );
			return new ShapeGeometry( this, options );

		}

	} );

	Object.assign( Vector2.prototype, {

		fromAttribute: function ( attribute, index, offset ) {

			console.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );
			return this.fromBufferAttribute( attribute, index, offset );

		},
		distanceToManhattan: function ( v ) {

			console.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );
			return this.manhattanDistanceTo( v );

		},
		lengthManhattan: function () {

			console.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );
			return this.manhattanLength();

		}

	} );

	Object.assign( Vector3.prototype, {

		setEulerFromRotationMatrix: function () {

			console.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );

		},
		setEulerFromQuaternion: function () {

			console.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );

		},
		getPositionFromMatrix: function ( m ) {

			console.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );
			return this.setFromMatrixPosition( m );

		},
		getScaleFromMatrix: function ( m ) {

			console.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );
			return this.setFromMatrixScale( m );

		},
		getColumnFromMatrix: function ( index, matrix ) {

			console.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );
			return this.setFromMatrixColumn( matrix, index );

		},
		applyProjection: function ( m ) {

			console.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );
			return this.applyMatrix4( m );

		},
		fromAttribute: function ( attribute, index, offset ) {

			console.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );
			return this.fromBufferAttribute( attribute, index, offset );

		},
		distanceToManhattan: function ( v ) {

			console.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );
			return this.manhattanDistanceTo( v );

		},
		lengthManhattan: function () {

			console.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );
			return this.manhattanLength();

		}

	} );

	Object.assign( Vector4.prototype, {

		fromAttribute: function ( attribute, index, offset ) {

			console.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );
			return this.fromBufferAttribute( attribute, index, offset );

		},
		lengthManhattan: function () {

			console.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );
			return this.manhattanLength();

		}

	} );

	//

	Object.assign( Geometry.prototype, {

		computeTangents: function () {

			console.error( 'THREE.Geometry: .computeTangents() has been removed.' );

		},
		computeLineDistances: function () {

			console.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );

		},
		applyMatrix: function ( matrix ) {

			console.warn( 'THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4().' );
			return this.applyMatrix4( matrix );

		}

	} );

	Object.assign( Object3D.prototype, {

		getChildByName: function ( name ) {

			console.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );
			return this.getObjectByName( name );

		},
		renderDepth: function () {

			console.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );

		},
		translate: function ( distance, axis ) {

			console.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );
			return this.translateOnAxis( axis, distance );

		},
		getWorldRotation: function () {

			console.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );

		},
		applyMatrix: function ( matrix ) {

			console.warn( 'THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().' );
			return this.applyMatrix4( matrix );

		}

	} );

	Object.defineProperties( Object3D.prototype, {

		eulerOrder: {
			get: function () {

				console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
				return this.rotation.order;

			},
			set: function ( value ) {

				console.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );
				this.rotation.order = value;

			}
		},
		useQuaternion: {
			get: function () {

				console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

			},
			set: function () {

				console.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );

			}
		}

	} );

	Object.assign( Mesh.prototype, {

		setDrawMode: function () {

			console.error( 'THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );

		},

	} );

	Object.defineProperties( Mesh.prototype, {

		drawMode: {
			get: function () {

				console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.' );
				return TrianglesDrawMode;

			},
			set: function () {

				console.error( 'THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.' );

			}
		}

	} );

	Object.defineProperties( LOD.prototype, {

		objects: {
			get: function () {

				console.warn( 'THREE.LOD: .objects has been renamed to .levels.' );
				return this.levels;

			}
		}

	} );

	Object.defineProperty( Skeleton.prototype, 'useVertexTexture', {

		get: function () {

			console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );

		},
		set: function () {

			console.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );

		}

	} );

	SkinnedMesh.prototype.initBones = function () {

		console.error( 'THREE.SkinnedMesh: initBones() has been removed.' );

	};

	Object.defineProperty( Curve.prototype, '__arcLengthDivisions', {

		get: function () {

			console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );
			return this.arcLengthDivisions;

		},
		set: function ( value ) {

			console.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );
			this.arcLengthDivisions = value;

		}

	} );

	//

	PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {

		console.warn( "THREE.PerspectiveCamera.setLens is deprecated. " +
				"Use .setFocalLength and .filmGauge for a photographic setup." );

		if ( filmGauge !== undefined ) { this.filmGauge = filmGauge; }
		this.setFocalLength( focalLength );

	};

	//

	Object.defineProperties( Light.prototype, {
		onlyShadow: {
			set: function () {

				console.warn( 'THREE.Light: .onlyShadow has been removed.' );

			}
		},
		shadowCameraFov: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );
				this.shadow.camera.fov = value;

			}
		},
		shadowCameraLeft: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );
				this.shadow.camera.left = value;

			}
		},
		shadowCameraRight: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );
				this.shadow.camera.right = value;

			}
		},
		shadowCameraTop: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );
				this.shadow.camera.top = value;

			}
		},
		shadowCameraBottom: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );
				this.shadow.camera.bottom = value;

			}
		},
		shadowCameraNear: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );
				this.shadow.camera.near = value;

			}
		},
		shadowCameraFar: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );
				this.shadow.camera.far = value;

			}
		},
		shadowCameraVisible: {
			set: function () {

				console.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );

			}
		},
		shadowBias: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );
				this.shadow.bias = value;

			}
		},
		shadowDarkness: {
			set: function () {

				console.warn( 'THREE.Light: .shadowDarkness has been removed.' );

			}
		},
		shadowMapWidth: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );
				this.shadow.mapSize.width = value;

			}
		},
		shadowMapHeight: {
			set: function ( value ) {

				console.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );
				this.shadow.mapSize.height = value;

			}
		}
	} );

	//

	Object.defineProperties( BufferAttribute.prototype, {

		length: {
			get: function () {

				console.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );
				return this.array.length;

			}
		},
		dynamic: {
			get: function () {

				console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );
				return this.usage === DynamicDrawUsage;

			},
			set: function ( /* value */ ) {

				console.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );
				this.setUsage( DynamicDrawUsage );

			}
		}

	} );

	Object.assign( BufferAttribute.prototype, {
		setDynamic: function ( value ) {

			console.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );
			this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );
			return this;

		},
		copyIndicesArray: function ( /* indices */ ) {

			console.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );

		},
		setArray: function ( /* array */ ) {

			console.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );

		}
	} );

	Object.assign( BufferGeometry.prototype, {

		addIndex: function ( index ) {

			console.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );
			this.setIndex( index );

		},
		addAttribute: function ( name, attribute ) {

			console.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );

			if ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {

				console.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );

				return this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );

			}

			if ( name === 'index' ) {

				console.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );
				this.setIndex( attribute );

				return this;

			}

			return this.setAttribute( name, attribute );

		},
		addDrawCall: function ( start, count, indexOffset ) {

			if ( indexOffset !== undefined ) {

				console.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );

			}
			console.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );
			this.addGroup( start, count );

		},
		clearDrawCalls: function () {

			console.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );
			this.clearGroups();

		},
		computeTangents: function () {

			console.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );

		},
		computeOffsets: function () {

			console.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );

		},
		removeAttribute: function ( name ) {

			console.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );

			return this.deleteAttribute( name );

		},
		applyMatrix: function ( matrix ) {

			console.warn( 'THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().' );
			return this.applyMatrix4( matrix );

		}

	} );

	Object.defineProperties( BufferGeometry.prototype, {

		drawcalls: {
			get: function () {

				console.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );
				return this.groups;

			}
		},
		offsets: {
			get: function () {

				console.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );
				return this.groups;

			}
		}

	} );

	Object.defineProperties( Raycaster.prototype, {

		linePrecision: {
			get: function () {

				console.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );
				return this.params.Line.threshold;

			},
			set: function ( value ) {

				console.warn( 'THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead.' );
				this.params.Line.threshold = value;

			}
		}

	} );

	Object.defineProperties( InterleavedBuffer.prototype, {

		dynamic: {
			get: function () {

				console.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );
				return this.usage === DynamicDrawUsage;

			},
			set: function ( value ) {

				console.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );
				this.setUsage( value );

			}
		}

	} );

	Object.assign( InterleavedBuffer.prototype, {
		setDynamic: function ( value ) {

			console.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );
			this.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );
			return this;

		},
		setArray: function ( /* array */ ) {

			console.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );

		}
	} );

	//

	Object.assign( ExtrudeBufferGeometry.prototype, {

		getArrays: function () {

			console.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );

		},

		addShapeList: function () {

			console.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );

		},

		addShape: function () {

			console.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );

		}

	} );

	//

	Object.defineProperties( Uniform.prototype, {

		dynamic: {
			set: function () {

				console.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );

			}
		},
		onUpdate: {
			value: function () {

				console.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );
				return this;

			}
		}

	} );

	//

	Object.defineProperties( Material.prototype, {

		wrapAround: {
			get: function () {

				console.warn( 'THREE.Material: .wrapAround has been removed.' );

			},
			set: function () {

				console.warn( 'THREE.Material: .wrapAround has been removed.' );

			}
		},

		overdraw: {
			get: function () {

				console.warn( 'THREE.Material: .overdraw has been removed.' );

			},
			set: function () {

				console.warn( 'THREE.Material: .overdraw has been removed.' );

			}
		},

		wrapRGB: {
			get: function () {

				console.warn( 'THREE.Material: .wrapRGB has been removed.' );
				return new Color();

			}
		},

		shading: {
			get: function () {

				console.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );

			},
			set: function ( value ) {

				console.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );
				this.flatShading = ( value === FlatShading );

			}
		},

		stencilMask: {
			get: function () {

				console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );
				return this.stencilFuncMask;

			},
			set: function ( value ) {

				console.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );
				this.stencilFuncMask = value;

			}
		}

	} );

	Object.defineProperties( MeshPhongMaterial.prototype, {

		metal: {
			get: function () {

				console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );
				return false;

			},
			set: function () {

				console.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );

			}
		}

	} );

	Object.defineProperties( ShaderMaterial.prototype, {

		derivatives: {
			get: function () {

				console.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
				return this.extensions.derivatives;

			},
			set: function ( value ) {

				console.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );
				this.extensions.derivatives = value;

			}
		}

	} );

	//

	Object.assign( WebGLRenderer.prototype, {

		clearTarget: function ( renderTarget, color, depth, stencil ) {

			console.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );
			this.setRenderTarget( renderTarget );
			this.clear( color, depth, stencil );

		},
		animate: function ( callback ) {

			console.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );
			this.setAnimationLoop( callback );

		},
		getCurrentRenderTarget: function () {

			console.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );
			return this.getRenderTarget();

		},
		getMaxAnisotropy: function () {

			console.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );
			return this.capabilities.getMaxAnisotropy();

		},
		getPrecision: function () {

			console.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );
			return this.capabilities.precision;

		},
		resetGLState: function () {

			console.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );
			return this.state.reset();

		},
		supportsFloatTextures: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \'OES_texture_float\' ).' );
			return this.extensions.get( 'OES_texture_float' );

		},
		supportsHalfFloatTextures: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \'OES_texture_half_float\' ).' );
			return this.extensions.get( 'OES_texture_half_float' );

		},
		supportsStandardDerivatives: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \'OES_standard_derivatives\' ).' );
			return this.extensions.get( 'OES_standard_derivatives' );

		},
		supportsCompressedTextureS3TC: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \'WEBGL_compressed_texture_s3tc\' ).' );
			return this.extensions.get( 'WEBGL_compressed_texture_s3tc' );

		},
		supportsCompressedTexturePVRTC: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \'WEBGL_compressed_texture_pvrtc\' ).' );
			return this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );

		},
		supportsBlendMinMax: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \'EXT_blend_minmax\' ).' );
			return this.extensions.get( 'EXT_blend_minmax' );

		},
		supportsVertexTextures: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );
			return this.capabilities.vertexTextures;

		},
		supportsInstancedArrays: function () {

			console.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \'ANGLE_instanced_arrays\' ).' );
			return this.extensions.get( 'ANGLE_instanced_arrays' );

		},
		enableScissorTest: function ( boolean ) {

			console.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );
			this.setScissorTest( boolean );

		},
		initMaterial: function () {

			console.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );

		},
		addPrePlugin: function () {

			console.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );

		},
		addPostPlugin: function () {

			console.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );

		},
		updateShadowMap: function () {

			console.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );

		},
		setFaceCulling: function () {

			console.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );

		},
		allocTextureUnit: function () {

			console.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );

		},
		setTexture: function () {

			console.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );

		},
		setTexture2D: function () {

			console.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );

		},
		setTextureCube: function () {

			console.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );

		},
		getActiveMipMapLevel: function () {

			console.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );
			return this.getActiveMipmapLevel();

		}

	} );

	Object.defineProperties( WebGLRenderer.prototype, {

		shadowMapEnabled: {
			get: function () {

				return this.shadowMap.enabled;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );
				this.shadowMap.enabled = value;

			}
		},
		shadowMapType: {
			get: function () {

				return this.shadowMap.type;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );
				this.shadowMap.type = value;

			}
		},
		shadowMapCullFace: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );
				return undefined;

			},
			set: function ( /* value */ ) {

				console.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );

			}
		},
		context: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );
				return this.getContext();

			}
		},
		vr: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .vr has been renamed to .xr' );
				return this.xr;

			}
		},
		gammaInput: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );
				return false;

			},
			set: function () {

				console.warn( 'THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.' );

			}
		},
		gammaOutput: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );
				return false;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.' );
				this.outputEncoding = ( value === true ) ? sRGBEncoding : LinearEncoding;

			}
		}

	} );

	Object.defineProperties( WebGLShadowMap.prototype, {

		cullFace: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );
				return undefined;

			},
			set: function ( /* cullFace */ ) {

				console.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );

			}
		},
		renderReverseSided: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );
				return undefined;

			},
			set: function () {

				console.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );

			}
		},
		renderSingleSided: {
			get: function () {

				console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );
				return undefined;

			},
			set: function () {

				console.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );

			}
		}

	} );

	function WebGLRenderTargetCube( width, height, options ) {

		console.warn( 'THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).' );
		return new WebGLCubeRenderTarget( width, options );

	}

	//

	Object.defineProperties( WebGLRenderTarget.prototype, {

		wrapS: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
				return this.texture.wrapS;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );
				this.texture.wrapS = value;

			}
		},
		wrapT: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
				return this.texture.wrapT;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );
				this.texture.wrapT = value;

			}
		},
		magFilter: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
				return this.texture.magFilter;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );
				this.texture.magFilter = value;

			}
		},
		minFilter: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
				return this.texture.minFilter;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );
				this.texture.minFilter = value;

			}
		},
		anisotropy: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
				return this.texture.anisotropy;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );
				this.texture.anisotropy = value;

			}
		},
		offset: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
				return this.texture.offset;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );
				this.texture.offset = value;

			}
		},
		repeat: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
				return this.texture.repeat;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );
				this.texture.repeat = value;

			}
		},
		format: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
				return this.texture.format;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );
				this.texture.format = value;

			}
		},
		type: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
				return this.texture.type;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );
				this.texture.type = value;

			}
		},
		generateMipmaps: {
			get: function () {

				console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
				return this.texture.generateMipmaps;

			},
			set: function ( value ) {

				console.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );
				this.texture.generateMipmaps = value;

			}
		}

	} );

	//

	Object.defineProperties( Audio.prototype, {

		load: {
			value: function ( file ) {

				console.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );
				var scope = this;
				var audioLoader = new AudioLoader();
				audioLoader.load( file, function ( buffer ) {

					scope.setBuffer( buffer );

				} );
				return this;

			}
		},
		startTime: {
			set: function () {

				console.warn( 'THREE.Audio: .startTime is now .play( delay ).' );

			}
		}

	} );

	AudioAnalyser.prototype.getData = function () {

		console.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );
		return this.getFrequencyData();

	};

	//

	CubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {

		console.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );
		return this.update( renderer, scene );

	};

	//

	var GeometryUtils = {

		merge: function ( geometry1, geometry2, materialIndexOffset ) {

			console.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );
			var matrix;

			if ( geometry2.isMesh ) {

				geometry2.matrixAutoUpdate && geometry2.updateMatrix();

				matrix = geometry2.matrix;
				geometry2 = geometry2.geometry;

			}

			geometry1.merge( geometry2, matrix, materialIndexOffset );

		},

		center: function ( geometry ) {

			console.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );
			return geometry.center();

		}

	};

	ImageUtils.crossOrigin = undefined;

	ImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {

		console.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );

		var loader = new TextureLoader();
		loader.setCrossOrigin( this.crossOrigin );

		var texture = loader.load( url, onLoad, undefined, onError );

		if ( mapping ) { texture.mapping = mapping; }

		return texture;

	};

	ImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {

		console.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );

		var loader = new CubeTextureLoader();
		loader.setCrossOrigin( this.crossOrigin );

		var texture = loader.load( urls, onLoad, undefined, onError );

		if ( mapping ) { texture.mapping = mapping; }

		return texture;

	};

	ImageUtils.loadCompressedTexture = function () {

		console.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );

	};

	ImageUtils.loadCompressedTextureCube = function () {

		console.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );

	};

	//

	function CanvasRenderer() {

		console.error( 'THREE.CanvasRenderer has been removed' );

	}

	//

	function JSONLoader() {

		console.error( 'THREE.JSONLoader has been removed.' );

	}

	//

	var SceneUtils = {

		createMultiMaterialObject: function ( /* geometry, materials */ ) {

			console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

		},

		detach: function ( /* child, parent, scene */ ) {

			console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

		},

		attach: function ( /* child, scene, parent */ ) {

			console.error( 'THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js' );

		}

	};

	//

	function LensFlare() {

		console.error( 'THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js' );

	}

	if ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {

		/* eslint-disable no-undef */
		__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {
			revision: REVISION,
		} } ) );
		/* eslint-enable no-undef */

	}

	exports.ACESFilmicToneMapping = ACESFilmicToneMapping;
	exports.AddEquation = AddEquation;
	exports.AddOperation = AddOperation;
	exports.AdditiveBlending = AdditiveBlending;
	exports.AlphaFormat = AlphaFormat;
	exports.AlwaysDepth = AlwaysDepth;
	exports.AlwaysStencilFunc = AlwaysStencilFunc;
	exports.AmbientLight = AmbientLight;
	exports.AmbientLightProbe = AmbientLightProbe;
	exports.AnimationClip = AnimationClip;
	exports.AnimationLoader = AnimationLoader;
	exports.AnimationMixer = AnimationMixer;
	exports.AnimationObjectGroup = AnimationObjectGroup;
	exports.AnimationUtils = AnimationUtils;
	exports.ArcCurve = ArcCurve;
	exports.ArrayCamera = ArrayCamera;
	exports.ArrowHelper = ArrowHelper;
	exports.Audio = Audio;
	exports.AudioAnalyser = AudioAnalyser;
	exports.AudioContext = AudioContext;
	exports.AudioListener = AudioListener;
	exports.AudioLoader = AudioLoader;
	exports.AxesHelper = AxesHelper;
	exports.AxisHelper = AxisHelper;
	exports.BackSide = BackSide;
	exports.BasicDepthPacking = BasicDepthPacking;
	exports.BasicShadowMap = BasicShadowMap;
	exports.BinaryTextureLoader = BinaryTextureLoader;
	exports.Bone = Bone;
	exports.BooleanKeyframeTrack = BooleanKeyframeTrack;
	exports.BoundingBoxHelper = BoundingBoxHelper;
	exports.Box2 = Box2;
	exports.Box3 = Box3;
	exports.Box3Helper = Box3Helper;
	exports.BoxBufferGeometry = BoxBufferGeometry;
	exports.BoxGeometry = BoxGeometry;
	exports.BoxHelper = BoxHelper;
	exports.BufferAttribute = BufferAttribute;
	exports.BufferGeometry = BufferGeometry;
	exports.BufferGeometryLoader = BufferGeometryLoader;
	exports.ByteType = ByteType;
	exports.Cache = Cache;
	exports.Camera = Camera;
	exports.CameraHelper = CameraHelper;
	exports.CanvasRenderer = CanvasRenderer;
	exports.CanvasTexture = CanvasTexture;
	exports.CatmullRomCurve3 = CatmullRomCurve3;
	exports.CineonToneMapping = CineonToneMapping;
	exports.CircleBufferGeometry = CircleBufferGeometry;
	exports.CircleGeometry = CircleGeometry;
	exports.ClampToEdgeWrapping = ClampToEdgeWrapping;
	exports.Clock = Clock;
	exports.ClosedSplineCurve3 = ClosedSplineCurve3;
	exports.Color = Color;
	exports.ColorKeyframeTrack = ColorKeyframeTrack;
	exports.CompressedTexture = CompressedTexture;
	exports.CompressedTextureLoader = CompressedTextureLoader;
	exports.ConeBufferGeometry = ConeBufferGeometry;
	exports.ConeGeometry = ConeGeometry;
	exports.CubeCamera = CubeCamera;
	exports.CubeGeometry = BoxGeometry;
	exports.CubeReflectionMapping = CubeReflectionMapping;
	exports.CubeRefractionMapping = CubeRefractionMapping;
	exports.CubeTexture = CubeTexture;
	exports.CubeTextureLoader = CubeTextureLoader;
	exports.CubeUVReflectionMapping = CubeUVReflectionMapping;
	exports.CubeUVRefractionMapping = CubeUVRefractionMapping;
	exports.CubicBezierCurve = CubicBezierCurve;
	exports.CubicBezierCurve3 = CubicBezierCurve3;
	exports.CubicInterpolant = CubicInterpolant;
	exports.CullFaceBack = CullFaceBack;
	exports.CullFaceFront = CullFaceFront;
	exports.CullFaceFrontBack = CullFaceFrontBack;
	exports.CullFaceNone = CullFaceNone;
	exports.Curve = Curve;
	exports.CurvePath = CurvePath;
	exports.CustomBlending = CustomBlending;
	exports.CylinderBufferGeometry = CylinderBufferGeometry;
	exports.CylinderGeometry = CylinderGeometry;
	exports.Cylindrical = Cylindrical;
	exports.DataTexture = DataTexture;
	exports.DataTexture2DArray = DataTexture2DArray;
	exports.DataTexture3D = DataTexture3D;
	exports.DataTextureLoader = DataTextureLoader;
	exports.DecrementStencilOp = DecrementStencilOp;
	exports.DecrementWrapStencilOp = DecrementWrapStencilOp;
	exports.DefaultLoadingManager = DefaultLoadingManager;
	exports.DepthFormat = DepthFormat;
	exports.DepthStencilFormat = DepthStencilFormat;
	exports.DepthTexture = DepthTexture;
	exports.DirectionalLight = DirectionalLight;
	exports.DirectionalLightHelper = DirectionalLightHelper;
	exports.DirectionalLightShadow = DirectionalLightShadow;
	exports.DiscreteInterpolant = DiscreteInterpolant;
	exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;
	exports.DodecahedronGeometry = DodecahedronGeometry;
	exports.DoubleSide = DoubleSide;
	exports.DstAlphaFactor = DstAlphaFactor;
	exports.DstColorFactor = DstColorFactor;
	exports.DynamicBufferAttribute = DynamicBufferAttribute;
	exports.DynamicCopyUsage = DynamicCopyUsage;
	exports.DynamicDrawUsage = DynamicDrawUsage;
	exports.DynamicReadUsage = DynamicReadUsage;
	exports.EdgesGeometry = EdgesGeometry;
	exports.EdgesHelper = EdgesHelper;
	exports.EllipseCurve = EllipseCurve;
	exports.EqualDepth = EqualDepth;
	exports.EqualStencilFunc = EqualStencilFunc;
	exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;
	exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;
	exports.Euler = Euler;
	exports.EventDispatcher = EventDispatcher;
	exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;
	exports.ExtrudeGeometry = ExtrudeGeometry;
	exports.Face3 = Face3;
	exports.Face4 = Face4;
	exports.FaceColors = FaceColors;
	exports.FileLoader = FileLoader;
	exports.FlatShading = FlatShading;
	exports.Float32Attribute = Float32Attribute;
	exports.Float32BufferAttribute = Float32BufferAttribute;
	exports.Float64Attribute = Float64Attribute;
	exports.Float64BufferAttribute = Float64BufferAttribute;
	exports.FloatType = FloatType;
	exports.Fog = Fog;
	exports.FogExp2 = FogExp2;
	exports.Font = Font;
	exports.FontLoader = FontLoader;
	exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;
	exports.FrontFaceDirectionCW = FrontFaceDirectionCW;
	exports.FrontSide = FrontSide;
	exports.Frustum = Frustum;
	exports.GammaEncoding = GammaEncoding;
	exports.Geometry = Geometry;
	exports.GeometryUtils = GeometryUtils;
	exports.GreaterDepth = GreaterDepth;
	exports.GreaterEqualDepth = GreaterEqualDepth;
	exports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;
	exports.GreaterStencilFunc = GreaterStencilFunc;
	exports.GridHelper = GridHelper;
	exports.Group = Group;
	exports.HalfFloatType = HalfFloatType;
	exports.HemisphereLight = HemisphereLight;
	exports.HemisphereLightHelper = HemisphereLightHelper;
	exports.HemisphereLightProbe = HemisphereLightProbe;
	exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;
	exports.IcosahedronGeometry = IcosahedronGeometry;
	exports.ImageBitmapLoader = ImageBitmapLoader;
	exports.ImageLoader = ImageLoader;
	exports.ImageUtils = ImageUtils;
	exports.ImmediateRenderObject = ImmediateRenderObject;
	exports.IncrementStencilOp = IncrementStencilOp;
	exports.IncrementWrapStencilOp = IncrementWrapStencilOp;
	exports.InstancedBufferAttribute = InstancedBufferAttribute;
	exports.InstancedBufferGeometry = InstancedBufferGeometry;
	exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;
	exports.InstancedMesh = InstancedMesh;
	exports.Int16Attribute = Int16Attribute;
	exports.Int16BufferAttribute = Int16BufferAttribute;
	exports.Int32Attribute = Int32Attribute;
	exports.Int32BufferAttribute = Int32BufferAttribute;
	exports.Int8Attribute = Int8Attribute;
	exports.Int8BufferAttribute = Int8BufferAttribute;
	exports.IntType = IntType;
	exports.InterleavedBuffer = InterleavedBuffer;
	exports.InterleavedBufferAttribute = InterleavedBufferAttribute;
	exports.Interpolant = Interpolant;
	exports.InterpolateDiscrete = InterpolateDiscrete;
	exports.InterpolateLinear = InterpolateLinear;
	exports.InterpolateSmooth = InterpolateSmooth;
	exports.InvertStencilOp = InvertStencilOp;
	exports.JSONLoader = JSONLoader;
	exports.KeepStencilOp = KeepStencilOp;
	exports.KeyframeTrack = KeyframeTrack;
	exports.LOD = LOD;
	exports.LatheBufferGeometry = LatheBufferGeometry;
	exports.LatheGeometry = LatheGeometry;
	exports.Layers = Layers;
	exports.LensFlare = LensFlare;
	exports.LessDepth = LessDepth;
	exports.LessEqualDepth = LessEqualDepth;
	exports.LessEqualStencilFunc = LessEqualStencilFunc;
	exports.LessStencilFunc = LessStencilFunc;
	exports.Light = Light;
	exports.LightProbe = LightProbe;
	exports.LightShadow = LightShadow;
	exports.Line = Line;
	exports.Line3 = Line3;
	exports.LineBasicMaterial = LineBasicMaterial;
	exports.LineCurve = LineCurve;
	exports.LineCurve3 = LineCurve3;
	exports.LineDashedMaterial = LineDashedMaterial;
	exports.LineLoop = LineLoop;
	exports.LinePieces = LinePieces;
	exports.LineSegments = LineSegments;
	exports.LineStrip = LineStrip;
	exports.LinearEncoding = LinearEncoding;
	exports.LinearFilter = LinearFilter;
	exports.LinearInterpolant = LinearInterpolant;
	exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;
	exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;
	exports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;
	exports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;
	exports.LinearToneMapping = LinearToneMapping;
	exports.Loader = Loader;
	exports.LoaderUtils = LoaderUtils;
	exports.LoadingManager = LoadingManager;
	exports.LogLuvEncoding = LogLuvEncoding;
	exports.LoopOnce = LoopOnce;
	exports.LoopPingPong = LoopPingPong;
	exports.LoopRepeat = LoopRepeat;
	exports.LuminanceAlphaFormat = LuminanceAlphaFormat;
	exports.LuminanceFormat = LuminanceFormat;
	exports.MOUSE = MOUSE;
	exports.Material = Material;
	exports.MaterialLoader = MaterialLoader;
	exports.Math = MathUtils;
	exports.MathUtils = MathUtils;
	exports.Matrix3 = Matrix3;
	exports.Matrix4 = Matrix4;
	exports.MaxEquation = MaxEquation;
	exports.Mesh = Mesh;
	exports.MeshBasicMaterial = MeshBasicMaterial;
	exports.MeshDepthMaterial = MeshDepthMaterial;
	exports.MeshDistanceMaterial = MeshDistanceMaterial;
	exports.MeshFaceMaterial = MeshFaceMaterial;
	exports.MeshLambertMaterial = MeshLambertMaterial;
	exports.MeshMatcapMaterial = MeshMatcapMaterial;
	exports.MeshNormalMaterial = MeshNormalMaterial;
	exports.MeshPhongMaterial = MeshPhongMaterial;
	exports.MeshPhysicalMaterial = MeshPhysicalMaterial;
	exports.MeshStandardMaterial = MeshStandardMaterial;
	exports.MeshToonMaterial = MeshToonMaterial;
	exports.MinEquation = MinEquation;
	exports.MirroredRepeatWrapping = MirroredRepeatWrapping;
	exports.MixOperation = MixOperation;
	exports.MultiMaterial = MultiMaterial;
	exports.MultiplyBlending = MultiplyBlending;
	exports.MultiplyOperation = MultiplyOperation;
	exports.NearestFilter = NearestFilter;
	exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;
	exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;
	exports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;
	exports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;
	exports.NeverDepth = NeverDepth;
	exports.NeverStencilFunc = NeverStencilFunc;
	exports.NoBlending = NoBlending;
	exports.NoColors = NoColors;
	exports.NoToneMapping = NoToneMapping;
	exports.NormalBlending = NormalBlending;
	exports.NotEqualDepth = NotEqualDepth;
	exports.NotEqualStencilFunc = NotEqualStencilFunc;
	exports.NumberKeyframeTrack = NumberKeyframeTrack;
	exports.Object3D = Object3D;
	exports.ObjectLoader = ObjectLoader;
	exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;
	exports.OctahedronBufferGeometry = OctahedronBufferGeometry;
	exports.OctahedronGeometry = OctahedronGeometry;
	exports.OneFactor = OneFactor;
	exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;
	exports.OneMinusDstColorFactor = OneMinusDstColorFactor;
	exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;
	exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;
	exports.OrthographicCamera = OrthographicCamera;
	exports.PCFShadowMap = PCFShadowMap;
	exports.PCFSoftShadowMap = PCFSoftShadowMap;
	exports.PMREMGenerator = PMREMGenerator;
	exports.ParametricBufferGeometry = ParametricBufferGeometry;
	exports.ParametricGeometry = ParametricGeometry;
	exports.Particle = Particle;
	exports.ParticleBasicMaterial = ParticleBasicMaterial;
	exports.ParticleSystem = ParticleSystem;
	exports.ParticleSystemMaterial = ParticleSystemMaterial;
	exports.Path = Path;
	exports.PerspectiveCamera = PerspectiveCamera;
	exports.Plane = Plane;
	exports.PlaneBufferGeometry = PlaneBufferGeometry;
	exports.PlaneGeometry = PlaneGeometry;
	exports.PlaneHelper = PlaneHelper;
	exports.PointCloud = PointCloud;
	exports.PointCloudMaterial = PointCloudMaterial;
	exports.PointLight = PointLight;
	exports.PointLightHelper = PointLightHelper;
	exports.Points = Points;
	exports.PointsMaterial = PointsMaterial;
	exports.PolarGridHelper = PolarGridHelper;
	exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;
	exports.PolyhedronGeometry = PolyhedronGeometry;
	exports.PositionalAudio = PositionalAudio;
	exports.PropertyBinding = PropertyBinding;
	exports.PropertyMixer = PropertyMixer;
	exports.QuadraticBezierCurve = QuadraticBezierCurve;
	exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;
	exports.Quaternion = Quaternion;
	exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;
	exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;
	exports.REVISION = REVISION;
	exports.RGBADepthPacking = RGBADepthPacking;
	exports.RGBAFormat = RGBAFormat;
	exports.RGBAIntegerFormat = RGBAIntegerFormat;
	exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;
	exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;
	exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;
	exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;
	exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;
	exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;
	exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;
	exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;
	exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;
	exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;
	exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;
	exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;
	exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;
	exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;
	exports.RGBA_BPTC_Format = RGBA_BPTC_Format;
	exports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;
	exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;
	exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;
	exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;
	exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;
	exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;
	exports.RGBDEncoding = RGBDEncoding;
	exports.RGBEEncoding = RGBEEncoding;
	exports.RGBEFormat = RGBEFormat;
	exports.RGBFormat = RGBFormat;
	exports.RGBIntegerFormat = RGBIntegerFormat;
	exports.RGBM16Encoding = RGBM16Encoding;
	exports.RGBM7Encoding = RGBM7Encoding;
	exports.RGB_ETC1_Format = RGB_ETC1_Format;
	exports.RGB_ETC2_Format = RGB_ETC2_Format;
	exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;
	exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;
	exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;
	exports.RGFormat = RGFormat;
	exports.RGIntegerFormat = RGIntegerFormat;
	exports.RawShaderMaterial = RawShaderMaterial;
	exports.Ray = Ray;
	exports.Raycaster = Raycaster;
	exports.RectAreaLight = RectAreaLight;
	exports.RedFormat = RedFormat;
	exports.RedIntegerFormat = RedIntegerFormat;
	exports.ReinhardToneMapping = ReinhardToneMapping;
	exports.RepeatWrapping = RepeatWrapping;
	exports.ReplaceStencilOp = ReplaceStencilOp;
	exports.ReverseSubtractEquation = ReverseSubtractEquation;
	exports.RingBufferGeometry = RingBufferGeometry;
	exports.RingGeometry = RingGeometry;
	exports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;
	exports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;
	exports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;
	exports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;
	exports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;
	exports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;
	exports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;
	exports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;
	exports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;
	exports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;
	exports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;
	exports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;
	exports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;
	exports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;
	exports.Scene = Scene;
	exports.SceneUtils = SceneUtils;
	exports.ShaderChunk = ShaderChunk;
	exports.ShaderLib = ShaderLib;
	exports.ShaderMaterial = ShaderMaterial;
	exports.ShadowMaterial = ShadowMaterial;
	exports.Shape = Shape;
	exports.ShapeBufferGeometry = ShapeBufferGeometry;
	exports.ShapeGeometry = ShapeGeometry;
	exports.ShapePath = ShapePath;
	exports.ShapeUtils = ShapeUtils;
	exports.ShortType = ShortType;
	exports.Skeleton = Skeleton;
	exports.SkeletonHelper = SkeletonHelper;
	exports.SkinnedMesh = SkinnedMesh;
	exports.SmoothShading = SmoothShading;
	exports.Sphere = Sphere;
	exports.SphereBufferGeometry = SphereBufferGeometry;
	exports.SphereGeometry = SphereGeometry;
	exports.Spherical = Spherical;
	exports.SphericalHarmonics3 = SphericalHarmonics3;
	exports.SphericalReflectionMapping = SphericalReflectionMapping;
	exports.Spline = Spline;
	exports.SplineCurve = SplineCurve;
	exports.SplineCurve3 = SplineCurve3;
	exports.SpotLight = SpotLight;
	exports.SpotLightHelper = SpotLightHelper;
	exports.SpotLightShadow = SpotLightShadow;
	exports.Sprite = Sprite;
	exports.SpriteMaterial = SpriteMaterial;
	exports.SrcAlphaFactor = SrcAlphaFactor;
	exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;
	exports.SrcColorFactor = SrcColorFactor;
	exports.StaticCopyUsage = StaticCopyUsage;
	exports.StaticDrawUsage = StaticDrawUsage;
	exports.StaticReadUsage = StaticReadUsage;
	exports.StereoCamera = StereoCamera;
	exports.StreamCopyUsage = StreamCopyUsage;
	exports.StreamDrawUsage = StreamDrawUsage;
	exports.StreamReadUsage = StreamReadUsage;
	exports.StringKeyframeTrack = StringKeyframeTrack;
	exports.SubtractEquation = SubtractEquation;
	exports.SubtractiveBlending = SubtractiveBlending;
	exports.TOUCH = TOUCH;
	exports.TangentSpaceNormalMap = TangentSpaceNormalMap;
	exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;
	exports.TetrahedronGeometry = TetrahedronGeometry;
	exports.TextBufferGeometry = TextBufferGeometry;
	exports.TextGeometry = TextGeometry;
	exports.Texture = Texture;
	exports.TextureLoader = TextureLoader;
	exports.TorusBufferGeometry = TorusBufferGeometry;
	exports.TorusGeometry = TorusGeometry;
	exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;
	exports.TorusKnotGeometry = TorusKnotGeometry;
	exports.Triangle = Triangle;
	exports.TriangleFanDrawMode = TriangleFanDrawMode;
	exports.TriangleStripDrawMode = TriangleStripDrawMode;
	exports.TrianglesDrawMode = TrianglesDrawMode;
	exports.TubeBufferGeometry = TubeBufferGeometry;
	exports.TubeGeometry = TubeGeometry;
	exports.UVMapping = UVMapping;
	exports.Uint16Attribute = Uint16Attribute;
	exports.Uint16BufferAttribute = Uint16BufferAttribute;
	exports.Uint32Attribute = Uint32Attribute;
	exports.Uint32BufferAttribute = Uint32BufferAttribute;
	exports.Uint8Attribute = Uint8Attribute;
	exports.Uint8BufferAttribute = Uint8BufferAttribute;
	exports.Uint8ClampedAttribute = Uint8ClampedAttribute;
	exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;
	exports.Uncharted2ToneMapping = Uncharted2ToneMapping;
	exports.Uniform = Uniform;
	exports.UniformsLib = UniformsLib;
	exports.UniformsUtils = UniformsUtils;
	exports.UnsignedByteType = UnsignedByteType;
	exports.UnsignedInt248Type = UnsignedInt248Type;
	exports.UnsignedIntType = UnsignedIntType;
	exports.UnsignedShort4444Type = UnsignedShort4444Type;
	exports.UnsignedShort5551Type = UnsignedShort5551Type;
	exports.UnsignedShort565Type = UnsignedShort565Type;
	exports.UnsignedShortType = UnsignedShortType;
	exports.VSMShadowMap = VSMShadowMap;
	exports.Vector2 = Vector2;
	exports.Vector3 = Vector3;
	exports.Vector4 = Vector4;
	exports.VectorKeyframeTrack = VectorKeyframeTrack;
	exports.Vertex = Vertex;
	exports.VertexColors = VertexColors;
	exports.VideoTexture = VideoTexture;
	exports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;
	exports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;
	exports.WebGLRenderTarget = WebGLRenderTarget;
	exports.WebGLRenderTargetCube = WebGLRenderTargetCube;
	exports.WebGLRenderer = WebGLRenderer;
	exports.WebGLUtils = WebGLUtils;
	exports.WireframeGeometry = WireframeGeometry;
	exports.WireframeHelper = WireframeHelper;
	exports.WrapAroundEnding = WrapAroundEnding;
	exports.XHRLoader = XHRLoader;
	exports.ZeroCurvatureEnding = ZeroCurvatureEnding;
	exports.ZeroFactor = ZeroFactor;
	exports.ZeroSlopeEnding = ZeroSlopeEnding;
	exports.ZeroStencilOp = ZeroStencilOp;
	exports.sRGBEncoding = sRGBEncoding;

	Object.defineProperty(exports, '__esModule', { value: true });

})));

/*
 * QRious v4.0.2
 * Copyright (C) 2017 Alasdair Mercer
 * Copyright (C) 2010 Tom Zerucha
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global.QRious = factory());
}(this, (function () { 'use strict';

  /*
   * Copyright (C) 2017 Alasdair Mercer, !ninja
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in all
   * copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
   * SOFTWARE.
   */

  /**
   * A bare-bones constructor for surrogate prototype swapping.
   *
   * @private
   * @constructor
   */
  var Constructor = /* istanbul ignore next */ function() {};
  /**
   * A reference to <code>Object.prototype.hasOwnProperty</code>.
   *
   * @private
   * @type {Function}
   */
  var hasOwnProperty = Object.prototype.hasOwnProperty;
  /**
   * A reference to <code>Array.prototype.slice</code>.
   *
   * @private
   * @type {Function}
   */
  var slice = Array.prototype.slice;

  /**
   * Creates an object which inherits the given <code>prototype</code>.
   *
   * Optionally, the created object can be extended further with the specified <code>properties</code>.
   *
   * @param {Object} prototype - the prototype to be inherited by the created object
   * @param {Object} [properties] - the optional properties to be extended by the created object
   * @return {Object} The newly created object.
   * @private
   */
  function createObject(prototype, properties) {
    var result;
    /* istanbul ignore next */
    if (typeof Object.create === 'function') {
      result = Object.create(prototype);
    } else {
      Constructor.prototype = prototype;
      result = new Constructor();
      Constructor.prototype = null;
    }

    if (properties) {
      extendObject(true, result, properties);
    }

    return result;
  }

  /**
   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or
   * <code>statics</code> provided.
   *
   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special
   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used
   * instead. The class name may also be used string representation for instances of the child constructor (via
   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.
   *
   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple
   * constructor which only calls the super constructor will be used instead.
   *
   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.
   *
   * @param {string} [name=this.class_] - the class name to be used for the child constructor
   * @param {Function} [constructor] - the constructor for the child
   * @param {Object} [prototype] - the prototype properties to be defined for the child
   * @param {Object} [statics] - the static properties to be defined for the child
   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.
   * @public
   */
  function extend(name, constructor, prototype, statics) {
    var superConstructor = this;

    if (typeof name !== 'string') {
      statics = prototype;
      prototype = constructor;
      constructor = name;
      name = null;
    }

    if (typeof constructor !== 'function') {
      statics = prototype;
      prototype = constructor;
      constructor = function() {
        return superConstructor.apply(this, arguments);
      };
    }

    extendObject(false, constructor, superConstructor, statics);

    constructor.prototype = createObject(superConstructor.prototype, prototype);
    constructor.prototype.constructor = constructor;

    constructor.class_ = name || superConstructor.class_;
    constructor.super_ = superConstructor;

    return constructor;
  }

  /**
   * Extends the specified <code>target</code> object with the properties in each of the <code>sources</code> provided.
   *
   * if any source is <code>null</code> it will be ignored.
   *
   * @param {boolean} own - <code>true</code> to only copy <b>own</b> properties from <code>sources</code> onto
   * <code>target</code>; otherwise <code>false</code>
   * @param {Object} target - the target object which should be extended
   * @param {...Object} [sources] - the source objects whose properties are to be copied onto <code>target</code>
   * @return {void}
   * @private
   */
  function extendObject(own, target, sources) {
    sources = slice.call(arguments, 2);

    var property;
    var source;

    for (var i = 0, length = sources.length; i < length; i++) {
      source = sources[i];

      for (property in source) {
        if (!own || hasOwnProperty.call(source, property)) {
          target[property] = source[property];
        }
      }
    }
  }

  var extend_1 = extend;

  /**
   * The base class from which all others should extend.
   *
   * @public
   * @constructor
   */
  function Nevis() {}
  Nevis.class_ = 'Nevis';
  Nevis.super_ = Object;

  /**
   * Extends the constructor to which this method is associated with the <code>prototype</code> and/or
   * <code>statics</code> provided.
   *
   * If <code>name</code> is provided, it will be used as the class name and can be accessed via a special
   * <code>class_</code> property on the child constructor, otherwise the class name of the super constructor will be used
   * instead. The class name may also be used string representation for instances of the child constructor (via
   * <code>toString</code>), but this is not applicable to the <i>lite</i> version of Nevis.
   *
   * If <code>constructor</code> is provided, it will be used as the constructor for the child, otherwise a simple
   * constructor which only calls the super constructor will be used instead.
   *
   * The super constructor can be accessed via a special <code>super_</code> property on the child constructor.
   *
   * @param {string} [name=this.class_] - the class name to be used for the child constructor
   * @param {Function} [constructor] - the constructor for the child
   * @param {Object} [prototype] - the prototype properties to be defined for the child
   * @param {Object} [statics] - the static properties to be defined for the child
   * @return {Function} The child <code>constructor</code> provided or the one created if none was given.
   * @public
   * @static
   * @memberof Nevis
   */
  Nevis.extend = extend_1;

  var nevis = Nevis;

  var lite = nevis;

  /**
   * Responsible for rendering a QR code {@link Frame} on a specific type of element.
   *
   * A renderer may be dependant on the rendering of another element, so the ordering of their execution is important.
   *
   * The rendering of a element can be deferred by disabling the renderer initially, however, any attempt get the element
   * from the renderer will result in it being immediately enabled and the element being rendered.
   *
   * @param {QRious} qrious - the {@link QRious} instance to be used
   * @param {*} element - the element onto which the QR code is to be rendered
   * @param {boolean} [enabled] - <code>true</code> this {@link Renderer} is enabled; otherwise <code>false</code>.
   * @public
   * @class
   * @extends Nevis
   */
  var Renderer = lite.extend(function(qrious, element, enabled) {
    /**
     * The {@link QRious} instance.
     *
     * @protected
     * @type {QRious}
     * @memberof Renderer#
     */
    this.qrious = qrious;

    /**
     * The element onto which this {@link Renderer} is rendering the QR code.
     *
     * @protected
     * @type {*}
     * @memberof Renderer#
     */
    this.element = element;
    this.element.qrious = qrious;

    /**
     * Whether this {@link Renderer} is enabled.
     *
     * @protected
     * @type {boolean}
     * @memberof Renderer#
     */
    this.enabled = Boolean(enabled);
  }, {

    /**
     * Draws the specified QR code <code>frame</code> on the underlying element.
     *
     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.
     *
     * @param {Frame} frame - the {@link Frame} to be drawn
     * @return {void}
     * @protected
     * @abstract
     * @memberof Renderer#
     */
    draw: function(frame) {},

    /**
     * Returns the element onto which this {@link Renderer} is rendering the QR code.
     *
     * If this method is called while this {@link Renderer} is disabled, it will be immediately enabled and rendered
     * before the element is returned.
     *
     * @return {*} The element.
     * @public
     * @memberof Renderer#
     */
    getElement: function() {
      if (!this.enabled) {
        this.enabled = true;
        this.render();
      }

      return this.element;
    },

    /**
     * Calculates the size (in pixel units) to represent an individual module within the QR code based on the
     * <code>frame</code> provided.
     *
     * Any configured padding will be excluded from the returned size.
     *
     * The returned value will be at least one, even in cases where the size of the QR code does not fit its contents.
     * This is done so that the inevitable clipping is handled more gracefully since this way at least something is
     * displayed instead of just a blank space filled by the background color.
     *
     * @param {Frame} frame - the {@link Frame} from which the module size is to be derived
     * @return {number} The pixel size for each module in the QR code which will be no less than one.
     * @protected
     * @memberof Renderer#
     */
    getModuleSize: function(frame) {
      var qrious = this.qrious;
      var padding = qrious.padding || 0;
      var pixels = Math.floor((qrious.size - (padding * 2)) / frame.width);

      return Math.max(1, pixels);
    },

    /**
     * Calculates the offset/padding (in pixel units) to be inserted before the QR code based on the <code>frame</code>
     * provided.
     *
     * The returned value will be zero if there is no available offset or if the size of the QR code does not fit its
     * contents. It will never be a negative value. This is done so that the inevitable clipping appears more naturally
     * and it is not clipped from all directions.
     *
     * @param {Frame} frame - the {@link Frame} from which the offset is to be derived
     * @return {number} The pixel offset for the QR code which will be no less than zero.
     * @protected
     * @memberof Renderer#
     */
    getOffset: function(frame) {
      var qrious = this.qrious;
      var padding = qrious.padding;

      if (padding != null) {
        return padding;
      }

      var moduleSize = this.getModuleSize(frame);
      var offset = Math.floor((qrious.size - (moduleSize * frame.width)) / 2);

      return Math.max(0, offset);
    },

    /**
     * Renders a QR code on the underlying element based on the <code>frame</code> provided.
     *
     * @param {Frame} frame - the {@link Frame} to be rendered
     * @return {void}
     * @public
     * @memberof Renderer#
     */
    render: function(frame) {
      if (this.enabled) {
        this.resize();
        this.reset();
        this.draw(frame);
      }
    },

    /**
     * Resets the underlying element, effectively clearing any previously rendered QR code.
     *
     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.
     *
     * @return {void}
     * @protected
     * @abstract
     * @memberof Renderer#
     */
    reset: function() {},

    /**
     * Ensures that the size of the underlying element matches that defined on the associated {@link QRious} instance.
     *
     * Implementations of {@link Renderer} <b>must</b> override this method with their own specific logic.
     *
     * @return {void}
     * @protected
     * @abstract
     * @memberof Renderer#
     */
    resize: function() {}

  });

  var Renderer_1 = Renderer;

  /**
   * An implementation of {@link Renderer} for working with <code>canvas</code> elements.
   *
   * @public
   * @class
   * @extends Renderer
   */
  var CanvasRenderer = Renderer_1.extend({

    /**
     * @override
     */
    draw: function(frame) {
      var i, j;
      var qrious = this.qrious;
      var moduleSize = this.getModuleSize(frame);
      var offset = this.getOffset(frame);
      var context = this.element.getContext('2d');

      context.fillStyle = qrious.foreground;
      context.globalAlpha = qrious.foregroundAlpha;

      for (i = 0; i < frame.width; i++) {
        for (j = 0; j < frame.width; j++) {
          if (frame.buffer[(j * frame.width) + i]) {
            context.fillRect((moduleSize * i) + offset, (moduleSize * j) + offset, moduleSize, moduleSize);
          }
        }
      }
    },

    /**
     * @override
     */
    reset: function() {
      var qrious = this.qrious;
      var context = this.element.getContext('2d');
      var size = qrious.size;

      context.lineWidth = 1;
      context.clearRect(0, 0, size, size);
      context.fillStyle = qrious.background;
      context.globalAlpha = qrious.backgroundAlpha;
      context.fillRect(0, 0, size, size);
    },

    /**
     * @override
     */
    resize: function() {
      var element = this.element;

      element.width = element.height = this.qrious.size;
    }

  });

  var CanvasRenderer_1 = CanvasRenderer;

  /* eslint no-multi-spaces: "off" */



  /**
   * Contains alignment pattern information.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var Alignment = lite.extend(null, {

    /**
     * The alignment pattern block.
     *
     * @public
     * @static
     * @type {number[]}
     * @memberof Alignment
     */
    BLOCK: [
      0,  11, 15, 19, 23, 27, 31,
      16, 18, 20, 22, 24, 26, 28, 20, 22, 24, 24, 26, 28, 28, 22, 24, 24,
      26, 26, 28, 28, 24, 24, 26, 26, 26, 28, 28, 24, 26, 26, 26, 28, 28
    ]

  });

  var Alignment_1 = Alignment;

  /* eslint no-multi-spaces: "off" */



  /**
   * Contains error correction information.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var ErrorCorrection = lite.extend(null, {

    /**
     * The error correction blocks.
     *
     * There are four elements per version. The first two indicate the number of blocks, then the data width, and finally
     * the ECC width.
     *
     * @public
     * @static
     * @type {number[]}
     * @memberof ErrorCorrection
     */
    BLOCKS: [
      1,  0,  19,  7,     1,  0,  16,  10,    1,  0,  13,  13,    1,  0,  9,   17,
      1,  0,  34,  10,    1,  0,  28,  16,    1,  0,  22,  22,    1,  0,  16,  28,
      1,  0,  55,  15,    1,  0,  44,  26,    2,  0,  17,  18,    2,  0,  13,  22,
      1,  0,  80,  20,    2,  0,  32,  18,    2,  0,  24,  26,    4,  0,  9,   16,
      1,  0,  108, 26,    2,  0,  43,  24,    2,  2,  15,  18,    2,  2,  11,  22,
      2,  0,  68,  18,    4,  0,  27,  16,    4,  0,  19,  24,    4,  0,  15,  28,
      2,  0,  78,  20,    4,  0,  31,  18,    2,  4,  14,  18,    4,  1,  13,  26,
      2,  0,  97,  24,    2,  2,  38,  22,    4,  2,  18,  22,    4,  2,  14,  26,
      2,  0,  116, 30,    3,  2,  36,  22,    4,  4,  16,  20,    4,  4,  12,  24,
      2,  2,  68,  18,    4,  1,  43,  26,    6,  2,  19,  24,    6,  2,  15,  28,
      4,  0,  81,  20,    1,  4,  50,  30,    4,  4,  22,  28,    3,  8,  12,  24,
      2,  2,  92,  24,    6,  2,  36,  22,    4,  6,  20,  26,    7,  4,  14,  28,
      4,  0,  107, 26,    8,  1,  37,  22,    8,  4,  20,  24,    12, 4,  11,  22,
      3,  1,  115, 30,    4,  5,  40,  24,    11, 5,  16,  20,    11, 5,  12,  24,
      5,  1,  87,  22,    5,  5,  41,  24,    5,  7,  24,  30,    11, 7,  12,  24,
      5,  1,  98,  24,    7,  3,  45,  28,    15, 2,  19,  24,    3,  13, 15,  30,
      1,  5,  107, 28,    10, 1,  46,  28,    1,  15, 22,  28,    2,  17, 14,  28,
      5,  1,  120, 30,    9,  4,  43,  26,    17, 1,  22,  28,    2,  19, 14,  28,
      3,  4,  113, 28,    3,  11, 44,  26,    17, 4,  21,  26,    9,  16, 13,  26,
      3,  5,  107, 28,    3,  13, 41,  26,    15, 5,  24,  30,    15, 10, 15,  28,
      4,  4,  116, 28,    17, 0,  42,  26,    17, 6,  22,  28,    19, 6,  16,  30,
      2,  7,  111, 28,    17, 0,  46,  28,    7,  16, 24,  30,    34, 0,  13,  24,
      4,  5,  121, 30,    4,  14, 47,  28,    11, 14, 24,  30,    16, 14, 15,  30,
      6,  4,  117, 30,    6,  14, 45,  28,    11, 16, 24,  30,    30, 2,  16,  30,
      8,  4,  106, 26,    8,  13, 47,  28,    7,  22, 24,  30,    22, 13, 15,  30,
      10, 2,  114, 28,    19, 4,  46,  28,    28, 6,  22,  28,    33, 4,  16,  30,
      8,  4,  122, 30,    22, 3,  45,  28,    8,  26, 23,  30,    12, 28, 15,  30,
      3,  10, 117, 30,    3,  23, 45,  28,    4,  31, 24,  30,    11, 31, 15,  30,
      7,  7,  116, 30,    21, 7,  45,  28,    1,  37, 23,  30,    19, 26, 15,  30,
      5,  10, 115, 30,    19, 10, 47,  28,    15, 25, 24,  30,    23, 25, 15,  30,
      13, 3,  115, 30,    2,  29, 46,  28,    42, 1,  24,  30,    23, 28, 15,  30,
      17, 0,  115, 30,    10, 23, 46,  28,    10, 35, 24,  30,    19, 35, 15,  30,
      17, 1,  115, 30,    14, 21, 46,  28,    29, 19, 24,  30,    11, 46, 15,  30,
      13, 6,  115, 30,    14, 23, 46,  28,    44, 7,  24,  30,    59, 1,  16,  30,
      12, 7,  121, 30,    12, 26, 47,  28,    39, 14, 24,  30,    22, 41, 15,  30,
      6,  14, 121, 30,    6,  34, 47,  28,    46, 10, 24,  30,    2,  64, 15,  30,
      17, 4,  122, 30,    29, 14, 46,  28,    49, 10, 24,  30,    24, 46, 15,  30,
      4,  18, 122, 30,    13, 32, 46,  28,    48, 14, 24,  30,    42, 32, 15,  30,
      20, 4,  117, 30,    40, 7,  47,  28,    43, 22, 24,  30,    10, 67, 15,  30,
      19, 6,  118, 30,    18, 31, 47,  28,    34, 34, 24,  30,    20, 61, 15,  30
    ],

    /**
     * The final format bits with mask (level << 3 | mask).
     *
     * @public
     * @static
     * @type {number[]}
     * @memberof ErrorCorrection
     */
    FINAL_FORMAT: [
      // L
      0x77c4, 0x72f3, 0x7daa, 0x789d, 0x662f, 0x6318, 0x6c41, 0x6976,
      // M
      0x5412, 0x5125, 0x5e7c, 0x5b4b, 0x45f9, 0x40ce, 0x4f97, 0x4aa0,
      // Q
      0x355f, 0x3068, 0x3f31, 0x3a06, 0x24b4, 0x2183, 0x2eda, 0x2bed,
      // H
      0x1689, 0x13be, 0x1ce7, 0x19d0, 0x0762, 0x0255, 0x0d0c, 0x083b
    ],

    /**
     * A map of human-readable ECC levels.
     *
     * @public
     * @static
     * @type {Object.<string, number>}
     * @memberof ErrorCorrection
     */
    LEVELS: {
      L: 1,
      M: 2,
      Q: 3,
      H: 4
    }

  });

  var ErrorCorrection_1 = ErrorCorrection;

  /**
   * Contains Galois field information.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var Galois = lite.extend(null, {

    /**
     * The Galois field exponent table.
     *
     * @public
     * @static
     * @type {number[]}
     * @memberof Galois
     */
    EXPONENT: [
      0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1d, 0x3a, 0x74, 0xe8, 0xcd, 0x87, 0x13, 0x26,
      0x4c, 0x98, 0x2d, 0x5a, 0xb4, 0x75, 0xea, 0xc9, 0x8f, 0x03, 0x06, 0x0c, 0x18, 0x30, 0x60, 0xc0,
      0x9d, 0x27, 0x4e, 0x9c, 0x25, 0x4a, 0x94, 0x35, 0x6a, 0xd4, 0xb5, 0x77, 0xee, 0xc1, 0x9f, 0x23,
      0x46, 0x8c, 0x05, 0x0a, 0x14, 0x28, 0x50, 0xa0, 0x5d, 0xba, 0x69, 0xd2, 0xb9, 0x6f, 0xde, 0xa1,
      0x5f, 0xbe, 0x61, 0xc2, 0x99, 0x2f, 0x5e, 0xbc, 0x65, 0xca, 0x89, 0x0f, 0x1e, 0x3c, 0x78, 0xf0,
      0xfd, 0xe7, 0xd3, 0xbb, 0x6b, 0xd6, 0xb1, 0x7f, 0xfe, 0xe1, 0xdf, 0xa3, 0x5b, 0xb6, 0x71, 0xe2,
      0xd9, 0xaf, 0x43, 0x86, 0x11, 0x22, 0x44, 0x88, 0x0d, 0x1a, 0x34, 0x68, 0xd0, 0xbd, 0x67, 0xce,
      0x81, 0x1f, 0x3e, 0x7c, 0xf8, 0xed, 0xc7, 0x93, 0x3b, 0x76, 0xec, 0xc5, 0x97, 0x33, 0x66, 0xcc,
      0x85, 0x17, 0x2e, 0x5c, 0xb8, 0x6d, 0xda, 0xa9, 0x4f, 0x9e, 0x21, 0x42, 0x84, 0x15, 0x2a, 0x54,
      0xa8, 0x4d, 0x9a, 0x29, 0x52, 0xa4, 0x55, 0xaa, 0x49, 0x92, 0x39, 0x72, 0xe4, 0xd5, 0xb7, 0x73,
      0xe6, 0xd1, 0xbf, 0x63, 0xc6, 0x91, 0x3f, 0x7e, 0xfc, 0xe5, 0xd7, 0xb3, 0x7b, 0xf6, 0xf1, 0xff,
      0xe3, 0xdb, 0xab, 0x4b, 0x96, 0x31, 0x62, 0xc4, 0x95, 0x37, 0x6e, 0xdc, 0xa5, 0x57, 0xae, 0x41,
      0x82, 0x19, 0x32, 0x64, 0xc8, 0x8d, 0x07, 0x0e, 0x1c, 0x38, 0x70, 0xe0, 0xdd, 0xa7, 0x53, 0xa6,
      0x51, 0xa2, 0x59, 0xb2, 0x79, 0xf2, 0xf9, 0xef, 0xc3, 0x9b, 0x2b, 0x56, 0xac, 0x45, 0x8a, 0x09,
      0x12, 0x24, 0x48, 0x90, 0x3d, 0x7a, 0xf4, 0xf5, 0xf7, 0xf3, 0xfb, 0xeb, 0xcb, 0x8b, 0x0b, 0x16,
      0x2c, 0x58, 0xb0, 0x7d, 0xfa, 0xe9, 0xcf, 0x83, 0x1b, 0x36, 0x6c, 0xd8, 0xad, 0x47, 0x8e, 0x00
    ],

    /**
     * The Galois field log table.
     *
     * @public
     * @static
     * @type {number[]}
     * @memberof Galois
     */
    LOG: [
      0xff, 0x00, 0x01, 0x19, 0x02, 0x32, 0x1a, 0xc6, 0x03, 0xdf, 0x33, 0xee, 0x1b, 0x68, 0xc7, 0x4b,
      0x04, 0x64, 0xe0, 0x0e, 0x34, 0x8d, 0xef, 0x81, 0x1c, 0xc1, 0x69, 0xf8, 0xc8, 0x08, 0x4c, 0x71,
      0x05, 0x8a, 0x65, 0x2f, 0xe1, 0x24, 0x0f, 0x21, 0x35, 0x93, 0x8e, 0xda, 0xf0, 0x12, 0x82, 0x45,
      0x1d, 0xb5, 0xc2, 0x7d, 0x6a, 0x27, 0xf9, 0xb9, 0xc9, 0x9a, 0x09, 0x78, 0x4d, 0xe4, 0x72, 0xa6,
      0x06, 0xbf, 0x8b, 0x62, 0x66, 0xdd, 0x30, 0xfd, 0xe2, 0x98, 0x25, 0xb3, 0x10, 0x91, 0x22, 0x88,
      0x36, 0xd0, 0x94, 0xce, 0x8f, 0x96, 0xdb, 0xbd, 0xf1, 0xd2, 0x13, 0x5c, 0x83, 0x38, 0x46, 0x40,
      0x1e, 0x42, 0xb6, 0xa3, 0xc3, 0x48, 0x7e, 0x6e, 0x6b, 0x3a, 0x28, 0x54, 0xfa, 0x85, 0xba, 0x3d,
      0xca, 0x5e, 0x9b, 0x9f, 0x0a, 0x15, 0x79, 0x2b, 0x4e, 0xd4, 0xe5, 0xac, 0x73, 0xf3, 0xa7, 0x57,
      0x07, 0x70, 0xc0, 0xf7, 0x8c, 0x80, 0x63, 0x0d, 0x67, 0x4a, 0xde, 0xed, 0x31, 0xc5, 0xfe, 0x18,
      0xe3, 0xa5, 0x99, 0x77, 0x26, 0xb8, 0xb4, 0x7c, 0x11, 0x44, 0x92, 0xd9, 0x23, 0x20, 0x89, 0x2e,
      0x37, 0x3f, 0xd1, 0x5b, 0x95, 0xbc, 0xcf, 0xcd, 0x90, 0x87, 0x97, 0xb2, 0xdc, 0xfc, 0xbe, 0x61,
      0xf2, 0x56, 0xd3, 0xab, 0x14, 0x2a, 0x5d, 0x9e, 0x84, 0x3c, 0x39, 0x53, 0x47, 0x6d, 0x41, 0xa2,
      0x1f, 0x2d, 0x43, 0xd8, 0xb7, 0x7b, 0xa4, 0x76, 0xc4, 0x17, 0x49, 0xec, 0x7f, 0x0c, 0x6f, 0xf6,
      0x6c, 0xa1, 0x3b, 0x52, 0x29, 0x9d, 0x55, 0xaa, 0xfb, 0x60, 0x86, 0xb1, 0xbb, 0xcc, 0x3e, 0x5a,
      0xcb, 0x59, 0x5f, 0xb0, 0x9c, 0xa9, 0xa0, 0x51, 0x0b, 0xf5, 0x16, 0xeb, 0x7a, 0x75, 0x2c, 0xd7,
      0x4f, 0xae, 0xd5, 0xe9, 0xe6, 0xe7, 0xad, 0xe8, 0x74, 0xd6, 0xf4, 0xea, 0xa8, 0x50, 0x58, 0xaf
    ]

  });

  var Galois_1 = Galois;

  /**
   * Contains version pattern information.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var Version = lite.extend(null, {

    /**
     * The version pattern block.
     *
     * @public
     * @static
     * @type {number[]}
     * @memberof Version
     */
    BLOCK: [
      0xc94, 0x5bc, 0xa99, 0x4d3, 0xbf6, 0x762, 0x847, 0x60d, 0x928, 0xb78, 0x45d, 0xa17, 0x532,
      0x9a6, 0x683, 0x8c9, 0x7ec, 0xec4, 0x1e1, 0xfab, 0x08e, 0xc1a, 0x33f, 0xd75, 0x250, 0x9d5,
      0x6f0, 0x8ba, 0x79f, 0xb0b, 0x42e, 0xa64, 0x541, 0xc69
    ]

  });

  var Version_1 = Version;

  /**
   * Generates information for a QR code frame based on a specific value to be encoded.
   *
   * @param {Frame~Options} options - the options to be used
   * @public
   * @class
   * @extends Nevis
   */
  var Frame = lite.extend(function(options) {
    var dataBlock, eccBlock, index, neccBlock1, neccBlock2;
    var valueLength = options.value.length;

    this._badness = [];
    this._level = ErrorCorrection_1.LEVELS[options.level];
    this._polynomial = [];
    this._value = options.value;
    this._version = 0;
    this._stringBuffer = [];

    while (this._version < 40) {
      this._version++;

      index = ((this._level - 1) * 4) + ((this._version - 1) * 16);

      neccBlock1 = ErrorCorrection_1.BLOCKS[index++];
      neccBlock2 = ErrorCorrection_1.BLOCKS[index++];
      dataBlock = ErrorCorrection_1.BLOCKS[index++];
      eccBlock = ErrorCorrection_1.BLOCKS[index];

      index = (dataBlock * (neccBlock1 + neccBlock2)) + neccBlock2 - 3 + (this._version <= 9);

      if (valueLength <= index) {
        break;
      }
    }

    this._dataBlock = dataBlock;
    this._eccBlock = eccBlock;
    this._neccBlock1 = neccBlock1;
    this._neccBlock2 = neccBlock2;

    /**
     * The data width is based on version.
     *
     * @public
     * @type {number}
     * @memberof Frame#
     */
    // FIXME: Ensure that it fits instead of being truncated.
    var width = this.width = 17 + (4 * this._version);

    /**
     * The image buffer.
     *
     * @public
     * @type {number[]}
     * @memberof Frame#
     */
    this.buffer = Frame._createArray(width * width);

    this._ecc = Frame._createArray(dataBlock + ((dataBlock + eccBlock) * (neccBlock1 + neccBlock2)) + neccBlock2);
    this._mask = Frame._createArray(((width * (width + 1)) + 1) / 2);

    this._insertFinders();
    this._insertAlignments();

    // Insert single foreground cell.
    this.buffer[8 + (width * (width - 8))] = 1;

    this._insertTimingGap();
    this._reverseMask();
    this._insertTimingRowAndColumn();
    this._insertVersion();
    this._syncMask();
    this._convertBitStream(valueLength);
    this._calculatePolynomial();
    this._appendEccToData();
    this._interleaveBlocks();
    this._pack();
    this._finish();
  }, {

    _addAlignment: function(x, y) {
      var i;
      var buffer = this.buffer;
      var width = this.width;

      buffer[x + (width * y)] = 1;

      for (i = -2; i < 2; i++) {
        buffer[x + i + (width * (y - 2))] = 1;
        buffer[x - 2 + (width * (y + i + 1))] = 1;
        buffer[x + 2 + (width * (y + i))] = 1;
        buffer[x + i + 1 + (width * (y + 2))] = 1;
      }

      for (i = 0; i < 2; i++) {
        this._setMask(x - 1, y + i);
        this._setMask(x + 1, y - i);
        this._setMask(x - i, y - 1);
        this._setMask(x + i, y + 1);
      }
    },

    _appendData: function(data, dataLength, ecc, eccLength) {
      var bit, i, j;
      var polynomial = this._polynomial;
      var stringBuffer = this._stringBuffer;

      for (i = 0; i < eccLength; i++) {
        stringBuffer[ecc + i] = 0;
      }

      for (i = 0; i < dataLength; i++) {
        bit = Galois_1.LOG[stringBuffer[data + i] ^ stringBuffer[ecc]];

        if (bit !== 255) {
          for (j = 1; j < eccLength; j++) {
            stringBuffer[ecc + j - 1] = stringBuffer[ecc + j] ^
              Galois_1.EXPONENT[Frame._modN(bit + polynomial[eccLength - j])];
          }
        } else {
          for (j = ecc; j < ecc + eccLength; j++) {
            stringBuffer[j] = stringBuffer[j + 1];
          }
        }

        stringBuffer[ecc + eccLength - 1] = bit === 255 ? 0 : Galois_1.EXPONENT[Frame._modN(bit + polynomial[0])];
      }
    },

    _appendEccToData: function() {
      var i;
      var data = 0;
      var dataBlock = this._dataBlock;
      var ecc = this._calculateMaxLength();
      var eccBlock = this._eccBlock;

      for (i = 0; i < this._neccBlock1; i++) {
        this._appendData(data, dataBlock, ecc, eccBlock);

        data += dataBlock;
        ecc += eccBlock;
      }

      for (i = 0; i < this._neccBlock2; i++) {
        this._appendData(data, dataBlock + 1, ecc, eccBlock);

        data += dataBlock + 1;
        ecc += eccBlock;
      }
    },

    _applyMask: function(mask) {
      var r3x, r3y, x, y;
      var buffer = this.buffer;
      var width = this.width;

      switch (mask) {
      case 0:
        for (y = 0; y < width; y++) {
          for (x = 0; x < width; x++) {
            if (!((x + y) & 1) && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 1:
        for (y = 0; y < width; y++) {
          for (x = 0; x < width; x++) {
            if (!(y & 1) && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 2:
        for (y = 0; y < width; y++) {
          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x === 3) {
              r3x = 0;
            }

            if (!r3x && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 3:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y === 3) {
            r3y = 0;
          }

          for (r3x = r3y, x = 0; x < width; x++, r3x++) {
            if (r3x === 3) {
              r3x = 0;
            }

            if (!r3x && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 4:
        for (y = 0; y < width; y++) {
          for (r3x = 0, r3y = (y >> 1) & 1, x = 0; x < width; x++, r3x++) {
            if (r3x === 3) {
              r3x = 0;
              r3y = !r3y;
            }

            if (!r3y && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 5:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y === 3) {
            r3y = 0;
          }

          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x === 3) {
              r3x = 0;
            }

            if (!((x & y & 1) + !(!r3x | !r3y)) && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 6:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y === 3) {
            r3y = 0;
          }

          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x === 3) {
              r3x = 0;
            }

            if (!((x & y & 1) + (r3x && r3x === r3y) & 1) && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      case 7:
        for (r3y = 0, y = 0; y < width; y++, r3y++) {
          if (r3y === 3) {
            r3y = 0;
          }

          for (r3x = 0, x = 0; x < width; x++, r3x++) {
            if (r3x === 3) {
              r3x = 0;
            }

            if (!((r3x && r3x === r3y) + (x + y & 1) & 1) && !this._isMasked(x, y)) {
              buffer[x + (y * width)] ^= 1;
            }
          }
        }

        break;
      }
    },

    _calculateMaxLength: function() {
      return (this._dataBlock * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;
    },

    _calculatePolynomial: function() {
      var i, j;
      var eccBlock = this._eccBlock;
      var polynomial = this._polynomial;

      polynomial[0] = 1;

      for (i = 0; i < eccBlock; i++) {
        polynomial[i + 1] = 1;

        for (j = i; j > 0; j--) {
          polynomial[j] = polynomial[j] ? polynomial[j - 1] ^
            Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[j]] + i)] : polynomial[j - 1];
        }

        polynomial[0] = Galois_1.EXPONENT[Frame._modN(Galois_1.LOG[polynomial[0]] + i)];
      }

      // Use logs for generator polynomial to save calculation step.
      for (i = 0; i <= eccBlock; i++) {
        polynomial[i] = Galois_1.LOG[polynomial[i]];
      }
    },

    _checkBadness: function() {
      var b, b1, h, x, y;
      var bad = 0;
      var badness = this._badness;
      var buffer = this.buffer;
      var width = this.width;

      // Blocks of same colour.
      for (y = 0; y < width - 1; y++) {
        for (x = 0; x < width - 1; x++) {
          // All foreground colour.
          if ((buffer[x + (width * y)] &&
            buffer[x + 1 + (width * y)] &&
            buffer[x + (width * (y + 1))] &&
            buffer[x + 1 + (width * (y + 1))]) ||
            // All background colour.
            !(buffer[x + (width * y)] ||
            buffer[x + 1 + (width * y)] ||
            buffer[x + (width * (y + 1))] ||
            buffer[x + 1 + (width * (y + 1))])) {
            bad += Frame.N2;
          }
        }
      }

      var bw = 0;

      // X runs.
      for (y = 0; y < width; y++) {
        h = 0;

        badness[0] = 0;

        for (b = 0, x = 0; x < width; x++) {
          b1 = buffer[x + (width * y)];

          if (b === b1) {
            badness[h]++;
          } else {
            badness[++h] = 1;
          }

          b = b1;
          bw += b ? 1 : -1;
        }

        bad += this._getBadness(h);
      }

      if (bw < 0) {
        bw = -bw;
      }

      var count = 0;
      var big = bw;
      big += big << 2;
      big <<= 1;

      while (big > width * width) {
        big -= width * width;
        count++;
      }

      bad += count * Frame.N4;

      // Y runs.
      for (x = 0; x < width; x++) {
        h = 0;

        badness[0] = 0;

        for (b = 0, y = 0; y < width; y++) {
          b1 = buffer[x + (width * y)];

          if (b === b1) {
            badness[h]++;
          } else {
            badness[++h] = 1;
          }

          b = b1;
        }

        bad += this._getBadness(h);
      }

      return bad;
    },

    _convertBitStream: function(length) {
      var bit, i;
      var ecc = this._ecc;
      var version = this._version;

      // Convert string to bit stream. 8-bit data to QR-coded 8-bit data (numeric, alphanumeric, or kanji not supported).
      for (i = 0; i < length; i++) {
        ecc[i] = this._value.charCodeAt(i);
      }

      var stringBuffer = this._stringBuffer = ecc.slice();
      var maxLength = this._calculateMaxLength();

      if (length >= maxLength - 2) {
        length = maxLength - 2;

        if (version > 9) {
          length--;
        }
      }

      // Shift and re-pack to insert length prefix.
      var index = length;

      if (version > 9) {
        stringBuffer[index + 2] = 0;
        stringBuffer[index + 3] = 0;

        while (index--) {
          bit = stringBuffer[index];

          stringBuffer[index + 3] |= 255 & (bit << 4);
          stringBuffer[index + 2] = bit >> 4;
        }

        stringBuffer[2] |= 255 & (length << 4);
        stringBuffer[1] = length >> 4;
        stringBuffer[0] = 0x40 | (length >> 12);
      } else {
        stringBuffer[index + 1] = 0;
        stringBuffer[index + 2] = 0;

        while (index--) {
          bit = stringBuffer[index];

          stringBuffer[index + 2] |= 255 & (bit << 4);
          stringBuffer[index + 1] = bit >> 4;
        }

        stringBuffer[1] |= 255 & (length << 4);
        stringBuffer[0] = 0x40 | (length >> 4);
      }

      // Fill to end with pad pattern.
      index = length + 3 - (version < 10);

      while (index < maxLength) {
        stringBuffer[index++] = 0xec;
        stringBuffer[index++] = 0x11;
      }
    },

    _getBadness: function(length) {
      var i;
      var badRuns = 0;
      var badness = this._badness;

      for (i = 0; i <= length; i++) {
        if (badness[i] >= 5) {
          badRuns += Frame.N1 + badness[i] - 5;
        }
      }

      // FBFFFBF as in finder.
      for (i = 3; i < length - 1; i += 2) {
        if (badness[i - 2] === badness[i + 2] &&
          badness[i + 2] === badness[i - 1] &&
          badness[i - 1] === badness[i + 1] &&
          badness[i - 1] * 3 === badness[i] &&
          // Background around the foreground pattern? Not part of the specs.
          (badness[i - 3] === 0 || i + 3 > length ||
          badness[i - 3] * 3 >= badness[i] * 4 ||
          badness[i + 3] * 3 >= badness[i] * 4)) {
          badRuns += Frame.N3;
        }
      }

      return badRuns;
    },

    _finish: function() {
      // Save pre-mask copy of frame.
      this._stringBuffer = this.buffer.slice();

      var currentMask, i;
      var bit = 0;
      var mask = 30000;

      /*
       * Using for instead of while since in original Arduino code if an early mask was "good enough" it wouldn't try for
       * a better one since they get more complex and take longer.
       */
      for (i = 0; i < 8; i++) {
        // Returns foreground-background imbalance.
        this._applyMask(i);

        currentMask = this._checkBadness();

        // Is current mask better than previous best?
        if (currentMask < mask) {
          mask = currentMask;
          bit = i;
        }

        // Don't increment "i" to a void redoing mask.
        if (bit === 7) {
          break;
        }

        // Reset for next pass.
        this.buffer = this._stringBuffer.slice();
      }

      // Redo best mask as none were "good enough" (i.e. last wasn't bit).
      if (bit !== i) {
        this._applyMask(bit);
      }

      // Add in final mask/ECC level bytes.
      mask = ErrorCorrection_1.FINAL_FORMAT[bit + (this._level - 1 << 3)];

      var buffer = this.buffer;
      var width = this.width;

      // Low byte.
      for (i = 0; i < 8; i++, mask >>= 1) {
        if (mask & 1) {
          buffer[width - 1 - i + (width * 8)] = 1;

          if (i < 6) {
            buffer[8 + (width * i)] = 1;
          } else {
            buffer[8 + (width * (i + 1))] = 1;
          }
        }
      }

      // High byte.
      for (i = 0; i < 7; i++, mask >>= 1) {
        if (mask & 1) {
          buffer[8 + (width * (width - 7 + i))] = 1;

          if (i) {
            buffer[6 - i + (width * 8)] = 1;
          } else {
            buffer[7 + (width * 8)] = 1;
          }
        }
      }
    },

    _interleaveBlocks: function() {
      var i, j;
      var dataBlock = this._dataBlock;
      var ecc = this._ecc;
      var eccBlock = this._eccBlock;
      var k = 0;
      var maxLength = this._calculateMaxLength();
      var neccBlock1 = this._neccBlock1;
      var neccBlock2 = this._neccBlock2;
      var stringBuffer = this._stringBuffer;

      for (i = 0; i < dataBlock; i++) {
        for (j = 0; j < neccBlock1; j++) {
          ecc[k++] = stringBuffer[i + (j * dataBlock)];
        }

        for (j = 0; j < neccBlock2; j++) {
          ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];
        }
      }

      for (j = 0; j < neccBlock2; j++) {
        ecc[k++] = stringBuffer[(neccBlock1 * dataBlock) + i + (j * (dataBlock + 1))];
      }

      for (i = 0; i < eccBlock; i++) {
        for (j = 0; j < neccBlock1 + neccBlock2; j++) {
          ecc[k++] = stringBuffer[maxLength + i + (j * eccBlock)];
        }
      }

      this._stringBuffer = ecc;
    },

    _insertAlignments: function() {
      var i, x, y;
      var version = this._version;
      var width = this.width;

      if (version > 1) {
        i = Alignment_1.BLOCK[version];
        y = width - 7;

        for (;;) {
          x = width - 7;

          while (x > i - 3) {
            this._addAlignment(x, y);

            if (x < i) {
              break;
            }

            x -= i;
          }

          if (y <= i + 9) {
            break;
          }

          y -= i;

          this._addAlignment(6, y);
          this._addAlignment(y, 6);
        }
      }
    },

    _insertFinders: function() {
      var i, j, x, y;
      var buffer = this.buffer;
      var width = this.width;

      for (i = 0; i < 3; i++) {
        j = 0;
        y = 0;

        if (i === 1) {
          j = width - 7;
        }
        if (i === 2) {
          y = width - 7;
        }

        buffer[y + 3 + (width * (j + 3))] = 1;

        for (x = 0; x < 6; x++) {
          buffer[y + x + (width * j)] = 1;
          buffer[y + (width * (j + x + 1))] = 1;
          buffer[y + 6 + (width * (j + x))] = 1;
          buffer[y + x + 1 + (width * (j + 6))] = 1;
        }

        for (x = 1; x < 5; x++) {
          this._setMask(y + x, j + 1);
          this._setMask(y + 1, j + x + 1);
          this._setMask(y + 5, j + x);
          this._setMask(y + x + 1, j + 5);
        }

        for (x = 2; x < 4; x++) {
          buffer[y + x + (width * (j + 2))] = 1;
          buffer[y + 2 + (width * (j + x + 1))] = 1;
          buffer[y + 4 + (width * (j + x))] = 1;
          buffer[y + x + 1 + (width * (j + 4))] = 1;
        }
      }
    },

    _insertTimingGap: function() {
      var x, y;
      var width = this.width;

      for (y = 0; y < 7; y++) {
        this._setMask(7, y);
        this._setMask(width - 8, y);
        this._setMask(7, y + width - 7);
      }

      for (x = 0; x < 8; x++) {
        this._setMask(x, 7);
        this._setMask(x + width - 8, 7);
        this._setMask(x, width - 8);
      }
    },

    _insertTimingRowAndColumn: function() {
      var x;
      var buffer = this.buffer;
      var width = this.width;

      for (x = 0; x < width - 14; x++) {
        if (x & 1) {
          this._setMask(8 + x, 6);
          this._setMask(6, 8 + x);
        } else {
          buffer[8 + x + (width * 6)] = 1;
          buffer[6 + (width * (8 + x))] = 1;
        }
      }
    },

    _insertVersion: function() {
      var i, j, x, y;
      var buffer = this.buffer;
      var version = this._version;
      var width = this.width;

      if (version > 6) {
        i = Version_1.BLOCK[version - 7];
        j = 17;

        for (x = 0; x < 6; x++) {
          for (y = 0; y < 3; y++, j--) {
            if (1 & (j > 11 ? version >> j - 12 : i >> j)) {
              buffer[5 - x + (width * (2 - y + width - 11))] = 1;
              buffer[2 - y + width - 11 + (width * (5 - x))] = 1;
            } else {
              this._setMask(5 - x, 2 - y + width - 11);
              this._setMask(2 - y + width - 11, 5 - x);
            }
          }
        }
      }
    },

    _isMasked: function(x, y) {
      var bit = Frame._getMaskBit(x, y);

      return this._mask[bit] === 1;
    },

    _pack: function() {
      var bit, i, j;
      var k = 1;
      var v = 1;
      var width = this.width;
      var x = width - 1;
      var y = width - 1;

      // Interleaved data and ECC codes.
      var length = ((this._dataBlock + this._eccBlock) * (this._neccBlock1 + this._neccBlock2)) + this._neccBlock2;

      for (i = 0; i < length; i++) {
        bit = this._stringBuffer[i];

        for (j = 0; j < 8; j++, bit <<= 1) {
          if (0x80 & bit) {
            this.buffer[x + (width * y)] = 1;
          }

          // Find next fill position.
          do {
            if (v) {
              x--;
            } else {
              x++;

              if (k) {
                if (y !== 0) {
                  y--;
                } else {
                  x -= 2;
                  k = !k;

                  if (x === 6) {
                    x--;
                    y = 9;
                  }
                }
              } else if (y !== width - 1) {
                y++;
              } else {
                x -= 2;
                k = !k;

                if (x === 6) {
                  x--;
                  y -= 8;
                }
              }
            }

            v = !v;
          } while (this._isMasked(x, y));
        }
      }
    },

    _reverseMask: function() {
      var x, y;
      var width = this.width;

      for (x = 0; x < 9; x++) {
        this._setMask(x, 8);
      }

      for (x = 0; x < 8; x++) {
        this._setMask(x + width - 8, 8);
        this._setMask(8, x);
      }

      for (y = 0; y < 7; y++) {
        this._setMask(8, y + width - 7);
      }
    },

    _setMask: function(x, y) {
      var bit = Frame._getMaskBit(x, y);

      this._mask[bit] = 1;
    },

    _syncMask: function() {
      var x, y;
      var width = this.width;

      for (y = 0; y < width; y++) {
        for (x = 0; x <= y; x++) {
          if (this.buffer[x + (width * y)]) {
            this._setMask(x, y);
          }
        }
      }
    }

  }, {

    _createArray: function(length) {
      var i;
      var array = [];

      for (i = 0; i < length; i++) {
        array[i] = 0;
      }

      return array;
    },

    _getMaskBit: function(x, y) {
      var bit;

      if (x > y) {
        bit = x;
        x = y;
        y = bit;
      }

      bit = y;
      bit += y * y;
      bit >>= 1;
      bit += x;

      return bit;
    },

    _modN: function(x) {
      while (x >= 255) {
        x -= 255;
        x = (x >> 8) + (x & 255);
      }

      return x;
    },

    // *Badness* coefficients.
    N1: 3,
    N2: 3,
    N3: 40,
    N4: 10

  });

  var Frame_1 = Frame;

  /**
   * The options used by {@link Frame}.
   *
   * @typedef {Object} Frame~Options
   * @property {string} level - The ECC level to be used.
   * @property {string} value - The value to be encoded.
   */

  /**
   * An implementation of {@link Renderer} for working with <code>img</code> elements.
   *
   * This depends on {@link CanvasRenderer} being executed first as this implementation simply applies the data URL from
   * the rendered <code>canvas</code> element as the <code>src</code> for the <code>img</code> element being rendered.
   *
   * @public
   * @class
   * @extends Renderer
   */
  var ImageRenderer = Renderer_1.extend({

    /**
     * @override
     */
    draw: function() {
      this.element.src = this.qrious.toDataURL();
    },

    /**
     * @override
     */
    reset: function() {
      this.element.src = '';
    },

    /**
     * @override
     */
    resize: function() {
      var element = this.element;

      element.width = element.height = this.qrious.size;
    }

  });

  var ImageRenderer_1 = ImageRenderer;

  /**
   * Defines an available option while also configuring how values are applied to the target object.
   *
   * Optionally, a default value can be specified as well a value transformer for greater control over how the option
   * value is applied.
   *
   * If no value transformer is specified, then any specified option will be applied directly. All values are maintained
   * on the target object itself as a field using the option name prefixed with a single underscore.
   *
   * When an option is specified as modifiable, the {@link OptionManager} will be required to include a setter for the
   * property that is defined on the target object that uses the option name.
   *
   * @param {string} name - the name to be used
   * @param {boolean} [modifiable] - <code>true</code> if the property defined on target objects should include a setter;
   * otherwise <code>false</code>
   * @param {*} [defaultValue] - the default value to be used
   * @param {Option~ValueTransformer} [valueTransformer] - the value transformer to be used
   * @public
   * @class
   * @extends Nevis
   */
  var Option = lite.extend(function(name, modifiable, defaultValue, valueTransformer) {
    /**
     * The name for this {@link Option}.
     *
     * @public
     * @type {string}
     * @memberof Option#
     */
    this.name = name;

    /**
     * Whether a setter should be included on the property defined on target objects for this {@link Option}.
     *
     * @public
     * @type {boolean}
     * @memberof Option#
     */
    this.modifiable = Boolean(modifiable);

    /**
     * The default value for this {@link Option}.
     *
     * @public
     * @type {*}
     * @memberof Option#
     */
    this.defaultValue = defaultValue;

    this._valueTransformer = valueTransformer;
  }, {

    /**
     * Transforms the specified <code>value</code> so that it can be applied for this {@link Option}.
     *
     * If a value transformer has been specified for this {@link Option}, it will be called upon to transform
     * <code>value</code>. Otherwise, <code>value</code> will be returned directly.
     *
     * @param {*} value - the value to be transformed
     * @return {*} The transformed value or <code>value</code> if no value transformer is specified.
     * @public
     * @memberof Option#
     */
    transform: function(value) {
      var transformer = this._valueTransformer;
      if (typeof transformer === 'function') {
        return transformer(value, this);
      }

      return value;
    }

  });

  var Option_1 = Option;

  /**
   * Returns a transformed value for the specified <code>value</code> to be applied for the <code>option</code> provided.
   *
   * @callback Option~ValueTransformer
   * @param {*} value - the value to be transformed
   * @param {Option} option - the {@link Option} for which <code>value</code> is being transformed
   * @return {*} The transform value.
   */

  /**
   * Contains utility methods that are useful throughout the library.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var Utilities = lite.extend(null, {

    /**
     * Returns the absolute value of a given number.
     *
     * This method is simply a convenient shorthand for <code>Math.abs</code> while ensuring that nulls are returned as
     * <code>null</code> instead of zero.
     *
     * @param {number} value - the number whose absolute value is to be returned
     * @return {number} The absolute value of <code>value</code> or <code>null</code> if <code>value</code> is
     * <code>null</code>.
     * @public
     * @static
     * @memberof Utilities
     */
    abs: function(value) {
      return value != null ? Math.abs(value) : null;
    },

    /**
     * Returns whether the specified <code>object</code> has a property with the specified <code>name</code> as an own
     * (not inherited) property.
     *
     * @param {Object} object - the object on which the property is to be checked
     * @param {string} name - the name of the property to be checked
     * @return {boolean} <code>true</code> if <code>object</code> has an own property with <code>name</code>.
     * @public
     * @static
     * @memberof Utilities
     */
    hasOwn: function(object, name) {
      return Object.prototype.hasOwnProperty.call(object, name);
    },

    /**
     * A non-operation method that does absolutely nothing.
     *
     * @return {void}
     * @public
     * @static
     * @memberof Utilities
     */
    noop: function() {},

    /**
     * Transforms the specified <code>string</code> to upper case while remaining null-safe.
     *
     * @param {string} string - the string to be transformed to upper case
     * @return {string} <code>string</code> transformed to upper case if <code>string</code> is not <code>null</code>.
     * @public
     * @static
     * @memberof Utilities
     */
    toUpperCase: function(string) {
      return string != null ? string.toUpperCase() : null;
    }

  });

  var Utilities_1 = Utilities;

  /**
   * Manages multiple {@link Option} instances that are intended to be used by multiple implementations.
   *
   * Although the option definitions are shared between targets, the values are maintained on the targets themselves.
   *
   * @param {Option[]} options - the options to be used
   * @public
   * @class
   * @extends Nevis
   */
  var OptionManager = lite.extend(function(options) {
    /**
     * The available options for this {@link OptionManager}.
     *
     * @public
     * @type {Object.<string, Option>}
     * @memberof OptionManager#
     */
    this.options = {};

    options.forEach(function(option) {
      this.options[option.name] = option;
    }, this);
  }, {

    /**
     * Returns whether an option with the specified <code>name</code> is available.
     *
     * @param {string} name - the name of the {@link Option} whose existence is to be checked
     * @return {boolean} <code>true</code> if an {@link Option} exists with <code>name</code>; otherwise
     * <code>false</code>.
     * @public
     * @memberof OptionManager#
     */
    exists: function(name) {
      return this.options[name] != null;
    },

    /**
     * Returns the value of the option with the specified <code>name</code> on the <code>target</code> object provided.
     *
     * @param {string} name - the name of the {@link Option} whose value on <code>target</code> is to be returned
     * @param {Object} target - the object from which the value of the named {@link Option} is to be returned
     * @return {*} The value of the {@link Option} with <code>name</code> on <code>target</code>.
     * @public
     * @memberof OptionManager#
     */
    get: function(name, target) {
      return OptionManager._get(this.options[name], target);
    },

    /**
     * Returns a copy of all of the available options on the <code>target</code> object provided.
     *
     * @param {Object} target - the object from which the option name/value pairs are to be returned
     * @return {Object.<string, *>} A hash containing the name/value pairs of all options on <code>target</code>.
     * @public
     * @memberof OptionManager#
     */
    getAll: function(target) {
      var name;
      var options = this.options;
      var result = {};

      for (name in options) {
        if (Utilities_1.hasOwn(options, name)) {
          result[name] = OptionManager._get(options[name], target);
        }
      }

      return result;
    },

    /**
     * Initializes the available options for the <code>target</code> object provided and then applies the initial values
     * within the speciifed <code>options</code>.
     *
     * This method will throw an error if any of the names within <code>options</code> does not match an available option.
     *
     * This involves setting the default values and defining properties for all of the available options on
     * <code>target</code> before finally calling {@link OptionMananger#setAll} with <code>options</code> and
     * <code>target</code>. Any options that are configured to be modifiable will have a setter included in their defined
     * property that will allow its corresponding value to be modified.
     *
     * If a change handler is specified, it will be called whenever the value changes on <code>target</code> for a
     * modifiable option, but only when done so via the defined property's setter.
     *
     * @param {Object.<string, *>} options - the name/value pairs of the initial options to be set
     * @param {Object} target - the object on which the options are to be initialized
     * @param {Function} [changeHandler] - the function to be called whenever the value of an modifiable option changes on
     * <code>target</code>
     * @return {void}
     * @throws {Error} If <code>options</code> contains an invalid option name.
     * @public
     * @memberof OptionManager#
     */
    init: function(options, target, changeHandler) {
      if (typeof changeHandler !== 'function') {
        changeHandler = Utilities_1.noop;
      }

      var name, option;

      for (name in this.options) {
        if (Utilities_1.hasOwn(this.options, name)) {
          option = this.options[name];

          OptionManager._set(option, option.defaultValue, target);
          OptionManager._createAccessor(option, target, changeHandler);
        }
      }

      this._setAll(options, target, true);
    },

    /**
     * Sets the value of the option with the specified <code>name</code> on the <code>target</code> object provided to
     * <code>value</code>.
     *
     * This method will throw an error if <code>name</code> does not match an available option or matches an option that
     * cannot be modified.
     *
     * If <code>value</code> is <code>null</code> and the {@link Option} has a default value configured, then that default
     * value will be used instead. If the {@link Option} also has a value transformer configured, it will be used to
     * transform whichever value was determined to be used.
     *
     * This method returns whether the value of the underlying field on <code>target</code> was changed as a result.
     *
     * @param {string} name - the name of the {@link Option} whose value is to be set
     * @param {*} value - the value to be set for the named {@link Option} on <code>target</code>
     * @param {Object} target - the object on which <code>value</code> is to be set for the named {@link Option}
     * @return {boolean} <code>true</code> if the underlying field on <code>target</code> was changed; otherwise
     * <code>false</code>.
     * @throws {Error} If <code>name</code> is invalid or is for an option that cannot be modified.
     * @public
     * @memberof OptionManager#
     */
    set: function(name, value, target) {
      return this._set(name, value, target);
    },

    /**
     * Sets all of the specified <code>options</code> on the <code>target</code> object provided to their corresponding
     * values.
     *
     * This method will throw an error if any of the names within <code>options</code> does not match an available option
     * or matches an option that cannot be modified.
     *
     * If any value within <code>options</code> is <code>null</code> and the corresponding {@link Option} has a default
     * value configured, then that default value will be used instead. If an {@link Option} also has a value transformer
     * configured, it will be used to transform whichever value was determined to be used.
     *
     * This method returns whether the value for any of the underlying fields on <code>target</code> were changed as a
     * result.
     *
     * @param {Object.<string, *>} options - the name/value pairs of options to be set
     * @param {Object} target - the object on which the options are to be set
     * @return {boolean} <code>true</code> if any of the underlying fields on <code>target</code> were changed; otherwise
     * <code>false</code>.
     * @throws {Error} If <code>options</code> contains an invalid option name or an option that cannot be modiifed.
     * @public
     * @memberof OptionManager#
     */
    setAll: function(options, target) {
      return this._setAll(options, target);
    },

    _set: function(name, value, target, allowUnmodifiable) {
      var option = this.options[name];
      if (!option) {
        throw new Error('Invalid option: ' + name);
      }
      if (!option.modifiable && !allowUnmodifiable) {
        throw new Error('Option cannot be modified: ' + name);
      }

      return OptionManager._set(option, value, target);
    },

    _setAll: function(options, target, allowUnmodifiable) {
      if (!options) {
        return false;
      }

      var name;
      var changed = false;

      for (name in options) {
        if (Utilities_1.hasOwn(options, name) && this._set(name, options[name], target, allowUnmodifiable)) {
          changed = true;
        }
      }

      return changed;
    }

  }, {

    _createAccessor: function(option, target, changeHandler) {
      var descriptor = {
        get: function() {
          return OptionManager._get(option, target);
        }
      };

      if (option.modifiable) {
        descriptor.set = function(value) {
          if (OptionManager._set(option, value, target)) {
            changeHandler(value, option);
          }
        };
      }

      Object.defineProperty(target, option.name, descriptor);
    },

    _get: function(option, target) {
      return target['_' + option.name];
    },

    _set: function(option, value, target) {
      var fieldName = '_' + option.name;
      var oldValue = target[fieldName];
      var newValue = option.transform(value != null ? value : option.defaultValue);

      target[fieldName] = newValue;

      return newValue !== oldValue;
    }

  });

  var OptionManager_1 = OptionManager;

  /**
   * Called whenever the value of a modifiable {@link Option} is changed on a target object via the defined property's
   * setter.
   *
   * @callback OptionManager~ChangeHandler
   * @param {*} value - the new value for <code>option</code> on the target object
   * @param {Option} option - the modifable {@link Option} whose value has changed on the target object.
   * @return {void}
   */

  /**
   * A basic manager for {@link Service} implementations that are mapped to simple names.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var ServiceManager = lite.extend(function() {
    this._services = {};
  }, {

    /**
     * Returns the {@link Service} being managed with the specified <code>name</code>.
     *
     * @param {string} name - the name of the {@link Service} to be returned
     * @return {Service} The {@link Service} is being managed with <code>name</code>.
     * @throws {Error} If no {@link Service} is being managed with <code>name</code>.
     * @public
     * @memberof ServiceManager#
     */
    getService: function(name) {
      var service = this._services[name];
      if (!service) {
        throw new Error('Service is not being managed with name: ' + name);
      }

      return service;
    },

    /**
     * Sets the {@link Service} implementation to be managed for the specified <code>name</code> to the
     * <code>service</code> provided.
     *
     * @param {string} name - the name of the {@link Service} to be managed with <code>name</code>
     * @param {Service} service - the {@link Service} implementation to be managed
     * @return {void}
     * @throws {Error} If a {@link Service} is already being managed with the same <code>name</code>.
     * @public
     * @memberof ServiceManager#
     */
    setService: function(name, service) {
      if (this._services[name]) {
        throw new Error('Service is already managed with name: ' + name);
      }

      if (service) {
        this._services[name] = service;
      }
    }

  });

  var ServiceManager_1 = ServiceManager;

  var optionManager = new OptionManager_1([
    new Option_1('background', true, 'white'),
    new Option_1('backgroundAlpha', true, 1, Utilities_1.abs),
    new Option_1('element'),
    new Option_1('foreground', true, 'black'),
    new Option_1('foregroundAlpha', true, 1, Utilities_1.abs),
    new Option_1('level', true, 'L', Utilities_1.toUpperCase),
    new Option_1('mime', true, 'image/png'),
    new Option_1('padding', true, null, Utilities_1.abs),
    new Option_1('size', true, 100, Utilities_1.abs),
    new Option_1('value', true, '')
  ]);
  var serviceManager = new ServiceManager_1();

  /**
   * Enables configuration of a QR code generator which uses HTML5 <code>canvas</code> for rendering.
   *
   * @param {QRious~Options} [options] - the options to be used
   * @throws {Error} If any <code>options</code> are invalid.
   * @public
   * @class
   * @extends Nevis
   */
  var QRious = lite.extend(function(options) {
    optionManager.init(options, this, this.update.bind(this));

    var element = optionManager.get('element', this);
    var elementService = serviceManager.getService('element');
    var canvas = element && elementService.isCanvas(element) ? element : elementService.createCanvas();
    var image = element && elementService.isImage(element) ? element : elementService.createImage();

    this._canvasRenderer = new CanvasRenderer_1(this, canvas, true);
    this._imageRenderer = new ImageRenderer_1(this, image, image === element);

    this.update();
  }, {

    /**
     * Returns all of the options configured for this {@link QRious}.
     *
     * Any changes made to the returned object will not be reflected in the options themselves or their corresponding
     * underlying fields.
     *
     * @return {Object.<string, *>} A copy of the applied options.
     * @public
     * @memberof QRious#
     */
    get: function() {
      return optionManager.getAll(this);
    },

    /**
     * Sets all of the specified <code>options</code> and automatically updates this {@link QRious} if any of the
     * underlying fields are changed as a result.
     *
     * This is the preferred method for updating multiple options at one time to avoid unnecessary updates between
     * changes.
     *
     * @param {QRious~Options} options - the options to be set
     * @return {void}
     * @throws {Error} If any <code>options</code> are invalid or cannot be modified.
     * @public
     * @memberof QRious#
     */
    set: function(options) {
      if (optionManager.setAll(options, this)) {
        this.update();
      }
    },

    /**
     * Returns the image data URI for the generated QR code using the <code>mime</code> provided.
     *
     * @param {string} [mime] - the MIME type for the image
     * @return {string} The image data URI for the QR code.
     * @public
     * @memberof QRious#
     */
    toDataURL: function(mime) {
      return this.canvas.toDataURL(mime || this.mime);
    },

    /**
     * Updates this {@link QRious} by generating a new {@link Frame} and re-rendering the QR code.
     *
     * @return {void}
     * @protected
     * @memberof QRious#
     */
    update: function() {
      var frame = new Frame_1({
        level: this.level,
        value: this.value
      });

      this._canvasRenderer.render(frame);
      this._imageRenderer.render(frame);
    }

  }, {

    /**
     * Configures the <code>service</code> provided to be used by all {@link QRious} instances.
     *
     * @param {Service} service - the {@link Service} to be configured
     * @return {void}
     * @throws {Error} If a {@link Service} has already been configured with the same name.
     * @public
     * @static
     * @memberof QRious
     */
    use: function(service) {
      serviceManager.setService(service.getName(), service);
    }

  });

  Object.defineProperties(QRious.prototype, {

    canvas: {
      /**
       * Returns the <code>canvas</code> element being used to render the QR code for this {@link QRious}.
       *
       * @return {*} The <code>canvas</code> element.
       * @public
       * @memberof QRious#
       * @alias canvas
       */
      get: function() {
        return this._canvasRenderer.getElement();
      }
    },

    image: {
      /**
       * Returns the <code>img</code> element being used to render the QR code for this {@link QRious}.
       *
       * @return {*} The <code>img</code> element.
       * @public
       * @memberof QRious#
       * @alias image
       */
      get: function() {
        return this._imageRenderer.getElement();
      }
    }

  });

  var QRious_1$2 = QRious;

  /**
   * The options used by {@link QRious}.
   *
   * @typedef {Object} QRious~Options
   * @property {string} [background="white"] - The background color to be applied to the QR code.
   * @property {number} [backgroundAlpha=1] - The background alpha to be applied to the QR code.
   * @property {*} [element] - The element to be used to render the QR code which may either be an <code>canvas</code> or
   * <code>img</code>. The element(s) will be created if needed.
   * @property {string} [foreground="black"] - The foreground color to be applied to the QR code.
   * @property {number} [foregroundAlpha=1] - The foreground alpha to be applied to the QR code.
   * @property {string} [level="L"] - The error correction level to be applied to the QR code.
   * @property {string} [mime="image/png"] - The MIME type to be used to render the image for the QR code.
   * @property {number} [padding] - The padding for the QR code in pixels.
   * @property {number} [size=100] - The size of the QR code in pixels.
   * @property {string} [value=""] - The value to be encoded within the QR code.
   */

  var index = QRious_1$2;

  /**
   * Defines a service contract that must be met by all implementations.
   *
   * @public
   * @class
   * @extends Nevis
   */
  var Service = lite.extend({

    /**
     * Returns the name of this {@link Service}.
     *
     * @return {string} The service name.
     * @public
     * @abstract
     * @memberof Service#
     */
    getName: function() {}

  });

  var Service_1 = Service;

  /**
   * A service for working with elements.
   *
   * @public
   * @class
   * @extends Service
   */
  var ElementService = Service_1.extend({

    /**
     * Creates an instance of a canvas element.
     *
     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.
     *
     * @return {*} The newly created canvas element.
     * @public
     * @abstract
     * @memberof ElementService#
     */
    createCanvas: function() {},

    /**
     * Creates an instance of a image element.
     *
     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.
     *
     * @return {*} The newly created image element.
     * @public
     * @abstract
     * @memberof ElementService#
     */
    createImage: function() {},

    /**
     * @override
     */
    getName: function() {
      return 'element';
    },

    /**
     * Returns whether the specified <code>element</code> is a canvas.
     *
     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.
     *
     * @param {*} element - the element to be checked
     * @return {boolean} <code>true</code> if <code>element</code> is a canvas; otherwise <code>false</code>.
     * @public
     * @abstract
     * @memberof ElementService#
     */
    isCanvas: function(element) {},

    /**
     * Returns whether the specified <code>element</code> is an image.
     *
     * Implementations of {@link ElementService} <b>must</b> override this method with their own specific logic.
     *
     * @param {*} element - the element to be checked
     * @return {boolean} <code>true</code> if <code>element</code> is an image; otherwise <code>false</code>.
     * @public
     * @abstract
     * @memberof ElementService#
     */
    isImage: function(element) {}

  });

  var ElementService_1 = ElementService;

  /**
   * An implementation of {@link ElementService} intended for use within a browser environment.
   *
   * @public
   * @class
   * @extends ElementService
   */
  var BrowserElementService = ElementService_1.extend({

    /**
     * @override
     */
    createCanvas: function() {
      return document.createElement('canvas');
    },

    /**
     * @override
     */
    createImage: function() {
      return document.createElement('img');
    },

    /**
     * @override
     */
    isCanvas: function(element) {
      return element instanceof HTMLCanvasElement;
    },

    /**
     * @override
     */
    isImage: function(element) {
      return element instanceof HTMLImageElement;
    }

  });

  var BrowserElementService_1 = BrowserElementService;

  index.use(new BrowserElementService_1());

  var QRious_1 = index;

  return QRious_1;

})));

